Search.setIndex({"docnames": ["_autosummary/s3prl.dataio", "_autosummary/s3prl.dataio.corpus", "_autosummary/s3prl.dataio.corpus.base", "_autosummary/s3prl.dataio.corpus.fluent_speech_commands", "_autosummary/s3prl.dataio.corpus.iemocap", "_autosummary/s3prl.dataio.corpus.librilight", "_autosummary/s3prl.dataio.corpus.librispeech", "_autosummary/s3prl.dataio.corpus.quesst14", "_autosummary/s3prl.dataio.corpus.snips", "_autosummary/s3prl.dataio.corpus.speech_commands", "_autosummary/s3prl.dataio.corpus.voxceleb1sid", "_autosummary/s3prl.dataio.corpus.voxceleb1sv", "_autosummary/s3prl.dataio.encoder", "_autosummary/s3prl.dataio.encoder.category", "_autosummary/s3prl.dataio.encoder.g2p", "_autosummary/s3prl.dataio.encoder.tokenizer", "_autosummary/s3prl.dataio.encoder.vocabulary", "_autosummary/s3prl.dataio.sampler", "_autosummary/s3prl.dataio.sampler.balanced_weighted_sampler", "_autosummary/s3prl.dataio.sampler.distributed_sampler", "_autosummary/s3prl.dataio.sampler.fixed_batch_size_batch_sampler", "_autosummary/s3prl.dataio.sampler.group_same_item_sampler", "_autosummary/s3prl.dataio.sampler.max_timestamp_batch_sampler", "_autosummary/s3prl.dataio.sampler.sorted_sampler", "_autosummary/s3prl.metric", "_autosummary/s3prl.metric.common", "_autosummary/s3prl.metric.diarization", "_autosummary/s3prl.metric.slot_filling", "_autosummary/s3prl.nn", "_autosummary/s3prl.nn.beam_decoder", "_autosummary/s3prl.nn.common", "_autosummary/s3prl.nn.hear", "_autosummary/s3prl.nn.interface", "_autosummary/s3prl.nn.linear", "_autosummary/s3prl.nn.pit", "_autosummary/s3prl.nn.pooling", "_autosummary/s3prl.nn.rnn", "_autosummary/s3prl.nn.speaker_loss", "_autosummary/s3prl.nn.speaker_model", "_autosummary/s3prl.nn.specaug", "_autosummary/s3prl.nn.upstream", "_autosummary/s3prl.problem", "_autosummary/s3prl.problem.asr", "_autosummary/s3prl.problem.asr.run", "_autosummary/s3prl.problem.asr.superb_asr", "_autosummary/s3prl.problem.asr.superb_pr", "_autosummary/s3prl.problem.asr.superb_sf", "_autosummary/s3prl.problem.asv", "_autosummary/s3prl.problem.asv.run", "_autosummary/s3prl.problem.asv.superb_asv", "_autosummary/s3prl.problem.base", "_autosummary/s3prl.problem.common", "_autosummary/s3prl.problem.common.hear_beijing_opera", "_autosummary/s3prl.problem.common.hear_cremad", "_autosummary/s3prl.problem.common.hear_dcase_2016_task2", "_autosummary/s3prl.problem.common.hear_esc50", "_autosummary/s3prl.problem.common.hear_fsd", "_autosummary/s3prl.problem.common.hear_gsc5hr", "_autosummary/s3prl.problem.common.hear_gtzan", "_autosummary/s3prl.problem.common.hear_gtzan_music_speech", "_autosummary/s3prl.problem.common.hear_gunshot", "_autosummary/s3prl.problem.common.hear_libricount", "_autosummary/s3prl.problem.common.hear_maestro", "_autosummary/s3prl.problem.common.hear_nsynth5hr", "_autosummary/s3prl.problem.common.hear_stroke", "_autosummary/s3prl.problem.common.hear_tonic", "_autosummary/s3prl.problem.common.hear_vocal", "_autosummary/s3prl.problem.common.hear_vox_lingual", "_autosummary/s3prl.problem.common.run", "_autosummary/s3prl.problem.common.superb_er", "_autosummary/s3prl.problem.common.superb_ic", "_autosummary/s3prl.problem.common.superb_ks", "_autosummary/s3prl.problem.common.superb_sid", "_autosummary/s3prl.problem.diarization", "_autosummary/s3prl.problem.diarization.run", "_autosummary/s3prl.problem.diarization.superb_sd", "_autosummary/s3prl.problem.diarization.util", "_autosummary/s3prl.task", "_autosummary/s3prl.task.base", "_autosummary/s3prl.task.diarization", "_autosummary/s3prl.task.dump_feature", "_autosummary/s3prl.task.event_prediction", "_autosummary/s3prl.task.scene_prediction", "_autosummary/s3prl.task.speaker_verification_task", "_autosummary/s3prl.task.speech2text_ctc_task", "_autosummary/s3prl.task.utterance_classification_task", "_autosummary/s3prl.util", "_autosummary/s3prl.util.benchmark", "_autosummary/s3prl.util.download", "_autosummary/s3prl.util.override", "_autosummary/s3prl.util.pseudo_data", "_autosummary/s3prl.util.seed", "contribute/private", "contribute/public", "index", "tutorial/installation", "tutorial/problem", "tutorial/upstream_collection"], "filenames": ["_autosummary/s3prl.dataio.rst", "_autosummary/s3prl.dataio.corpus.rst", "_autosummary/s3prl.dataio.corpus.base.rst", "_autosummary/s3prl.dataio.corpus.fluent_speech_commands.rst", "_autosummary/s3prl.dataio.corpus.iemocap.rst", "_autosummary/s3prl.dataio.corpus.librilight.rst", "_autosummary/s3prl.dataio.corpus.librispeech.rst", "_autosummary/s3prl.dataio.corpus.quesst14.rst", "_autosummary/s3prl.dataio.corpus.snips.rst", "_autosummary/s3prl.dataio.corpus.speech_commands.rst", "_autosummary/s3prl.dataio.corpus.voxceleb1sid.rst", "_autosummary/s3prl.dataio.corpus.voxceleb1sv.rst", "_autosummary/s3prl.dataio.encoder.rst", "_autosummary/s3prl.dataio.encoder.category.rst", "_autosummary/s3prl.dataio.encoder.g2p.rst", "_autosummary/s3prl.dataio.encoder.tokenizer.rst", "_autosummary/s3prl.dataio.encoder.vocabulary.rst", "_autosummary/s3prl.dataio.sampler.rst", "_autosummary/s3prl.dataio.sampler.balanced_weighted_sampler.rst", "_autosummary/s3prl.dataio.sampler.distributed_sampler.rst", "_autosummary/s3prl.dataio.sampler.fixed_batch_size_batch_sampler.rst", "_autosummary/s3prl.dataio.sampler.group_same_item_sampler.rst", "_autosummary/s3prl.dataio.sampler.max_timestamp_batch_sampler.rst", "_autosummary/s3prl.dataio.sampler.sorted_sampler.rst", "_autosummary/s3prl.metric.rst", "_autosummary/s3prl.metric.common.rst", "_autosummary/s3prl.metric.diarization.rst", "_autosummary/s3prl.metric.slot_filling.rst", "_autosummary/s3prl.nn.rst", "_autosummary/s3prl.nn.beam_decoder.rst", "_autosummary/s3prl.nn.common.rst", "_autosummary/s3prl.nn.hear.rst", "_autosummary/s3prl.nn.interface.rst", "_autosummary/s3prl.nn.linear.rst", "_autosummary/s3prl.nn.pit.rst", "_autosummary/s3prl.nn.pooling.rst", "_autosummary/s3prl.nn.rnn.rst", "_autosummary/s3prl.nn.speaker_loss.rst", "_autosummary/s3prl.nn.speaker_model.rst", "_autosummary/s3prl.nn.specaug.rst", "_autosummary/s3prl.nn.upstream.rst", "_autosummary/s3prl.problem.rst", "_autosummary/s3prl.problem.asr.rst", "_autosummary/s3prl.problem.asr.run.rst", "_autosummary/s3prl.problem.asr.superb_asr.rst", "_autosummary/s3prl.problem.asr.superb_pr.rst", "_autosummary/s3prl.problem.asr.superb_sf.rst", "_autosummary/s3prl.problem.asv.rst", "_autosummary/s3prl.problem.asv.run.rst", "_autosummary/s3prl.problem.asv.superb_asv.rst", "_autosummary/s3prl.problem.base.rst", "_autosummary/s3prl.problem.common.rst", "_autosummary/s3prl.problem.common.hear_beijing_opera.rst", "_autosummary/s3prl.problem.common.hear_cremad.rst", "_autosummary/s3prl.problem.common.hear_dcase_2016_task2.rst", "_autosummary/s3prl.problem.common.hear_esc50.rst", "_autosummary/s3prl.problem.common.hear_fsd.rst", "_autosummary/s3prl.problem.common.hear_gsc5hr.rst", "_autosummary/s3prl.problem.common.hear_gtzan.rst", "_autosummary/s3prl.problem.common.hear_gtzan_music_speech.rst", "_autosummary/s3prl.problem.common.hear_gunshot.rst", "_autosummary/s3prl.problem.common.hear_libricount.rst", "_autosummary/s3prl.problem.common.hear_maestro.rst", "_autosummary/s3prl.problem.common.hear_nsynth5hr.rst", "_autosummary/s3prl.problem.common.hear_stroke.rst", "_autosummary/s3prl.problem.common.hear_tonic.rst", "_autosummary/s3prl.problem.common.hear_vocal.rst", "_autosummary/s3prl.problem.common.hear_vox_lingual.rst", "_autosummary/s3prl.problem.common.run.rst", "_autosummary/s3prl.problem.common.superb_er.rst", "_autosummary/s3prl.problem.common.superb_ic.rst", "_autosummary/s3prl.problem.common.superb_ks.rst", "_autosummary/s3prl.problem.common.superb_sid.rst", "_autosummary/s3prl.problem.diarization.rst", "_autosummary/s3prl.problem.diarization.run.rst", "_autosummary/s3prl.problem.diarization.superb_sd.rst", "_autosummary/s3prl.problem.diarization.util.rst", "_autosummary/s3prl.task.rst", "_autosummary/s3prl.task.base.rst", "_autosummary/s3prl.task.diarization.rst", "_autosummary/s3prl.task.dump_feature.rst", "_autosummary/s3prl.task.event_prediction.rst", "_autosummary/s3prl.task.scene_prediction.rst", "_autosummary/s3prl.task.speaker_verification_task.rst", "_autosummary/s3prl.task.speech2text_ctc_task.rst", "_autosummary/s3prl.task.utterance_classification_task.rst", "_autosummary/s3prl.util.rst", "_autosummary/s3prl.util.benchmark.rst", "_autosummary/s3prl.util.download.rst", "_autosummary/s3prl.util.override.rst", "_autosummary/s3prl.util.pseudo_data.rst", "_autosummary/s3prl.util.seed.rst", "contribute/private.rst", "contribute/public.rst", "index.rst", "tutorial/installation.rst", "tutorial/problem.rst", "tutorial/upstream_collection.rst"], "titles": ["dataio", "corpus", "base", "fluent_speech_commands", "iemocap", "librilight", "librispeech", "quesst14", "snips", "speech_commands", "voxceleb1sid", "voxceleb1sv", "encoder", "category", "g2p", "tokenizer", "vocabulary", "sampler", "balanced_weighted_sampler", "distributed_sampler", "fixed_batch_size_batch_sampler", "group_same_item_sampler", "max_timestamp_batch_sampler", "sorted_sampler", "metric", "common", "diarization", "slot_filling", "nn", "beam_decoder", "common", "hear", "interface", "linear", "pit", "pooling", "rnn", "speaker_loss", "speaker_model", "specaug", "upstream", "problem", "asr", "run", "superb_asr", "superb_pr", "superb_sf", "asv", "run", "superb_asv", "base", "common", "hear_beijing_opera", "hear_cremad", "hear_dcase_2016_task2", "hear_esc50", "hear_fsd", "hear_gsc5hr", "hear_gtzan", "hear_gtzan_music_speech", "hear_gunshot", "hear_libricount", "hear_maestro", "hear_nsynth5hr", "hear_stroke", "hear_tonic", "hear_vocal", "hear_vox_lingual", "run", "superb_er", "superb_ic", "superb_ks", "superb_sid", "diarization", "run", "superb_sd", "util", "task", "base", "diarization", "dump_feature", "event_prediction", "scene_prediction", "speaker_verification_task", "speech2text_ctc_task", "utterance_classification_task", "util", "benchmark", "download", "override", "pseudo_data", "seed", "Internal S3PRL Development", "Contribute to S3PRL", "S3PRL", "Install S3PRL", "Use Problem module to run customizable recipes", "S3PRL Upstream Collection"], "terms": {"s3prl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "thi": [0, 1, 6, 17, 18, 23, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 92, 93, 94, 95, 96, 97], "packag": [0, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 92, 95], "handl": [0, 28, 29], "data": [0, 1, 3, 4, 6, 12, 16, 21, 23, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 90, 97], "relat": [0, 28, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "sub": [0, 1, 9], "task": [0, 27, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 93, 94, 97], "dataio": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72], "pars": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 89], "commonli": [1, 20, 23, 25], "us": [1, 3, 12, 15, 17, 18, 20, 23, 25, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 92, 94, 95, 97], "standard": [1, 28, 32, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 92], "dictionari": [1, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 89], "structur": 1, "class": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 90, 95, 96], "dataset_root": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 72, 96], "str": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 24, 25, 27, 28, 29, 30, 31, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 90, 96], "n_job": [1, 3, 4, 5, 6, 9, 10, 44, 70, 72], "int": [1, 3, 4, 5, 6, 9, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 83, 84, 85, 87, 90, 91, 96], "4": [1, 3, 4, 5, 6, 9, 10, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 83, 84, 85], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 95, 97], "base": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 87, 90], "fluent": [1, 3, 49, 70], "speech": [1, 3, 9, 42, 49, 70, 71, 77, 84, 94, 97], "command": [1, 3, 9, 49, 70, 71, 89, 96], "dataset": [1, 3, 4, 9, 15, 17, 18, 20, 21, 22, 23, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "paramet": [1, 3, 4, 6, 9, 12, 14, 15, 16, 17, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 91], "The": [1, 3, 4, 6, 17, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 94, 96, 97], "root": [1, 3, 4, 9, 49, 54, 55, 56, 62, 69, 70, 71, 72], "properti": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 54, 55, 56, 62, 83, 84, 85], "all_data": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11], "return": [1, 3, 4, 6, 9, 12, 14, 15, 16, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 96], "all": [1, 3, 4, 6, 23, 28, 30, 31, 32, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 88, 91, 92, 93, 95, 96, 97], "point": [1, 3, 4, 6, 21, 23, 41, 42, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72], "dict": [1, 2, 3, 4, 6, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 96], "format": [1, 3, 4, 6, 12, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 92, 97], "data_id1": [1, 3, 4, 6], "path": [1, 3, 4, 6, 9, 11, 12, 15, 16, 28, 29, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 88], "waveform": [1, 3, 4, 6, 28, 32, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 84, 97], "speakerid": [1, 3], "speaker": [1, 3, 4, 6, 24, 25, 28, 35, 36, 37, 38, 41, 47, 48, 49, 73, 74, 75, 76, 77, 83, 97], "name": [1, 3, 4, 6, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 94, 97], "transcript": [1, 3, 6, 28, 29, 41, 42, 44, 45, 46, 77, 84], "action": [1, 3, 70], "object": [1, 2, 3, 7, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 28, 29, 40, 50, 54, 55, 56, 62, 70, 77, 84, 90], "": [1, 3, 6, 12, 15, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 94], "target": [1, 3, 24, 25, 54, 55, 56, 62, 94, 97], "locat": [1, 3, 70], "where": [1, 3, 41, 42, 46], "happen": [1, 3], "data_id2": [1, 3, 4, 6], "data_split": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11], "list": [1, 3, 6, 8, 9, 10, 12, 13, 14, 15, 16, 24, 25, 27, 28, 29, 30, 32, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 89, 90, 92], "train_data": [1, 3], "valid_data": [1, 3], "test_data": [1, 3], "each": [1, 3, 17, 20, 22, 23, 28, 32, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 77, 81, 82, 83, 84, 97], "i": [1, 3, 12, 15, 16, 17, 18, 23, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 92, 93, 94, 95, 96, 97], "follow": [1, 3, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 92, 93, 94, 95, 96, 97], "specifi": [1, 3, 12, 16, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 88, 92, 97], "data_split_id": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11], "train_id": [1, 3], "valid_id": [1, 3], "test_id": [1, 3], "contain": [1, 3, 4, 9, 17, 23, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 93], "data_id": [1, 3], "can": [1, 3, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 92, 93, 94, 96, 97], "kei": [1, 3, 21, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85], "access": [1, 3, 54, 55, 56, 62, 92], "classmethod": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 15, 28, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "download_dataset": [1, 3, 4, 5, 6, 7, 9, 10], "tgt_dir": [1, 3, 4, 7, 9], "none": [1, 3, 4, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 30, 31, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 81, 82, 83, 84, 85, 91, 96], "download": [1, 3, 28, 40, 49], "unzip": [1, 3], "fluent_speech_commands_dataset": [1, 3], "directori": [1, 3, 6, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "mani": [1, 3, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 97], "differ": [1, 3, 28, 30, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 97], "static": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 17, 18, 22, 23, 77], "dataframe_to_datapoint": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11], "df": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 96], "datafram": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "unique_name_fn": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11], "callabl": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 17, 18, 22, 23, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 83], "wav_path": [1, 4, 6, 9, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75], "act": [1, 4], "improvis": [1, 4], "script": [1, 4, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 96], "emot": [1, 4, 69], "label": [1, 4, 12, 13, 24, 25, 26, 28, 34, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 79, 82, 83, 84, 85, 97], "session_id": [1, 4], "session": [1, 4, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "get_whole_sess": [1, 4], "index": [1, 4, 12, 13, 28, 40, 41, 56, 73, 75, 94, 96], "select": [1, 4, 28, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "from": [1, 4, 12, 15, 16, 17, 23, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 93, 94, 97], "1": [1, 4, 12, 16, 17, 18, 24, 25, 28, 29, 31, 32, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 89, 90, 94, 97], "2": [1, 4, 28, 29, 31, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 88, 90, 94], "3": [1, 4, 9, 24, 25, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 83, 84, 85, 89, 90, 94, 97], "5": [1, 4, 28, 29, 38, 39, 41, 47, 49, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 73, 75], "singl": [1, 4, 28, 30, 32, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "record": [1, 4, 41, 73, 75], "same": [1, 4, 7, 21, 28, 30, 34, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 88, 96], "get_session_with_act": [1, 4], "specif": [1, 4, 28, 31, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 97], "either": [1, 4, 41, 47, 48, 49, 54, 55, 56, 62], "abstract": [1, 2, 4, 5, 12, 56, 77, 78, 79, 80, 82, 83, 84, 85], "train_split": [1, 5, 6], "train": [1, 6, 9, 12, 16, 17, 19, 23, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 94, 96, 97], "clean": [1, 6, 41, 42, 44, 45], "100": [1, 6, 39, 41, 42, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 75, 96], "valid_split": [1, 6], "dev": [1, 6, 9, 10, 41, 42, 44, 45, 89, 92, 95], "test_split": [1, 6], "test": [1, 6, 7, 9, 10, 17, 18, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 84, 89, 94, 95], "link": [1, 6, 28, 35, 54, 55, 56, 62, 97], "http": [1, 6, 12, 15, 28, 31, 35, 38, 56, 92, 95, 97], "www": [1, 6, 15, 28, 35, 38], "openslr": [1, 6], "org": [1, 6, 15, 35, 97], "12": [1, 6, 97], "option": [1, 6, 12, 14, 15, 16, 17, 18, 19, 22, 23, 28, 29, 30, 31, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 81, 82, 83, 84, 85, 89, 91], "number": [1, 6, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 92, 97], "job": [1, 6], "default": [1, 6, 12, 14, 15, 16, 17, 20, 23, 28, 29, 30, 31, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 84, 91, 93], "split": [1, 6, 9, 10, 77, 80], "valid": [1, 6, 7, 9, 28, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 84], "get_corpus_split": [1, 6], "gender": [1, 6], "corpus_split": [1, 6], "sampl": [1, 6, 28, 35, 77, 84], "belong": [1, 6], "target_dir": [1, 6, 10, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 96], "10m": [1, 5], "fold0": [1, 5], "valid_queri": [1, 7], "test_queri": [1, 7], "doc": [1, 7, 92], "share": [1, 7, 34, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 97], "document": [1, 7, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 95], "databas": [1, 7], "train_speak": [1, 8, 41, 42, 46], "valid_speak": [1, 8, 41, 42, 46], "test_speak": [1, 8, 41, 42, 46], "gsc1": [1, 9, 41, 51, 71], "gsc1_test": [1, 9, 41, 51, 71], "should": [1, 9, 17, 20, 22, 23, 32, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 92, 93], "folder": [1, 9], "set": [1, 9, 28, 30, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 96], "split_dataset": [1, 9], "root_dir": [1, 9], "union": [1, 9, 12, 16, 24, 25, 77, 84], "max_uttr_per_class": [1, 9], "134217727": [1, 9], "tupl": [1, 9, 28, 30, 31, 32, 33, 34, 36, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 83], "dir": [1, 9], "predefin": [1, 9], "valu": [1, 9, 28, 37, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 81, 82, 96], "origin": [1, 9, 41, 73, 75, 92, 97], "paper": [1, 9, 28, 35, 97], "class_nam": [1, 9], "audio_path": [1, 9], "valid_list": [1, 9], "abov": [1, 9, 41, 73, 75, 96], "type": [1, 9, 12, 14, 15, 16, 24, 25, 28, 29, 31, 32, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 83, 84, 85], "train_list": [1, 9], "parse_train_valid_data_list": [1, 9], "data_list": [1, 9], "train_dataset_root": [1, 9], "parse_test_data_list": [1, 9], "test_dataset_root": [1, 9], "path_to_unique_nam": [1, 9], "list_to_dict": [1, 9], "id": [1, 9, 28, 29, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 97], "cache_root": [1, 10], "posixpath": [1, 10, 54, 55, 56, 62], "home": [1, 10, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "runner": [1, 10, 89], "cach": [1, 10, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 88], "download_dir": [1, 11], "force_download": [1, 11, 49], "bool": [1, 11, 12, 15, 16, 17, 19, 20, 22, 23, 24, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 90], "true": [1, 11, 12, 16, 28, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 88], "path2uid": [1, 11], "path2data": [1, 11], "speakerid2label": [1, 11], "format_path": [1, 11], "format_test_tri": [1, 11], "corpu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 96], "author": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 48, 49, 50, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 97], "shu": [3, 4, 7, 9, 10, 13, 19, 20, 21, 22, 23, 25, 45, 48, 50, 68, 69, 72, 74, 75, 78, 79, 80, 85, 87, 88, 89, 90, 97], "wen": [3, 4, 7, 9, 10, 13, 19, 20, 21, 22, 23, 25, 45, 48, 50, 68, 69, 72, 74, 75, 78, 79, 80, 85, 87, 88, 89, 90, 97], "yang": [3, 4, 7, 9, 10, 13, 19, 20, 21, 22, 23, 25, 45, 48, 50, 68, 69, 72, 74, 75, 78, 79, 80, 85, 87, 88, 89, 90, 97], "2022": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 48, 49, 50, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 97], "heng": [5, 6, 8, 14, 15, 16, 25, 27, 29, 36, 44, 45, 46, 84, 91, 97], "jui": [5, 6, 8, 14, 15, 16, 25, 27, 29, 36, 44, 45, 46, 84, 91, 97], "chang": [5, 6, 8, 14, 15, 16, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 91, 92, 93, 96, 97], "audio": [8, 28, 40, 94], "googl": [9, 71], "v1": [9, 71], "voxceleb1": [10, 11, 49, 72], "classif": [10, 85, 97], "verif": [11, 35, 37, 38, 47, 49, 83], "haibin": [11, 25, 35, 37, 38, 49, 83], "wu": [11, 25, 35, 37, 38, 49, 83, 97], "raw": [12, 97], "numer": [12, 77, 83], "decod": [12, 13, 15, 28, 29, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 84], "categori": [12, 54, 56, 77, 81, 82, 83, 85, 97], "file_list": [12, 14], "graphem": [12, 14], "phonem": [12, 14, 15, 24, 25, 44], "lexicon": [12, 14, 28, 29], "file": [12, 14, 16, 28, 29, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 88, 92, 96], "text": [12, 14, 15, 16, 35, 41, 42, 44, 45, 46, 54, 55, 56, 62, 77, 84], "convert": [12, 14, 41, 73, 75, 89], "sentenc": [12, 14, 41, 42, 44, 45, 46], "idx": [12, 15, 28, 29], "ignore_repeat": [12, 15], "fals": [12, 15, 17, 19, 20, 22, 23, 24, 25, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 90, 96], "vocab_s": [12, 15, 16], "token_typ": [12, 15], "load_from_fil": [12, 15], "vocab_fil": [12, 15, 44], "pad_idx": [12, 15], "eos_idx": [12, 15], "unk_idx": [12, 15], "bert": [12, 15, 94], "github": [12, 31, 56, 92, 93, 95], "com": [12, 28, 31, 35, 38, 56, 95, 97], "huggingfac": 12, "pytorch": 12, "transform": [12, 38, 97], "blob": [12, 31, 56], "master": [12, 97], "pytorch_transform": 12, "tokenization_bert": 12, "py": [12, 31, 56, 96], "vocab_list": [12, 15], "word": [12, 15, 16, 24, 25, 28, 29, 41, 42, 44, 46], "idx_to_vocab": [12, 15], "vocab_to_idx": [12, 15], "vocab": [12, 15, 16], "charact": [12, 15, 16, 24, 25, 41, 42, 44, 45, 46, 54, 55, 56, 62], "slot": [12, 15, 27, 44], "sent": [12, 15], "iob": [12, 15, 41, 42, 46], "slots_fil": [12, 15, 44], "spm": [12, 15], "subword": [12, 15, 16, 44], "sentencepiec": [12, 15, 16], "filepath": [12, 15, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 88], "mode": [12, 15, 16, 17, 23, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 81, 83, 84, 95], "text_list": [12, 16], "coverag": [12, 16], "float": [12, 16, 24, 25, 27, 28, 29, 31, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 81, 88], "0": [12, 16, 24, 25, 28, 29, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 88, 90, 94], "sort_vocab": [12, 16], "gener": [12, 16, 41, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 97], "basic": [12, 14, 16, 28, 40], "vocabulari": [12, 15, 44], "includ": [12, 15, 16, 28, 38, 54, 55, 56, 62, 91, 95, 97], "size": [12, 16, 17, 23, 28, 29, 30, 31, 32, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 84, 97], "would": [12, 16], "actual": [12, 16, 77, 83, 92, 93], "sort": [12, 16, 17, 23], "alphabet": [12, 16], "A": [12, 16, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 94], "text_fil": [12, 16], "output_fil": [12, 16], "1000": [12, 16, 41, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69], "character_coverag": [12, 16], "save": [12, 16, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85], "8000": [12, 16, 92], "rais": [12, 15, 16, 54, 55, 56, 62], "importerror": [12, 16], "If": [12, 15, 16, 17, 20, 22, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 92, 93, 96, 97], "instal": [12, 16, 92, 94, 97], "model": [12, 16, 28, 29, 30, 31, 32, 33, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 94, 96, 97], "read_lin": [12, 16], "10000000": [12, 16], "vocab_arg": [12, 16, 44], "given": [12, 16, 28, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "maximum": [12, 16, 22], "line": [12, 16, 41, 42, 44, 45, 46, 89, 94, 96], "read": [12, 16, 54, 55, 56, 62], "argument": [12, 16, 28, 30, 31, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 89, 97], "encod": [13, 14, 15, 16, 28, 36, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 83, 97], "simpl": [13, 51, 96], "categor": 13, "load": [15, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 94], "modifi": [15, 31, 56, 92, 94, 95], "tensorflow_dataset": 15, "featur": [15, 32, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 80, 84, 93, 94, 96, 97], "refer": [15, 24, 25, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 97], "tensorflow": 15, "api_doc": 15, "python": [15, 41, 42, 44, 46, 54, 62, 96], "tfd": 15, "text_lib": 15, "notimplementederror": 15, "implement": [15, 93, 94], "librispeech": [15, 44, 96, 97], "71": 15, "creat": [16, 54, 55, 56, 62, 90, 96], "token": [16, 24, 25, 28, 29, 41, 42, 43, 44, 45, 46, 51, 70, 71, 77, 84, 97], "control": [17, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 92], "how": [17, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 93, 96, 97], "torch": [17, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 81, 82, 83, 84, 85, 94, 96, 97], "dataload": [17, 20, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "group": [17, 21, 23, 54, 55, 56, 62], "instanc": [17, 23, 32, 34, 40, 54, 55, 56, 62, 77, 78, 79, 80, 81, 82, 83, 85], "batch": [17, 18, 19, 20, 21, 22, 23, 28, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 97], "batch_siz": [17, 18, 20, 23, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 77, 83, 84, 85, 97], "get_weight": [17, 18], "duplic": [17, 18, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "seed": [17, 18, 20, 22, 23, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 90], "12345678": [17, 18, 20, 22, 23, 54, 56], "alwai": [17, 18, 23, 41, 49, 73, 75, 93], "random": [17, 18, 23, 91], "henc": [17, 18, 23, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 92, 93, 96, 97], "cannot": [17, 18, 54, 55, 56, 62], "set_epoch": [17, 18, 19, 20, 21, 22, 23, 54, 56], "epoch": [17, 18, 19, 20, 21, 22, 23, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "batch_sampl": [17, 19, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "batchsampl": [17, 19], "num_replica": [17, 19], "rank": [17, 19, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "allow_dupl": [17, 19], "allow_uneven": [17, 19], "shuffl": [17, 20, 22, 23, 41, 42, 44, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 75], "reduc": [17, 20, 22, 28, 32, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "timestamp": [17, 20, 22, 54, 56, 77, 83, 84, 85], "exce": [17, 20, 22, 54, 56], "max_timestamp": [17, 20, 22, 54, 56], "indic": [17, 20, 22, 41, 54, 56, 73, 75], "ar": [17, 20, 22, 23, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 92, 94, 95, 97], "first": [17, 20, 22, 41, 42, 44, 45, 46, 47, 49, 54, 55, 56, 62, 93, 96], "befor": [17, 20, 22, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 93], "aggreg": [17, 20, 22, 54, 56], "item": [17, 21, 23, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "get_length_func": [17, 22, 23], "reduce_func": [17, 22], "get_length": [17, 22, 23], "max_length": [17, 23, 41, 42, 44, 45, 46], "300000": [17, 23, 41, 42, 45, 46], "in_batch_shuffl": [17, 23], "dynamicitemdataset": [17, 23], "least": [17, 23], "utt": [17, 23], "longer": [17, 23, 41, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72], "than": [17, 23, 28, 40, 41, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 88], "half": [17, 23], "get": [17, 23, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 97], "length": [17, 23, 24, 26, 28, 32, 34, 35, 40, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 77, 84, 97], "function": [17, 23, 24, 25, 32, 40, 54, 55, 56, 62, 77, 78, 79, 80, 81, 82, 83, 85, 88, 92, 93, 95, 96], "whether": [17, 23, 28, 31, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 93], "long": [17, 23, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 93, 97], "short": [17, 23], "onli": [17, 23, 28, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 92, 93, 95, 96, 97], "sampler": [18, 19, 20, 21, 22, 23, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75], "For": [18, 38, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 96, 97], "highli": [18, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "unbalanc": 18, "leo": [18, 30, 31, 32, 33, 35, 36, 39, 40, 43, 44, 46, 49, 70, 71, 76], "wrap": [19, 41, 42, 44, 46], "ani": [19, 54, 55, 56, 62, 81, 88], "distribut": [19, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "most": [20, 23, 51, 94], "recov": 20, "limit": [22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 92], "realiz": 22, "dynam": 22, "legaci": 23, "codebas": 23, "which": [23, 28, 32, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 92, 93, 94, 96], "similar": 23, "togeth": [23, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "evalu": [24, 25, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 94], "x": [24, 25, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 77, 79, 80, 81, 82, 83, 84, 85, 96], "y": [24, 25, 28, 30, 31, 33, 36, 39, 54, 56, 71, 77, 80, 81, 82, 84], "item_same_fn": [24, 25], "hyp": [24, 25], "ref": [24, 25], "error": [24, 25, 54, 55, 56, 62], "rate": [24, 25, 28, 32, 36, 38, 40, 41, 73, 75], "calcul": [24, 25], "hypothes": [24, 25, 28, 29], "averag": [24, 25, 28, 35], "overal": [24, 25], "utter": [24, 25, 28, 32, 33, 41, 47, 49, 73, 74, 75, 85, 96], "score": [24, 25, 28, 29, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 73, 74, 75, 81, 82], "comput": [24, 25, 28, 32, 35, 40, 54, 56, 77, 78, 79, 80, 81, 82, 83, 85], "equal": [24, 25, 54, 55, 56, 62], "treshold": [24, 25], "accept": [24, 25, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 93], "trial": [24, 25], "eer": [24, 25], "p_target": [24, 25], "01": [24, 25, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "c_miss": [24, 25], "c_fa": [24, 25], "mindcf": [24, 25], "minimum": [24, 25, 34], "detect": [24, 25], "cost": [24, 25], "comment": [24, 25], "equat": [24, 25], "section": [24, 25, 28, 40], "nist": [24, 25], "2016": [24, 25], "recognit": [24, 25, 28, 35, 97], "plan": [24, 25, 93], "p": [24, 25, 94], "prior": [24, 25], "probabl": [24, 25, 28, 29], "posit": [24, 25, 41, 73, 75, 97], "miss": [24, 25], "alarm": [24, 25], "min_dcf": [24, 25], "min_c_det_threshold": [24, 25], "pred": [24, 26], "hypothesi": [24, 27], "groundtruth": [24, 27], "loop_over_all_slot": [24, 27], "kwarg": [24, 27, 40, 54, 55, 56, 62, 77, 78, 81, 83], "metric": [25, 26, 27, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 81, 82, 84], "jiatong": [26, 34, 75, 76, 79], "shi": [26, 34, 75, 76, 79], "2021": [26, 27, 31, 34, 39, 46, 49, 69, 70, 71, 72, 75, 76, 80, 83, 97], "fill": [27, 96], "slu": 27, "yung": [27, 46], "sung": [27, 46], "chuang": [27, 46], "common": [28, 33, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75], "loss": [28, 34, 37, 77, 83, 84], "pure": [28, 30, 96], "modul": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 92, 94], "depend": [28, 54, 55, 56, 62, 92, 94, 95, 97], "path_or_url": [28, 40], "refresh": [28, 40, 88], "extra_arg": [28, 40], "an": [28, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 84, 93, 96, 97], "easi": [28, 40, 96, 97], "interfac": [28, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 94, 97], "apc": [28, 40, 94], "hubert": [28, 40, 94], "wav2vec2": [28, 40], "see": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 96], "available_nam": [28, 40], "support": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 93, 94, 96], "checkpoint": [28, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 97], "might": [28, 40], "local": [28, 38, 40, 88, 92, 97], "url": [28, 40, 44, 88, 97], "downlaod": [28, 40], "yet": [28, 40], "forc": [28, 40], "re": [28, 40, 49, 88, 92, 94], "extra": [28, 40, 95, 97], "upstream": [28, 32, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 94, 95, 96], "avail": [28, 31, 40, 56, 97], "shown": [28, 40], "when": [28, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 88, 92, 95], "multiprocess": [28, 40], "e": [28, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 92, 95, 97], "g": [28, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "ddp": [28, 40], "onc": [28, 40, 92], "other": [28, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 97], "process": [28, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 88, 94, 97], "simpli": [28, 40, 92], "newli": [28, 40, 92, 95], "instead": [28, 32, 40, 41, 54, 55, 56, 62, 73, 75, 77, 78, 79, 80, 81, 82, 83, 85, 93, 97], "everi": [28, 29, 32, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 92, 96], "veri": [28, 40], "time": [28, 35, 40, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 87, 88, 93, 97], "bandwidth": [28, 40], "consum": [28, 40], "exampl": [28, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 84, 89, 96, 97], "import": [28, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 94, 95, 97], "eval": [28, 31, 40, 56, 97], "no_grad": [28, 40, 97], "wav": [28, 32, 40, 97], "randn": [28, 40, 97], "16000": [28, 40, 41, 54, 56, 73, 75, 90, 97], "wavs_len": [28, 32, 40, 97], "longtensor": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 51, 56, 70, 73, 75, 77, 83, 84, 85, 97], "all_h": [28, 32, 40, 97], "all_hs_len": [28, 32, 40, 97], "h": [28, 32, 40, 97], "hs_len": [28, 32, 40, 97], "zip": [28, 40, 97], "assert": [28, 40, 97], "isinst": [28, 40, 97], "floattensor": [28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 97], "max_seq_len": [28, 40, 97], "hidden_s": [28, 30, 31, 32, 33, 36, 38, 40, 41, 42, 44, 45, 46, 51, 56, 69, 70, 71, 72, 73, 75, 97], "shape": [28, 34, 40, 41, 51, 70, 73, 75, 97], "dim": [28, 40, 97], "only_registered_ckpt": [28, 40], "ignor": [28, 32, 40, 54, 56, 77, 78, 79, 80, 81, 82, 83, 85, 92], "entri": [28, 40, 96], "requir": [28, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 96, 97], "give": [28, 40], "That": [28, 40, 93], "without": [28, 40, 54, 55, 56, 62, 94], "regist": [28, 32, 40, 54, 56, 77, 78, 79, 80, 81, 82, 83, 85, 94], "These": [28, 40, 41, 42, 44, 45, 46, 54, 55, 56, 62], "end": [28, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 73, 75], "_local": [28, 40], "_url": [28, 40], "_custom": [28, 40], "auto": [28, 40], "determin": [28, 38, 40, 54, 56], "num_lay": [28, 32, 40], "hidden": [28, 30, 31, 32, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 97], "have": [28, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 92], "determinist": [28, 40], "layer": [28, 30, 31, 36, 38, 40, 56, 97], "drop": [28, 36, 40], "turn": [28, 40, 54, 55, 56, 62], "off": [28, 40], "downsample_r": [28, 32, 40], "downsampl": [28, 32, 36, 40, 41, 73, 75], "hz": [28, 40], "usual": [28, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 93, 95], "case": [28, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 93], "some": [28, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "advanc": [28, 40, 97], "forward": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 96], "seqlen": [28, 40], "state": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85], "dump_patch": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 54, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85], "allow": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 54, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85], "better": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85], "bc": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 54, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85], "load_state_dict": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 54, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85], "In": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 93], "state_dict": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85], "version": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 54, 55, 56, 62, 77, 78, 79, 80, 81, 82, 83, 84, 85, 92, 97], "attribut": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 54, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85], "_metadata": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 54, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85], "thu": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 54, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85], "pickl": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 77, 78, 79, 80, 81, 82, 83, 84, 85], "convent": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 54, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85], "_load_from_state_dict": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 54, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85], "inform": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 54, 55, 56, 62, 77, 78, 79, 80, 81, 82, 83, 84, 85, 97], "new": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 92, 93, 96], "buffer": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 54, 55, 56, 62, 77, 78, 79, 80, 81, 82, 83, 84, 85], "ad": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 54, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 92, 93], "remov": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 92], "shall": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 54, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85], "bump": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 54, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85], "method": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 94, 96], "compar": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 54, 55, 56, 62, 77, 78, 79, 80, 81, 82, 83, 84, 85], "do": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 54, 55, 56, 62, 69, 77, 78, 79, 80, 81, 82, 83, 84, 85, 92, 93], "appropri": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 54, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85], "layer_select": [28, 40, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75], "normal": [28, 29, 31, 36, 40, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75], "take": [28, 32, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 96, 97], "multipl": [28, 32, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "hidden_st": [28, 40, 97], "them": [28, 32, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 96, 97], "connect": [28, 40], "downstream": [28, 32, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 94, 95, 96], "expect": [28, 40, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 93], "stride": [28, 40, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75], "input": [28, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 84, 97], "directli": [28, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 88, 93, 96], "present": [28, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 97], "add": [28, 40, 54, 55, 56, 62, 92, 93], "trainabl": [28, 40], "weight": [28, 29, 40, 94], "sum": [28, 40], "top": [28, 40], "those": [28, 40], "extract": [28, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "initi": [28, 30, 31, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 97], "kept": [28, 40, 54, 55, 56, 62], "To": [28, 40, 95, 97], "subset": [28, 40, 97], "appli": [28, 38, 40, 92], "norm": [28, 31, 36, 38, 40, 56], "help": [28, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "converg": [28, 40], "superb": [28, 33, 36, 38, 40, 44, 45, 46, 49, 56, 71, 72, 75, 94], "ensur": [28, 40], "fidel": [28, 40], "represent": [28, 32, 40, 54, 55, 56, 62, 97], "output_s": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 56, 77, 83, 84, 85, 96], "final": [28, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 83], "output": [28, 29, 30, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 83, 84, 85, 97], "16k": [28, 40], "all_len": [28, 40], "seq_len": [28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75], "result": [28, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 92, 96], "input_s": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 56, 77, 83, 84, 85, 96], "activation_typ": [28, 30], "activation_conf": [28, 30], "frame": [28, 29, 30, 32, 33, 35, 38, 41, 73, 75], "probe": [28, 30, 31, 33], "256": [28, 30, 33, 41, 42, 45, 51, 56, 69, 70, 71, 72], "project": [28, 30, 36, 94], "dimens": [28, 30, 32], "empti": [28, 30, 31, 54, 55, 56, 62], "vanilla": [28, 30], "linear": [28, 30, 38, 96, 97], "activ": [28, 30, 31, 56, 81, 82], "disabl": [28, 30, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "x_len": [28, 30, 31, 32, 33, 36, 38, 39, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 77, 79, 80, 81, 82, 83, 84, 85, 96], "ys_len": [28, 30, 33, 36], "pooling_typ": [28, 30, 31, 38, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67], "pooling_conf": [28, 30, 31, 56], "pool": [28, 30, 31, 32, 38, 56], "level": [28, 32, 33], "benchmark": [28, 31, 33, 36, 38, 56, 94, 95], "tempor": [28, 32, 35], "over": [28, 35, 54, 55, 56, 62], "tensor": [28, 29, 31, 35, 36, 37, 38, 56, 77, 83, 84, 85], "xs_len": [28, 35, 36], "alia": [28, 35, 97], "vector": [28, 35, 38, 97], "robust": [28, 35, 97], "dnn": [28, 35], "embed": [28, 35, 38, 77, 83], "danielpovei": [28, 35, 38], "2018_icassp_xvector": [28, 35], "pdf": [28, 35, 38], "statist": [28, 35], "lstm": [28, 36, 41, 42, 44, 46], "proj_siz": [28, 36, 41, 42, 44, 46], "1024": [28, 31, 36, 41, 42, 44, 46, 56], "dropout": [28, 31, 36, 38, 41, 42, 44, 46, 56, 97], "layer_norm": [28, 36, 41, 42, 44, 46], "proj": [28, 36, 41, 42, 44, 46], "sample_r": [28, 36, 41, 42, 44, 46, 54, 90], "sample_styl": [28, 36, 41, 42, 44, 46], "bidirect": [28, 36, 41, 42, 44, 46, 97], "absframemodel": [28, 36, 41, 42, 44, 45, 46, 73, 75], "rnn": [28, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "sequenc": [28, 29, 36, 54, 55, 56, 62, 97], "asr": [28, 36, 41, 44, 45, 46, 96], "style": [28, 36, 41, 73, 74, 75, 94], "concat": [28, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "rnn_layer": [28, 36, 41, 73, 75], "exact": [28, 36, 38, 39], "diariz": [28, 36, 41, 75, 76], "across": [28, 31, 36, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 97], "margin": [28, 37, 41, 47, 49], "scale": [28, 29, 37, 41, 47, 49, 97], "30": [28, 37, 41, 47, 49], "hyperparamet": [28, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "denot": [28, 37], "decis": [28, 37], "boundri": [28, 37], "cosin": [28, 37], "logit": [28, 37, 77, 84, 85], "unifi": [28, 37, 94, 97], "512": [28, 38, 41, 73, 75], "aggregation_s": [28, 38], "1500": [28, 38], "dropout_p": [28, 38], "batch_norm": [28, 38], "xvector": [28, 38], "major": [28, 38, 94], "network": [28, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 97], "larg": [28, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 88, 93, 97], "tdnn": 28, "2018_odyssey_xvector_lid": [28, 38], "block": [28, 38, 54, 55, 56, 62, 87, 97], "lm": [28, 29], "nbest": [28, 29], "beam": [28, 29, 77, 84], "beam_size_token": [28, 29], "beam_threshold": [28, 29], "25": [28, 29], "lm_weight": [28, 29], "word_scor": [28, 29], "unk_scor": [28, 29], "inf": [28, 29], "sil_scor": [28, 29], "power": [28, 29], "flashlight": [28, 29], "kenlm": [28, 29], "search": [28, 29, 94], "log": [28, 29, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 81, 82, 84, 97], "prob": [28, 29], "threshold": [28, 29, 41, 73, 74, 75], "languag": [28, 29, 97], "appear": [28, 29], "unknown": [28, 29], "math": [28, 29, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72], "silenc": [28, 29], "get_token": [28, 29], "iter": [28, 29, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "ctc": [28, 29, 77, 84], "blank": [28, 29], "asg": [28, 29], "replabel": [28, 29], "etc": [28, 29, 96], "self": [28, 29, 35, 94, 96, 97], "after": [28, 29, 31, 32, 38, 41, 47, 48, 49, 54, 56, 73, 74, 75, 88, 92, 96, 97], "get_timestep": [28, 29], "token_idx": [28, 29], "correspond": [28, 29, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 77, 83], "non": [28, 29, 38, 97], "emiss": [28, 29], "nn": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 81, 82, 83, 96, 97], "meanpool": [30, 31, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67], "team": 31, "hidden_lay": [31, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "norm_after_activ": [31, 56], "xavier_uniform_": [31, 56], "hidden_norm": [31, 56], "batchnorm1d": [31, 56], "predict": [31, 34, 41, 54, 56, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 97], "head": [31, 56], "hearbenchmark": [31, 56], "kit": [31, 56], "855964977238e89dfc76394aa11c37010edb6f20": [31, 56], "hearev": [31, 56], "task_predict": [31, 56], "l142": [31, 56], "ratio": [31, 56], "init": [31, 54, 56], "y_len": [31, 39, 54, 56, 81, 84], "pleas": [32, 92, 93, 97], "subclass": [32, 40, 54, 55, 56, 62, 77, 78, 79, 80, 81, 82, 83, 85, 96], "16": [32, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75], "khz": [32, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75], "mission": 32, "so": [32, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 95, 97], "reduct": [32, 54, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85], "defin": [32, 38, 40, 41, 44, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 96], "perform": [32, 40, 54, 56, 77, 78, 79, 80, 81, 82, 83, 85], "call": [32, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 96], "overridden": [32, 40, 41, 54, 56, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85], "although": [32, 38, 40, 54, 56, 77, 78, 79, 80, 81, 82, 83, 85], "recip": [32, 40, 41, 42, 47, 51, 54, 56, 73, 77, 78, 79, 80, 81, 82, 83, 85, 94], "pass": [32, 40, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 85, 92], "need": [32, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 92, 95, 96], "within": [32, 40, 54, 56, 77, 78, 79, 80, 81, 82, 83, 85], "one": [32, 40, 41, 54, 55, 56, 62, 73, 75, 77, 78, 79, 80, 81, 82, 83, 85, 94], "afterward": [32, 40, 54, 56, 77, 78, 79, 80, 81, 82, 83, 85], "sinc": [32, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 92], "former": [32, 40, 54, 56, 77, 78, 79, 80, 81, 82, 83, 85], "care": [32, 40, 54, 56, 77, 78, 79, 80, 81, 82, 83, 85], "run": [32, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 85, 92, 94], "hook": [32, 40, 54, 56, 77, 78, 79, 80, 81, 82, 83, 85], "while": [32, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 93, 96], "latter": [32, 40, 54, 56, 77, 78, 79, 80, 81, 82, 83, 85], "silent": [32, 40, 54, 56, 77, 78, 79, 80, 81, 82, 83, 85], "framelevel": 33, "utterancelevel": 33, "permut": [34, 79], "invari": 34, "num_class": [34, 41, 51, 70], "min_idx": 34, "attent": 35, "independ": 35, "2018_interspeech_xvector_attent": 35, "deep": [35, 54, 62, 97], "arxiv": [35, 97], "1803": 35, "10963": 35, "gru": 36, "context_s": 38, "dilat": 38, "2015_interspeech_multisplic": 38, "affin": 38, "global": [38, 41, 73, 75], "smaller": 38, "window": [38, 54, 55, 56, 62], "context": 38, "normalis": 38, "realli": [38, 93], "tradit": 38, "sens": 38, "equival": 38, "backbon": [38, 43, 48, 50, 68, 74], "temporalaveragepool": 38, "extractor": 38, "kind": [38, 54, 55, 56, 62, 93], "tap": 38, "xlen": 38, "xuankai": 39, "shampoowang": 39, "cornliu": 39, "specaug_conf": [39, 41, 42, 44, 46], "insert": [39, 54, 55, 56, 62], "front": 39, "augment": [39, 97], "feed": [39, 97], "dure": [39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "apply_time_warp": 39, "time_warp_window": 39, "time_warp_mod": 39, "bicub": 39, "apply_freq_mask": 39, "freq_mask_width_rang": [39, 41, 42, 44, 46], "20": [39, 41, 47, 49, 87], "num_freq_mask": [39, 41, 42, 44, 46], "apply_time_mask": 39, "time_mask_width_rang": [39, 41, 42, 44, 46], "num_time_mask": [39, 41, 42, 44, 46], "adaptive_number_ratio": 39, "04": 39, "adaptive_size_ratio": 39, "max_n_time_mask": 39, "adapt": [39, 97], "apply_specaug": 39, "x_length": 39, "collect": [40, 94, 95], "util": [40, 87, 88, 89, 90, 91, 94], "upstream_train": [40, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75], "wav_len": 40, "arg": [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 81, 83, 88], "pre": [41, 44, 92, 94, 97], "customiz": [41, 94], "default_config": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 96], "yaml": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75], "note": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 96], "field": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 96], "inner": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75], "like": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 92, 97], "build_model": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "outer": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75], "you": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 92, 93, 94, 95, 96, 97], "find": [41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75], "furthermor": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75], "insid": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 95], "affect": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "behavior": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "mean": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 94, 95, 96, 97], "config": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 77, 83, 84, 96], "prepare_data": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 96], "prepare_tokenizer_data": [41, 42, 43, 44, 45, 46], "build_token": [41, 42, 43, 44, 45, 46], "build_dataset": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "build_batch_sampl": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "build_upstream": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "build_featur": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "build_downstream": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 96], "build_task": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "build_optim": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "build_schedul": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "save_model": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "save_task": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "start": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "stop": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "null": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75], "cache_dir": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 96], "remove_all_cach": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "train_set": [41, 42, 44, 45], "valid_set": [41, 42, 44, 45], "test_set": [41, 42, 44, 45], "vocab_typ": [41, 42, 44, 46], "32": [41, 42, 44, 51, 52, 53, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 70, 71, 73, 75, 97], "2000": [41, 42, 44, 45, 46, 51, 56, 70, 71, 72, 73, 75], "fbank": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 97], "model_conf": [41, 42, 44, 46], "50": [41, 42, 44, 46, 51, 62], "40": [41, 42, 44, 46], "log_metr": [41, 42, 44, 45, 46, 77, 84], "cer": [41, 42, 44, 46, 77, 84], "wer": [41, 42, 44, 46, 77, 84], "adam": [41, 42, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75], "conf": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "lr": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 89], "0001": [41, 42, 44, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75], "exponentiallr": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75], "gamma": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "9": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 92], "extra_conf": [41, 42, 44, 45, 73, 75], "build_downstream_conf": [41, 42, 44, 45, 73, 75], "total_step": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "200000": [41, 42, 44, 45, 46, 47, 49, 51, 56, 70, 71, 72, 73, 75], "log_step": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "eval_step": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "save_step": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "500": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75], "gradient_clip": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "gradient_accumul": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "valid_metr": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "valid_higher_bett": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "auto_resum": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "resume_ckpt_dir": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "get_path_onli": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 96], "prepar": [41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75], "metadata": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75], "By": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 96], "prepare_librispeech": [41, 42, 45], "your": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 92, 93, 94, 95], "csv": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76], "preprocess": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 88], "too": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 93], "temporari": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 92], "hyper": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "matter": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75], "thei": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 92], "exist": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 93, 94, 97], "train_path": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 96], "valid_path": [41, 42, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 92, 96], "test_path": [41, 42, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 96], "column": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75], "descript": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "uniqu": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 77, 84], "absolut": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75], "string": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 77, 84, 85], "train_csv": [41, 42, 44, 45, 46, 47, 49], "valid_csv": [41, 42, 44, 45, 46], "test_csv": [41, 42, 44, 45, 46, 47, 49], "build": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 92], "now": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 92, 96], "second": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 73, 75], "tokenizer_data_path": [41, 42, 44, 45, 46], "prepare_common_token": [41, 42, 46], "current": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75], "experin": [41, 42, 44, 45, 46], "data_csv": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75], "tokenizer_path": [41, 42, 44, 45, 46, 51, 70, 71], "experi": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 92, 93], "class_id": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 77, 83, 84, 85], "unique_nam": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 77, 80, 82, 83, 84, 85], "datapoint": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72], "sortedbucketingsampl": [41, 42, 44], "fixedbatchsizebatchsampl": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75], "downstream_input_s": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 96], "downstream_output_s": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 96], "downstream_input_strid": [41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 96], "rnnencod": [41, 42, 44, 46], "modelwithspecaug": [41, 42, 44, 46], "ha": [41, 42, 44, 46, 54, 55, 56, 62, 93, 97], "two": [41, 42, 44, 46, 47, 49, 96], "build_collate_fn": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "default_collate_fn": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "collate_fn": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "absupstream": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "built": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "absfeatur": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "easlii": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "fed": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 97], "model_output_s": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "upstreamdownstreammodel": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "entir": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 93], "direct": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "compon": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "featuiz": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "below": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 96, 97], "optim": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 89, 96, 97], "0e": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 89], "param": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "usag": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 94], "schedul": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 96], "lr_schedul": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "steplr": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "s3prlupstream": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 97], "whose": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "eval_batch": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "dump_dir": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "devic": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 90], "num_work": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "routin": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "phase": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "meaning": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "want": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 93, 96], "overrid": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 96], "we": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 92, 93, 96, 97], "skip": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "get_class_from_nam": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "__name__": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 96], "load_model": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "model_ckpt_dir": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "restor": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "load_model_and_task": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "ckpts_dir": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "task_overrid": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "helper": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 96], "combin": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "load_task": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "assum": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "under": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 92], "task_ckpt_dir": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "separ": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "main": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 94], "6": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "cuda": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "world_siz": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "test_ckpt_dir": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "stage": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 92], "test_ckpt_step": [41, 42, 43, 44, 45, 46, 47, 48, 49], "store": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "user": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "stope": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "reach": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "datalod": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "fast": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "develop": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 94], "check": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 88, 94], "everyth": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "won": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "t": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 97], "crash": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "oper": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "cpu": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 90], "simultan": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "parallel": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "just": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "howev": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 95, 96], "runnig": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "8": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 97], "gpu": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "rune": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "know": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "among": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "rang": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "7": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "test_ckpts_step": [41, 42, 43, 44, 45, 46, 47, 48, 49, 73, 74, 75], "core": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 93, 96], "logic": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "build_model_all_arg": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "possibl": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "also": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 97], "addit": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "configur": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 94], "reli": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "omegaconf": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "simplifi": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "easili": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 93, 94, 96, 97], "reconstruct": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "build_task_all_args_except_model": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "get_stat": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85], "except": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "sapart": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "train_dir": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "train_dataset": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "train_batch_sampl": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "train_collate_fn": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "valid_dataset": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "valid_batch_sampl": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "valid_collate_fn": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "global_config": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "total": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 97], "step": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 84, 92, 97], "frequenc": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "speed": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "up": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "clip": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "gradient": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "accumul": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "updat": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "simul": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "best": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "higher": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "lower": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "alreadi": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "last": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "resum": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "delet": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "necessari": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "fix": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 91, 93], "keep_num_ckpt": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "prevent": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "latest": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 88], "old": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "ones": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "use_schedul": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "per": [41, 42, 45, 73, 74, 75, 92], "default_phoneme_token": [41, 42, 45], "sortedslicesampl": [41, 42, 45, 46], "framelevellinear": [41, 42, 45], "ivi": [41, 42, 46], "joanna": [41, 42, 46], "joei": [41, 42, 46], "justin": [41, 42, 46], "kendra": [41, 42, 46], "kimberli": [41, 42, 46], "matthew": [41, 42, 46], "salli": [41, 42, 46], "aditi": [41, 42, 46], "ami": [41, 42, 46], "geraint": [41, 42, 46], "nicol": [41, 42, 46], "brian": [41, 42, 46], "emma": [41, 42, 46], "raveena": [41, 42, 46], "russel": [41, 42, 46], "slot_type_f1": [41, 42, 46], "slot_value_c": [41, 42, 46], "slot_value_w": [41, 42, 46], "slot_edit_f1_ful": [41, 42, 46], "slot_edit_f1_part": [41, 42, 46], "audio_snips_for_slot_fil": [41, 42], "separt": [41, 42, 46], "space": [41, 42, 46], "eg": [41, 42, 46], "fly": [41, 42, 46], "taipei": [41, 42, 46], "york": [41, 42, 46], "tag": [41, 42, 46], "o": [41, 42, 46, 54, 55, 56, 62, 94, 97], "from_loc": [41, 42, 46], "to_loc": [41, 42, 46], "asv": [41, 49], "20000": [41, 47, 49], "40000": [41, 47, 49, 51, 54, 55, 56, 57, 63], "60000": [41, 47, 49], "80000": [41, 47, 49], "100000": [41, 47, 49], "120000": [41, 47, 49], "140000": [41, 47, 49], "160000": [41, 47, 49], "180000": [41, 47, 49], "max_sec": [41, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 90], "10": [41, 47, 49, 51, 54, 55, 56, 57, 58, 63, 97], "loss_typ": [41, 47, 49, 77, 83], "amsoftmax": [41, 47, 49, 77, 83], "loss_cfg": [41, 47, 49, 77, 83], "adamw": [41, 47, 49, 89, 97], "prepare_voxceleb1_for_sv": [41, 47], "test_trial_path": [41, 47, 49], "spk": [41, 47, 49], "id1": [41, 47, 49], "id2": [41, 47, 49], "wav_path1": [41, 47, 49], "wav_path2": [41, 47, 49], "build_encod": [41, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "categoryencod": [41, 47, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 77, 81, 82, 83, 85], "train_csv_path": [41, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72], "valid_csv_path": [41, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72], "test_csv_path": [41, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72], "encoder_path": [41, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72], "both": [41, 47, 49, 54, 55, 56, 62], "randomli": [41, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72], "crop": [41, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72], "doe": [41, 47, 49, 54, 55, 56, 62], "superbxvector": [41, 47, 49], "absutterancemodel": [41, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72], "test_trial": [41, 47, 48, 49, 77, 83], "speakerverif": [41, 47, 48, 49], "consist": [41, 47, 48, 49, 77, 83], "enroll_utt_id": [41, 47, 48, 49], "test_utt_id": [41, 47, 48, 49], "report": [41, 47, 48, 49], "kwd": [41, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 81, 83], "iemocap": [41, 51, 69], "test_fold": [41, 51, 52, 53, 55, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69], "30000": [41, 51, 69], "accuraci": [41, 51, 56, 69, 70, 71, 72], "iemocap_for_superb": [41, 51], "start_sec": [41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 73, 75], "nan": [41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72], "begin": [41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72], "end_sec": [41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 73, 75], "frame_shift": [41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75], "meanpoolinglinear": [41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72], "valid_df": [41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "test_df": [41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "utteranceclassificationtask": [41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72], "fsc_for_multi_classif": [41, 51], "label_0": [41, 51, 70], "label_1": [41, 51, 70], "label_2": [41, 51, 70], "arbitrari": [41, 51, 54, 62, 70], "prefix": [41, 51, 54, 55, 56, 62, 70], "superb_sid_batch_sampl": [41, 51, 70], "utterancemulticlassclassificationtask": [41, 51, 70], "pd": [41, 51, 70, 96], "gsc1_for_classif": [41, 51], "balancedweightedsampl": [41, 51, 71], "downstream_downsample_r": [41, 51, 71], "sid": [41, 51, 56, 72], "voxceleb1_for_sid": [41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "data_dir": [41, 73, 75, 76], "chunk_siz": [41, 73, 75], "subsampl": [41, 73, 75], "use_last_sampl": [41, 73, 75], "label_delai": [41, 73, 75], "record_id": [41, 51, 54, 62, 73, 75, 77, 79, 81], "der": [41, 73, 75], "median_filt": [41, 73, 74, 75], "11": [41, 73, 75], "kaldi": [41, 73, 74, 75], "durat": [41, 73, 75], "utt_id": [41, 73, 75], "segment": [41, 73, 75], "row": [41, 73, 75], "overlap": [41, 73, 75], "num_speak": [41, 73, 74, 75], "diarizationdataset": [41, 73, 75], "shift": [41, 73, 75], "binari": [41, 73, 75], "upstream_len": [41, 73, 75], "label_len": [41, 73, 75, 77, 79], "seq": [41, 73, 75], "chunk_id": [41, 54, 73, 75, 77, 79, 81], "chunk": [41, 73, 75], "sever": [41, 54, 55, 56, 62, 73, 75, 97], "effici": [41, 73, 75], "order": [41, 54, 55, 56, 62, 73, 75], "groupsameitemsampl": [41, 73, 75], "superbdiarizationmodel": [41, 73, 75], "diarizationpit": [41, 73, 74, 75], "infer": [41, 73, 74, 75], "stage_id": [41, 73, 74, 75], "test_dir": [41, 73, 74, 75], "test_rttm": [41, 73, 74, 75], "soft": [41, 73, 74, 75], "decid": [41, 73, 74, 75], "hard": [41, 54, 55, 56, 62, 73, 74, 75, 93], "try": [41, 73, 74, 75], "median": [41, 73, 74, 75], "filter": [41, 73, 74, 75], "smooth": [41, 73, 74, 75], "out": [41, 54, 55, 56, 62, 73, 74, 75, 92], "design": [41, 73, 74, 75], "prediction_typ": [41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 81, 82], "multilabel": [41, 51, 54, 55, 56, 57, 62, 63], "map": [41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67], "top1_acc": [41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67], "d_prime": [41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67], "aucroc": [41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67], "num_fold": [41, 51, 52, 53, 55, 58, 59, 60, 61, 64, 65, 66, 67], "multiclass": [41, 51, 52, 53, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67], "4000": [41, 51, 52, 53, 55, 58, 59, 60, 61, 64, 65, 66, 67], "150000": [41, 51, 52, 53, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67], "pitch_acc": [41, 51, 63], "chroma_acc": [41, 51, 63], "event_onset_200ms_fm": [41, 51, 54, 62], "segment_1s_": [41, 51, 54, 62], "postprocessing_grid": [41, 51, 54, 62, 81], "median_filter_m": [41, 51, 54, 62], "250": [41, 51, 54, 62], "min_dur": [41, 51, 54, 62], "125": [41, 51, 54, 62], "15000": [41, 51, 54, 62], "event_onset_50ms_fm": [41, 51, 62], "event_onset_offset_50ms_20perc_fm": [41, 51, 62], "150": [41, 51, 62], "problem": [42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 94], "procedur": [43, 48, 50, 68, 70, 72, 74], "tokenizer_nam": 44, "filenam": 44, "wa": [44, 54, 56], "here": [44, 97], "generate_basic_vocab": 44, "whe": 44, "generate_subword_vocab": 44, "special": [44, 54, 55, 56, 62], "pr": 45, "superbasr": [45, 46, 96], "sf": 46, "po": [49, 72, 83, 97], "han": [49, 72, 83, 97], "chi": [49, 72, 83, 97], "ml": 50, "hearfsd": [52, 53, 58, 59, 60, 61, 62, 64, 65, 66, 67], "valid_target_ev": [54, 81], "test_target_ev": [54, 81], "set_stat": [54, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85], "train_step": [54, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85], "_dump_dir": [54, 56, 77, 79, 80, 81, 82, 83, 84, 85], "train_reduct": [54, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85], "batch_result": [54, 77, 80, 81], "valid_step": [54, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85], "test_step": [54, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85], "log_scor": [54, 56, 81, 82], "score_arg": [54, 56, 81, 82], "valid_reduct": [54, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85], "cached_result": [54, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85], "parse_cached_result": [54, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85], "test_reduct": [54, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85], "eval_reduct": [54, 81], "_mode": [54, 56, 77, 79, 81, 82, 84, 85], "superbsid": [54, 55, 57, 63, 69], "feat_frame_shift": 54, "160": 54, "sequentialdatapip": [54, 56], "augmenteddynamicitemdataset": [54, 56], "rememb": [54, 56], "clear": [54, 55, 56, 62], "od": [54, 56], "popitem": [54, 55, 56, 62], "pair": [54, 55, 56, 62], "lifo": [54, 55, 56, 62], "fifo": [54, 55, 56, 62], "move_to_end": [54, 56], "move": [54, 56], "element": [54, 56], "keyerror": [54, 55, 56, 62], "f": [54, 55, 56, 62, 97], "d": [54, 55, 56, 62, 88, 92], "k": [54, 55, 56, 62, 71, 97], "lack": [54, 55, 56, 62], "v": [54, 55, 56, 62], "provid": [54, 55, 56, 62, 96], "view": [54, 55, 56, 62], "pop": [54, 55, 56, 62], "found": [54, 55, 56, 62], "otherwis": [54, 55, 56, 62], "setdefault": [54, 55, 56, 62], "els": [54, 55, 56, 62], "copi": [54, 55, 56, 62], "shallow": [54, 55, 56, 62], "fromkei": [54, 55, 56, 62], "purepath": [54, 55, 56, 62], "make": [54, 55, 56, 62, 92], "system": [54, 55, 56, 62, 97], "repres": [54, 55, 56, 62], "filesystem": [54, 55, 56, 62], "unlik": [54, 55, 56, 62], "offer": [54, 55, 56, 62], "instanti": [54, 55, 56, 62], "windowspath": [54, 55, 56, 62], "posix": [54, 55, 56, 62], "vice": [54, 55, 56, 62], "versa": [54, 55, 56, 62], "cwd": [54, 55, 56, 62], "work": [54, 55, 56, 62, 93, 96], "getcwd": [54, 55, 56, 62], "expandus": [54, 55, 56, 62], "samefil": [54, 55, 56, 62], "other_path": [54, 55, 56, 62], "iterdir": [54, 55, 56, 62], "yield": [54, 55, 56, 62], "glob": [54, 55, 56, 62], "pattern": [54, 55, 56, 62], "subtre": [54, 55, 56, 62], "match": [54, 55, 56, 62, 77, 83], "rel": [54, 55, 56, 62, 97], "rglob": [54, 55, 56, 62], "recurs": [54, 55, 56, 62], "anywher": [54, 55, 56, 62], "even": [54, 55, 56, 62], "doesn": [54, 55, 56, 62], "anyth": [54, 55, 56, 62], "No": [54, 55, 56, 62], "done": [54, 55, 56, 62], "along": [54, 55, 56, 62], "resolv": [54, 55, 56, 62], "canon": [54, 55, 56, 62], "strict": [54, 55, 56, 62], "symlink": [54, 55, 56, 62], "wai": [54, 55, 56, 62], "slash": [54, 55, 56, 62], "backslash": [54, 55, 56, 62], "stat": [54, 55, 56, 62], "owner": [54, 55, 56, 62], "login": [54, 55, 56, 62], "gid": [54, 55, 56, 62], "open": [54, 55, 56, 62], "r": [54, 55, 56, 62, 94], "newlin": [54, 55, 56, 62], "read_byt": [54, 55, 56, 62], "byte": [54, 55, 56, 62], "close": [54, 55, 56, 62, 93], "read_text": [54, 55, 56, 62], "write_byt": [54, 55, 56, 62], "write": [54, 55, 56, 62, 94, 96], "write_text": [54, 55, 56, 62], "touch": [54, 55, 56, 62], "438": [54, 55, 56, 62], "exist_ok": [54, 55, 56, 62], "mkdir": [54, 55, 56, 62], "511": [54, 55, 56, 62], "parent": [54, 55, 56, 62], "chmod": [54, 55, 56, 62], "permiss": [54, 55, 56, 62], "lchmod": [54, 55, 56, 62], "rather": [54, 55, 56, 62], "its": [54, 55, 56, 62, 97], "unlink": [54, 55, 56, 62], "missing_ok": [54, 55, 56, 62], "rmdir": [54, 55, 56, 62], "must": [54, 55, 56, 62], "lstat": [54, 55, 56, 62], "statu": [54, 55, 56, 62], "renam": [54, 55, 56, 62], "mai": [54, 55, 56, 62, 97], "interpret": [54, 55, 56, 62], "replac": [54, 55, 56, 62], "overwrit": [54, 55, 56, 62], "symlink_to": [54, 55, 56, 62], "target_is_directori": [54, 55, 56, 62], "revers": [54, 55, 56, 62], "link_to": [54, 55, 56, 62], "despit": [54, 55, 56, 62], "implic": [54, 55, 56, 62], "is_dir": [54, 55, 56, 62], "is_fil": [54, 55, 56, 62], "regular": [54, 55, 56, 62, 92], "is_mount": [54, 55, 56, 62], "mount": [54, 55, 56, 62], "is_symlink": [54, 55, 56, 62], "symbol": [54, 55, 56, 62], "is_block_devic": [54, 55, 56, 62], "is_char_devic": [54, 55, 56, 62], "anchor": [54, 55, 56, 62], "concaten": [54, 55, 56, 62], "drive": [54, 55, 56, 62], "as_posix": [54, 55, 56, 62], "as_uri": [54, 55, 56, 62], "uri": [54, 55, 56, 62], "letter": [54, 55, 56, 62], "unc": [54, 55, 56, 62], "is_absolut": [54, 55, 56, 62], "applic": [54, 55, 56, 62], "is_fifo": [54, 55, 56, 62], "is_reserv": [54, 55, 56, 62], "reserv": [54, 55, 56, 62], "joinpath": [54, 55, 56, 62], "subpath": [54, 55, 56, 62], "path_pattern": [54, 55, 56, 62], "part": [54, 55, 56, 62], "relative_to": [54, 55, 56, 62], "anoth": [54, 55, 56, 62], "identifi": [54, 55, 56, 62], "becaus": [54, 55, 56, 62], "valueerror": [54, 55, 56, 62], "stem": [54, 55, 56, 62], "minu": [54, 55, 56, 62], "suffix": [54, 55, 56, 62], "lead": [54, 55, 56, 62], "period": [54, 55, 56, 62], "txt": [54, 55, 56, 62, 92, 97], "tar": [54, 55, 56, 62], "gz": [54, 55, 56, 62], "with_nam": [54, 55, 56, 62], "with_suffix": [54, 55, 56, 62], "is_socket": [54, 55, 56, 62], "socket": [54, 55, 56, 62], "expand": [54, 55, 56, 62], "construct": [54, 55, 56, 62, 97], "default_factori": [54, 55, 56, 62], "factori": [54, 55, 56, 62], "produc": [54, 55, 56, 62], "__getitem__": [54, 55, 56, 62], "remain": [54, 55, 56, 62, 69], "treat": [54, 55, 56, 62], "were": [54, 55, 56, 62], "constructor": [54, 55, 56, 62], "keyword": [54, 55, 56, 62], "__missing__": [54, 55, 56, 62], "cl": [54, 56, 97], "repr": [54, 56], "eq": [54, 56], "unsafe_hash": [54, 56], "frozen": [54, 56], "dunder": [54, 56], "examin": [54, 56], "pep": [54, 56], "526": [54, 56], "__annotations__": [54, 56], "__init__": [54, 56, 96], "__repr__": [54, 56], "rich": [54, 56], "comparison": [54, 56], "__hash__": [54, 56], "assign": [54, 56], "creation": [54, 56], "memo": [54, 62], "_nil": [54, 62], "__doc__": [54, 62], "more": [54, 62], "info": [54, 62], "hear": 56, "output_kei": 56, "audio_sample_r": 56, "audio_channel_reduct": 56, "er": 69, "tzu": 69, "hsien": 69, "huang": [69, 97], "valid_ratio": 69, "classfic": [69, 70, 71], "protocol": 69, "fold": 69, "cross": [69, 97], "happi": 69, "angri": 69, "neutral": 69, "sad": 69, "balanc": 69, "excit": 69, "merg": [69, 92], "ic": 70, "wei": [70, 97], "cheng": [70, 97], "tseng": 70, "multi": [70, 88, 97], "three": [70, 94], "jointli": 70, "yist": [71, 80], "lin": [71, 80], "fo": 75, "sd": 75, "convers": 76, "rttm_path": 76, "loop": [77, 84], "dump_feat_dir": [77, 80], "feat": [77, 80], "speakerclassifi": 77, "len": [77, 83, 85], "content": [77, 83], "enroll_utt": [77, 83], "test_utt": [77, 83], "softmax": [77, 83, 97], "beamdecod": [77, 84], "speech2textctcexampl": 77, "valid_length": [77, 84], "ndarrai": [77, 84], "beam_decod": [77, 84], "acoust": [77, 84, 97], "np": [77, 84], "ground": [77, 84], "truth": [77, 84], "utteranceclassifierexampl": 77, "sub_output_s": 77, "arrai": 77, "num_categori": 77, "numpy_object_array_all_clos": 77, "invar": 79, "dump": 80, "timestemp": [83, 84, 85], "speech2text": 84, "handi": 86, "tool": 86, "code": [87, 94, 95, 97], "freq": [87, 97], "contextdecor": 87, "thread": 88, "safe": 88, "new_enough_sec": 88, "modfieid": 88, "enough": 88, "older": 88, "usga": 89, "eval_dataload": 89, "pseudo": 90, "sec": 90, "n": 90, "min_sec": 90, "pad": 90, "1337": 91, "cudnn": 91, "backend": 91, "sure": 92, "privat": 92, "clone": [92, 95], "repositori": [92, 95], "s3prl_root": 92, "git": [92, 95], "cd": [92, 95], "pip": [92, 95, 97], "full": [92, 94, 97], "own": [92, 94], "verifi": 92, "pytest": [92, 95], "docstr": 92, "look": 92, "correct": 92, "rebuild_doc": 92, "sh": 92, "launch": [92, 96], "server": 92, "python3": [92, 96], "m": [92, 96], "html": 92, "browser": 92, "webpag": 92, "your_ip_or_localhost": 92, "ok": 92, "readi": [92, 96], "your_changed_or_added_files_onli": 92, "gitignor": 92, "mess": 92, "our": [92, 93, 96], "show": 92, "your_commit_messag": 92, "your_branch": 92, "branch": 92, "caus": 92, "ci": 92, "runnabl": 92, "month": [92, 97], "fail": 92, "thank": 93, "consid": [93, 97], "appreci": 93, "discuss": 93, "u": 93, "issu": 93, "page": [93, 94, 97], "about": 93, "request": [93, 94], "submit": 93, "pull": [93, 94], "thing": 93, "ye": 93, "achiev": 93, "collabor": 93, "proce": 93, "did": 93, "go": 93, "through": [93, 94], "dealt": 93, "grown": 93, "becom": 93, "maintain": 93, "principl": 93, "keep": [93, 95], "few": 93, "essenti": 93, "guarante": 93, "continu": 93, "lot": [93, 94, 95], "peopl": 93, "term": 93, "welcom": 93, "bug": 93, "slight": [93, 96], "improv": [93, 97], "unless": 93, "feel": 93, "side": 93, "outsid": 93, "wish": [93, 97], "understand": 93, "toolkit": 94, "supervis": [94, 97], "learn": [94, 97], "Its": 94, "elf": 94, "upervis": 94, "peech": 94, "epresent": 94, "l": 94, "earn": 94, "It": 94, "scratch": 94, "mockingjai": 94, "albert": 94, "tera": 94, "vq": 94, "npc": 94, "distilhubert": 94, "pretrain": [94, 97], "hub": 94, "plug": 94, "plai": 94, "offici": [94, 97], "minim": 94, "edit": 94, "ssl": [94, 96], "pase": 94, "cpc": 94, "decoar": 94, "wav2vec": 94, "discret": 94, "xl": 94, "mgr": 94, "unispeech": 94, "sat": 94, "wavlm": 94, "data2vec": 94, "ast": 94, "ssast": 94, "mae": 94, "byol": 94, "vggish": 94, "colab": 94, "cli": 94, "custom": 94, "intern": [94, 97], "unit": [94, 95, 97], "commit": 94, "push": 94, "send": 94, "enabl": 95, "right": 95, "reflect": 95, "modif": [95, 96], "sphinx": 95, "variant": [95, 97], "almost": [96, 97], "ran": 96, "print": 96, "asr_exp": 96, "Then": 96, "field_nam": 96, "outer_field_nam": 96, "inner_field_nam": 96, "still": 96, "freeli": 96, "demonstr": 96, "new_asr": 96, "panda": 96, "lowresourcelinearsuperbasr": 96, "def": 96, "super": 96, "read_csv": 96, "iloc": 96, "to_csv": 96, "__main__": 96, "exactli": 96, "introduc": 96, "new_asr_exp": 96, "retriev": 97, "automat": 97, "amount": 97, "unlabel": 97, "variou": 97, "releas": 97, "date": 97, "citat": 97, "architectur": 97, "criterion": 97, "titl": 97, "articl": 97, "year": 97, "2020": 97, "detail": 97, "unsupervis": 97, "isbn": 97, "9781509066315": 97, "dx": 97, "doi": 97, "1109": 97, "icassp40776": 97, "9054458": 97, "journal": 97, "icassp": 97, "ieee": 97, "confer": 97, "signal": 97, "publish": 97, "liu": 97, "andi": 97, "hsu": 97, "chun": 97, "lee": 97, "hung": 97, "yi": 97, "spectrogram": 97, "80": 97, "mel": 97, "alter": 97, "200k": 97, "unlabl": 97, "100hr": 97, "201": 97, "500k": 97, "360hr": 97, "1m": 97, "960hr": 97, "3k": 97, "5k": 97, "misc": 97, "shang": 97, "li": 97, "eprint": 97, "2007": 97, "06028": 97, "archiveprefix": 97, "primaryclass": 97, "eess": 97, "AS": 97, "mag": 97, "240": 97, "lite": 97, "inproceed": 97, "chi2021audio": 97, "chung": 97, "pei": 97, "tsung": 97, "hsieh": 97, "chen": 97, "yen": 97, "hao": 97, "booktitl": 97, "spoken": 97, "technologi": 97, "workshop": 97, "slt": 97, "344": 97, "350": 97, "organ": 97, "autoregress": 97, "chung2019unsupervis": 97, "yu": 97, "ning": 97, "tang": 97, "glass": 97, "jame": 97, "interspeech": 97, "2019": 97, "quantiz": 97, "chung2020vqapc": 97, "autohor": 97, "liu2020nonautoregress": 97, "alexand": 97, "preprint": 97, "2011": 97, "00406": 97, "ravanelli2020multi": 97, "ravanelli": 97, "mirco": 97, "zhong": 97, "jianyuan": 97, "pascual": 97, "santiago": 97, "swietojanski": 97, "pawel": 97, "monteiro": 97, "joao": 97, "trmal": 97, "jan": 97, "bengio": 97, "yoshua": 97, "6989": 97, "6993": 97, "instruct": 97, "githubusercont": 97, "50hr": 97, "transfer": 97, "well": 97, "riviere2020unsupervis": 97, "rivier": 97, "morgan": 97, "joulin": 97, "armand": 97, "mazar": 97, "pierr": 97, "emmanuel": 97, "dupoux": 97, "7414": 97, "7418": 97, "slightli": 97, "deepmind": 97, "cite": 97, "oord2018represent": 97, "contrast": 97, "oord": 97, "aaron": 97, "van": 97, "den": 97, "yazh": 97, "vinyal": 97, "oriol": 97, "1807": 97, "03748": 97, "2018": 97, "librilight": 97, "60k": 97, "hour": 97, "contextu": 97, "semi": 97, "ling2020deep": 97, "ling": 97, "shaoshi": 97, "yuzong": 97, "salazar": 97, "julian": 97, "kirchhoff": 97, "katrin": 97, "6429": 97, "6433": 97, "ling2020decoar": 97, "2012": 97, "06659": 97, "schneider2019wav2vec": 97, "schneider": 97, "steffen": 97, "baevski": 97, "alexei": 97, "collobert": 97, "ronan": 97, "auli": 97, "michael": 97, "proc": 97, "3465": 97, "3469": 97, "fairseq": 97, "baevski2019vq": 97, "conv": 97, "th": 97, "gumbel": 97, "techniqu": 97, "nlp": 97, "roberta": 97, "exclud": 97, "frontend": 97, "framework": 97, "baevski2020wav2vec": 97, "zhou": 97, "yuhao": 97, "moham": 97, "abdelrahman": 97, "neural": 97, "volum": 97, "33": 97, "12449": 97, "12460": 97, "24": 97, "ll60k": 97, "libri": 97, "light": 97, "commonvoic": 97, "switchboard": 97, "fisher": 97, "conform": 97, "rope": 97, "multilingu": 97, "lingual": 97, "conneau2020unsupervis": 97, "conneau": 97, "alexi": 97, "2006": 97, "13979": 97, "babu2021xl": 97, "babu": 97, "arun": 97, "wang": 97, "changhan": 97, "tjandra": 97, "andro": 97, "lakhotia": 97, "kushal": 97, "xu": 97, "qiantong": 97, "goyal": 97, "naman": 97, "singh": 97, "kritika": 97, "von": 97, "platen": 97, "patrick": 97, "saraf": 97, "yatharth": 97, "pino": 97, "juan": 97, "2111": 97, "09296": 97, "128": 97, "436k": 97, "mask": 97, "hsu2021hubert": 97, "bolt": 97, "benjamin": 97, "tsai": 97, "yao": 97, "salakhutdinov": 97, "ruslan": 97, "acm": 97, "transact": 97, "29": 97, "3451": 97, "3460": 97, "wise": 97, "distil": 97, "chang2022distilhubert": 97, "7087": 97, "7091": 97, "teacher": 97, "distort": 97, "domain": 97, "huang2022improv": 97, "kuan": 97, "fu": 97, "zhang": 97, "2203": 97, "16104": 97, "musan": 97, "gaussian": 97, "reverber": 97, "univers": 97, "awar": 97, "chen2022unispeech": 97, "sanyuan": 97, "chengyi": 97, "zhengyang": 97, "zhuo": 97, "shuji": 97, "jian": 97, "qian": 97, "furu": 97, "jinyu": 97, "6152": 97, "6156": 97, "960": 97, "gigaspeech": 97, "10k": 97, "voxpopuli": 97, "24k": 97, "94k": 97, "stack": 97, "chen2021wavlm": 97, "naoyuki": 97, "kanda": 97, "takuya": 97, "yoshioka": 97, "xiong": 97, "xiao": 97, "shuo": 97, "ren": 97, "yanmin": 97, "zeng": 97, "2110": 97, "13900": 97, "c": 97, "vision": 97, "baevski2022data2vec": 97, "gu": 97, "jiatao": 97, "2202": 97, "03555": 97, "gong2021ast": 97, "gong": 97, "yuan": 97, "2104": 97, "01778": 97, "audioset": 97, "gong2022ssast": 97, "lai": 97, "proceed": 97, "aaai": 97, "artifici": 97, "intellig": 97, "36": 97, "10699": 97, "10709": 97, "autoencod": 97, "baade2022ma": 97, "baad": 97, "alan": 97, "peng": 97, "puyuan": 97, "harwath": 97, "david": 97, "16691": 97, "purpos": 97, "niizumi2021byol": 97, "niizumi": 97, "daisuk": 97, "takeuchi": 97, "daiki": 97, "ohishi": 97, "yasunori": 97, "harada": 97, "noboru": 97, "kashino": 97, "kunio": 97, "joint": 97, "ijcnn": 97, "bootstrap": 97, "elbanna2022byol": 97, "elbanna": 97, "gasser": 97, "scheidwass": 97, "clow": 97, "neil": 97, "kegler": 97, "mikolaj": 97, "beckmann": 97, "hajal": 97, "karl": 97, "el": 97, "cernak": 97, "milo": 97, "2206": 97, "12038": 97, "cnn": 97, "hershey2017cnn": 97, "hershei": 97, "shawn": 97, "chaudhuri": 97, "sourish": 97, "elli": 97, "daniel": 97, "pw": 97, "gemmek": 97, "jort": 97, "jansen": 97, "aren": 97, "moor": 97, "chan": 97, "plakal": 97, "manoj": 97, "platt": 97, "devin": 97, "saurou": 97, "rif": 97, "seybold": 97, "bryan": 97, "2017": 97, "131": 97, "135": 97, "labal": 97}, "objects": {"s3prl": [[0, 0, 0, "-", "dataio"], [24, 0, 0, "-", "metric"], [28, 0, 0, "-", "nn"], [41, 0, 0, "-", "problem"], [77, 0, 0, "-", "task"], [86, 0, 0, "-", "util"]], "s3prl.dataio": [[1, 0, 0, "-", "corpus"], [12, 0, 0, "-", "encoder"], [17, 0, 0, "-", "sampler"]], "s3prl.dataio.corpus": [[1, 1, 1, "", "FluentSpeechCommands"], [1, 1, 1, "", "IEMOCAP"], [1, 1, 1, "", "LibriLight"], [1, 1, 1, "", "LibriSpeech"], [1, 1, 1, "", "Quesst14"], [1, 1, 1, "", "SNIPS"], [1, 1, 1, "", "SpeechCommandsV1"], [1, 1, 1, "", "VoxCeleb1SID"], [1, 1, 1, "", "VoxCeleb1SV"], [2, 0, 0, "-", "base"], [3, 0, 0, "-", "fluent_speech_commands"], [4, 0, 0, "-", "iemocap"], [5, 0, 0, "-", "librilight"], [6, 0, 0, "-", "librispeech"], [7, 0, 0, "-", "quesst14"], [8, 0, 0, "-", "snips"], [9, 0, 0, "-", "speech_commands"], [10, 0, 0, "-", "voxceleb1sid"], [11, 0, 0, "-", "voxceleb1sv"]], "s3prl.dataio.corpus.FluentSpeechCommands": [[1, 2, 1, "", "all_data"], [1, 2, 1, "", "data_split"], [1, 2, 1, "", "data_split_ids"], [1, 3, 1, "", "dataframe_to_datapoints"], [1, 3, 1, "", "download_dataset"]], "s3prl.dataio.corpus.IEMOCAP": [[1, 2, 1, "", "all_data"], [1, 2, 1, "", "data_split"], [1, 2, 1, "", "data_split_ids"], [1, 3, 1, "", "dataframe_to_datapoints"], [1, 3, 1, "", "download_dataset"], [1, 3, 1, "", "get_session_with_act"], [1, 3, 1, "", "get_whole_session"]], "s3prl.dataio.corpus.LibriLight": [[1, 2, 1, "", "all_data"], [1, 2, 1, "", "data_split"], [1, 2, 1, "", "data_split_ids"], [1, 3, 1, "", "dataframe_to_datapoints"], [1, 3, 1, "", "download_dataset"]], "s3prl.dataio.corpus.LibriSpeech": [[1, 2, 1, "", "all_data"], [1, 2, 1, "", "data_split"], [1, 2, 1, "", "data_split_ids"], [1, 3, 1, "", "dataframe_to_datapoints"], [1, 3, 1, "", "download_dataset"], [1, 3, 1, "", "get_corpus_splits"]], "s3prl.dataio.corpus.Quesst14": [[1, 2, 1, "", "docs"], [1, 3, 1, "", "download_dataset"], [1, 2, 1, "", "test_queries"], [1, 2, 1, "", "valid_queries"]], "s3prl.dataio.corpus.SNIPS": [[1, 2, 1, "", "all_data"], [1, 2, 1, "", "data_split"], [1, 2, 1, "", "data_split_ids"], [1, 3, 1, "", "dataframe_to_datapoints"]], "s3prl.dataio.corpus.SpeechCommandsV1": [[1, 2, 1, "", "all_data"], [1, 2, 1, "", "data_split"], [1, 2, 1, "", "data_split_ids"], [1, 3, 1, "", "dataframe_to_datapoints"], [1, 3, 1, "", "download_dataset"], [1, 3, 1, "", "list_to_dict"], [1, 3, 1, "", "parse_test_data_list"], [1, 3, 1, "", "parse_train_valid_data_list"], [1, 3, 1, "", "path_to_unique_name"], [1, 3, 1, "", "split_dataset"]], "s3prl.dataio.corpus.VoxCeleb1SID": [[1, 2, 1, "", "all_data"], [1, 2, 1, "", "data_split"], [1, 2, 1, "", "data_split_ids"], [1, 3, 1, "", "dataframe_to_datapoints"], [1, 3, 1, "", "download_dataset"]], "s3prl.dataio.corpus.VoxCeleb1SV": [[1, 2, 1, "", "all_data"], [1, 2, 1, "", "data_split"], [1, 2, 1, "", "data_split_ids"], [1, 3, 1, "", "dataframe_to_datapoints"], [1, 3, 1, "", "format_path"], [1, 3, 1, "", "format_test_trials"], [1, 3, 1, "", "path2data"], [1, 3, 1, "", "path2uid"]], "s3prl.dataio.corpus.base": [[2, 1, 1, "", "Corpus"]], "s3prl.dataio.corpus.base.Corpus": [[2, 2, 1, "", "all_data"], [2, 2, 1, "", "data_split"], [2, 2, 1, "", "data_split_ids"], [2, 3, 1, "", "dataframe_to_datapoints"]], "s3prl.dataio.corpus.fluent_speech_commands": [[3, 1, 1, "", "FluentSpeechCommands"]], "s3prl.dataio.corpus.fluent_speech_commands.FluentSpeechCommands": [[3, 2, 1, "", "all_data"], [3, 2, 1, "", "data_split"], [3, 2, 1, "", "data_split_ids"], [3, 3, 1, "", "dataframe_to_datapoints"], [3, 3, 1, "", "download_dataset"]], "s3prl.dataio.corpus.iemocap": [[4, 1, 1, "", "IEMOCAP"]], "s3prl.dataio.corpus.iemocap.IEMOCAP": [[4, 2, 1, "", "all_data"], [4, 2, 1, "", "data_split"], [4, 2, 1, "", "data_split_ids"], [4, 3, 1, "", "dataframe_to_datapoints"], [4, 3, 1, "", "download_dataset"], [4, 3, 1, "", "get_session_with_act"], [4, 3, 1, "", "get_whole_session"]], "s3prl.dataio.corpus.librilight": [[5, 1, 1, "", "LibriLight"]], "s3prl.dataio.corpus.librilight.LibriLight": [[5, 2, 1, "", "all_data"], [5, 2, 1, "", "data_split"], [5, 2, 1, "", "data_split_ids"], [5, 3, 1, "", "dataframe_to_datapoints"], [5, 3, 1, "", "download_dataset"]], "s3prl.dataio.corpus.librispeech": [[6, 1, 1, "", "LibriSpeech"]], "s3prl.dataio.corpus.librispeech.LibriSpeech": [[6, 2, 1, "", "all_data"], [6, 2, 1, "", "data_split"], [6, 2, 1, "", "data_split_ids"], [6, 3, 1, "", "dataframe_to_datapoints"], [6, 3, 1, "", "download_dataset"], [6, 3, 1, "", "get_corpus_splits"]], "s3prl.dataio.corpus.quesst14": [[7, 1, 1, "", "Quesst14"]], "s3prl.dataio.corpus.quesst14.Quesst14": [[7, 2, 1, "", "docs"], [7, 3, 1, "", "download_dataset"], [7, 2, 1, "", "test_queries"], [7, 2, 1, "", "valid_queries"]], "s3prl.dataio.corpus.snips": [[8, 1, 1, "", "SNIPS"]], "s3prl.dataio.corpus.snips.SNIPS": [[8, 2, 1, "", "all_data"], [8, 2, 1, "", "data_split"], [8, 2, 1, "", "data_split_ids"], [8, 3, 1, "", "dataframe_to_datapoints"]], "s3prl.dataio.corpus.speech_commands": [[9, 1, 1, "", "SpeechCommandsV1"]], "s3prl.dataio.corpus.speech_commands.SpeechCommandsV1": [[9, 2, 1, "", "all_data"], [9, 2, 1, "", "data_split"], [9, 2, 1, "", "data_split_ids"], [9, 3, 1, "", "dataframe_to_datapoints"], [9, 3, 1, "", "download_dataset"], [9, 3, 1, "", "list_to_dict"], [9, 3, 1, "", "parse_test_data_list"], [9, 3, 1, "", "parse_train_valid_data_list"], [9, 3, 1, "", "path_to_unique_name"], [9, 3, 1, "", "split_dataset"]], "s3prl.dataio.corpus.voxceleb1sid": [[10, 1, 1, "", "VoxCeleb1SID"]], "s3prl.dataio.corpus.voxceleb1sid.VoxCeleb1SID": [[10, 2, 1, "", "all_data"], [10, 2, 1, "", "data_split"], [10, 2, 1, "", "data_split_ids"], [10, 3, 1, "", "dataframe_to_datapoints"], [10, 3, 1, "", "download_dataset"]], "s3prl.dataio.corpus.voxceleb1sv": [[11, 1, 1, "", "VoxCeleb1SV"]], "s3prl.dataio.corpus.voxceleb1sv.VoxCeleb1SV": [[11, 2, 1, "", "all_data"], [11, 2, 1, "", "data_split"], [11, 2, 1, "", "data_split_ids"], [11, 3, 1, "", "dataframe_to_datapoints"], [11, 3, 1, "", "format_path"], [11, 3, 1, "", "format_test_trials"], [11, 3, 1, "", "path2data"], [11, 3, 1, "", "path2uid"]], "s3prl.dataio.encoder": [[12, 1, 1, "", "BertTokenizer"], [12, 1, 1, "", "CategoryEncoder"], [12, 1, 1, "", "CategoryEncoders"], [12, 1, 1, "", "CharacterSlotTokenizer"], [12, 1, 1, "", "CharacterTokenizer"], [12, 1, 1, "", "G2P"], [12, 1, 1, "", "SubwordSlotTokenizer"], [12, 1, 1, "", "SubwordTokenizer"], [12, 1, 1, "", "Tokenizer"], [12, 1, 1, "", "WordTokenizer"], [13, 0, 0, "-", "category"], [14, 0, 0, "-", "g2p"], [12, 4, 1, "", "generate_basic_vocab"], [12, 4, 1, "", "generate_subword_vocab"], [12, 4, 1, "", "generate_vocab"], [15, 0, 0, "-", "tokenizer"], [16, 0, 0, "-", "vocabulary"]], "s3prl.dataio.encoder.BertTokenizer": [[12, 3, 1, "", "decode"], [12, 3, 1, "", "encode"], [12, 2, 1, "", "eos_idx"], [12, 3, 1, "", "load_from_file"], [12, 2, 1, "", "pad_idx"], [12, 2, 1, "", "token_type"], [12, 2, 1, "", "unk_idx"], [12, 2, 1, "", "vocab_size"]], "s3prl.dataio.encoder.CategoryEncoder": [[12, 3, 1, "", "decode"], [12, 3, 1, "", "encode"]], "s3prl.dataio.encoder.CharacterSlotTokenizer": [[12, 3, 1, "", "decode"], [12, 3, 1, "", "encode"], [12, 2, 1, "", "eos_idx"], [12, 3, 1, "", "idx_to_vocab"], [12, 3, 1, "", "load_from_file"], [12, 2, 1, "", "pad_idx"], [12, 2, 1, "", "token_type"], [12, 2, 1, "", "unk_idx"], [12, 2, 1, "", "vocab_size"], [12, 3, 1, "", "vocab_to_idx"]], "s3prl.dataio.encoder.CharacterTokenizer": [[12, 3, 1, "", "decode"], [12, 3, 1, "", "encode"], [12, 2, 1, "", "eos_idx"], [12, 3, 1, "", "idx_to_vocab"], [12, 3, 1, "", "load_from_file"], [12, 2, 1, "", "pad_idx"], [12, 2, 1, "", "token_type"], [12, 2, 1, "", "unk_idx"], [12, 2, 1, "", "vocab_size"], [12, 3, 1, "", "vocab_to_idx"]], "s3prl.dataio.encoder.G2P": [[12, 3, 1, "", "encode"]], "s3prl.dataio.encoder.SubwordSlotTokenizer": [[12, 3, 1, "", "decode"], [12, 3, 1, "", "encode"], [12, 2, 1, "", "eos_idx"], [12, 3, 1, "", "load_from_file"], [12, 2, 1, "", "pad_idx"], [12, 2, 1, "", "token_type"], [12, 2, 1, "", "unk_idx"], [12, 2, 1, "", "vocab_size"]], "s3prl.dataio.encoder.SubwordTokenizer": [[12, 3, 1, "", "decode"], [12, 3, 1, "", "encode"], [12, 2, 1, "", "eos_idx"], [12, 3, 1, "", "load_from_file"], [12, 2, 1, "", "pad_idx"], [12, 2, 1, "", "token_type"], [12, 2, 1, "", "unk_idx"], [12, 2, 1, "", "vocab_size"]], "s3prl.dataio.encoder.Tokenizer": [[12, 3, 1, "", "decode"], [12, 3, 1, "", "encode"], [12, 2, 1, "", "eos_idx"], [12, 3, 1, "", "load_from_file"], [12, 2, 1, "", "pad_idx"], [12, 2, 1, "", "token_type"], [12, 2, 1, "", "unk_idx"], [12, 2, 1, "", "vocab_size"]], "s3prl.dataio.encoder.WordTokenizer": [[12, 3, 1, "", "decode"], [12, 3, 1, "", "encode"], [12, 2, 1, "", "eos_idx"], [12, 3, 1, "", "idx_to_vocab"], [12, 3, 1, "", "load_from_file"], [12, 2, 1, "", "pad_idx"], [12, 2, 1, "", "token_type"], [12, 2, 1, "", "unk_idx"], [12, 2, 1, "", "vocab_size"], [12, 3, 1, "", "vocab_to_idx"]], "s3prl.dataio.encoder.category": [[13, 1, 1, "", "CategoryEncoder"], [13, 1, 1, "", "CategoryEncoders"]], "s3prl.dataio.encoder.category.CategoryEncoder": [[13, 3, 1, "", "decode"], [13, 3, 1, "", "encode"]], "s3prl.dataio.encoder.g2p": [[14, 1, 1, "", "G2P"]], "s3prl.dataio.encoder.g2p.G2P": [[14, 3, 1, "", "encode"]], "s3prl.dataio.encoder.tokenizer": [[15, 1, 1, "", "CharacterSlotTokenizer"], [15, 1, 1, "", "CharacterTokenizer"], [15, 1, 1, "", "PhonemeTokenizer"], [15, 1, 1, "", "SubwordSlotTokenizer"], [15, 1, 1, "", "SubwordTokenizer"], [15, 1, 1, "", "WordTokenizer"], [15, 4, 1, "", "default_phoneme_tokenizer"], [15, 4, 1, "", "load_tokenizer"]], "s3prl.dataio.encoder.tokenizer.CharacterSlotTokenizer": [[15, 3, 1, "", "decode"], [15, 3, 1, "", "encode"], [15, 2, 1, "", "eos_idx"], [15, 3, 1, "", "idx_to_vocab"], [15, 3, 1, "", "load_from_file"], [15, 2, 1, "", "pad_idx"], [15, 2, 1, "", "token_type"], [15, 2, 1, "", "unk_idx"], [15, 2, 1, "", "vocab_size"], [15, 3, 1, "", "vocab_to_idx"]], "s3prl.dataio.encoder.tokenizer.CharacterTokenizer": [[15, 3, 1, "", "decode"], [15, 3, 1, "", "encode"], [15, 2, 1, "", "eos_idx"], [15, 3, 1, "", "idx_to_vocab"], [15, 3, 1, "", "load_from_file"], [15, 2, 1, "", "pad_idx"], [15, 2, 1, "", "token_type"], [15, 2, 1, "", "unk_idx"], [15, 2, 1, "", "vocab_size"], [15, 3, 1, "", "vocab_to_idx"]], "s3prl.dataio.encoder.tokenizer.PhonemeTokenizer": [[15, 3, 1, "", "decode"], [15, 3, 1, "", "encode"], [15, 2, 1, "", "eos_idx"], [15, 3, 1, "", "idx_to_vocab"], [15, 3, 1, "", "load_from_file"], [15, 2, 1, "", "pad_idx"], [15, 2, 1, "", "token_type"], [15, 2, 1, "", "unk_idx"], [15, 2, 1, "", "vocab_size"], [15, 3, 1, "", "vocab_to_idx"]], "s3prl.dataio.encoder.tokenizer.SubwordSlotTokenizer": [[15, 3, 1, "", "decode"], [15, 3, 1, "", "encode"], [15, 2, 1, "", "eos_idx"], [15, 3, 1, "", "load_from_file"], [15, 2, 1, "", "pad_idx"], [15, 2, 1, "", "token_type"], [15, 2, 1, "", "unk_idx"], [15, 2, 1, "", "vocab_size"]], "s3prl.dataio.encoder.tokenizer.SubwordTokenizer": [[15, 3, 1, "", "decode"], [15, 3, 1, "", "encode"], [15, 2, 1, "", "eos_idx"], [15, 3, 1, "", "load_from_file"], [15, 2, 1, "", "pad_idx"], [15, 2, 1, "", "token_type"], [15, 2, 1, "", "unk_idx"], [15, 2, 1, "", "vocab_size"]], "s3prl.dataio.encoder.tokenizer.WordTokenizer": [[15, 3, 1, "", "decode"], [15, 3, 1, "", "encode"], [15, 2, 1, "", "eos_idx"], [15, 3, 1, "", "idx_to_vocab"], [15, 3, 1, "", "load_from_file"], [15, 2, 1, "", "pad_idx"], [15, 2, 1, "", "token_type"], [15, 2, 1, "", "unk_idx"], [15, 2, 1, "", "vocab_size"], [15, 3, 1, "", "vocab_to_idx"]], "s3prl.dataio.encoder.vocabulary": [[16, 4, 1, "", "generate_basic_vocab"], [16, 4, 1, "", "generate_subword_vocab"], [16, 4, 1, "", "generate_vocab"]], "s3prl.dataio.sampler": [[17, 1, 1, "", "BalancedWeightedSampler"], [17, 1, 1, "", "DistributedBatchSamplerWrapper"], [17, 1, 1, "", "FixedBatchSizeBatchSampler"], [17, 1, 1, "", "GroupSameItemSampler"], [17, 1, 1, "", "MaxTimestampBatchSampler"], [17, 1, 1, "", "SortedBucketingSampler"], [17, 1, 1, "", "SortedSliceSampler"], [18, 0, 0, "-", "balanced_weighted_sampler"], [19, 0, 0, "-", "distributed_sampler"], [20, 0, 0, "-", "fixed_batch_size_batch_sampler"], [21, 0, 0, "-", "group_same_item_sampler"], [22, 0, 0, "-", "max_timestamp_batch_sampler"], [23, 0, 0, "-", "sorted_sampler"]], "s3prl.dataio.sampler.BalancedWeightedSampler": [[17, 3, 1, "", "get_weights"], [17, 3, 1, "", "set_epoch"]], "s3prl.dataio.sampler.DistributedBatchSamplerWrapper": [[17, 3, 1, "", "set_epoch"]], "s3prl.dataio.sampler.FixedBatchSizeBatchSampler": [[17, 3, 1, "", "set_epoch"]], "s3prl.dataio.sampler.GroupSameItemSampler": [[17, 3, 1, "", "set_epoch"]], "s3prl.dataio.sampler.MaxTimestampBatchSampler": [[17, 3, 1, "", "get_length"], [17, 3, 1, "", "set_epoch"]], "s3prl.dataio.sampler.SortedBucketingSampler": [[17, 3, 1, "", "get_length"], [17, 3, 1, "", "set_epoch"]], "s3prl.dataio.sampler.SortedSliceSampler": [[17, 3, 1, "", "get_length"], [17, 3, 1, "", "set_epoch"]], "s3prl.dataio.sampler.balanced_weighted_sampler": [[18, 1, 1, "", "BalancedWeightedSampler"]], "s3prl.dataio.sampler.balanced_weighted_sampler.BalancedWeightedSampler": [[18, 3, 1, "", "get_weights"], [18, 3, 1, "", "set_epoch"]], "s3prl.dataio.sampler.distributed_sampler": [[19, 1, 1, "", "DistributedBatchSamplerWrapper"]], "s3prl.dataio.sampler.distributed_sampler.DistributedBatchSamplerWrapper": [[19, 3, 1, "", "set_epoch"]], "s3prl.dataio.sampler.fixed_batch_size_batch_sampler": [[20, 1, 1, "", "FixedBatchSizeBatchSampler"]], "s3prl.dataio.sampler.fixed_batch_size_batch_sampler.FixedBatchSizeBatchSampler": [[20, 3, 1, "", "set_epoch"]], "s3prl.dataio.sampler.group_same_item_sampler": [[21, 1, 1, "", "GroupSameItemSampler"]], "s3prl.dataio.sampler.group_same_item_sampler.GroupSameItemSampler": [[21, 3, 1, "", "set_epoch"]], "s3prl.dataio.sampler.max_timestamp_batch_sampler": [[22, 1, 1, "", "MaxTimestampBatchSampler"]], "s3prl.dataio.sampler.max_timestamp_batch_sampler.MaxTimestampBatchSampler": [[22, 3, 1, "", "get_length"], [22, 3, 1, "", "set_epoch"]], "s3prl.dataio.sampler.sorted_sampler": [[23, 1, 1, "", "SortedBucketingSampler"], [23, 1, 1, "", "SortedSliceSampler"]], "s3prl.dataio.sampler.sorted_sampler.SortedBucketingSampler": [[23, 3, 1, "", "get_length"], [23, 3, 1, "", "set_epoch"]], "s3prl.dataio.sampler.sorted_sampler.SortedSliceSampler": [[23, 3, 1, "", "get_length"], [23, 3, 1, "", "set_epoch"]], "s3prl.metric": [[24, 4, 1, "", "accuracy"], [24, 4, 1, "", "calc_diarization_error"], [24, 4, 1, "", "cer"], [25, 0, 0, "-", "common"], [24, 4, 1, "", "compute_eer"], [24, 4, 1, "", "compute_minDCF"], [26, 0, 0, "-", "diarization"], [24, 4, 1, "", "per"], [24, 4, 1, "", "slot_edit_f1"], [27, 0, 0, "-", "slot_filling"], [24, 4, 1, "", "slot_type_f1"], [24, 4, 1, "", "slot_value_cer"], [24, 4, 1, "", "slot_value_wer"], [24, 4, 1, "", "ter"], [24, 4, 1, "", "wer"]], "s3prl.metric.common": [[25, 4, 1, "", "accuracy"], [25, 4, 1, "", "cer"], [25, 4, 1, "", "compute_eer"], [25, 4, 1, "", "compute_minDCF"], [25, 4, 1, "", "per"], [25, 4, 1, "", "ter"], [25, 4, 1, "", "wer"]], "s3prl.metric.diarization": [[26, 4, 1, "", "calc_diarization_error"]], "s3prl.metric.slot_filling": [[27, 4, 1, "", "slot_edit_f1"], [27, 4, 1, "", "slot_type_f1"], [27, 4, 1, "", "slot_value_cer"], [27, 4, 1, "", "slot_value_wer"]], "s3prl.nn": [[28, 1, 1, "", "BeamDecoder"], [28, 1, 1, "", "Featurizer"], [28, 1, 1, "", "FrameLevel"], [28, 1, 1, "", "FrameLevelLinear"], [28, 1, 1, "", "MeanPooling"], [28, 1, 1, "", "MeanPoolingLinear"], [28, 1, 1, "", "RNNEncoder"], [28, 1, 1, "", "S3PRLUpstream"], [28, 1, 1, "", "SuperbDiarizationModel"], [28, 1, 1, "", "SuperbXvector"], [28, 5, 1, "", "TemporalAveragePooling"], [28, 1, 1, "", "TemporalStatisticsPooling"], [28, 1, 1, "", "UtteranceLevel"], [28, 1, 1, "", "XVectorBackbone"], [28, 1, 1, "", "amsoftmax"], [29, 0, 0, "-", "beam_decoder"], [30, 0, 0, "-", "common"], [31, 0, 0, "-", "hear"], [32, 0, 0, "-", "interface"], [33, 0, 0, "-", "linear"], [34, 0, 0, "-", "pit"], [35, 0, 0, "-", "pooling"], [36, 0, 0, "-", "rnn"], [28, 1, 1, "", "softmax"], [37, 0, 0, "-", "speaker_loss"], [38, 0, 0, "-", "speaker_model"], [39, 0, 0, "-", "specaug"], [40, 0, 0, "-", "upstream"]], "s3prl.nn.BeamDecoder": [[28, 3, 1, "", "decode"], [28, 3, 1, "", "get_timesteps"], [28, 3, 1, "", "get_tokens"]], "s3prl.nn.Featurizer": [[28, 2, 1, "", "downsample_rate"], [28, 5, 1, "", "dump_patches"], [28, 3, 1, "", "forward"], [28, 2, 1, "", "output_size"], [28, 5, 1, "", "training"]], "s3prl.nn.FrameLevel": [[28, 5, 1, "", "dump_patches"], [28, 3, 1, "", "forward"], [28, 2, 1, "", "input_size"], [28, 2, 1, "", "output_size"], [28, 5, 1, "", "training"]], "s3prl.nn.FrameLevelLinear": [[28, 5, 1, "", "dump_patches"], [28, 3, 1, "", "forward"], [28, 2, 1, "", "input_size"], [28, 2, 1, "", "output_size"], [28, 5, 1, "", "training"]], "s3prl.nn.MeanPooling": [[28, 5, 1, "", "dump_patches"], [28, 3, 1, "", "forward"], [28, 2, 1, "", "input_size"], [28, 2, 1, "", "output_size"], [28, 5, 1, "", "training"]], "s3prl.nn.MeanPoolingLinear": [[28, 5, 1, "", "dump_patches"], [28, 3, 1, "", "forward"], [28, 2, 1, "", "input_size"], [28, 2, 1, "", "output_size"], [28, 5, 1, "", "training"]], "s3prl.nn.RNNEncoder": [[28, 5, 1, "", "dump_patches"], [28, 3, 1, "", "forward"], [28, 2, 1, "", "input_size"], [28, 2, 1, "", "output_size"], [28, 5, 1, "", "training"]], "s3prl.nn.S3PRLUpstream": [[28, 3, 1, "", "available_names"], [28, 2, 1, "", "downsample_rates"], [28, 5, 1, "", "dump_patches"], [28, 3, 1, "", "forward"], [28, 2, 1, "", "hidden_sizes"], [28, 2, 1, "", "num_layers"], [28, 5, 1, "", "training"]], "s3prl.nn.SuperbDiarizationModel": [[28, 5, 1, "", "dump_patches"], [28, 3, 1, "", "forward"], [28, 2, 1, "", "input_size"], [28, 2, 1, "", "output_size"], [28, 5, 1, "", "training"]], "s3prl.nn.SuperbXvector": [[28, 5, 1, "", "dump_patches"], [28, 3, 1, "", "forward"], [28, 2, 1, "", "input_size"], [28, 2, 1, "", "output_size"], [28, 5, 1, "", "training"]], "s3prl.nn.TemporalStatisticsPooling": [[28, 5, 1, "", "dump_patches"], [28, 3, 1, "", "forward"], [28, 2, 1, "", "input_size"], [28, 2, 1, "", "output_size"], [28, 5, 1, "", "training"]], "s3prl.nn.UtteranceLevel": [[28, 5, 1, "", "dump_patches"], [28, 3, 1, "", "forward"], [28, 2, 1, "", "input_size"], [28, 2, 1, "", "output_size"], [28, 5, 1, "", "training"]], "s3prl.nn.XVectorBackbone": [[28, 5, 1, "", "dump_patches"], [28, 3, 1, "", "forward"], [28, 2, 1, "", "input_size"], [28, 2, 1, "", "output_size"], [28, 5, 1, "", "training"]], "s3prl.nn.amsoftmax": [[28, 5, 1, "", "dump_patches"], [28, 3, 1, "", "forward"], [28, 2, 1, "", "input_size"], [28, 2, 1, "", "output_size"], [28, 5, 1, "", "training"]], "s3prl.nn.beam_decoder": [[29, 1, 1, "", "BeamDecoder"]], "s3prl.nn.beam_decoder.BeamDecoder": [[29, 3, 1, "", "decode"], [29, 3, 1, "", "get_timesteps"], [29, 3, 1, "", "get_tokens"]], "s3prl.nn.common": [[30, 1, 1, "", "FrameLevel"], [30, 1, 1, "", "UtteranceLevel"]], "s3prl.nn.common.FrameLevel": [[30, 5, 1, "", "dump_patches"], [30, 3, 1, "", "forward"], [30, 2, 1, "", "input_size"], [30, 2, 1, "", "output_size"], [30, 5, 1, "", "training"]], "s3prl.nn.common.UtteranceLevel": [[30, 5, 1, "", "dump_patches"], [30, 3, 1, "", "forward"], [30, 2, 1, "", "input_size"], [30, 2, 1, "", "output_size"], [30, 5, 1, "", "training"]], "s3prl.nn.hear": [[31, 1, 1, "", "HearFullyConnectedPrediction"]], "s3prl.nn.hear.HearFullyConnectedPrediction": [[31, 5, 1, "", "dump_patches"], [31, 3, 1, "", "forward"], [31, 2, 1, "", "input_size"], [31, 2, 1, "", "output_size"], [31, 5, 1, "", "training"]], "s3prl.nn.interface": [[32, 1, 1, "", "AbsFeaturizer"], [32, 1, 1, "", "AbsFrameModel"], [32, 1, 1, "", "AbsUpstream"], [32, 1, 1, "", "AbsUtteranceModel"]], "s3prl.nn.interface.AbsFeaturizer": [[32, 2, 1, "", "downsample_rate"], [32, 5, 1, "", "dump_patches"], [32, 3, 1, "", "forward"], [32, 2, 1, "", "output_size"], [32, 5, 1, "", "training"]], "s3prl.nn.interface.AbsFrameModel": [[32, 5, 1, "", "dump_patches"], [32, 3, 1, "", "forward"], [32, 2, 1, "", "input_size"], [32, 2, 1, "", "output_size"], [32, 5, 1, "", "training"]], "s3prl.nn.interface.AbsUpstream": [[32, 2, 1, "", "downsample_rates"], [32, 5, 1, "", "dump_patches"], [32, 3, 1, "", "forward"], [32, 2, 1, "", "hidden_sizes"], [32, 2, 1, "", "num_layer"], [32, 5, 1, "", "training"]], "s3prl.nn.interface.AbsUtteranceModel": [[32, 5, 1, "", "dump_patches"], [32, 3, 1, "", "forward"], [32, 2, 1, "", "input_size"], [32, 2, 1, "", "output_size"], [32, 5, 1, "", "training"]], "s3prl.nn.linear": [[33, 1, 1, "", "FrameLevelLinear"], [33, 1, 1, "", "MeanPoolingLinear"]], "s3prl.nn.linear.FrameLevelLinear": [[33, 5, 1, "", "dump_patches"], [33, 3, 1, "", "forward"], [33, 2, 1, "", "input_size"], [33, 2, 1, "", "output_size"], [33, 5, 1, "", "training"]], "s3prl.nn.linear.MeanPoolingLinear": [[33, 5, 1, "", "dump_patches"], [33, 3, 1, "", "forward"], [33, 2, 1, "", "input_size"], [33, 2, 1, "", "output_size"], [33, 5, 1, "", "training"]], "s3prl.nn.pit": [[34, 4, 1, "", "pit_loss"]], "s3prl.nn.pooling": [[35, 1, 1, "", "AttentiveStatisticsPooling"], [35, 1, 1, "", "MeanPooling"], [35, 1, 1, "", "SelfAttentivePooling"], [35, 5, 1, "", "TemporalAveragePooling"], [35, 1, 1, "", "TemporalStatisticsPooling"]], "s3prl.nn.pooling.AttentiveStatisticsPooling": [[35, 5, 1, "", "dump_patches"], [35, 3, 1, "", "forward"], [35, 2, 1, "", "input_size"], [35, 2, 1, "", "output_size"], [35, 5, 1, "", "training"]], "s3prl.nn.pooling.MeanPooling": [[35, 5, 1, "", "dump_patches"], [35, 3, 1, "", "forward"], [35, 2, 1, "", "input_size"], [35, 2, 1, "", "output_size"], [35, 5, 1, "", "training"]], "s3prl.nn.pooling.SelfAttentivePooling": [[35, 5, 1, "", "dump_patches"], [35, 3, 1, "", "forward"], [35, 2, 1, "", "input_size"], [35, 2, 1, "", "output_size"], [35, 5, 1, "", "training"]], "s3prl.nn.pooling.TemporalStatisticsPooling": [[35, 5, 1, "", "dump_patches"], [35, 3, 1, "", "forward"], [35, 2, 1, "", "input_size"], [35, 2, 1, "", "output_size"], [35, 5, 1, "", "training"]], "s3prl.nn.rnn": [[36, 1, 1, "", "RNNEncoder"], [36, 1, 1, "", "RNNLayer"], [36, 1, 1, "", "SuperbDiarizationModel"]], "s3prl.nn.rnn.RNNEncoder": [[36, 5, 1, "", "dump_patches"], [36, 3, 1, "", "forward"], [36, 2, 1, "", "input_size"], [36, 2, 1, "", "output_size"], [36, 5, 1, "", "training"]], "s3prl.nn.rnn.RNNLayer": [[36, 5, 1, "", "dump_patches"], [36, 3, 1, "", "forward"], [36, 2, 1, "", "input_size"], [36, 2, 1, "", "output_size"], [36, 5, 1, "", "training"]], "s3prl.nn.rnn.SuperbDiarizationModel": [[36, 5, 1, "", "dump_patches"], [36, 3, 1, "", "forward"], [36, 2, 1, "", "input_size"], [36, 2, 1, "", "output_size"], [36, 5, 1, "", "training"]], "s3prl.nn.softmax": [[28, 5, 1, "", "dump_patches"], [28, 3, 1, "", "forward"], [28, 2, 1, "", "input_size"], [28, 2, 1, "", "output_size"], [28, 5, 1, "", "training"]], "s3prl.nn.speaker_loss": [[37, 1, 1, "", "amsoftmax"], [37, 1, 1, "", "softmax"]], "s3prl.nn.speaker_loss.amsoftmax": [[37, 5, 1, "", "dump_patches"], [37, 3, 1, "", "forward"], [37, 2, 1, "", "input_size"], [37, 2, 1, "", "output_size"], [37, 5, 1, "", "training"]], "s3prl.nn.speaker_loss.softmax": [[37, 5, 1, "", "dump_patches"], [37, 3, 1, "", "forward"], [37, 2, 1, "", "input_size"], [37, 2, 1, "", "output_size"], [37, 5, 1, "", "training"]], "s3prl.nn.speaker_model": [[38, 1, 1, "", "SpeakerEmbeddingExtractor"], [38, 1, 1, "", "SuperbXvector"], [38, 1, 1, "", "TDNN"], [38, 1, 1, "", "XVectorBackbone"]], "s3prl.nn.speaker_model.SpeakerEmbeddingExtractor": [[38, 5, 1, "", "dump_patches"], [38, 3, 1, "", "forward"], [38, 2, 1, "", "input_size"], [38, 2, 1, "", "output_size"], [38, 5, 1, "", "training"]], "s3prl.nn.speaker_model.SuperbXvector": [[38, 5, 1, "", "dump_patches"], [38, 3, 1, "", "forward"], [38, 2, 1, "", "input_size"], [38, 2, 1, "", "output_size"], [38, 5, 1, "", "training"]], "s3prl.nn.speaker_model.TDNN": [[38, 5, 1, "", "dump_patches"], [38, 3, 1, "", "forward"], [38, 2, 1, "", "input_size"], [38, 2, 1, "", "output_size"], [38, 5, 1, "", "training"]], "s3prl.nn.speaker_model.XVectorBackbone": [[38, 5, 1, "", "dump_patches"], [38, 3, 1, "", "forward"], [38, 2, 1, "", "input_size"], [38, 2, 1, "", "output_size"], [38, 5, 1, "", "training"]], "s3prl.nn.specaug": [[39, 1, 1, "", "ModelWithSpecaug"], [39, 1, 1, "", "SpecAug"]], "s3prl.nn.specaug.ModelWithSpecaug": [[39, 5, 1, "", "dump_patches"], [39, 3, 1, "", "forward"], [39, 2, 1, "", "input_size"], [39, 2, 1, "", "output_size"], [39, 5, 1, "", "training"]], "s3prl.nn.specaug.SpecAug": [[39, 3, 1, "", "apply_specaug"], [39, 5, 1, "", "dump_patches"], [39, 3, 1, "", "forward"], [39, 5, 1, "", "training"]], "s3prl.nn.upstream": [[40, 1, 1, "", "Featurizer"], [40, 1, 1, "", "S3PRLUpstream"], [40, 1, 1, "", "UpstreamDownstreamModel"]], "s3prl.nn.upstream.Featurizer": [[40, 2, 1, "", "downsample_rate"], [40, 5, 1, "", "dump_patches"], [40, 3, 1, "", "forward"], [40, 2, 1, "", "output_size"], [40, 5, 1, "", "training"]], "s3prl.nn.upstream.S3PRLUpstream": [[40, 3, 1, "", "available_names"], [40, 2, 1, "", "downsample_rates"], [40, 5, 1, "", "dump_patches"], [40, 3, 1, "", "forward"], [40, 2, 1, "", "hidden_sizes"], [40, 2, 1, "", "num_layers"], [40, 5, 1, "", "training"]], "s3prl.nn.upstream.UpstreamDownstreamModel": [[40, 2, 1, "", "downsample_rate"], [40, 5, 1, "", "dump_patches"], [40, 3, 1, "", "forward"], [40, 2, 1, "", "input_size"], [40, 2, 1, "", "output_size"], [40, 5, 1, "", "training"]], "s3prl.problem": [[41, 1, 1, "", "HearBeijingOpera"], [41, 1, 1, "", "HearCremaD"], [41, 1, 1, "", "HearDcase2016Task2"], [41, 1, 1, "", "HearESC50"], [41, 1, 1, "", "HearFSD"], [41, 1, 1, "", "HearGSC5hr"], [41, 1, 1, "", "HearGtzan"], [41, 1, 1, "", "HearGtzanMusicSpeech"], [41, 1, 1, "", "HearGunshot"], [41, 1, 1, "", "HearLibriCount"], [41, 1, 1, "", "HearMaestro"], [41, 1, 1, "", "HearNsynth5hr"], [41, 1, 1, "", "HearStroke"], [41, 1, 1, "", "HearTonic"], [41, 1, 1, "", "HearVocal"], [41, 1, 1, "", "HearVoxLingual"], [41, 1, 1, "", "SuperbASR"], [41, 1, 1, "", "SuperbASV"], [41, 1, 1, "", "SuperbER"], [41, 1, 1, "", "SuperbIC"], [41, 1, 1, "", "SuperbKS"], [41, 1, 1, "", "SuperbPR"], [41, 1, 1, "", "SuperbSD"], [41, 1, 1, "", "SuperbSF"], [41, 1, 1, "", "SuperbSID"], [42, 0, 0, "-", "asr"], [47, 0, 0, "-", "asv"], [50, 0, 0, "-", "base"], [51, 0, 0, "-", "common"], [73, 0, 0, "-", "diarization"]], "s3prl.problem.HearBeijingOpera": [[41, 3, 1, "", "build_batch_sampler"], [41, 3, 1, "", "build_collate_fn"], [41, 3, 1, "", "build_dataset"], [41, 3, 1, "", "build_downstream"], [41, 3, 1, "", "build_encoder"], [41, 3, 1, "", "build_featurizer"], [41, 3, 1, "", "build_model"], [41, 3, 1, "", "build_optimizer"], [41, 3, 1, "", "build_scheduler"], [41, 3, 1, "", "build_task"], [41, 3, 1, "", "build_upstream"], [41, 3, 1, "", "default_config"], [41, 3, 1, "", "evaluate"], [41, 3, 1, "", "get_class_from_name"], [41, 3, 1, "", "load_model"], [41, 3, 1, "", "load_model_and_task"], [41, 3, 1, "", "load_task"], [41, 3, 1, "", "main"], [41, 3, 1, "", "prepare_data"], [41, 3, 1, "", "run"], [41, 3, 1, "", "save_model"], [41, 3, 1, "", "save_task"], [41, 3, 1, "", "train"]], "s3prl.problem.HearCremaD": [[41, 3, 1, "", "build_batch_sampler"], [41, 3, 1, "", "build_collate_fn"], [41, 3, 1, "", "build_dataset"], [41, 3, 1, "", "build_downstream"], [41, 3, 1, "", "build_encoder"], [41, 3, 1, "", "build_featurizer"], [41, 3, 1, "", "build_model"], [41, 3, 1, "", "build_optimizer"], [41, 3, 1, "", "build_scheduler"], [41, 3, 1, "", "build_task"], [41, 3, 1, "", "build_upstream"], [41, 3, 1, "", "default_config"], [41, 3, 1, "", "evaluate"], [41, 3, 1, "", "get_class_from_name"], [41, 3, 1, "", "load_model"], [41, 3, 1, "", "load_model_and_task"], [41, 3, 1, "", "load_task"], [41, 3, 1, "", "main"], [41, 3, 1, "", "prepare_data"], [41, 3, 1, "", "run"], [41, 3, 1, "", "save_model"], [41, 3, 1, "", "save_task"], [41, 3, 1, "", "train"]], "s3prl.problem.HearDcase2016Task2": [[41, 3, 1, "", "build_batch_sampler"], [41, 3, 1, "", "build_collate_fn"], [41, 3, 1, "", "build_dataset"], [41, 3, 1, "", "build_downstream"], [41, 3, 1, "", "build_encoder"], [41, 3, 1, "", "build_featurizer"], [41, 3, 1, "", "build_model"], [41, 3, 1, "", "build_optimizer"], [41, 3, 1, "", "build_scheduler"], [41, 3, 1, "", "build_task"], [41, 3, 1, "", "build_upstream"], [41, 3, 1, "", "default_config"], [41, 3, 1, "", "evaluate"], [41, 3, 1, "", "get_class_from_name"], [41, 3, 1, "", "load_model"], [41, 3, 1, "", "load_model_and_task"], [41, 3, 1, "", "load_task"], [41, 3, 1, "", "main"], [41, 3, 1, "", "prepare_data"], [41, 3, 1, "", "run"], [41, 3, 1, "", "save_model"], [41, 3, 1, "", "save_task"], [41, 3, 1, "", "train"]], "s3prl.problem.HearESC50": [[41, 3, 1, "", "build_batch_sampler"], [41, 3, 1, "", "build_collate_fn"], [41, 3, 1, "", "build_dataset"], [41, 3, 1, "", "build_downstream"], [41, 3, 1, "", "build_encoder"], [41, 3, 1, "", "build_featurizer"], [41, 3, 1, "", "build_model"], [41, 3, 1, "", "build_optimizer"], [41, 3, 1, "", "build_scheduler"], [41, 3, 1, "", "build_task"], [41, 3, 1, "", "build_upstream"], [41, 3, 1, "", "default_config"], [41, 3, 1, "", "evaluate"], [41, 3, 1, "", "get_class_from_name"], [41, 3, 1, "", "load_model"], [41, 3, 1, "", "load_model_and_task"], [41, 3, 1, "", "load_task"], [41, 3, 1, "", "main"], [41, 3, 1, "", "prepare_data"], [41, 3, 1, "", "run"], [41, 3, 1, "", "save_model"], [41, 3, 1, "", "save_task"], [41, 3, 1, "", "train"]], "s3prl.problem.HearFSD": [[41, 3, 1, "", "build_batch_sampler"], [41, 3, 1, "", "build_collate_fn"], [41, 3, 1, "", "build_dataset"], [41, 3, 1, "", "build_downstream"], [41, 3, 1, "", "build_encoder"], [41, 3, 1, "", "build_featurizer"], [41, 3, 1, "", "build_model"], [41, 3, 1, "", "build_optimizer"], [41, 3, 1, "", "build_scheduler"], [41, 3, 1, "", "build_task"], [41, 3, 1, "", "build_upstream"], [41, 3, 1, "", "default_config"], [41, 3, 1, "", "evaluate"], [41, 3, 1, "", "get_class_from_name"], [41, 3, 1, "", "load_model"], [41, 3, 1, "", "load_model_and_task"], [41, 3, 1, "", "load_task"], [41, 3, 1, "", "main"], [41, 3, 1, "", "prepare_data"], [41, 3, 1, "", "run"], [41, 3, 1, "", "save_model"], [41, 3, 1, "", "save_task"], [41, 3, 1, "", "train"]], "s3prl.problem.HearGSC5hr": [[41, 3, 1, "", "build_batch_sampler"], [41, 3, 1, "", "build_collate_fn"], [41, 3, 1, "", "build_dataset"], [41, 3, 1, "", "build_downstream"], [41, 3, 1, "", "build_encoder"], [41, 3, 1, "", "build_featurizer"], [41, 3, 1, "", "build_model"], [41, 3, 1, "", "build_optimizer"], [41, 3, 1, "", "build_scheduler"], [41, 3, 1, "", "build_task"], [41, 3, 1, "", "build_upstream"], [41, 3, 1, "", "default_config"], [41, 3, 1, "", "evaluate"], [41, 3, 1, "", "get_class_from_name"], [41, 3, 1, "", "load_model"], [41, 3, 1, "", "load_model_and_task"], [41, 3, 1, "", "load_task"], [41, 3, 1, "", "main"], [41, 3, 1, "", "prepare_data"], [41, 3, 1, "", "run"], [41, 3, 1, "", "save_model"], [41, 3, 1, "", "save_task"], [41, 3, 1, "", "train"]], "s3prl.problem.HearGtzan": [[41, 3, 1, "", "build_batch_sampler"], [41, 3, 1, "", "build_collate_fn"], [41, 3, 1, "", "build_dataset"], [41, 3, 1, "", "build_downstream"], [41, 3, 1, "", "build_encoder"], [41, 3, 1, "", "build_featurizer"], [41, 3, 1, "", "build_model"], [41, 3, 1, "", "build_optimizer"], [41, 3, 1, "", "build_scheduler"], [41, 3, 1, "", "build_task"], [41, 3, 1, "", "build_upstream"], [41, 3, 1, "", "default_config"], [41, 3, 1, "", "evaluate"], [41, 3, 1, "", "get_class_from_name"], [41, 3, 1, "", "load_model"], [41, 3, 1, "", "load_model_and_task"], [41, 3, 1, "", "load_task"], [41, 3, 1, "", "main"], [41, 3, 1, "", "prepare_data"], [41, 3, 1, "", "run"], [41, 3, 1, "", "save_model"], [41, 3, 1, "", "save_task"], [41, 3, 1, "", "train"]], "s3prl.problem.HearGtzanMusicSpeech": [[41, 3, 1, "", "build_batch_sampler"], [41, 3, 1, "", "build_collate_fn"], [41, 3, 1, "", "build_dataset"], [41, 3, 1, "", "build_downstream"], [41, 3, 1, "", "build_encoder"], [41, 3, 1, "", "build_featurizer"], [41, 3, 1, "", "build_model"], [41, 3, 1, "", "build_optimizer"], [41, 3, 1, "", "build_scheduler"], [41, 3, 1, "", "build_task"], [41, 3, 1, "", "build_upstream"], [41, 3, 1, "", "default_config"], [41, 3, 1, "", "evaluate"], [41, 3, 1, "", "get_class_from_name"], [41, 3, 1, "", "load_model"], [41, 3, 1, "", "load_model_and_task"], [41, 3, 1, "", "load_task"], [41, 3, 1, "", "main"], [41, 3, 1, "", "prepare_data"], [41, 3, 1, "", "run"], [41, 3, 1, "", "save_model"], [41, 3, 1, "", "save_task"], [41, 3, 1, "", "train"]], "s3prl.problem.HearGunshot": [[41, 3, 1, "", "build_batch_sampler"], [41, 3, 1, "", "build_collate_fn"], [41, 3, 1, "", "build_dataset"], [41, 3, 1, "", "build_downstream"], [41, 3, 1, "", "build_encoder"], [41, 3, 1, "", "build_featurizer"], [41, 3, 1, "", "build_model"], [41, 3, 1, "", "build_optimizer"], [41, 3, 1, "", "build_scheduler"], [41, 3, 1, "", "build_task"], [41, 3, 1, "", "build_upstream"], [41, 3, 1, "", "default_config"], [41, 3, 1, "", "evaluate"], [41, 3, 1, "", "get_class_from_name"], [41, 3, 1, "", "load_model"], [41, 3, 1, "", "load_model_and_task"], [41, 3, 1, "", "load_task"], [41, 3, 1, "", "main"], [41, 3, 1, "", "prepare_data"], [41, 3, 1, "", "run"], [41, 3, 1, "", "save_model"], [41, 3, 1, "", "save_task"], [41, 3, 1, "", "train"]], "s3prl.problem.HearLibriCount": [[41, 3, 1, "", "build_batch_sampler"], [41, 3, 1, "", "build_collate_fn"], [41, 3, 1, "", "build_dataset"], [41, 3, 1, "", "build_downstream"], [41, 3, 1, "", "build_encoder"], [41, 3, 1, "", "build_featurizer"], [41, 3, 1, "", "build_model"], [41, 3, 1, "", "build_optimizer"], [41, 3, 1, "", "build_scheduler"], [41, 3, 1, "", "build_task"], [41, 3, 1, "", "build_upstream"], [41, 3, 1, "", "default_config"], [41, 3, 1, "", "evaluate"], [41, 3, 1, "", "get_class_from_name"], [41, 3, 1, "", "load_model"], [41, 3, 1, "", "load_model_and_task"], [41, 3, 1, "", "load_task"], [41, 3, 1, "", "main"], [41, 3, 1, "", "prepare_data"], [41, 3, 1, "", "run"], [41, 3, 1, "", "save_model"], [41, 3, 1, "", "save_task"], [41, 3, 1, "", "train"]], "s3prl.problem.HearMaestro": [[41, 3, 1, "", "build_batch_sampler"], [41, 3, 1, "", "build_collate_fn"], [41, 3, 1, "", "build_dataset"], [41, 3, 1, "", "build_downstream"], [41, 3, 1, "", "build_encoder"], [41, 3, 1, "", "build_featurizer"], [41, 3, 1, "", "build_model"], [41, 3, 1, "", "build_optimizer"], [41, 3, 1, "", "build_scheduler"], [41, 3, 1, "", "build_task"], [41, 3, 1, "", "build_upstream"], [41, 3, 1, "", "default_config"], [41, 3, 1, "", "evaluate"], [41, 3, 1, "", "get_class_from_name"], [41, 3, 1, "", "load_model"], [41, 3, 1, "", "load_model_and_task"], [41, 3, 1, "", "load_task"], [41, 3, 1, "", "main"], [41, 3, 1, "", "prepare_data"], [41, 3, 1, "", "run"], [41, 3, 1, "", "save_model"], [41, 3, 1, "", "save_task"], [41, 3, 1, "", "train"]], "s3prl.problem.HearNsynth5hr": [[41, 3, 1, "", "build_batch_sampler"], [41, 3, 1, "", "build_collate_fn"], [41, 3, 1, "", "build_dataset"], [41, 3, 1, "", "build_downstream"], [41, 3, 1, "", "build_encoder"], [41, 3, 1, "", "build_featurizer"], [41, 3, 1, "", "build_model"], [41, 3, 1, "", "build_optimizer"], [41, 3, 1, "", "build_scheduler"], [41, 3, 1, "", "build_task"], [41, 3, 1, "", "build_upstream"], [41, 3, 1, "", "default_config"], [41, 3, 1, "", "evaluate"], [41, 3, 1, "", "get_class_from_name"], [41, 3, 1, "", "load_model"], [41, 3, 1, "", "load_model_and_task"], [41, 3, 1, "", "load_task"], [41, 3, 1, "", "main"], [41, 3, 1, "", "prepare_data"], [41, 3, 1, "", "run"], [41, 3, 1, "", "save_model"], [41, 3, 1, "", "save_task"], [41, 3, 1, "", "train"]], "s3prl.problem.HearStroke": [[41, 3, 1, "", "build_batch_sampler"], [41, 3, 1, "", "build_collate_fn"], [41, 3, 1, "", "build_dataset"], [41, 3, 1, "", "build_downstream"], [41, 3, 1, "", "build_encoder"], [41, 3, 1, "", "build_featurizer"], [41, 3, 1, "", "build_model"], [41, 3, 1, "", "build_optimizer"], [41, 3, 1, "", "build_scheduler"], [41, 3, 1, "", "build_task"], [41, 3, 1, "", "build_upstream"], [41, 3, 1, "", "default_config"], [41, 3, 1, "", "evaluate"], [41, 3, 1, "", "get_class_from_name"], [41, 3, 1, "", "load_model"], [41, 3, 1, "", "load_model_and_task"], [41, 3, 1, "", "load_task"], [41, 3, 1, "", "main"], [41, 3, 1, "", "prepare_data"], [41, 3, 1, "", "run"], [41, 3, 1, "", "save_model"], [41, 3, 1, "", "save_task"], [41, 3, 1, "", "train"]], "s3prl.problem.HearTonic": [[41, 3, 1, "", "build_batch_sampler"], [41, 3, 1, "", "build_collate_fn"], [41, 3, 1, "", "build_dataset"], [41, 3, 1, "", "build_downstream"], [41, 3, 1, "", "build_encoder"], [41, 3, 1, "", "build_featurizer"], [41, 3, 1, "", "build_model"], [41, 3, 1, "", "build_optimizer"], [41, 3, 1, "", "build_scheduler"], [41, 3, 1, "", "build_task"], [41, 3, 1, "", "build_upstream"], [41, 3, 1, "", "default_config"], [41, 3, 1, "", "evaluate"], [41, 3, 1, "", "get_class_from_name"], [41, 3, 1, "", "load_model"], [41, 3, 1, "", "load_model_and_task"], [41, 3, 1, "", "load_task"], [41, 3, 1, "", "main"], [41, 3, 1, "", "prepare_data"], [41, 3, 1, "", "run"], [41, 3, 1, "", "save_model"], [41, 3, 1, "", "save_task"], [41, 3, 1, "", "train"]], "s3prl.problem.HearVocal": [[41, 3, 1, "", "build_batch_sampler"], [41, 3, 1, "", "build_collate_fn"], [41, 3, 1, "", "build_dataset"], [41, 3, 1, "", "build_downstream"], [41, 3, 1, "", "build_encoder"], [41, 3, 1, "", "build_featurizer"], [41, 3, 1, "", "build_model"], [41, 3, 1, "", "build_optimizer"], [41, 3, 1, "", "build_scheduler"], [41, 3, 1, "", "build_task"], [41, 3, 1, "", "build_upstream"], [41, 3, 1, "", "default_config"], [41, 3, 1, "", "evaluate"], [41, 3, 1, "", "get_class_from_name"], [41, 3, 1, "", "load_model"], [41, 3, 1, "", "load_model_and_task"], [41, 3, 1, "", "load_task"], [41, 3, 1, "", "main"], [41, 3, 1, "", "prepare_data"], [41, 3, 1, "", "run"], [41, 3, 1, "", "save_model"], [41, 3, 1, "", "save_task"], [41, 3, 1, "", "train"]], "s3prl.problem.HearVoxLingual": [[41, 3, 1, "", "build_batch_sampler"], [41, 3, 1, "", "build_collate_fn"], [41, 3, 1, "", "build_dataset"], [41, 3, 1, "", "build_downstream"], [41, 3, 1, "", "build_encoder"], [41, 3, 1, "", "build_featurizer"], [41, 3, 1, "", "build_model"], [41, 3, 1, "", "build_optimizer"], [41, 3, 1, "", "build_scheduler"], [41, 3, 1, "", "build_task"], [41, 3, 1, "", "build_upstream"], [41, 3, 1, "", "default_config"], [41, 3, 1, "", "evaluate"], [41, 3, 1, "", "get_class_from_name"], [41, 3, 1, "", "load_model"], [41, 3, 1, "", "load_model_and_task"], [41, 3, 1, "", "load_task"], [41, 3, 1, "", "main"], [41, 3, 1, "", "prepare_data"], [41, 3, 1, "", "run"], [41, 3, 1, "", "save_model"], [41, 3, 1, "", "save_task"], [41, 3, 1, "", "train"]], "s3prl.problem.SuperbASR": [[41, 3, 1, "", "build_batch_sampler"], [41, 3, 1, "", "build_collate_fn"], [41, 3, 1, "", "build_dataset"], [41, 3, 1, "", "build_downstream"], [41, 3, 1, "", "build_featurizer"], [41, 3, 1, "", "build_model"], [41, 3, 1, "", "build_optimizer"], [41, 3, 1, "", "build_scheduler"], [41, 3, 1, "", "build_task"], [41, 3, 1, "", "build_tokenizer"], [41, 3, 1, "", "build_upstream"], [41, 3, 1, "", "default_config"], [41, 3, 1, "", "evaluate"], [41, 3, 1, "", "get_class_from_name"], [41, 3, 1, "", "load_model"], [41, 3, 1, "", "load_model_and_task"], [41, 3, 1, "", "load_task"], [41, 3, 1, "", "main"], [41, 3, 1, "", "prepare_data"], [41, 3, 1, "", "prepare_tokenizer_data"], [41, 3, 1, "", "run"], [41, 3, 1, "", "save_model"], [41, 3, 1, "", "save_task"], [41, 3, 1, "", "train"]], "s3prl.problem.SuperbASV": [[41, 3, 1, "", "build_batch_sampler"], [41, 3, 1, "", "build_collate_fn"], [41, 3, 1, "", "build_dataset"], [41, 3, 1, "", "build_downstream"], [41, 3, 1, "", "build_encoder"], [41, 3, 1, "", "build_featurizer"], [41, 3, 1, "", "build_model"], [41, 3, 1, "", "build_optimizer"], [41, 3, 1, "", "build_scheduler"], [41, 3, 1, "", "build_task"], [41, 3, 1, "", "build_upstream"], [41, 3, 1, "", "default_config"], [41, 3, 1, "", "evaluate"], [41, 3, 1, "", "get_class_from_name"], [41, 3, 1, "", "load_model"], [41, 3, 1, "", "load_model_and_task"], [41, 3, 1, "", "load_task"], [41, 3, 1, "", "main"], [41, 3, 1, "", "prepare_data"], [41, 3, 1, "", "run"], [41, 3, 1, "", "save_model"], [41, 3, 1, "", "save_task"], [41, 3, 1, "", "train"]], "s3prl.problem.SuperbER": [[41, 3, 1, "", "build_batch_sampler"], [41, 3, 1, "", "build_collate_fn"], [41, 3, 1, "", "build_dataset"], [41, 3, 1, "", "build_downstream"], [41, 3, 1, "", "build_encoder"], [41, 3, 1, "", "build_featurizer"], [41, 3, 1, "", "build_model"], [41, 3, 1, "", "build_optimizer"], [41, 3, 1, "", "build_scheduler"], [41, 3, 1, "", "build_task"], [41, 3, 1, "", "build_upstream"], [41, 3, 1, "", "default_config"], [41, 3, 1, "", "evaluate"], [41, 3, 1, "", "get_class_from_name"], [41, 3, 1, "", "load_model"], [41, 3, 1, "", "load_model_and_task"], [41, 3, 1, "", "load_task"], [41, 3, 1, "", "main"], [41, 3, 1, "", "prepare_data"], [41, 3, 1, "", "run"], [41, 3, 1, "", "save_model"], [41, 3, 1, "", "save_task"], [41, 3, 1, "", "train"]], "s3prl.problem.SuperbIC": [[41, 3, 1, "", "build_batch_sampler"], [41, 3, 1, "", "build_collate_fn"], [41, 3, 1, "", "build_dataset"], [41, 3, 1, "", "build_downstream"], [41, 3, 1, "", "build_encoder"], [41, 3, 1, "", "build_featurizer"], [41, 3, 1, "", "build_model"], [41, 3, 1, "", "build_optimizer"], [41, 3, 1, "", "build_scheduler"], [41, 3, 1, "", "build_task"], [41, 3, 1, "", "build_upstream"], [41, 3, 1, "", "default_config"], [41, 3, 1, "", "evaluate"], [41, 3, 1, "", "get_class_from_name"], [41, 3, 1, "", "load_model"], [41, 3, 1, "", "load_model_and_task"], [41, 3, 1, "", "load_task"], [41, 3, 1, "", "main"], [41, 3, 1, "", "prepare_data"], [41, 3, 1, "", "run"], [41, 3, 1, "", "save_model"], [41, 3, 1, "", "save_task"], [41, 3, 1, "", "train"]], "s3prl.problem.SuperbKS": [[41, 3, 1, "", "build_batch_sampler"], [41, 3, 1, "", "build_collate_fn"], [41, 3, 1, "", "build_dataset"], [41, 3, 1, "", "build_downstream"], [41, 3, 1, "", "build_encoder"], [41, 3, 1, "", "build_featurizer"], [41, 3, 1, "", "build_model"], [41, 3, 1, "", "build_optimizer"], [41, 3, 1, "", "build_scheduler"], [41, 3, 1, "", "build_task"], [41, 3, 1, "", "build_upstream"], [41, 3, 1, "", "default_config"], [41, 3, 1, "", "evaluate"], [41, 3, 1, "", "get_class_from_name"], [41, 3, 1, "", "load_model"], [41, 3, 1, "", "load_model_and_task"], [41, 3, 1, "", "load_task"], [41, 3, 1, "", "main"], [41, 3, 1, "", "prepare_data"], [41, 3, 1, "", "run"], [41, 3, 1, "", "save_model"], [41, 3, 1, "", "save_task"], [41, 3, 1, "", "train"]], "s3prl.problem.SuperbPR": [[41, 3, 1, "", "build_batch_sampler"], [41, 3, 1, "", "build_collate_fn"], [41, 3, 1, "", "build_dataset"], [41, 3, 1, "", "build_downstream"], [41, 3, 1, "", "build_featurizer"], [41, 3, 1, "", "build_model"], [41, 3, 1, "", "build_optimizer"], [41, 3, 1, "", "build_scheduler"], [41, 3, 1, "", "build_task"], [41, 3, 1, "", "build_tokenizer"], [41, 3, 1, "", "build_upstream"], [41, 3, 1, "", "default_config"], [41, 3, 1, "", "evaluate"], [41, 3, 1, "", "get_class_from_name"], [41, 3, 1, "", "load_model"], [41, 3, 1, "", "load_model_and_task"], [41, 3, 1, "", "load_task"], [41, 3, 1, "", "main"], [41, 3, 1, "", "prepare_data"], [41, 3, 1, "", "prepare_tokenizer_data"], [41, 3, 1, "", "run"], [41, 3, 1, "", "save_model"], [41, 3, 1, "", "save_task"], [41, 3, 1, "", "train"]], "s3prl.problem.SuperbSD": [[41, 3, 1, "", "build_batch_sampler"], [41, 3, 1, "", "build_collate_fn"], [41, 3, 1, "", "build_dataset"], [41, 3, 1, "", "build_downstream"], [41, 3, 1, "", "build_featurizer"], [41, 3, 1, "", "build_model"], [41, 3, 1, "", "build_optimizer"], [41, 3, 1, "", "build_scheduler"], [41, 3, 1, "", "build_task"], [41, 3, 1, "", "build_upstream"], [41, 3, 1, "", "default_config"], [41, 3, 1, "", "evaluate"], [41, 3, 1, "", "get_class_from_name"], [41, 3, 1, "", "load_model"], [41, 3, 1, "", "load_model_and_task"], [41, 3, 1, "", "load_task"], [41, 3, 1, "", "main"], [41, 3, 1, "", "prepare_data"], [41, 3, 1, "", "run"], [41, 3, 1, "", "save_model"], [41, 3, 1, "", "save_task"], [41, 3, 1, "", "scoring"], [41, 3, 1, "", "train"]], "s3prl.problem.SuperbSF": [[41, 3, 1, "", "build_batch_sampler"], [41, 3, 1, "", "build_collate_fn"], [41, 3, 1, "", "build_dataset"], [41, 3, 1, "", "build_downstream"], [41, 3, 1, "", "build_featurizer"], [41, 3, 1, "", "build_model"], [41, 3, 1, "", "build_optimizer"], [41, 3, 1, "", "build_scheduler"], [41, 3, 1, "", "build_task"], [41, 3, 1, "", "build_tokenizer"], [41, 3, 1, "", "build_upstream"], [41, 3, 1, "", "default_config"], [41, 3, 1, "", "evaluate"], [41, 3, 1, "", "get_class_from_name"], [41, 3, 1, "", "load_model"], [41, 3, 1, "", "load_model_and_task"], [41, 3, 1, "", "load_task"], [41, 3, 1, "", "main"], [41, 3, 1, "", "prepare_data"], [41, 3, 1, "", "prepare_tokenizer_data"], [41, 3, 1, "", "run"], [41, 3, 1, "", "save_model"], [41, 3, 1, "", "save_task"], [41, 3, 1, "", "train"]], "s3prl.problem.SuperbSID": [[41, 3, 1, "", "build_batch_sampler"], [41, 3, 1, "", "build_collate_fn"], [41, 3, 1, "", "build_dataset"], [41, 3, 1, "", "build_downstream"], [41, 3, 1, "", "build_encoder"], [41, 3, 1, "", "build_featurizer"], [41, 3, 1, "", "build_model"], [41, 3, 1, "", "build_optimizer"], [41, 3, 1, "", "build_scheduler"], [41, 3, 1, "", "build_task"], [41, 3, 1, "", "build_upstream"], [41, 3, 1, "", "default_config"], [41, 3, 1, "", "evaluate"], [41, 3, 1, "", "get_class_from_name"], [41, 3, 1, "", "load_model"], [41, 3, 1, "", "load_model_and_task"], [41, 3, 1, "", "load_task"], [41, 3, 1, "", "main"], [41, 3, 1, "", "prepare_data"], [41, 3, 1, "", "run"], [41, 3, 1, "", "save_model"], [41, 3, 1, "", "save_task"], [41, 3, 1, "", "train"]], "s3prl.problem.asr": [[42, 1, 1, "", "SuperbASR"], [42, 1, 1, "", "SuperbPR"], [42, 1, 1, "", "SuperbSF"], [43, 0, 0, "-", "run"], [44, 0, 0, "-", "superb_asr"], [45, 0, 0, "-", "superb_pr"], [46, 0, 0, "-", "superb_sf"]], "s3prl.problem.asr.SuperbASR": [[42, 3, 1, "", "build_batch_sampler"], [42, 3, 1, "", "build_collate_fn"], [42, 3, 1, "", "build_dataset"], [42, 3, 1, "", "build_downstream"], [42, 3, 1, "", "build_featurizer"], [42, 3, 1, "", "build_model"], [42, 3, 1, "", "build_optimizer"], [42, 3, 1, "", "build_scheduler"], [42, 3, 1, "", "build_task"], [42, 3, 1, "", "build_tokenizer"], [42, 3, 1, "", "build_upstream"], [42, 3, 1, "", "default_config"], [42, 3, 1, "", "evaluate"], [42, 3, 1, "", "get_class_from_name"], [42, 3, 1, "", "load_model"], [42, 3, 1, "", "load_model_and_task"], [42, 3, 1, "", "load_task"], [42, 3, 1, "", "main"], [42, 3, 1, "", "prepare_data"], [42, 3, 1, "", "prepare_tokenizer_data"], [42, 3, 1, "", "run"], [42, 3, 1, "", "save_model"], [42, 3, 1, "", "save_task"], [42, 3, 1, "", "train"]], "s3prl.problem.asr.SuperbPR": [[42, 3, 1, "", "build_batch_sampler"], [42, 3, 1, "", "build_collate_fn"], [42, 3, 1, "", "build_dataset"], [42, 3, 1, "", "build_downstream"], [42, 3, 1, "", "build_featurizer"], [42, 3, 1, "", "build_model"], [42, 3, 1, "", "build_optimizer"], [42, 3, 1, "", "build_scheduler"], [42, 3, 1, "", "build_task"], [42, 3, 1, "", "build_tokenizer"], [42, 3, 1, "", "build_upstream"], [42, 3, 1, "", "default_config"], [42, 3, 1, "", "evaluate"], [42, 3, 1, "", "get_class_from_name"], [42, 3, 1, "", "load_model"], [42, 3, 1, "", "load_model_and_task"], [42, 3, 1, "", "load_task"], [42, 3, 1, "", "main"], [42, 3, 1, "", "prepare_data"], [42, 3, 1, "", "prepare_tokenizer_data"], [42, 3, 1, "", "run"], [42, 3, 1, "", "save_model"], [42, 3, 1, "", "save_task"], [42, 3, 1, "", "train"]], "s3prl.problem.asr.SuperbSF": [[42, 3, 1, "", "build_batch_sampler"], [42, 3, 1, "", "build_collate_fn"], [42, 3, 1, "", "build_dataset"], [42, 3, 1, "", "build_downstream"], [42, 3, 1, "", "build_featurizer"], [42, 3, 1, "", "build_model"], [42, 3, 1, "", "build_optimizer"], [42, 3, 1, "", "build_scheduler"], [42, 3, 1, "", "build_task"], [42, 3, 1, "", "build_tokenizer"], [42, 3, 1, "", "build_upstream"], [42, 3, 1, "", "default_config"], [42, 3, 1, "", "evaluate"], [42, 3, 1, "", "get_class_from_name"], [42, 3, 1, "", "load_model"], [42, 3, 1, "", "load_model_and_task"], [42, 3, 1, "", "load_task"], [42, 3, 1, "", "main"], [42, 3, 1, "", "prepare_data"], [42, 3, 1, "", "prepare_tokenizer_data"], [42, 3, 1, "", "run"], [42, 3, 1, "", "save_model"], [42, 3, 1, "", "save_task"], [42, 3, 1, "", "train"]], "s3prl.problem.asr.run": [[43, 1, 1, "", "ASR"]], "s3prl.problem.asr.run.ASR": [[43, 3, 1, "", "build_collate_fn"], [43, 3, 1, "", "build_featurizer"], [43, 3, 1, "", "build_model"], [43, 3, 1, "", "build_optimizer"], [43, 3, 1, "", "build_scheduler"], [43, 3, 1, "", "build_task"], [43, 3, 1, "", "build_upstream"], [43, 3, 1, "", "evaluate"], [43, 3, 1, "", "get_class_from_name"], [43, 3, 1, "", "load_model"], [43, 3, 1, "", "load_model_and_task"], [43, 3, 1, "", "load_task"], [43, 3, 1, "", "main"], [43, 3, 1, "", "run"], [43, 3, 1, "", "save_model"], [43, 3, 1, "", "save_task"], [43, 3, 1, "", "train"]], "s3prl.problem.asr.superb_asr": [[44, 1, 1, "", "SuperbASR"], [44, 4, 1, "", "prepare_common_tokenizer"], [44, 4, 1, "", "prepare_librispeech"]], "s3prl.problem.asr.superb_asr.SuperbASR": [[44, 3, 1, "", "build_batch_sampler"], [44, 3, 1, "", "build_collate_fn"], [44, 3, 1, "", "build_dataset"], [44, 3, 1, "", "build_downstream"], [44, 3, 1, "", "build_featurizer"], [44, 3, 1, "", "build_model"], [44, 3, 1, "", "build_optimizer"], [44, 3, 1, "", "build_scheduler"], [44, 3, 1, "", "build_task"], [44, 3, 1, "", "build_tokenizer"], [44, 3, 1, "", "build_upstream"], [44, 3, 1, "", "default_config"], [44, 3, 1, "", "evaluate"], [44, 3, 1, "", "get_class_from_name"], [44, 3, 1, "", "load_model"], [44, 3, 1, "", "load_model_and_task"], [44, 3, 1, "", "load_task"], [44, 3, 1, "", "main"], [44, 3, 1, "", "prepare_data"], [44, 3, 1, "", "prepare_tokenizer_data"], [44, 3, 1, "", "run"], [44, 3, 1, "", "save_model"], [44, 3, 1, "", "save_task"], [44, 3, 1, "", "train"]], "s3prl.problem.asr.superb_pr": [[45, 1, 1, "", "SuperbPR"]], "s3prl.problem.asr.superb_pr.SuperbPR": [[45, 3, 1, "", "build_batch_sampler"], [45, 3, 1, "", "build_collate_fn"], [45, 3, 1, "", "build_dataset"], [45, 3, 1, "", "build_downstream"], [45, 3, 1, "", "build_featurizer"], [45, 3, 1, "", "build_model"], [45, 3, 1, "", "build_optimizer"], [45, 3, 1, "", "build_scheduler"], [45, 3, 1, "", "build_task"], [45, 3, 1, "", "build_tokenizer"], [45, 3, 1, "", "build_upstream"], [45, 3, 1, "", "default_config"], [45, 3, 1, "", "evaluate"], [45, 3, 1, "", "get_class_from_name"], [45, 3, 1, "", "load_model"], [45, 3, 1, "", "load_model_and_task"], [45, 3, 1, "", "load_task"], [45, 3, 1, "", "main"], [45, 3, 1, "", "prepare_data"], [45, 3, 1, "", "prepare_tokenizer_data"], [45, 3, 1, "", "run"], [45, 3, 1, "", "save_model"], [45, 3, 1, "", "save_task"], [45, 3, 1, "", "train"]], "s3prl.problem.asr.superb_sf": [[46, 1, 1, "", "SuperbSF"], [46, 4, 1, "", "audio_snips_for_slot_filling"]], "s3prl.problem.asr.superb_sf.SuperbSF": [[46, 3, 1, "", "build_batch_sampler"], [46, 3, 1, "", "build_collate_fn"], [46, 3, 1, "", "build_dataset"], [46, 3, 1, "", "build_downstream"], [46, 3, 1, "", "build_featurizer"], [46, 3, 1, "", "build_model"], [46, 3, 1, "", "build_optimizer"], [46, 3, 1, "", "build_scheduler"], [46, 3, 1, "", "build_task"], [46, 3, 1, "", "build_tokenizer"], [46, 3, 1, "", "build_upstream"], [46, 3, 1, "", "default_config"], [46, 3, 1, "", "evaluate"], [46, 3, 1, "", "get_class_from_name"], [46, 3, 1, "", "load_model"], [46, 3, 1, "", "load_model_and_task"], [46, 3, 1, "", "load_task"], [46, 3, 1, "", "main"], [46, 3, 1, "", "prepare_data"], [46, 3, 1, "", "prepare_tokenizer_data"], [46, 3, 1, "", "run"], [46, 3, 1, "", "save_model"], [46, 3, 1, "", "save_task"], [46, 3, 1, "", "train"]], "s3prl.problem.asv": [[47, 1, 1, "", "SuperbASV"], [48, 0, 0, "-", "run"], [49, 0, 0, "-", "superb_asv"]], "s3prl.problem.asv.SuperbASV": [[47, 3, 1, "", "build_batch_sampler"], [47, 3, 1, "", "build_collate_fn"], [47, 3, 1, "", "build_dataset"], [47, 3, 1, "", "build_downstream"], [47, 3, 1, "", "build_encoder"], [47, 3, 1, "", "build_featurizer"], [47, 3, 1, "", "build_model"], [47, 3, 1, "", "build_optimizer"], [47, 3, 1, "", "build_scheduler"], [47, 3, 1, "", "build_task"], [47, 3, 1, "", "build_upstream"], [47, 3, 1, "", "default_config"], [47, 3, 1, "", "evaluate"], [47, 3, 1, "", "get_class_from_name"], [47, 3, 1, "", "load_model"], [47, 3, 1, "", "load_model_and_task"], [47, 3, 1, "", "load_task"], [47, 3, 1, "", "main"], [47, 3, 1, "", "prepare_data"], [47, 3, 1, "", "run"], [47, 3, 1, "", "save_model"], [47, 3, 1, "", "save_task"], [47, 3, 1, "", "train"]], "s3prl.problem.asv.run": [[48, 1, 1, "", "ASV"]], "s3prl.problem.asv.run.ASV": [[48, 3, 1, "", "build_collate_fn"], [48, 3, 1, "", "build_featurizer"], [48, 3, 1, "", "build_model"], [48, 3, 1, "", "build_optimizer"], [48, 3, 1, "", "build_scheduler"], [48, 3, 1, "", "build_task"], [48, 3, 1, "", "build_upstream"], [48, 3, 1, "", "evaluate"], [48, 3, 1, "", "get_class_from_name"], [48, 3, 1, "", "load_model"], [48, 3, 1, "", "load_model_and_task"], [48, 3, 1, "", "load_task"], [48, 3, 1, "", "main"], [48, 3, 1, "", "run"], [48, 3, 1, "", "save_model"], [48, 3, 1, "", "save_task"], [48, 3, 1, "", "train"]], "s3prl.problem.asv.superb_asv": [[49, 1, 1, "", "SuperbASV"], [49, 4, 1, "", "prepare_voxceleb1_for_sv"]], "s3prl.problem.asv.superb_asv.SuperbASV": [[49, 3, 1, "", "build_batch_sampler"], [49, 3, 1, "", "build_collate_fn"], [49, 3, 1, "", "build_dataset"], [49, 3, 1, "", "build_downstream"], [49, 3, 1, "", "build_encoder"], [49, 3, 1, "", "build_featurizer"], [49, 3, 1, "", "build_model"], [49, 3, 1, "", "build_optimizer"], [49, 3, 1, "", "build_scheduler"], [49, 3, 1, "", "build_task"], [49, 3, 1, "", "build_upstream"], [49, 3, 1, "", "default_config"], [49, 3, 1, "", "evaluate"], [49, 3, 1, "", "get_class_from_name"], [49, 3, 1, "", "load_model"], [49, 3, 1, "", "load_model_and_task"], [49, 3, 1, "", "load_task"], [49, 3, 1, "", "main"], [49, 3, 1, "", "prepare_data"], [49, 3, 1, "", "run"], [49, 3, 1, "", "save_model"], [49, 3, 1, "", "save_task"], [49, 3, 1, "", "train"]], "s3prl.problem.base": [[50, 1, 1, "", "Problem"]], "s3prl.problem.base.Problem": [[50, 3, 1, "", "build_collate_fn"], [50, 3, 1, "", "build_featurizer"], [50, 3, 1, "", "build_model"], [50, 3, 1, "", "build_optimizer"], [50, 3, 1, "", "build_scheduler"], [50, 3, 1, "", "build_upstream"], [50, 3, 1, "", "evaluate"], [50, 3, 1, "", "get_class_from_name"], [50, 3, 1, "", "load_model"], [50, 3, 1, "", "load_model_and_task"], [50, 3, 1, "", "load_task"], [50, 3, 1, "", "main"], [50, 3, 1, "", "save_model"], [50, 3, 1, "", "save_task"], [50, 3, 1, "", "train"]], "s3prl.problem.common": [[51, 1, 1, "", "HearBeijingOpera"], [51, 1, 1, "", "HearCremaD"], [51, 1, 1, "", "HearDcase2016Task2"], [51, 1, 1, "", "HearESC50"], [51, 1, 1, "", "HearFSD"], [51, 1, 1, "", "HearGSC5hr"], [51, 1, 1, "", "HearGtzan"], [51, 1, 1, "", "HearGtzanMusicSpeech"], [51, 1, 1, "", "HearGunshot"], [51, 1, 1, "", "HearLibriCount"], [51, 1, 1, "", "HearMaestro"], [51, 1, 1, "", "HearNsynth5hr"], [51, 1, 1, "", "HearStroke"], [51, 1, 1, "", "HearTonic"], [51, 1, 1, "", "HearVocal"], [51, 1, 1, "", "HearVoxLingual"], [51, 1, 1, "", "SuperbER"], [51, 1, 1, "", "SuperbIC"], [51, 1, 1, "", "SuperbKS"], [51, 1, 1, "", "SuperbSID"], [52, 0, 0, "-", "hear_beijing_opera"], [53, 0, 0, "-", "hear_cremad"], [54, 0, 0, "-", "hear_dcase_2016_task2"], [55, 0, 0, "-", "hear_esc50"], [56, 0, 0, "-", "hear_fsd"], [57, 0, 0, "-", "hear_gsc5hr"], [58, 0, 0, "-", "hear_gtzan"], [59, 0, 0, "-", "hear_gtzan_music_speech"], [60, 0, 0, "-", "hear_gunshot"], [61, 0, 0, "-", "hear_libricount"], [62, 0, 0, "-", "hear_maestro"], [63, 0, 0, "-", "hear_nsynth5hr"], [64, 0, 0, "-", "hear_stroke"], [65, 0, 0, "-", "hear_tonic"], [66, 0, 0, "-", "hear_vocal"], [67, 0, 0, "-", "hear_vox_lingual"], [68, 0, 0, "-", "run"], [69, 0, 0, "-", "superb_er"], [70, 0, 0, "-", "superb_ic"], [71, 0, 0, "-", "superb_ks"], [72, 0, 0, "-", "superb_sid"]], "s3prl.problem.common.HearBeijingOpera": [[51, 3, 1, "", "build_batch_sampler"], [51, 3, 1, "", "build_collate_fn"], [51, 3, 1, "", "build_dataset"], [51, 3, 1, "", "build_downstream"], [51, 3, 1, "", "build_encoder"], [51, 3, 1, "", "build_featurizer"], [51, 3, 1, "", "build_model"], [51, 3, 1, "", "build_optimizer"], [51, 3, 1, "", "build_scheduler"], [51, 3, 1, "", "build_task"], [51, 3, 1, "", "build_upstream"], [51, 3, 1, "", "default_config"], [51, 3, 1, "", "evaluate"], [51, 3, 1, "", "get_class_from_name"], [51, 3, 1, "", "load_model"], [51, 3, 1, "", "load_model_and_task"], [51, 3, 1, "", "load_task"], [51, 3, 1, "", "main"], [51, 3, 1, "", "prepare_data"], [51, 3, 1, "", "run"], [51, 3, 1, "", "save_model"], [51, 3, 1, "", "save_task"], [51, 3, 1, "", "train"]], "s3prl.problem.common.HearCremaD": [[51, 3, 1, "", "build_batch_sampler"], [51, 3, 1, "", "build_collate_fn"], [51, 3, 1, "", "build_dataset"], [51, 3, 1, "", "build_downstream"], [51, 3, 1, "", "build_encoder"], [51, 3, 1, "", "build_featurizer"], [51, 3, 1, "", "build_model"], [51, 3, 1, "", "build_optimizer"], [51, 3, 1, "", "build_scheduler"], [51, 3, 1, "", "build_task"], [51, 3, 1, "", "build_upstream"], [51, 3, 1, "", "default_config"], [51, 3, 1, "", "evaluate"], [51, 3, 1, "", "get_class_from_name"], [51, 3, 1, "", "load_model"], [51, 3, 1, "", "load_model_and_task"], [51, 3, 1, "", "load_task"], [51, 3, 1, "", "main"], [51, 3, 1, "", "prepare_data"], [51, 3, 1, "", "run"], [51, 3, 1, "", "save_model"], [51, 3, 1, "", "save_task"], [51, 3, 1, "", "train"]], "s3prl.problem.common.HearDcase2016Task2": [[51, 3, 1, "", "build_batch_sampler"], [51, 3, 1, "", "build_collate_fn"], [51, 3, 1, "", "build_dataset"], [51, 3, 1, "", "build_downstream"], [51, 3, 1, "", "build_encoder"], [51, 3, 1, "", "build_featurizer"], [51, 3, 1, "", "build_model"], [51, 3, 1, "", "build_optimizer"], [51, 3, 1, "", "build_scheduler"], [51, 3, 1, "", "build_task"], [51, 3, 1, "", "build_upstream"], [51, 3, 1, "", "default_config"], [51, 3, 1, "", "evaluate"], [51, 3, 1, "", "get_class_from_name"], [51, 3, 1, "", "load_model"], [51, 3, 1, "", "load_model_and_task"], [51, 3, 1, "", "load_task"], [51, 3, 1, "", "main"], [51, 3, 1, "", "prepare_data"], [51, 3, 1, "", "run"], [51, 3, 1, "", "save_model"], [51, 3, 1, "", "save_task"], [51, 3, 1, "", "train"]], "s3prl.problem.common.HearESC50": [[51, 3, 1, "", "build_batch_sampler"], [51, 3, 1, "", "build_collate_fn"], [51, 3, 1, "", "build_dataset"], [51, 3, 1, "", "build_downstream"], [51, 3, 1, "", "build_encoder"], [51, 3, 1, "", "build_featurizer"], [51, 3, 1, "", "build_model"], [51, 3, 1, "", "build_optimizer"], [51, 3, 1, "", "build_scheduler"], [51, 3, 1, "", "build_task"], [51, 3, 1, "", "build_upstream"], [51, 3, 1, "", "default_config"], [51, 3, 1, "", "evaluate"], [51, 3, 1, "", "get_class_from_name"], [51, 3, 1, "", "load_model"], [51, 3, 1, "", "load_model_and_task"], [51, 3, 1, "", "load_task"], [51, 3, 1, "", "main"], [51, 3, 1, "", "prepare_data"], [51, 3, 1, "", "run"], [51, 3, 1, "", "save_model"], [51, 3, 1, "", "save_task"], [51, 3, 1, "", "train"]], "s3prl.problem.common.HearFSD": [[51, 3, 1, "", "build_batch_sampler"], [51, 3, 1, "", "build_collate_fn"], [51, 3, 1, "", "build_dataset"], [51, 3, 1, "", "build_downstream"], [51, 3, 1, "", "build_encoder"], [51, 3, 1, "", "build_featurizer"], [51, 3, 1, "", "build_model"], [51, 3, 1, "", "build_optimizer"], [51, 3, 1, "", "build_scheduler"], [51, 3, 1, "", "build_task"], [51, 3, 1, "", "build_upstream"], [51, 3, 1, "", "default_config"], [51, 3, 1, "", "evaluate"], [51, 3, 1, "", "get_class_from_name"], [51, 3, 1, "", "load_model"], [51, 3, 1, "", "load_model_and_task"], [51, 3, 1, "", "load_task"], [51, 3, 1, "", "main"], [51, 3, 1, "", "prepare_data"], [51, 3, 1, "", "run"], [51, 3, 1, "", "save_model"], [51, 3, 1, "", "save_task"], [51, 3, 1, "", "train"]], "s3prl.problem.common.HearGSC5hr": [[51, 3, 1, "", "build_batch_sampler"], [51, 3, 1, "", "build_collate_fn"], [51, 3, 1, "", "build_dataset"], [51, 3, 1, "", "build_downstream"], [51, 3, 1, "", "build_encoder"], [51, 3, 1, "", "build_featurizer"], [51, 3, 1, "", "build_model"], [51, 3, 1, "", "build_optimizer"], [51, 3, 1, "", "build_scheduler"], [51, 3, 1, "", "build_task"], [51, 3, 1, "", "build_upstream"], [51, 3, 1, "", "default_config"], [51, 3, 1, "", "evaluate"], [51, 3, 1, "", "get_class_from_name"], [51, 3, 1, "", "load_model"], [51, 3, 1, "", "load_model_and_task"], [51, 3, 1, "", "load_task"], [51, 3, 1, "", "main"], [51, 3, 1, "", "prepare_data"], [51, 3, 1, "", "run"], [51, 3, 1, "", "save_model"], [51, 3, 1, "", "save_task"], [51, 3, 1, "", "train"]], "s3prl.problem.common.HearGtzan": [[51, 3, 1, "", "build_batch_sampler"], [51, 3, 1, "", "build_collate_fn"], [51, 3, 1, "", "build_dataset"], [51, 3, 1, "", "build_downstream"], [51, 3, 1, "", "build_encoder"], [51, 3, 1, "", "build_featurizer"], [51, 3, 1, "", "build_model"], [51, 3, 1, "", "build_optimizer"], [51, 3, 1, "", "build_scheduler"], [51, 3, 1, "", "build_task"], [51, 3, 1, "", "build_upstream"], [51, 3, 1, "", "default_config"], [51, 3, 1, "", "evaluate"], [51, 3, 1, "", "get_class_from_name"], [51, 3, 1, "", "load_model"], [51, 3, 1, "", "load_model_and_task"], [51, 3, 1, "", "load_task"], [51, 3, 1, "", "main"], [51, 3, 1, "", "prepare_data"], [51, 3, 1, "", "run"], [51, 3, 1, "", "save_model"], [51, 3, 1, "", "save_task"], [51, 3, 1, "", "train"]], "s3prl.problem.common.HearGtzanMusicSpeech": [[51, 3, 1, "", "build_batch_sampler"], [51, 3, 1, "", "build_collate_fn"], [51, 3, 1, "", "build_dataset"], [51, 3, 1, "", "build_downstream"], [51, 3, 1, "", "build_encoder"], [51, 3, 1, "", "build_featurizer"], [51, 3, 1, "", "build_model"], [51, 3, 1, "", "build_optimizer"], [51, 3, 1, "", "build_scheduler"], [51, 3, 1, "", "build_task"], [51, 3, 1, "", "build_upstream"], [51, 3, 1, "", "default_config"], [51, 3, 1, "", "evaluate"], [51, 3, 1, "", "get_class_from_name"], [51, 3, 1, "", "load_model"], [51, 3, 1, "", "load_model_and_task"], [51, 3, 1, "", "load_task"], [51, 3, 1, "", "main"], [51, 3, 1, "", "prepare_data"], [51, 3, 1, "", "run"], [51, 3, 1, "", "save_model"], [51, 3, 1, "", "save_task"], [51, 3, 1, "", "train"]], "s3prl.problem.common.HearGunshot": [[51, 3, 1, "", "build_batch_sampler"], [51, 3, 1, "", "build_collate_fn"], [51, 3, 1, "", "build_dataset"], [51, 3, 1, "", "build_downstream"], [51, 3, 1, "", "build_encoder"], [51, 3, 1, "", "build_featurizer"], [51, 3, 1, "", "build_model"], [51, 3, 1, "", "build_optimizer"], [51, 3, 1, "", "build_scheduler"], [51, 3, 1, "", "build_task"], [51, 3, 1, "", "build_upstream"], [51, 3, 1, "", "default_config"], [51, 3, 1, "", "evaluate"], [51, 3, 1, "", "get_class_from_name"], [51, 3, 1, "", "load_model"], [51, 3, 1, "", "load_model_and_task"], [51, 3, 1, "", "load_task"], [51, 3, 1, "", "main"], [51, 3, 1, "", "prepare_data"], [51, 3, 1, "", "run"], [51, 3, 1, "", "save_model"], [51, 3, 1, "", "save_task"], [51, 3, 1, "", "train"]], "s3prl.problem.common.HearLibriCount": [[51, 3, 1, "", "build_batch_sampler"], [51, 3, 1, "", "build_collate_fn"], [51, 3, 1, "", "build_dataset"], [51, 3, 1, "", "build_downstream"], [51, 3, 1, "", "build_encoder"], [51, 3, 1, "", "build_featurizer"], [51, 3, 1, "", "build_model"], [51, 3, 1, "", "build_optimizer"], [51, 3, 1, "", "build_scheduler"], [51, 3, 1, "", "build_task"], [51, 3, 1, "", "build_upstream"], [51, 3, 1, "", "default_config"], [51, 3, 1, "", "evaluate"], [51, 3, 1, "", "get_class_from_name"], [51, 3, 1, "", "load_model"], [51, 3, 1, "", "load_model_and_task"], [51, 3, 1, "", "load_task"], [51, 3, 1, "", "main"], [51, 3, 1, "", "prepare_data"], [51, 3, 1, "", "run"], [51, 3, 1, "", "save_model"], [51, 3, 1, "", "save_task"], [51, 3, 1, "", "train"]], "s3prl.problem.common.HearMaestro": [[51, 3, 1, "", "build_batch_sampler"], [51, 3, 1, "", "build_collate_fn"], [51, 3, 1, "", "build_dataset"], [51, 3, 1, "", "build_downstream"], [51, 3, 1, "", "build_encoder"], [51, 3, 1, "", "build_featurizer"], [51, 3, 1, "", "build_model"], [51, 3, 1, "", "build_optimizer"], [51, 3, 1, "", "build_scheduler"], [51, 3, 1, "", "build_task"], [51, 3, 1, "", "build_upstream"], [51, 3, 1, "", "default_config"], [51, 3, 1, "", "evaluate"], [51, 3, 1, "", "get_class_from_name"], [51, 3, 1, "", "load_model"], [51, 3, 1, "", "load_model_and_task"], [51, 3, 1, "", "load_task"], [51, 3, 1, "", "main"], [51, 3, 1, "", "prepare_data"], [51, 3, 1, "", "run"], [51, 3, 1, "", "save_model"], [51, 3, 1, "", "save_task"], [51, 3, 1, "", "train"]], "s3prl.problem.common.HearNsynth5hr": [[51, 3, 1, "", "build_batch_sampler"], [51, 3, 1, "", "build_collate_fn"], [51, 3, 1, "", "build_dataset"], [51, 3, 1, "", "build_downstream"], [51, 3, 1, "", "build_encoder"], [51, 3, 1, "", "build_featurizer"], [51, 3, 1, "", "build_model"], [51, 3, 1, "", "build_optimizer"], [51, 3, 1, "", "build_scheduler"], [51, 3, 1, "", "build_task"], [51, 3, 1, "", "build_upstream"], [51, 3, 1, "", "default_config"], [51, 3, 1, "", "evaluate"], [51, 3, 1, "", "get_class_from_name"], [51, 3, 1, "", "load_model"], [51, 3, 1, "", "load_model_and_task"], [51, 3, 1, "", "load_task"], [51, 3, 1, "", "main"], [51, 3, 1, "", "prepare_data"], [51, 3, 1, "", "run"], [51, 3, 1, "", "save_model"], [51, 3, 1, "", "save_task"], [51, 3, 1, "", "train"]], "s3prl.problem.common.HearStroke": [[51, 3, 1, "", "build_batch_sampler"], [51, 3, 1, "", "build_collate_fn"], [51, 3, 1, "", "build_dataset"], [51, 3, 1, "", "build_downstream"], [51, 3, 1, "", "build_encoder"], [51, 3, 1, "", "build_featurizer"], [51, 3, 1, "", "build_model"], [51, 3, 1, "", "build_optimizer"], [51, 3, 1, "", "build_scheduler"], [51, 3, 1, "", "build_task"], [51, 3, 1, "", "build_upstream"], [51, 3, 1, "", "default_config"], [51, 3, 1, "", "evaluate"], [51, 3, 1, "", "get_class_from_name"], [51, 3, 1, "", "load_model"], [51, 3, 1, "", "load_model_and_task"], [51, 3, 1, "", "load_task"], [51, 3, 1, "", "main"], [51, 3, 1, "", "prepare_data"], [51, 3, 1, "", "run"], [51, 3, 1, "", "save_model"], [51, 3, 1, "", "save_task"], [51, 3, 1, "", "train"]], "s3prl.problem.common.HearTonic": [[51, 3, 1, "", "build_batch_sampler"], [51, 3, 1, "", "build_collate_fn"], [51, 3, 1, "", "build_dataset"], [51, 3, 1, "", "build_downstream"], [51, 3, 1, "", "build_encoder"], [51, 3, 1, "", "build_featurizer"], [51, 3, 1, "", "build_model"], [51, 3, 1, "", "build_optimizer"], [51, 3, 1, "", "build_scheduler"], [51, 3, 1, "", "build_task"], [51, 3, 1, "", "build_upstream"], [51, 3, 1, "", "default_config"], [51, 3, 1, "", "evaluate"], [51, 3, 1, "", "get_class_from_name"], [51, 3, 1, "", "load_model"], [51, 3, 1, "", "load_model_and_task"], [51, 3, 1, "", "load_task"], [51, 3, 1, "", "main"], [51, 3, 1, "", "prepare_data"], [51, 3, 1, "", "run"], [51, 3, 1, "", "save_model"], [51, 3, 1, "", "save_task"], [51, 3, 1, "", "train"]], "s3prl.problem.common.HearVocal": [[51, 3, 1, "", "build_batch_sampler"], [51, 3, 1, "", "build_collate_fn"], [51, 3, 1, "", "build_dataset"], [51, 3, 1, "", "build_downstream"], [51, 3, 1, "", "build_encoder"], [51, 3, 1, "", "build_featurizer"], [51, 3, 1, "", "build_model"], [51, 3, 1, "", "build_optimizer"], [51, 3, 1, "", "build_scheduler"], [51, 3, 1, "", "build_task"], [51, 3, 1, "", "build_upstream"], [51, 3, 1, "", "default_config"], [51, 3, 1, "", "evaluate"], [51, 3, 1, "", "get_class_from_name"], [51, 3, 1, "", "load_model"], [51, 3, 1, "", "load_model_and_task"], [51, 3, 1, "", "load_task"], [51, 3, 1, "", "main"], [51, 3, 1, "", "prepare_data"], [51, 3, 1, "", "run"], [51, 3, 1, "", "save_model"], [51, 3, 1, "", "save_task"], [51, 3, 1, "", "train"]], "s3prl.problem.common.HearVoxLingual": [[51, 3, 1, "", "build_batch_sampler"], [51, 3, 1, "", "build_collate_fn"], [51, 3, 1, "", "build_dataset"], [51, 3, 1, "", "build_downstream"], [51, 3, 1, "", "build_encoder"], [51, 3, 1, "", "build_featurizer"], [51, 3, 1, "", "build_model"], [51, 3, 1, "", "build_optimizer"], [51, 3, 1, "", "build_scheduler"], [51, 3, 1, "", "build_task"], [51, 3, 1, "", "build_upstream"], [51, 3, 1, "", "default_config"], [51, 3, 1, "", "evaluate"], [51, 3, 1, "", "get_class_from_name"], [51, 3, 1, "", "load_model"], [51, 3, 1, "", "load_model_and_task"], [51, 3, 1, "", "load_task"], [51, 3, 1, "", "main"], [51, 3, 1, "", "prepare_data"], [51, 3, 1, "", "run"], [51, 3, 1, "", "save_model"], [51, 3, 1, "", "save_task"], [51, 3, 1, "", "train"]], "s3prl.problem.common.SuperbER": [[51, 3, 1, "", "build_batch_sampler"], [51, 3, 1, "", "build_collate_fn"], [51, 3, 1, "", "build_dataset"], [51, 3, 1, "", "build_downstream"], [51, 3, 1, "", "build_encoder"], [51, 3, 1, "", "build_featurizer"], [51, 3, 1, "", "build_model"], [51, 3, 1, "", "build_optimizer"], [51, 3, 1, "", "build_scheduler"], [51, 3, 1, "", "build_task"], [51, 3, 1, "", "build_upstream"], [51, 3, 1, "", "default_config"], [51, 3, 1, "", "evaluate"], [51, 3, 1, "", "get_class_from_name"], [51, 3, 1, "", "load_model"], [51, 3, 1, "", "load_model_and_task"], [51, 3, 1, "", "load_task"], [51, 3, 1, "", "main"], [51, 3, 1, "", "prepare_data"], [51, 3, 1, "", "run"], [51, 3, 1, "", "save_model"], [51, 3, 1, "", "save_task"], [51, 3, 1, "", "train"]], "s3prl.problem.common.SuperbIC": [[51, 3, 1, "", "build_batch_sampler"], [51, 3, 1, "", "build_collate_fn"], [51, 3, 1, "", "build_dataset"], [51, 3, 1, "", "build_downstream"], [51, 3, 1, "", "build_encoder"], [51, 3, 1, "", "build_featurizer"], [51, 3, 1, "", "build_model"], [51, 3, 1, "", "build_optimizer"], [51, 3, 1, "", "build_scheduler"], [51, 3, 1, "", "build_task"], [51, 3, 1, "", "build_upstream"], [51, 3, 1, "", "default_config"], [51, 3, 1, "", "evaluate"], [51, 3, 1, "", "get_class_from_name"], [51, 3, 1, "", "load_model"], [51, 3, 1, "", "load_model_and_task"], [51, 3, 1, "", "load_task"], [51, 3, 1, "", "main"], [51, 3, 1, "", "prepare_data"], [51, 3, 1, "", "run"], [51, 3, 1, "", "save_model"], [51, 3, 1, "", "save_task"], [51, 3, 1, "", "train"]], "s3prl.problem.common.SuperbKS": [[51, 3, 1, "", "build_batch_sampler"], [51, 3, 1, "", "build_collate_fn"], [51, 3, 1, "", "build_dataset"], [51, 3, 1, "", "build_downstream"], [51, 3, 1, "", "build_encoder"], [51, 3, 1, "", "build_featurizer"], [51, 3, 1, "", "build_model"], [51, 3, 1, "", "build_optimizer"], [51, 3, 1, "", "build_scheduler"], [51, 3, 1, "", "build_task"], [51, 3, 1, "", "build_upstream"], [51, 3, 1, "", "default_config"], [51, 3, 1, "", "evaluate"], [51, 3, 1, "", "get_class_from_name"], [51, 3, 1, "", "load_model"], [51, 3, 1, "", "load_model_and_task"], [51, 3, 1, "", "load_task"], [51, 3, 1, "", "main"], [51, 3, 1, "", "prepare_data"], [51, 3, 1, "", "run"], [51, 3, 1, "", "save_model"], [51, 3, 1, "", "save_task"], [51, 3, 1, "", "train"]], "s3prl.problem.common.SuperbSID": [[51, 3, 1, "", "build_batch_sampler"], [51, 3, 1, "", "build_collate_fn"], [51, 3, 1, "", "build_dataset"], [51, 3, 1, "", "build_downstream"], [51, 3, 1, "", "build_encoder"], [51, 3, 1, "", "build_featurizer"], [51, 3, 1, "", "build_model"], [51, 3, 1, "", "build_optimizer"], [51, 3, 1, "", "build_scheduler"], [51, 3, 1, "", "build_task"], [51, 3, 1, "", "build_upstream"], [51, 3, 1, "", "default_config"], [51, 3, 1, "", "evaluate"], [51, 3, 1, "", "get_class_from_name"], [51, 3, 1, "", "load_model"], [51, 3, 1, "", "load_model_and_task"], [51, 3, 1, "", "load_task"], [51, 3, 1, "", "main"], [51, 3, 1, "", "prepare_data"], [51, 3, 1, "", "run"], [51, 3, 1, "", "save_model"], [51, 3, 1, "", "save_task"], [51, 3, 1, "", "train"]], "s3prl.problem.common.hear_beijing_opera": [[52, 1, 1, "", "HearBeijingOpera"], [52, 1, 1, "", "HearESC50"]], "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera": [[52, 3, 1, "", "build_batch_sampler"], [52, 3, 1, "", "build_collate_fn"], [52, 3, 1, "", "build_dataset"], [52, 3, 1, "", "build_downstream"], [52, 3, 1, "", "build_encoder"], [52, 3, 1, "", "build_featurizer"], [52, 3, 1, "", "build_model"], [52, 3, 1, "", "build_optimizer"], [52, 3, 1, "", "build_scheduler"], [52, 3, 1, "", "build_task"], [52, 3, 1, "", "build_upstream"], [52, 3, 1, "", "default_config"], [52, 3, 1, "", "evaluate"], [52, 3, 1, "", "get_class_from_name"], [52, 3, 1, "", "load_model"], [52, 3, 1, "", "load_model_and_task"], [52, 3, 1, "", "load_task"], [52, 3, 1, "", "main"], [52, 3, 1, "", "prepare_data"], [52, 3, 1, "", "run"], [52, 3, 1, "", "save_model"], [52, 3, 1, "", "save_task"], [52, 3, 1, "", "train"]], "s3prl.problem.common.hear_beijing_opera.HearESC50": [[52, 3, 1, "", "build_batch_sampler"], [52, 3, 1, "", "build_collate_fn"], [52, 3, 1, "", "build_dataset"], [52, 3, 1, "", "build_downstream"], [52, 3, 1, "", "build_encoder"], [52, 3, 1, "", "build_featurizer"], [52, 3, 1, "", "build_model"], [52, 3, 1, "", "build_optimizer"], [52, 3, 1, "", "build_scheduler"], [52, 3, 1, "", "build_task"], [52, 3, 1, "", "build_upstream"], [52, 3, 1, "", "default_config"], [52, 3, 1, "", "evaluate"], [52, 3, 1, "", "get_class_from_name"], [52, 3, 1, "", "load_model"], [52, 3, 1, "", "load_model_and_task"], [52, 3, 1, "", "load_task"], [52, 3, 1, "", "main"], [52, 3, 1, "", "prepare_data"], [52, 3, 1, "", "run"], [52, 3, 1, "", "save_model"], [52, 3, 1, "", "save_task"], [52, 3, 1, "", "train"]], "s3prl.problem.common.hear_cremad": [[53, 1, 1, "", "HearCremaD"], [53, 1, 1, "", "HearESC50"]], "s3prl.problem.common.hear_cremad.HearCremaD": [[53, 3, 1, "", "build_batch_sampler"], [53, 3, 1, "", "build_collate_fn"], [53, 3, 1, "", "build_dataset"], [53, 3, 1, "", "build_downstream"], [53, 3, 1, "", "build_encoder"], [53, 3, 1, "", "build_featurizer"], [53, 3, 1, "", "build_model"], [53, 3, 1, "", "build_optimizer"], [53, 3, 1, "", "build_scheduler"], [53, 3, 1, "", "build_task"], [53, 3, 1, "", "build_upstream"], [53, 3, 1, "", "default_config"], [53, 3, 1, "", "evaluate"], [53, 3, 1, "", "get_class_from_name"], [53, 3, 1, "", "load_model"], [53, 3, 1, "", "load_model_and_task"], [53, 3, 1, "", "load_task"], [53, 3, 1, "", "main"], [53, 3, 1, "", "prepare_data"], [53, 3, 1, "", "run"], [53, 3, 1, "", "save_model"], [53, 3, 1, "", "save_task"], [53, 3, 1, "", "train"]], "s3prl.problem.common.hear_cremad.HearESC50": [[53, 3, 1, "", "build_batch_sampler"], [53, 3, 1, "", "build_collate_fn"], [53, 3, 1, "", "build_dataset"], [53, 3, 1, "", "build_downstream"], [53, 3, 1, "", "build_encoder"], [53, 3, 1, "", "build_featurizer"], [53, 3, 1, "", "build_model"], [53, 3, 1, "", "build_optimizer"], [53, 3, 1, "", "build_scheduler"], [53, 3, 1, "", "build_task"], [53, 3, 1, "", "build_upstream"], [53, 3, 1, "", "default_config"], [53, 3, 1, "", "evaluate"], [53, 3, 1, "", "get_class_from_name"], [53, 3, 1, "", "load_model"], [53, 3, 1, "", "load_model_and_task"], [53, 3, 1, "", "load_task"], [53, 3, 1, "", "main"], [53, 3, 1, "", "prepare_data"], [53, 3, 1, "", "run"], [53, 3, 1, "", "save_model"], [53, 3, 1, "", "save_task"], [53, 3, 1, "", "train"]], "s3prl.problem.common.hear_dcase_2016_task2": [[54, 1, 1, "", "EventPredictionTask"], [54, 1, 1, "", "FixedBatchSizeBatchSampler"], [54, 1, 1, "", "GroupSameItemSampler"], [54, 1, 1, "", "HearDcase2016Task2"], [54, 1, 1, "", "HearFSD"], [54, 1, 1, "", "HearTimestampDatapipe"], [54, 1, 1, "", "OrderedDict"], [54, 1, 1, "", "Path"], [54, 4, 1, "", "dataclass"], [54, 4, 1, "", "dcase_2016_task2"], [54, 4, 1, "", "deepcopy"], [54, 1, 1, "", "defaultdict"]], "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask": [[54, 5, 1, "", "dump_patches"], [54, 3, 1, "", "eval_reduction"], [54, 3, 1, "", "forward"], [54, 3, 1, "", "get_state"], [54, 3, 1, "", "log_scores"], [54, 3, 1, "", "parse_cached_results"], [54, 3, 1, "", "predict"], [54, 3, 1, "", "reduction"], [54, 3, 1, "", "set_state"], [54, 3, 1, "", "test_reduction"], [54, 3, 1, "", "test_step"], [54, 3, 1, "", "train_reduction"], [54, 3, 1, "", "train_step"], [54, 5, 1, "", "training"], [54, 3, 1, "", "valid_reduction"], [54, 3, 1, "", "valid_step"]], "s3prl.problem.common.hear_dcase_2016_task2.FixedBatchSizeBatchSampler": [[54, 3, 1, "", "set_epoch"]], "s3prl.problem.common.hear_dcase_2016_task2.GroupSameItemSampler": [[54, 3, 1, "", "set_epoch"]], "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2": [[54, 3, 1, "", "build_batch_sampler"], [54, 3, 1, "", "build_collate_fn"], [54, 3, 1, "", "build_dataset"], [54, 3, 1, "", "build_downstream"], [54, 3, 1, "", "build_encoder"], [54, 3, 1, "", "build_featurizer"], [54, 3, 1, "", "build_model"], [54, 3, 1, "", "build_optimizer"], [54, 3, 1, "", "build_scheduler"], [54, 3, 1, "", "build_task"], [54, 3, 1, "", "build_upstream"], [54, 3, 1, "", "default_config"], [54, 3, 1, "", "evaluate"], [54, 3, 1, "", "get_class_from_name"], [54, 3, 1, "", "load_model"], [54, 3, 1, "", "load_model_and_task"], [54, 3, 1, "", "load_task"], [54, 3, 1, "", "main"], [54, 3, 1, "", "prepare_data"], [54, 3, 1, "", "run"], [54, 3, 1, "", "save_model"], [54, 3, 1, "", "save_task"], [54, 3, 1, "", "train"]], "s3prl.problem.common.hear_dcase_2016_task2.HearFSD": [[54, 3, 1, "", "build_batch_sampler"], [54, 3, 1, "", "build_collate_fn"], [54, 3, 1, "", "build_dataset"], [54, 3, 1, "", "build_downstream"], [54, 3, 1, "", "build_encoder"], [54, 3, 1, "", "build_featurizer"], [54, 3, 1, "", "build_model"], [54, 3, 1, "", "build_optimizer"], [54, 3, 1, "", "build_scheduler"], [54, 3, 1, "", "build_task"], [54, 3, 1, "", "build_upstream"], [54, 3, 1, "", "default_config"], [54, 3, 1, "", "evaluate"], [54, 3, 1, "", "get_class_from_name"], [54, 3, 1, "", "load_model"], [54, 3, 1, "", "load_model_and_task"], [54, 3, 1, "", "load_task"], [54, 3, 1, "", "main"], [54, 3, 1, "", "prepare_data"], [54, 3, 1, "", "run"], [54, 3, 1, "", "save_model"], [54, 3, 1, "", "save_task"], [54, 3, 1, "", "train"]], "s3prl.problem.common.hear_dcase_2016_task2.HearTimestampDatapipe": [[54, 3, 1, "", "forward"]], "s3prl.problem.common.hear_dcase_2016_task2.OrderedDict": [[54, 3, 1, "", "clear"], [54, 3, 1, "", "copy"], [54, 3, 1, "", "fromkeys"], [54, 3, 1, "", "get"], [54, 3, 1, "", "items"], [54, 3, 1, "", "keys"], [54, 3, 1, "", "move_to_end"], [54, 3, 1, "", "pop"], [54, 3, 1, "", "popitem"], [54, 3, 1, "", "setdefault"], [54, 3, 1, "", "update"], [54, 3, 1, "", "values"]], "s3prl.problem.common.hear_dcase_2016_task2.Path": [[54, 3, 1, "", "absolute"], [54, 2, 1, "", "anchor"], [54, 3, 1, "", "as_posix"], [54, 3, 1, "", "as_uri"], [54, 3, 1, "", "chmod"], [54, 3, 1, "", "cwd"], [54, 2, 1, "", "drive"], [54, 3, 1, "", "exists"], [54, 3, 1, "", "expanduser"], [54, 3, 1, "", "glob"], [54, 3, 1, "", "group"], [54, 3, 1, "", "home"], [54, 3, 1, "", "is_absolute"], [54, 3, 1, "", "is_block_device"], [54, 3, 1, "", "is_char_device"], [54, 3, 1, "", "is_dir"], [54, 3, 1, "", "is_fifo"], [54, 3, 1, "", "is_file"], [54, 3, 1, "", "is_mount"], [54, 3, 1, "", "is_reserved"], [54, 3, 1, "", "is_socket"], [54, 3, 1, "", "is_symlink"], [54, 3, 1, "", "iterdir"], [54, 3, 1, "", "joinpath"], [54, 3, 1, "", "lchmod"], [54, 3, 1, "", "link_to"], [54, 3, 1, "", "lstat"], [54, 3, 1, "", "match"], [54, 3, 1, "", "mkdir"], [54, 2, 1, "", "name"], [54, 3, 1, "", "open"], [54, 3, 1, "", "owner"], [54, 2, 1, "", "parent"], [54, 2, 1, "", "parents"], [54, 2, 1, "", "parts"], [54, 3, 1, "", "read_bytes"], [54, 3, 1, "", "read_text"], [54, 3, 1, "", "relative_to"], [54, 3, 1, "", "rename"], [54, 3, 1, "", "replace"], [54, 3, 1, "", "resolve"], [54, 3, 1, "", "rglob"], [54, 3, 1, "", "rmdir"], [54, 2, 1, "", "root"], [54, 3, 1, "", "samefile"], [54, 3, 1, "", "stat"], [54, 2, 1, "", "stem"], [54, 2, 1, "", "suffix"], [54, 2, 1, "", "suffixes"], [54, 3, 1, "", "symlink_to"], [54, 3, 1, "", "touch"], [54, 3, 1, "", "unlink"], [54, 3, 1, "", "with_name"], [54, 3, 1, "", "with_suffix"], [54, 3, 1, "", "write_bytes"], [54, 3, 1, "", "write_text"]], "s3prl.problem.common.hear_dcase_2016_task2.defaultdict": [[54, 3, 1, "", "clear"], [54, 3, 1, "", "copy"], [54, 5, 1, "", "default_factory"], [54, 3, 1, "", "fromkeys"], [54, 3, 1, "", "get"], [54, 3, 1, "", "items"], [54, 3, 1, "", "keys"], [54, 3, 1, "", "pop"], [54, 3, 1, "", "popitem"], [54, 3, 1, "", "setdefault"], [54, 3, 1, "", "update"], [54, 3, 1, "", "values"]], "s3prl.problem.common.hear_esc50": [[55, 1, 1, "", "HearESC50"], [55, 1, 1, "", "HearFSD"], [55, 1, 1, "", "Path"], [55, 1, 1, "", "defaultdict"], [55, 4, 1, "", "hear_scene_kfolds"]], "s3prl.problem.common.hear_esc50.HearESC50": [[55, 3, 1, "", "build_batch_sampler"], [55, 3, 1, "", "build_collate_fn"], [55, 3, 1, "", "build_dataset"], [55, 3, 1, "", "build_downstream"], [55, 3, 1, "", "build_encoder"], [55, 3, 1, "", "build_featurizer"], [55, 3, 1, "", "build_model"], [55, 3, 1, "", "build_optimizer"], [55, 3, 1, "", "build_scheduler"], [55, 3, 1, "", "build_task"], [55, 3, 1, "", "build_upstream"], [55, 3, 1, "", "default_config"], [55, 3, 1, "", "evaluate"], [55, 3, 1, "", "get_class_from_name"], [55, 3, 1, "", "load_model"], [55, 3, 1, "", "load_model_and_task"], [55, 3, 1, "", "load_task"], [55, 3, 1, "", "main"], [55, 3, 1, "", "prepare_data"], [55, 3, 1, "", "run"], [55, 3, 1, "", "save_model"], [55, 3, 1, "", "save_task"], [55, 3, 1, "", "train"]], "s3prl.problem.common.hear_esc50.HearFSD": [[55, 3, 1, "", "build_batch_sampler"], [55, 3, 1, "", "build_collate_fn"], [55, 3, 1, "", "build_dataset"], [55, 3, 1, "", "build_downstream"], [55, 3, 1, "", "build_encoder"], [55, 3, 1, "", "build_featurizer"], [55, 3, 1, "", "build_model"], [55, 3, 1, "", "build_optimizer"], [55, 3, 1, "", "build_scheduler"], [55, 3, 1, "", "build_task"], [55, 3, 1, "", "build_upstream"], [55, 3, 1, "", "default_config"], [55, 3, 1, "", "evaluate"], [55, 3, 1, "", "get_class_from_name"], [55, 3, 1, "", "load_model"], [55, 3, 1, "", "load_model_and_task"], [55, 3, 1, "", "load_task"], [55, 3, 1, "", "main"], [55, 3, 1, "", "prepare_data"], [55, 3, 1, "", "run"], [55, 3, 1, "", "save_model"], [55, 3, 1, "", "save_task"], [55, 3, 1, "", "train"]], "s3prl.problem.common.hear_esc50.Path": [[55, 3, 1, "", "absolute"], [55, 2, 1, "", "anchor"], [55, 3, 1, "", "as_posix"], [55, 3, 1, "", "as_uri"], [55, 3, 1, "", "chmod"], [55, 3, 1, "", "cwd"], [55, 2, 1, "", "drive"], [55, 3, 1, "", "exists"], [55, 3, 1, "", "expanduser"], [55, 3, 1, "", "glob"], [55, 3, 1, "", "group"], [55, 3, 1, "", "home"], [55, 3, 1, "", "is_absolute"], [55, 3, 1, "", "is_block_device"], [55, 3, 1, "", "is_char_device"], [55, 3, 1, "", "is_dir"], [55, 3, 1, "", "is_fifo"], [55, 3, 1, "", "is_file"], [55, 3, 1, "", "is_mount"], [55, 3, 1, "", "is_reserved"], [55, 3, 1, "", "is_socket"], [55, 3, 1, "", "is_symlink"], [55, 3, 1, "", "iterdir"], [55, 3, 1, "", "joinpath"], [55, 3, 1, "", "lchmod"], [55, 3, 1, "", "link_to"], [55, 3, 1, "", "lstat"], [55, 3, 1, "", "match"], [55, 3, 1, "", "mkdir"], [55, 2, 1, "", "name"], [55, 3, 1, "", "open"], [55, 3, 1, "", "owner"], [55, 2, 1, "", "parent"], [55, 2, 1, "", "parents"], [55, 2, 1, "", "parts"], [55, 3, 1, "", "read_bytes"], [55, 3, 1, "", "read_text"], [55, 3, 1, "", "relative_to"], [55, 3, 1, "", "rename"], [55, 3, 1, "", "replace"], [55, 3, 1, "", "resolve"], [55, 3, 1, "", "rglob"], [55, 3, 1, "", "rmdir"], [55, 2, 1, "", "root"], [55, 3, 1, "", "samefile"], [55, 3, 1, "", "stat"], [55, 2, 1, "", "stem"], [55, 2, 1, "", "suffix"], [55, 2, 1, "", "suffixes"], [55, 3, 1, "", "symlink_to"], [55, 3, 1, "", "touch"], [55, 3, 1, "", "unlink"], [55, 3, 1, "", "with_name"], [55, 3, 1, "", "with_suffix"], [55, 3, 1, "", "write_bytes"], [55, 3, 1, "", "write_text"]], "s3prl.problem.common.hear_esc50.defaultdict": [[55, 3, 1, "", "clear"], [55, 3, 1, "", "copy"], [55, 5, 1, "", "default_factory"], [55, 3, 1, "", "fromkeys"], [55, 3, 1, "", "get"], [55, 3, 1, "", "items"], [55, 3, 1, "", "keys"], [55, 3, 1, "", "pop"], [55, 3, 1, "", "popitem"], [55, 3, 1, "", "setdefault"], [55, 3, 1, "", "update"], [55, 3, 1, "", "values"]], "s3prl.problem.common.hear_fsd": [[56, 1, 1, "", "CategoryEncoder"], [56, 1, 1, "", "FixedBatchSizeBatchSampler"], [56, 1, 1, "", "HearFSD"], [56, 1, 1, "", "HearFullyConnectedPrediction"], [56, 1, 1, "", "HearScenePipe"], [56, 1, 1, "", "OrderedDict"], [56, 1, 1, "", "Path"], [56, 1, 1, "", "ScenePredictionTask"], [56, 1, 1, "", "SuperbSID"], [56, 4, 1, "", "dataclass"], [56, 1, 1, "", "defaultdict"], [56, 4, 1, "", "hear_scene_trainvaltest"]], "s3prl.problem.common.hear_fsd.CategoryEncoder": [[56, 3, 1, "", "decode"], [56, 3, 1, "", "encode"]], "s3prl.problem.common.hear_fsd.FixedBatchSizeBatchSampler": [[56, 3, 1, "", "set_epoch"]], "s3prl.problem.common.hear_fsd.HearFSD": [[56, 3, 1, "", "build_batch_sampler"], [56, 3, 1, "", "build_collate_fn"], [56, 3, 1, "", "build_dataset"], [56, 3, 1, "", "build_downstream"], [56, 3, 1, "", "build_encoder"], [56, 3, 1, "", "build_featurizer"], [56, 3, 1, "", "build_model"], [56, 3, 1, "", "build_optimizer"], [56, 3, 1, "", "build_scheduler"], [56, 3, 1, "", "build_task"], [56, 3, 1, "", "build_upstream"], [56, 3, 1, "", "default_config"], [56, 3, 1, "", "evaluate"], [56, 3, 1, "", "get_class_from_name"], [56, 3, 1, "", "load_model"], [56, 3, 1, "", "load_model_and_task"], [56, 3, 1, "", "load_task"], [56, 3, 1, "", "main"], [56, 3, 1, "", "prepare_data"], [56, 3, 1, "", "run"], [56, 3, 1, "", "save_model"], [56, 3, 1, "", "save_task"], [56, 3, 1, "", "train"]], "s3prl.problem.common.hear_fsd.HearFullyConnectedPrediction": [[56, 5, 1, "", "dump_patches"], [56, 3, 1, "", "forward"], [56, 2, 1, "", "input_size"], [56, 2, 1, "", "output_size"], [56, 5, 1, "", "training"]], "s3prl.problem.common.hear_fsd.HearScenePipe": [[56, 3, 1, "", "forward"]], "s3prl.problem.common.hear_fsd.OrderedDict": [[56, 3, 1, "", "clear"], [56, 3, 1, "", "copy"], [56, 3, 1, "", "fromkeys"], [56, 3, 1, "", "get"], [56, 3, 1, "", "items"], [56, 3, 1, "", "keys"], [56, 3, 1, "", "move_to_end"], [56, 3, 1, "", "pop"], [56, 3, 1, "", "popitem"], [56, 3, 1, "", "setdefault"], [56, 3, 1, "", "update"], [56, 3, 1, "", "values"]], "s3prl.problem.common.hear_fsd.Path": [[56, 3, 1, "", "absolute"], [56, 2, 1, "", "anchor"], [56, 3, 1, "", "as_posix"], [56, 3, 1, "", "as_uri"], [56, 3, 1, "", "chmod"], [56, 3, 1, "", "cwd"], [56, 2, 1, "", "drive"], [56, 3, 1, "", "exists"], [56, 3, 1, "", "expanduser"], [56, 3, 1, "", "glob"], [56, 3, 1, "", "group"], [56, 3, 1, "", "home"], [56, 3, 1, "", "is_absolute"], [56, 3, 1, "", "is_block_device"], [56, 3, 1, "", "is_char_device"], [56, 3, 1, "", "is_dir"], [56, 3, 1, "", "is_fifo"], [56, 3, 1, "", "is_file"], [56, 3, 1, "", "is_mount"], [56, 3, 1, "", "is_reserved"], [56, 3, 1, "", "is_socket"], [56, 3, 1, "", "is_symlink"], [56, 3, 1, "", "iterdir"], [56, 3, 1, "", "joinpath"], [56, 3, 1, "", "lchmod"], [56, 3, 1, "", "link_to"], [56, 3, 1, "", "lstat"], [56, 3, 1, "", "match"], [56, 3, 1, "", "mkdir"], [56, 2, 1, "", "name"], [56, 3, 1, "", "open"], [56, 3, 1, "", "owner"], [56, 2, 1, "", "parent"], [56, 2, 1, "", "parents"], [56, 2, 1, "", "parts"], [56, 3, 1, "", "read_bytes"], [56, 3, 1, "", "read_text"], [56, 3, 1, "", "relative_to"], [56, 3, 1, "", "rename"], [56, 3, 1, "", "replace"], [56, 3, 1, "", "resolve"], [56, 3, 1, "", "rglob"], [56, 3, 1, "", "rmdir"], [56, 2, 1, "", "root"], [56, 3, 1, "", "samefile"], [56, 3, 1, "", "stat"], [56, 2, 1, "", "stem"], [56, 2, 1, "", "suffix"], [56, 2, 1, "", "suffixes"], [56, 3, 1, "", "symlink_to"], [56, 3, 1, "", "touch"], [56, 3, 1, "", "unlink"], [56, 3, 1, "", "with_name"], [56, 3, 1, "", "with_suffix"], [56, 3, 1, "", "write_bytes"], [56, 3, 1, "", "write_text"]], "s3prl.problem.common.hear_fsd.ScenePredictionTask": [[56, 5, 1, "", "dump_patches"], [56, 3, 1, "", "forward"], [56, 3, 1, "", "get_state"], [56, 3, 1, "", "log_scores"], [56, 3, 1, "", "parse_cached_results"], [56, 3, 1, "", "predict"], [56, 3, 1, "", "reduction"], [56, 3, 1, "", "set_state"], [56, 3, 1, "", "test_reduction"], [56, 3, 1, "", "test_step"], [56, 3, 1, "", "train_reduction"], [56, 3, 1, "", "train_step"], [56, 5, 1, "", "training"], [56, 3, 1, "", "valid_reduction"], [56, 3, 1, "", "valid_step"]], "s3prl.problem.common.hear_fsd.SuperbSID": [[56, 3, 1, "", "build_batch_sampler"], [56, 3, 1, "", "build_collate_fn"], [56, 3, 1, "", "build_dataset"], [56, 3, 1, "", "build_downstream"], [56, 3, 1, "", "build_encoder"], [56, 3, 1, "", "build_featurizer"], [56, 3, 1, "", "build_model"], [56, 3, 1, "", "build_optimizer"], [56, 3, 1, "", "build_scheduler"], [56, 3, 1, "", "build_task"], [56, 3, 1, "", "build_upstream"], [56, 3, 1, "", "default_config"], [56, 3, 1, "", "evaluate"], [56, 3, 1, "", "get_class_from_name"], [56, 3, 1, "", "load_model"], [56, 3, 1, "", "load_model_and_task"], [56, 3, 1, "", "load_task"], [56, 3, 1, "", "main"], [56, 3, 1, "", "prepare_data"], [56, 3, 1, "", "run"], [56, 3, 1, "", "save_model"], [56, 3, 1, "", "save_task"], [56, 3, 1, "", "train"]], "s3prl.problem.common.hear_fsd.defaultdict": [[56, 3, 1, "", "clear"], [56, 3, 1, "", "copy"], [56, 5, 1, "", "default_factory"], [56, 3, 1, "", "fromkeys"], [56, 3, 1, "", "get"], [56, 3, 1, "", "items"], [56, 3, 1, "", "keys"], [56, 3, 1, "", "pop"], [56, 3, 1, "", "popitem"], [56, 3, 1, "", "setdefault"], [56, 3, 1, "", "update"], [56, 3, 1, "", "values"]], "s3prl.problem.common.hear_gsc5hr": [[57, 1, 1, "", "HearFSD"], [57, 1, 1, "", "HearGSC5hr"]], "s3prl.problem.common.hear_gsc5hr.HearFSD": [[57, 3, 1, "", "build_batch_sampler"], [57, 3, 1, "", "build_collate_fn"], [57, 3, 1, "", "build_dataset"], [57, 3, 1, "", "build_downstream"], [57, 3, 1, "", "build_encoder"], [57, 3, 1, "", "build_featurizer"], [57, 3, 1, "", "build_model"], [57, 3, 1, "", "build_optimizer"], [57, 3, 1, "", "build_scheduler"], [57, 3, 1, "", "build_task"], [57, 3, 1, "", "build_upstream"], [57, 3, 1, "", "default_config"], [57, 3, 1, "", "evaluate"], [57, 3, 1, "", "get_class_from_name"], [57, 3, 1, "", "load_model"], [57, 3, 1, "", "load_model_and_task"], [57, 3, 1, "", "load_task"], [57, 3, 1, "", "main"], [57, 3, 1, "", "prepare_data"], [57, 3, 1, "", "run"], [57, 3, 1, "", "save_model"], [57, 3, 1, "", "save_task"], [57, 3, 1, "", "train"]], "s3prl.problem.common.hear_gsc5hr.HearGSC5hr": [[57, 3, 1, "", "build_batch_sampler"], [57, 3, 1, "", "build_collate_fn"], [57, 3, 1, "", "build_dataset"], [57, 3, 1, "", "build_downstream"], [57, 3, 1, "", "build_encoder"], [57, 3, 1, "", "build_featurizer"], [57, 3, 1, "", "build_model"], [57, 3, 1, "", "build_optimizer"], [57, 3, 1, "", "build_scheduler"], [57, 3, 1, "", "build_task"], [57, 3, 1, "", "build_upstream"], [57, 3, 1, "", "default_config"], [57, 3, 1, "", "evaluate"], [57, 3, 1, "", "get_class_from_name"], [57, 3, 1, "", "load_model"], [57, 3, 1, "", "load_model_and_task"], [57, 3, 1, "", "load_task"], [57, 3, 1, "", "main"], [57, 3, 1, "", "prepare_data"], [57, 3, 1, "", "run"], [57, 3, 1, "", "save_model"], [57, 3, 1, "", "save_task"], [57, 3, 1, "", "train"]], "s3prl.problem.common.hear_gtzan": [[58, 1, 1, "", "HearESC50"], [58, 1, 1, "", "HearGtzan"]], "s3prl.problem.common.hear_gtzan.HearESC50": [[58, 3, 1, "", "build_batch_sampler"], [58, 3, 1, "", "build_collate_fn"], [58, 3, 1, "", "build_dataset"], [58, 3, 1, "", "build_downstream"], [58, 3, 1, "", "build_encoder"], [58, 3, 1, "", "build_featurizer"], [58, 3, 1, "", "build_model"], [58, 3, 1, "", "build_optimizer"], [58, 3, 1, "", "build_scheduler"], [58, 3, 1, "", "build_task"], [58, 3, 1, "", "build_upstream"], [58, 3, 1, "", "default_config"], [58, 3, 1, "", "evaluate"], [58, 3, 1, "", "get_class_from_name"], [58, 3, 1, "", "load_model"], [58, 3, 1, "", "load_model_and_task"], [58, 3, 1, "", "load_task"], [58, 3, 1, "", "main"], [58, 3, 1, "", "prepare_data"], [58, 3, 1, "", "run"], [58, 3, 1, "", "save_model"], [58, 3, 1, "", "save_task"], [58, 3, 1, "", "train"]], "s3prl.problem.common.hear_gtzan.HearGtzan": [[58, 3, 1, "", "build_batch_sampler"], [58, 3, 1, "", "build_collate_fn"], [58, 3, 1, "", "build_dataset"], [58, 3, 1, "", "build_downstream"], [58, 3, 1, "", "build_encoder"], [58, 3, 1, "", "build_featurizer"], [58, 3, 1, "", "build_model"], [58, 3, 1, "", "build_optimizer"], [58, 3, 1, "", "build_scheduler"], [58, 3, 1, "", "build_task"], [58, 3, 1, "", "build_upstream"], [58, 3, 1, "", "default_config"], [58, 3, 1, "", "evaluate"], [58, 3, 1, "", "get_class_from_name"], [58, 3, 1, "", "load_model"], [58, 3, 1, "", "load_model_and_task"], [58, 3, 1, "", "load_task"], [58, 3, 1, "", "main"], [58, 3, 1, "", "prepare_data"], [58, 3, 1, "", "run"], [58, 3, 1, "", "save_model"], [58, 3, 1, "", "save_task"], [58, 3, 1, "", "train"]], "s3prl.problem.common.hear_gtzan_music_speech": [[59, 1, 1, "", "HearESC50"], [59, 1, 1, "", "HearGtzanMusicSpeech"]], "s3prl.problem.common.hear_gtzan_music_speech.HearESC50": [[59, 3, 1, "", "build_batch_sampler"], [59, 3, 1, "", "build_collate_fn"], [59, 3, 1, "", "build_dataset"], [59, 3, 1, "", "build_downstream"], [59, 3, 1, "", "build_encoder"], [59, 3, 1, "", "build_featurizer"], [59, 3, 1, "", "build_model"], [59, 3, 1, "", "build_optimizer"], [59, 3, 1, "", "build_scheduler"], [59, 3, 1, "", "build_task"], [59, 3, 1, "", "build_upstream"], [59, 3, 1, "", "default_config"], [59, 3, 1, "", "evaluate"], [59, 3, 1, "", "get_class_from_name"], [59, 3, 1, "", "load_model"], [59, 3, 1, "", "load_model_and_task"], [59, 3, 1, "", "load_task"], [59, 3, 1, "", "main"], [59, 3, 1, "", "prepare_data"], [59, 3, 1, "", "run"], [59, 3, 1, "", "save_model"], [59, 3, 1, "", "save_task"], [59, 3, 1, "", "train"]], "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech": [[59, 3, 1, "", "build_batch_sampler"], [59, 3, 1, "", "build_collate_fn"], [59, 3, 1, "", "build_dataset"], [59, 3, 1, "", "build_downstream"], [59, 3, 1, "", "build_encoder"], [59, 3, 1, "", "build_featurizer"], [59, 3, 1, "", "build_model"], [59, 3, 1, "", "build_optimizer"], [59, 3, 1, "", "build_scheduler"], [59, 3, 1, "", "build_task"], [59, 3, 1, "", "build_upstream"], [59, 3, 1, "", "default_config"], [59, 3, 1, "", "evaluate"], [59, 3, 1, "", "get_class_from_name"], [59, 3, 1, "", "load_model"], [59, 3, 1, "", "load_model_and_task"], [59, 3, 1, "", "load_task"], [59, 3, 1, "", "main"], [59, 3, 1, "", "prepare_data"], [59, 3, 1, "", "run"], [59, 3, 1, "", "save_model"], [59, 3, 1, "", "save_task"], [59, 3, 1, "", "train"]], "s3prl.problem.common.hear_gunshot": [[60, 1, 1, "", "HearESC50"], [60, 1, 1, "", "HearGunshot"]], "s3prl.problem.common.hear_gunshot.HearESC50": [[60, 3, 1, "", "build_batch_sampler"], [60, 3, 1, "", "build_collate_fn"], [60, 3, 1, "", "build_dataset"], [60, 3, 1, "", "build_downstream"], [60, 3, 1, "", "build_encoder"], [60, 3, 1, "", "build_featurizer"], [60, 3, 1, "", "build_model"], [60, 3, 1, "", "build_optimizer"], [60, 3, 1, "", "build_scheduler"], [60, 3, 1, "", "build_task"], [60, 3, 1, "", "build_upstream"], [60, 3, 1, "", "default_config"], [60, 3, 1, "", "evaluate"], [60, 3, 1, "", "get_class_from_name"], [60, 3, 1, "", "load_model"], [60, 3, 1, "", "load_model_and_task"], [60, 3, 1, "", "load_task"], [60, 3, 1, "", "main"], [60, 3, 1, "", "prepare_data"], [60, 3, 1, "", "run"], [60, 3, 1, "", "save_model"], [60, 3, 1, "", "save_task"], [60, 3, 1, "", "train"]], "s3prl.problem.common.hear_gunshot.HearGunshot": [[60, 3, 1, "", "build_batch_sampler"], [60, 3, 1, "", "build_collate_fn"], [60, 3, 1, "", "build_dataset"], [60, 3, 1, "", "build_downstream"], [60, 3, 1, "", "build_encoder"], [60, 3, 1, "", "build_featurizer"], [60, 3, 1, "", "build_model"], [60, 3, 1, "", "build_optimizer"], [60, 3, 1, "", "build_scheduler"], [60, 3, 1, "", "build_task"], [60, 3, 1, "", "build_upstream"], [60, 3, 1, "", "default_config"], [60, 3, 1, "", "evaluate"], [60, 3, 1, "", "get_class_from_name"], [60, 3, 1, "", "load_model"], [60, 3, 1, "", "load_model_and_task"], [60, 3, 1, "", "load_task"], [60, 3, 1, "", "main"], [60, 3, 1, "", "prepare_data"], [60, 3, 1, "", "run"], [60, 3, 1, "", "save_model"], [60, 3, 1, "", "save_task"], [60, 3, 1, "", "train"]], "s3prl.problem.common.hear_libricount": [[61, 1, 1, "", "HearESC50"], [61, 1, 1, "", "HearLibriCount"]], "s3prl.problem.common.hear_libricount.HearESC50": [[61, 3, 1, "", "build_batch_sampler"], [61, 3, 1, "", "build_collate_fn"], [61, 3, 1, "", "build_dataset"], [61, 3, 1, "", "build_downstream"], [61, 3, 1, "", "build_encoder"], [61, 3, 1, "", "build_featurizer"], [61, 3, 1, "", "build_model"], [61, 3, 1, "", "build_optimizer"], [61, 3, 1, "", "build_scheduler"], [61, 3, 1, "", "build_task"], [61, 3, 1, "", "build_upstream"], [61, 3, 1, "", "default_config"], [61, 3, 1, "", "evaluate"], [61, 3, 1, "", "get_class_from_name"], [61, 3, 1, "", "load_model"], [61, 3, 1, "", "load_model_and_task"], [61, 3, 1, "", "load_task"], [61, 3, 1, "", "main"], [61, 3, 1, "", "prepare_data"], [61, 3, 1, "", "run"], [61, 3, 1, "", "save_model"], [61, 3, 1, "", "save_task"], [61, 3, 1, "", "train"]], "s3prl.problem.common.hear_libricount.HearLibriCount": [[61, 3, 1, "", "build_batch_sampler"], [61, 3, 1, "", "build_collate_fn"], [61, 3, 1, "", "build_dataset"], [61, 3, 1, "", "build_downstream"], [61, 3, 1, "", "build_encoder"], [61, 3, 1, "", "build_featurizer"], [61, 3, 1, "", "build_model"], [61, 3, 1, "", "build_optimizer"], [61, 3, 1, "", "build_scheduler"], [61, 3, 1, "", "build_task"], [61, 3, 1, "", "build_upstream"], [61, 3, 1, "", "default_config"], [61, 3, 1, "", "evaluate"], [61, 3, 1, "", "get_class_from_name"], [61, 3, 1, "", "load_model"], [61, 3, 1, "", "load_model_and_task"], [61, 3, 1, "", "load_task"], [61, 3, 1, "", "main"], [61, 3, 1, "", "prepare_data"], [61, 3, 1, "", "run"], [61, 3, 1, "", "save_model"], [61, 3, 1, "", "save_task"], [61, 3, 1, "", "train"]], "s3prl.problem.common.hear_maestro": [[62, 1, 1, "", "HearDcase2016Task2"], [62, 1, 1, "", "HearMaestro"], [62, 1, 1, "", "Path"], [62, 4, 1, "", "deepcopy"], [62, 1, 1, "", "defaultdict"], [62, 4, 1, "", "prepare_maestro"]], "s3prl.problem.common.hear_maestro.HearDcase2016Task2": [[62, 3, 1, "", "build_batch_sampler"], [62, 3, 1, "", "build_collate_fn"], [62, 3, 1, "", "build_dataset"], [62, 3, 1, "", "build_downstream"], [62, 3, 1, "", "build_encoder"], [62, 3, 1, "", "build_featurizer"], [62, 3, 1, "", "build_model"], [62, 3, 1, "", "build_optimizer"], [62, 3, 1, "", "build_scheduler"], [62, 3, 1, "", "build_task"], [62, 3, 1, "", "build_upstream"], [62, 3, 1, "", "default_config"], [62, 3, 1, "", "evaluate"], [62, 3, 1, "", "get_class_from_name"], [62, 3, 1, "", "load_model"], [62, 3, 1, "", "load_model_and_task"], [62, 3, 1, "", "load_task"], [62, 3, 1, "", "main"], [62, 3, 1, "", "prepare_data"], [62, 3, 1, "", "run"], [62, 3, 1, "", "save_model"], [62, 3, 1, "", "save_task"], [62, 3, 1, "", "train"]], "s3prl.problem.common.hear_maestro.HearMaestro": [[62, 3, 1, "", "build_batch_sampler"], [62, 3, 1, "", "build_collate_fn"], [62, 3, 1, "", "build_dataset"], [62, 3, 1, "", "build_downstream"], [62, 3, 1, "", "build_encoder"], [62, 3, 1, "", "build_featurizer"], [62, 3, 1, "", "build_model"], [62, 3, 1, "", "build_optimizer"], [62, 3, 1, "", "build_scheduler"], [62, 3, 1, "", "build_task"], [62, 3, 1, "", "build_upstream"], [62, 3, 1, "", "default_config"], [62, 3, 1, "", "evaluate"], [62, 3, 1, "", "get_class_from_name"], [62, 3, 1, "", "load_model"], [62, 3, 1, "", "load_model_and_task"], [62, 3, 1, "", "load_task"], [62, 3, 1, "", "main"], [62, 3, 1, "", "prepare_data"], [62, 3, 1, "", "run"], [62, 3, 1, "", "save_model"], [62, 3, 1, "", "save_task"], [62, 3, 1, "", "train"]], "s3prl.problem.common.hear_maestro.Path": [[62, 3, 1, "", "absolute"], [62, 2, 1, "", "anchor"], [62, 3, 1, "", "as_posix"], [62, 3, 1, "", "as_uri"], [62, 3, 1, "", "chmod"], [62, 3, 1, "", "cwd"], [62, 2, 1, "", "drive"], [62, 3, 1, "", "exists"], [62, 3, 1, "", "expanduser"], [62, 3, 1, "", "glob"], [62, 3, 1, "", "group"], [62, 3, 1, "", "home"], [62, 3, 1, "", "is_absolute"], [62, 3, 1, "", "is_block_device"], [62, 3, 1, "", "is_char_device"], [62, 3, 1, "", "is_dir"], [62, 3, 1, "", "is_fifo"], [62, 3, 1, "", "is_file"], [62, 3, 1, "", "is_mount"], [62, 3, 1, "", "is_reserved"], [62, 3, 1, "", "is_socket"], [62, 3, 1, "", "is_symlink"], [62, 3, 1, "", "iterdir"], [62, 3, 1, "", "joinpath"], [62, 3, 1, "", "lchmod"], [62, 3, 1, "", "link_to"], [62, 3, 1, "", "lstat"], [62, 3, 1, "", "match"], [62, 3, 1, "", "mkdir"], [62, 2, 1, "", "name"], [62, 3, 1, "", "open"], [62, 3, 1, "", "owner"], [62, 2, 1, "", "parent"], [62, 2, 1, "", "parents"], [62, 2, 1, "", "parts"], [62, 3, 1, "", "read_bytes"], [62, 3, 1, "", "read_text"], [62, 3, 1, "", "relative_to"], [62, 3, 1, "", "rename"], [62, 3, 1, "", "replace"], [62, 3, 1, "", "resolve"], [62, 3, 1, "", "rglob"], [62, 3, 1, "", "rmdir"], [62, 2, 1, "", "root"], [62, 3, 1, "", "samefile"], [62, 3, 1, "", "stat"], [62, 2, 1, "", "stem"], [62, 2, 1, "", "suffix"], [62, 2, 1, "", "suffixes"], [62, 3, 1, "", "symlink_to"], [62, 3, 1, "", "touch"], [62, 3, 1, "", "unlink"], [62, 3, 1, "", "with_name"], [62, 3, 1, "", "with_suffix"], [62, 3, 1, "", "write_bytes"], [62, 3, 1, "", "write_text"]], "s3prl.problem.common.hear_maestro.defaultdict": [[62, 3, 1, "", "clear"], [62, 3, 1, "", "copy"], [62, 5, 1, "", "default_factory"], [62, 3, 1, "", "fromkeys"], [62, 3, 1, "", "get"], [62, 3, 1, "", "items"], [62, 3, 1, "", "keys"], [62, 3, 1, "", "pop"], [62, 3, 1, "", "popitem"], [62, 3, 1, "", "setdefault"], [62, 3, 1, "", "update"], [62, 3, 1, "", "values"]], "s3prl.problem.common.hear_nsynth5hr": [[63, 1, 1, "", "HearFSD"], [63, 1, 1, "", "HearNsynth5hr"]], "s3prl.problem.common.hear_nsynth5hr.HearFSD": [[63, 3, 1, "", "build_batch_sampler"], [63, 3, 1, "", "build_collate_fn"], [63, 3, 1, "", "build_dataset"], [63, 3, 1, "", "build_downstream"], [63, 3, 1, "", "build_encoder"], [63, 3, 1, "", "build_featurizer"], [63, 3, 1, "", "build_model"], [63, 3, 1, "", "build_optimizer"], [63, 3, 1, "", "build_scheduler"], [63, 3, 1, "", "build_task"], [63, 3, 1, "", "build_upstream"], [63, 3, 1, "", "default_config"], [63, 3, 1, "", "evaluate"], [63, 3, 1, "", "get_class_from_name"], [63, 3, 1, "", "load_model"], [63, 3, 1, "", "load_model_and_task"], [63, 3, 1, "", "load_task"], [63, 3, 1, "", "main"], [63, 3, 1, "", "prepare_data"], [63, 3, 1, "", "run"], [63, 3, 1, "", "save_model"], [63, 3, 1, "", "save_task"], [63, 3, 1, "", "train"]], "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr": [[63, 3, 1, "", "build_batch_sampler"], [63, 3, 1, "", "build_collate_fn"], [63, 3, 1, "", "build_dataset"], [63, 3, 1, "", "build_downstream"], [63, 3, 1, "", "build_encoder"], [63, 3, 1, "", "build_featurizer"], [63, 3, 1, "", "build_model"], [63, 3, 1, "", "build_optimizer"], [63, 3, 1, "", "build_scheduler"], [63, 3, 1, "", "build_task"], [63, 3, 1, "", "build_upstream"], [63, 3, 1, "", "default_config"], [63, 3, 1, "", "evaluate"], [63, 3, 1, "", "get_class_from_name"], [63, 3, 1, "", "load_model"], [63, 3, 1, "", "load_model_and_task"], [63, 3, 1, "", "load_task"], [63, 3, 1, "", "main"], [63, 3, 1, "", "prepare_data"], [63, 3, 1, "", "run"], [63, 3, 1, "", "save_model"], [63, 3, 1, "", "save_task"], [63, 3, 1, "", "train"]], "s3prl.problem.common.hear_stroke": [[64, 1, 1, "", "HearESC50"], [64, 1, 1, "", "HearStroke"]], "s3prl.problem.common.hear_stroke.HearESC50": [[64, 3, 1, "", "build_batch_sampler"], [64, 3, 1, "", "build_collate_fn"], [64, 3, 1, "", "build_dataset"], [64, 3, 1, "", "build_downstream"], [64, 3, 1, "", "build_encoder"], [64, 3, 1, "", "build_featurizer"], [64, 3, 1, "", "build_model"], [64, 3, 1, "", "build_optimizer"], [64, 3, 1, "", "build_scheduler"], [64, 3, 1, "", "build_task"], [64, 3, 1, "", "build_upstream"], [64, 3, 1, "", "default_config"], [64, 3, 1, "", "evaluate"], [64, 3, 1, "", "get_class_from_name"], [64, 3, 1, "", "load_model"], [64, 3, 1, "", "load_model_and_task"], [64, 3, 1, "", "load_task"], [64, 3, 1, "", "main"], [64, 3, 1, "", "prepare_data"], [64, 3, 1, "", "run"], [64, 3, 1, "", "save_model"], [64, 3, 1, "", "save_task"], [64, 3, 1, "", "train"]], "s3prl.problem.common.hear_stroke.HearStroke": [[64, 3, 1, "", "build_batch_sampler"], [64, 3, 1, "", "build_collate_fn"], [64, 3, 1, "", "build_dataset"], [64, 3, 1, "", "build_downstream"], [64, 3, 1, "", "build_encoder"], [64, 3, 1, "", "build_featurizer"], [64, 3, 1, "", "build_model"], [64, 3, 1, "", "build_optimizer"], [64, 3, 1, "", "build_scheduler"], [64, 3, 1, "", "build_task"], [64, 3, 1, "", "build_upstream"], [64, 3, 1, "", "default_config"], [64, 3, 1, "", "evaluate"], [64, 3, 1, "", "get_class_from_name"], [64, 3, 1, "", "load_model"], [64, 3, 1, "", "load_model_and_task"], [64, 3, 1, "", "load_task"], [64, 3, 1, "", "main"], [64, 3, 1, "", "prepare_data"], [64, 3, 1, "", "run"], [64, 3, 1, "", "save_model"], [64, 3, 1, "", "save_task"], [64, 3, 1, "", "train"]], "s3prl.problem.common.hear_tonic": [[65, 1, 1, "", "HearESC50"], [65, 1, 1, "", "HearTonic"]], "s3prl.problem.common.hear_tonic.HearESC50": [[65, 3, 1, "", "build_batch_sampler"], [65, 3, 1, "", "build_collate_fn"], [65, 3, 1, "", "build_dataset"], [65, 3, 1, "", "build_downstream"], [65, 3, 1, "", "build_encoder"], [65, 3, 1, "", "build_featurizer"], [65, 3, 1, "", "build_model"], [65, 3, 1, "", "build_optimizer"], [65, 3, 1, "", "build_scheduler"], [65, 3, 1, "", "build_task"], [65, 3, 1, "", "build_upstream"], [65, 3, 1, "", "default_config"], [65, 3, 1, "", "evaluate"], [65, 3, 1, "", "get_class_from_name"], [65, 3, 1, "", "load_model"], [65, 3, 1, "", "load_model_and_task"], [65, 3, 1, "", "load_task"], [65, 3, 1, "", "main"], [65, 3, 1, "", "prepare_data"], [65, 3, 1, "", "run"], [65, 3, 1, "", "save_model"], [65, 3, 1, "", "save_task"], [65, 3, 1, "", "train"]], "s3prl.problem.common.hear_tonic.HearTonic": [[65, 3, 1, "", "build_batch_sampler"], [65, 3, 1, "", "build_collate_fn"], [65, 3, 1, "", "build_dataset"], [65, 3, 1, "", "build_downstream"], [65, 3, 1, "", "build_encoder"], [65, 3, 1, "", "build_featurizer"], [65, 3, 1, "", "build_model"], [65, 3, 1, "", "build_optimizer"], [65, 3, 1, "", "build_scheduler"], [65, 3, 1, "", "build_task"], [65, 3, 1, "", "build_upstream"], [65, 3, 1, "", "default_config"], [65, 3, 1, "", "evaluate"], [65, 3, 1, "", "get_class_from_name"], [65, 3, 1, "", "load_model"], [65, 3, 1, "", "load_model_and_task"], [65, 3, 1, "", "load_task"], [65, 3, 1, "", "main"], [65, 3, 1, "", "prepare_data"], [65, 3, 1, "", "run"], [65, 3, 1, "", "save_model"], [65, 3, 1, "", "save_task"], [65, 3, 1, "", "train"]], "s3prl.problem.common.hear_vocal": [[66, 1, 1, "", "HearESC50"], [66, 1, 1, "", "HearVocal"]], "s3prl.problem.common.hear_vocal.HearESC50": [[66, 3, 1, "", "build_batch_sampler"], [66, 3, 1, "", "build_collate_fn"], [66, 3, 1, "", "build_dataset"], [66, 3, 1, "", "build_downstream"], [66, 3, 1, "", "build_encoder"], [66, 3, 1, "", "build_featurizer"], [66, 3, 1, "", "build_model"], [66, 3, 1, "", "build_optimizer"], [66, 3, 1, "", "build_scheduler"], [66, 3, 1, "", "build_task"], [66, 3, 1, "", "build_upstream"], [66, 3, 1, "", "default_config"], [66, 3, 1, "", "evaluate"], [66, 3, 1, "", "get_class_from_name"], [66, 3, 1, "", "load_model"], [66, 3, 1, "", "load_model_and_task"], [66, 3, 1, "", "load_task"], [66, 3, 1, "", "main"], [66, 3, 1, "", "prepare_data"], [66, 3, 1, "", "run"], [66, 3, 1, "", "save_model"], [66, 3, 1, "", "save_task"], [66, 3, 1, "", "train"]], "s3prl.problem.common.hear_vocal.HearVocal": [[66, 3, 1, "", "build_batch_sampler"], [66, 3, 1, "", "build_collate_fn"], [66, 3, 1, "", "build_dataset"], [66, 3, 1, "", "build_downstream"], [66, 3, 1, "", "build_encoder"], [66, 3, 1, "", "build_featurizer"], [66, 3, 1, "", "build_model"], [66, 3, 1, "", "build_optimizer"], [66, 3, 1, "", "build_scheduler"], [66, 3, 1, "", "build_task"], [66, 3, 1, "", "build_upstream"], [66, 3, 1, "", "default_config"], [66, 3, 1, "", "evaluate"], [66, 3, 1, "", "get_class_from_name"], [66, 3, 1, "", "load_model"], [66, 3, 1, "", "load_model_and_task"], [66, 3, 1, "", "load_task"], [66, 3, 1, "", "main"], [66, 3, 1, "", "prepare_data"], [66, 3, 1, "", "run"], [66, 3, 1, "", "save_model"], [66, 3, 1, "", "save_task"], [66, 3, 1, "", "train"]], "s3prl.problem.common.hear_vox_lingual": [[67, 1, 1, "", "HearESC50"], [67, 1, 1, "", "HearVoxLingual"]], "s3prl.problem.common.hear_vox_lingual.HearESC50": [[67, 3, 1, "", "build_batch_sampler"], [67, 3, 1, "", "build_collate_fn"], [67, 3, 1, "", "build_dataset"], [67, 3, 1, "", "build_downstream"], [67, 3, 1, "", "build_encoder"], [67, 3, 1, "", "build_featurizer"], [67, 3, 1, "", "build_model"], [67, 3, 1, "", "build_optimizer"], [67, 3, 1, "", "build_scheduler"], [67, 3, 1, "", "build_task"], [67, 3, 1, "", "build_upstream"], [67, 3, 1, "", "default_config"], [67, 3, 1, "", "evaluate"], [67, 3, 1, "", "get_class_from_name"], [67, 3, 1, "", "load_model"], [67, 3, 1, "", "load_model_and_task"], [67, 3, 1, "", "load_task"], [67, 3, 1, "", "main"], [67, 3, 1, "", "prepare_data"], [67, 3, 1, "", "run"], [67, 3, 1, "", "save_model"], [67, 3, 1, "", "save_task"], [67, 3, 1, "", "train"]], "s3prl.problem.common.hear_vox_lingual.HearVoxLingual": [[67, 3, 1, "", "build_batch_sampler"], [67, 3, 1, "", "build_collate_fn"], [67, 3, 1, "", "build_dataset"], [67, 3, 1, "", "build_downstream"], [67, 3, 1, "", "build_encoder"], [67, 3, 1, "", "build_featurizer"], [67, 3, 1, "", "build_model"], [67, 3, 1, "", "build_optimizer"], [67, 3, 1, "", "build_scheduler"], [67, 3, 1, "", "build_task"], [67, 3, 1, "", "build_upstream"], [67, 3, 1, "", "default_config"], [67, 3, 1, "", "evaluate"], [67, 3, 1, "", "get_class_from_name"], [67, 3, 1, "", "load_model"], [67, 3, 1, "", "load_model_and_task"], [67, 3, 1, "", "load_task"], [67, 3, 1, "", "main"], [67, 3, 1, "", "prepare_data"], [67, 3, 1, "", "run"], [67, 3, 1, "", "save_model"], [67, 3, 1, "", "save_task"], [67, 3, 1, "", "train"]], "s3prl.problem.common.run": [[68, 1, 1, "", "Common"]], "s3prl.problem.common.run.Common": [[68, 3, 1, "", "build_collate_fn"], [68, 3, 1, "", "build_featurizer"], [68, 3, 1, "", "build_model"], [68, 3, 1, "", "build_optimizer"], [68, 3, 1, "", "build_scheduler"], [68, 3, 1, "", "build_task"], [68, 3, 1, "", "build_upstream"], [68, 3, 1, "", "evaluate"], [68, 3, 1, "", "get_class_from_name"], [68, 3, 1, "", "load_model"], [68, 3, 1, "", "load_model_and_task"], [68, 3, 1, "", "load_task"], [68, 3, 1, "", "main"], [68, 3, 1, "", "run"], [68, 3, 1, "", "save_model"], [68, 3, 1, "", "save_task"], [68, 3, 1, "", "train"]], "s3prl.problem.common.superb_er": [[69, 1, 1, "", "SuperbER"], [69, 4, 1, "", "iemocap_for_superb"]], "s3prl.problem.common.superb_er.SuperbER": [[69, 3, 1, "", "build_batch_sampler"], [69, 3, 1, "", "build_collate_fn"], [69, 3, 1, "", "build_dataset"], [69, 3, 1, "", "build_downstream"], [69, 3, 1, "", "build_encoder"], [69, 3, 1, "", "build_featurizer"], [69, 3, 1, "", "build_model"], [69, 3, 1, "", "build_optimizer"], [69, 3, 1, "", "build_scheduler"], [69, 3, 1, "", "build_task"], [69, 3, 1, "", "build_upstream"], [69, 3, 1, "", "default_config"], [69, 3, 1, "", "evaluate"], [69, 3, 1, "", "get_class_from_name"], [69, 3, 1, "", "load_model"], [69, 3, 1, "", "load_model_and_task"], [69, 3, 1, "", "load_task"], [69, 3, 1, "", "main"], [69, 3, 1, "", "prepare_data"], [69, 3, 1, "", "run"], [69, 3, 1, "", "save_model"], [69, 3, 1, "", "save_task"], [69, 3, 1, "", "train"]], "s3prl.problem.common.superb_ic": [[70, 1, 1, "", "SuperbIC"], [70, 4, 1, "", "fsc_for_multi_classification"]], "s3prl.problem.common.superb_ic.SuperbIC": [[70, 3, 1, "", "build_batch_sampler"], [70, 3, 1, "", "build_collate_fn"], [70, 3, 1, "", "build_dataset"], [70, 3, 1, "", "build_downstream"], [70, 3, 1, "", "build_encoder"], [70, 3, 1, "", "build_featurizer"], [70, 3, 1, "", "build_model"], [70, 3, 1, "", "build_optimizer"], [70, 3, 1, "", "build_scheduler"], [70, 3, 1, "", "build_task"], [70, 3, 1, "", "build_upstream"], [70, 3, 1, "", "default_config"], [70, 3, 1, "", "evaluate"], [70, 3, 1, "", "get_class_from_name"], [70, 3, 1, "", "load_model"], [70, 3, 1, "", "load_model_and_task"], [70, 3, 1, "", "load_task"], [70, 3, 1, "", "main"], [70, 3, 1, "", "prepare_data"], [70, 3, 1, "", "run"], [70, 3, 1, "", "save_model"], [70, 3, 1, "", "save_task"], [70, 3, 1, "", "train"]], "s3prl.problem.common.superb_ks": [[71, 1, 1, "", "SuperbKS"], [71, 4, 1, "", "gsc1_for_classification"]], "s3prl.problem.common.superb_ks.SuperbKS": [[71, 3, 1, "", "build_batch_sampler"], [71, 3, 1, "", "build_collate_fn"], [71, 3, 1, "", "build_dataset"], [71, 3, 1, "", "build_downstream"], [71, 3, 1, "", "build_encoder"], [71, 3, 1, "", "build_featurizer"], [71, 3, 1, "", "build_model"], [71, 3, 1, "", "build_optimizer"], [71, 3, 1, "", "build_scheduler"], [71, 3, 1, "", "build_task"], [71, 3, 1, "", "build_upstream"], [71, 3, 1, "", "default_config"], [71, 3, 1, "", "evaluate"], [71, 3, 1, "", "get_class_from_name"], [71, 3, 1, "", "load_model"], [71, 3, 1, "", "load_model_and_task"], [71, 3, 1, "", "load_task"], [71, 3, 1, "", "main"], [71, 3, 1, "", "prepare_data"], [71, 3, 1, "", "run"], [71, 3, 1, "", "save_model"], [71, 3, 1, "", "save_task"], [71, 3, 1, "", "train"]], "s3prl.problem.common.superb_sid": [[72, 1, 1, "", "SuperbSID"], [72, 4, 1, "", "voxceleb1_for_sid"]], "s3prl.problem.common.superb_sid.SuperbSID": [[72, 3, 1, "", "build_batch_sampler"], [72, 3, 1, "", "build_collate_fn"], [72, 3, 1, "", "build_dataset"], [72, 3, 1, "", "build_downstream"], [72, 3, 1, "", "build_encoder"], [72, 3, 1, "", "build_featurizer"], [72, 3, 1, "", "build_model"], [72, 3, 1, "", "build_optimizer"], [72, 3, 1, "", "build_scheduler"], [72, 3, 1, "", "build_task"], [72, 3, 1, "", "build_upstream"], [72, 3, 1, "", "default_config"], [72, 3, 1, "", "evaluate"], [72, 3, 1, "", "get_class_from_name"], [72, 3, 1, "", "load_model"], [72, 3, 1, "", "load_model_and_task"], [72, 3, 1, "", "load_task"], [72, 3, 1, "", "main"], [72, 3, 1, "", "prepare_data"], [72, 3, 1, "", "run"], [72, 3, 1, "", "save_model"], [72, 3, 1, "", "save_task"], [72, 3, 1, "", "train"]], "s3prl.problem.diarization": [[73, 1, 1, "", "SuperbSD"], [74, 0, 0, "-", "run"], [75, 0, 0, "-", "superb_sd"], [76, 0, 0, "-", "util"]], "s3prl.problem.diarization.SuperbSD": [[73, 3, 1, "", "build_batch_sampler"], [73, 3, 1, "", "build_collate_fn"], [73, 3, 1, "", "build_dataset"], [73, 3, 1, "", "build_downstream"], [73, 3, 1, "", "build_featurizer"], [73, 3, 1, "", "build_model"], [73, 3, 1, "", "build_optimizer"], [73, 3, 1, "", "build_scheduler"], [73, 3, 1, "", "build_task"], [73, 3, 1, "", "build_upstream"], [73, 3, 1, "", "default_config"], [73, 3, 1, "", "evaluate"], [73, 3, 1, "", "get_class_from_name"], [73, 3, 1, "", "load_model"], [73, 3, 1, "", "load_model_and_task"], [73, 3, 1, "", "load_task"], [73, 3, 1, "", "main"], [73, 3, 1, "", "prepare_data"], [73, 3, 1, "", "run"], [73, 3, 1, "", "save_model"], [73, 3, 1, "", "save_task"], [73, 3, 1, "", "scoring"], [73, 3, 1, "", "train"]], "s3prl.problem.diarization.run": [[74, 1, 1, "", "Diarization"]], "s3prl.problem.diarization.run.Diarization": [[74, 3, 1, "", "build_collate_fn"], [74, 3, 1, "", "build_featurizer"], [74, 3, 1, "", "build_model"], [74, 3, 1, "", "build_optimizer"], [74, 3, 1, "", "build_scheduler"], [74, 3, 1, "", "build_task"], [74, 3, 1, "", "build_upstream"], [74, 3, 1, "", "evaluate"], [74, 3, 1, "", "get_class_from_name"], [74, 3, 1, "", "load_model"], [74, 3, 1, "", "load_model_and_task"], [74, 3, 1, "", "load_task"], [74, 3, 1, "", "main"], [74, 3, 1, "", "run"], [74, 3, 1, "", "save_model"], [74, 3, 1, "", "save_task"], [74, 3, 1, "", "scoring"], [74, 3, 1, "", "train"]], "s3prl.problem.diarization.superb_sd": [[75, 1, 1, "", "SuperbSD"]], "s3prl.problem.diarization.superb_sd.SuperbSD": [[75, 3, 1, "", "build_batch_sampler"], [75, 3, 1, "", "build_collate_fn"], [75, 3, 1, "", "build_dataset"], [75, 3, 1, "", "build_downstream"], [75, 3, 1, "", "build_featurizer"], [75, 3, 1, "", "build_model"], [75, 3, 1, "", "build_optimizer"], [75, 3, 1, "", "build_scheduler"], [75, 3, 1, "", "build_task"], [75, 3, 1, "", "build_upstream"], [75, 3, 1, "", "default_config"], [75, 3, 1, "", "evaluate"], [75, 3, 1, "", "get_class_from_name"], [75, 3, 1, "", "load_model"], [75, 3, 1, "", "load_model_and_task"], [75, 3, 1, "", "load_task"], [75, 3, 1, "", "main"], [75, 3, 1, "", "prepare_data"], [75, 3, 1, "", "run"], [75, 3, 1, "", "save_model"], [75, 3, 1, "", "save_task"], [75, 3, 1, "", "scoring"], [75, 3, 1, "", "train"]], "s3prl.problem.diarization.util": [[76, 4, 1, "", "csv_to_kaldi_dir"], [76, 4, 1, "", "kaldi_dir_to_csv"], [76, 4, 1, "", "kaldi_dir_to_rttm"]], "s3prl.task": [[77, 1, 1, "", "DiarizationPIT"], [77, 1, 1, "", "DumpFeature"], [77, 1, 1, "", "SpeakerVerification"], [77, 1, 1, "", "Speech2TextCTCTask"], [77, 1, 1, "", "Task"], [77, 1, 1, "", "UtteranceClassificationTask"], [77, 1, 1, "", "UtteranceMultiClassClassificationTask"], [78, 0, 0, "-", "base"], [79, 0, 0, "-", "diarization"], [80, 0, 0, "-", "dump_feature"], [81, 0, 0, "-", "event_prediction"], [82, 0, 0, "-", "scene_prediction"], [83, 0, 0, "-", "speaker_verification_task"], [84, 0, 0, "-", "speech2text_ctc_task"], [85, 0, 0, "-", "utterance_classification_task"]], "s3prl.task.DiarizationPIT": [[77, 5, 1, "", "dump_patches"], [77, 3, 1, "", "forward"], [77, 3, 1, "", "get_state"], [77, 3, 1, "", "parse_cached_results"], [77, 3, 1, "", "predict"], [77, 3, 1, "", "reduction"], [77, 3, 1, "", "set_state"], [77, 3, 1, "", "test_reduction"], [77, 3, 1, "", "test_step"], [77, 3, 1, "", "train_reduction"], [77, 3, 1, "", "train_step"], [77, 5, 1, "", "training"], [77, 3, 1, "", "valid_reduction"], [77, 3, 1, "", "valid_step"]], "s3prl.task.DumpFeature": [[77, 5, 1, "", "dump_patches"], [77, 3, 1, "", "forward"], [77, 3, 1, "", "get_state"], [77, 3, 1, "", "parse_cached_results"], [77, 3, 1, "", "predict"], [77, 3, 1, "", "reduction"], [77, 3, 1, "", "set_state"], [77, 3, 1, "", "test_reduction"], [77, 3, 1, "", "test_step"], [77, 3, 1, "", "train_reduction"], [77, 3, 1, "", "train_step"], [77, 5, 1, "", "training"], [77, 3, 1, "", "valid_reduction"], [77, 3, 1, "", "valid_step"]], "s3prl.task.SpeakerVerification": [[77, 5, 1, "", "dump_patches"], [77, 3, 1, "", "forward"], [77, 3, 1, "", "get_state"], [77, 3, 1, "", "parse_cached_results"], [77, 3, 1, "", "predict"], [77, 3, 1, "", "reduction"], [77, 3, 1, "", "set_state"], [77, 3, 1, "", "test_reduction"], [77, 3, 1, "", "test_step"], [77, 3, 1, "", "train_reduction"], [77, 3, 1, "", "train_step"], [77, 5, 1, "", "training"], [77, 3, 1, "", "valid_reduction"], [77, 3, 1, "", "valid_step"]], "s3prl.task.Speech2TextCTCTask": [[77, 5, 1, "", "dump_patches"], [77, 3, 1, "", "forward"], [77, 3, 1, "", "get_state"], [77, 3, 1, "", "parse_cached_results"], [77, 3, 1, "", "predict"], [77, 3, 1, "", "reduction"], [77, 3, 1, "", "set_state"], [77, 3, 1, "", "test_reduction"], [77, 3, 1, "", "test_step"], [77, 3, 1, "", "train_reduction"], [77, 3, 1, "", "train_step"], [77, 5, 1, "", "training"], [77, 3, 1, "", "valid_reduction"], [77, 3, 1, "", "valid_step"]], "s3prl.task.Task": [[77, 5, 1, "", "dump_patches"], [77, 3, 1, "", "forward"], [77, 3, 1, "", "get_state"], [77, 3, 1, "", "parse_cached_results"], [77, 3, 1, "", "predict"], [77, 3, 1, "", "reduction"], [77, 3, 1, "", "set_state"], [77, 3, 1, "", "test_reduction"], [77, 3, 1, "", "test_step"], [77, 3, 1, "", "train_reduction"], [77, 3, 1, "", "train_step"], [77, 5, 1, "", "training"], [77, 3, 1, "", "valid_reduction"], [77, 3, 1, "", "valid_step"]], "s3prl.task.UtteranceClassificationTask": [[77, 5, 1, "", "dump_patches"], [77, 3, 1, "", "forward"], [77, 3, 1, "", "get_state"], [77, 5, 1, "", "input_size"], [77, 5, 1, "", "output_size"], [77, 3, 1, "", "parse_cached_results"], [77, 3, 1, "", "predict"], [77, 3, 1, "", "reduction"], [77, 3, 1, "", "set_state"], [77, 3, 1, "", "test_reduction"], [77, 3, 1, "", "test_step"], [77, 3, 1, "", "train_reduction"], [77, 3, 1, "", "train_step"], [77, 5, 1, "", "training"], [77, 3, 1, "", "valid_reduction"], [77, 3, 1, "", "valid_step"]], "s3prl.task.UtteranceMultiClassClassificationTask": [[77, 5, 1, "", "dump_patches"], [77, 3, 1, "", "forward"], [77, 3, 1, "", "get_state"], [77, 3, 1, "", "numpy_object_array_all_close"], [77, 3, 1, "", "parse_cached_results"], [77, 3, 1, "", "predict"], [77, 3, 1, "", "reduction"], [77, 3, 1, "", "set_state"], [77, 3, 1, "", "test_reduction"], [77, 3, 1, "", "test_step"], [77, 3, 1, "", "train_reduction"], [77, 3, 1, "", "train_step"], [77, 5, 1, "", "training"], [77, 3, 1, "", "valid_reduction"], [77, 3, 1, "", "valid_step"]], "s3prl.task.base": [[78, 1, 1, "", "Task"]], "s3prl.task.base.Task": [[78, 5, 1, "", "dump_patches"], [78, 3, 1, "", "forward"], [78, 3, 1, "", "get_state"], [78, 3, 1, "", "parse_cached_results"], [78, 3, 1, "", "predict"], [78, 3, 1, "", "reduction"], [78, 3, 1, "", "set_state"], [78, 3, 1, "", "test_reduction"], [78, 3, 1, "", "test_step"], [78, 3, 1, "", "train_reduction"], [78, 3, 1, "", "train_step"], [78, 5, 1, "", "training"], [78, 3, 1, "", "valid_reduction"], [78, 3, 1, "", "valid_step"]], "s3prl.task.diarization": [[79, 1, 1, "", "DiarizationPIT"]], "s3prl.task.diarization.DiarizationPIT": [[79, 5, 1, "", "dump_patches"], [79, 3, 1, "", "forward"], [79, 3, 1, "", "get_state"], [79, 3, 1, "", "parse_cached_results"], [79, 3, 1, "", "predict"], [79, 3, 1, "", "reduction"], [79, 3, 1, "", "set_state"], [79, 3, 1, "", "test_reduction"], [79, 3, 1, "", "test_step"], [79, 3, 1, "", "train_reduction"], [79, 3, 1, "", "train_step"], [79, 5, 1, "", "training"], [79, 3, 1, "", "valid_reduction"], [79, 3, 1, "", "valid_step"]], "s3prl.task.dump_feature": [[80, 1, 1, "", "DumpFeature"]], "s3prl.task.dump_feature.DumpFeature": [[80, 5, 1, "", "dump_patches"], [80, 3, 1, "", "forward"], [80, 3, 1, "", "get_state"], [80, 3, 1, "", "parse_cached_results"], [80, 3, 1, "", "predict"], [80, 3, 1, "", "reduction"], [80, 3, 1, "", "set_state"], [80, 3, 1, "", "test_reduction"], [80, 3, 1, "", "test_step"], [80, 3, 1, "", "train_reduction"], [80, 3, 1, "", "train_step"], [80, 5, 1, "", "training"], [80, 3, 1, "", "valid_reduction"], [80, 3, 1, "", "valid_step"]], "s3prl.task.event_prediction": [[81, 1, 1, "", "EventPredictionTask"]], "s3prl.task.event_prediction.EventPredictionTask": [[81, 5, 1, "", "activation"], [81, 5, 1, "", "dump_patches"], [81, 3, 1, "", "eval_reduction"], [81, 3, 1, "", "forward"], [81, 3, 1, "", "get_state"], [81, 3, 1, "", "log_scores"], [81, 3, 1, "", "parse_cached_results"], [81, 3, 1, "", "predict"], [81, 3, 1, "", "reduction"], [81, 3, 1, "", "set_state"], [81, 3, 1, "", "test_reduction"], [81, 3, 1, "", "test_step"], [81, 3, 1, "", "train_reduction"], [81, 3, 1, "", "train_step"], [81, 5, 1, "", "training"], [81, 3, 1, "", "valid_reduction"], [81, 3, 1, "", "valid_step"]], "s3prl.task.scene_prediction": [[82, 1, 1, "", "ScenePredictionTask"]], "s3prl.task.scene_prediction.ScenePredictionTask": [[82, 5, 1, "", "activation"], [82, 5, 1, "", "dump_patches"], [82, 3, 1, "", "forward"], [82, 3, 1, "", "get_state"], [82, 3, 1, "", "log_scores"], [82, 3, 1, "", "parse_cached_results"], [82, 3, 1, "", "predict"], [82, 3, 1, "", "reduction"], [82, 3, 1, "", "set_state"], [82, 3, 1, "", "test_reduction"], [82, 3, 1, "", "test_step"], [82, 3, 1, "", "train_reduction"], [82, 3, 1, "", "train_step"], [82, 5, 1, "", "training"], [82, 3, 1, "", "valid_reduction"], [82, 3, 1, "", "valid_step"]], "s3prl.task.speaker_verification_task": [[83, 1, 1, "", "SpeakerClassifier"], [83, 1, 1, "", "SpeakerVerification"]], "s3prl.task.speaker_verification_task.SpeakerClassifier": [[83, 5, 1, "", "dump_patches"], [83, 3, 1, "", "forward"], [83, 2, 1, "id0", "input_size"], [83, 2, 1, "id1", "output_size"], [83, 5, 1, "", "training"]], "s3prl.task.speaker_verification_task.SpeakerVerification": [[83, 5, 1, "", "dump_patches"], [83, 3, 1, "", "forward"], [83, 3, 1, "", "get_state"], [83, 5, 1, "", "loss"], [83, 3, 1, "", "parse_cached_results"], [83, 3, 1, "", "predict"], [83, 3, 1, "", "reduction"], [83, 3, 1, "", "set_state"], [83, 3, 1, "", "test_reduction"], [83, 3, 1, "", "test_step"], [83, 3, 1, "", "train_reduction"], [83, 3, 1, "", "train_step"], [83, 5, 1, "", "training"], [83, 3, 1, "", "valid_reduction"], [83, 3, 1, "", "valid_step"]], "s3prl.task.speech2text_ctc_task": [[84, 1, 1, "", "Speech2TextCTCExample"], [84, 1, 1, "", "Speech2TextCTCTask"]], "s3prl.task.speech2text_ctc_task.Speech2TextCTCExample": [[84, 5, 1, "", "dump_patches"], [84, 3, 1, "", "forward"], [84, 2, 1, "", "input_size"], [84, 2, 1, "", "output_size"], [84, 5, 1, "", "training"]], "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask": [[84, 5, 1, "", "dump_patches"], [84, 3, 1, "", "forward"], [84, 3, 1, "", "get_state"], [84, 3, 1, "", "parse_cached_results"], [84, 3, 1, "", "predict"], [84, 3, 1, "", "reduction"], [84, 3, 1, "", "set_state"], [84, 3, 1, "", "test_reduction"], [84, 3, 1, "", "test_step"], [84, 3, 1, "", "train_reduction"], [84, 3, 1, "", "train_step"], [84, 5, 1, "", "training"], [84, 3, 1, "", "valid_reduction"], [84, 3, 1, "", "valid_step"]], "s3prl.task.utterance_classification_task": [[85, 1, 1, "", "UtteranceClassificationTask"], [85, 1, 1, "", "UtteranceClassifierExample"]], "s3prl.task.utterance_classification_task.UtteranceClassificationTask": [[85, 5, 1, "", "dump_patches"], [85, 3, 1, "", "forward"], [85, 3, 1, "", "get_state"], [85, 5, 1, "", "input_size"], [85, 5, 1, "", "output_size"], [85, 3, 1, "", "parse_cached_results"], [85, 3, 1, "", "predict"], [85, 3, 1, "", "reduction"], [85, 3, 1, "", "set_state"], [85, 3, 1, "", "test_reduction"], [85, 3, 1, "", "test_step"], [85, 3, 1, "", "train_reduction"], [85, 3, 1, "", "train_step"], [85, 5, 1, "", "training"], [85, 3, 1, "", "valid_reduction"], [85, 3, 1, "", "valid_step"]], "s3prl.task.utterance_classification_task.UtteranceClassifierExample": [[85, 5, 1, "", "dump_patches"], [85, 3, 1, "", "forward"], [85, 2, 1, "id0", "input_size"], [85, 2, 1, "id1", "output_size"], [85, 5, 1, "", "training"]], "s3prl.util": [[87, 0, 0, "-", "benchmark"], [88, 0, 0, "-", "download"], [89, 0, 0, "-", "override"], [90, 0, 0, "-", "pseudo_data"], [91, 0, 0, "-", "seed"]], "s3prl.util.benchmark": [[87, 1, 1, "", "benchmark"]], "s3prl.util.download": [[88, 4, 1, "", "download"], [88, 4, 1, "", "get_dir"], [88, 4, 1, "", "set_dir"], [88, 4, 1, "", "urls_to_filepaths"]], "s3prl.util.override": [[89, 4, 1, "", "parse_overrides"]], "s3prl.util.pseudo_data": [[90, 4, 1, "", "get_pseudo_wavs"], [90, 1, 1, "", "pseudo_audio"]], "s3prl.util.seed": [[91, 4, 1, "", "fix_random_seeds"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:function", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"dataio": 0, "corpu": [1, 2], "fluentspeechcommand": [1, 3], "iemocap": [1, 4], "librispeech": [1, 6], "librilight": [1, 5], "quesst14": [1, 7], "snip": [1, 8], "speechcommandsv1": [1, 9], "voxceleb1sid": [1, 10], "voxceleb1sv": [1, 11], "base": [2, 50, 78], "fluent_speech_command": 3, "speech_command": 9, "encod": 12, "categoryencod": [12, 13, 56], "g2p": [12, 14], "token": [12, 15], "berttoken": 12, "wordtoken": [12, 15], "charactertoken": [12, 15], "characterslottoken": [12, 15], "subwordtoken": [12, 15], "subwordslottoken": [12, 15], "generate_basic_vocab": [12, 16], "generate_subword_vocab": [12, 16], "generate_vocab": [12, 16], "categori": 13, "phonemetoken": 15, "load_token": 15, "default_phoneme_token": 15, "vocabulari": 16, "sampler": 17, "balancedweightedsampl": [17, 18], "distributedbatchsamplerwrapp": [17, 19], "fixedbatchsizebatchsampl": [17, 20, 54, 56], "groupsameitemsampl": [17, 21, 54], "maxtimestampbatchsampl": [17, 22], "sortedbucketingsampl": [17, 23], "sortedslicesampl": [17, 23], "balanced_weighted_sampl": 18, "distributed_sampl": 19, "fixed_batch_size_batch_sampl": 20, "group_same_item_sampl": 21, "max_timestamp_batch_sampl": 22, "sorted_sampl": 23, "metric": 24, "accuraci": [24, 25], "ter": [24, 25], "wer": [24, 25], "per": [24, 25], "cer": [24, 25], "compute_": [24, 25], "compute_mindcf": [24, 25], "calc_diarization_error": [24, 26], "slot_edit_f1": [24, 27], "slot_value_c": [24, 27], "slot_value_w": [24, 27], "slot_type_f1": [24, 27], "common": [25, 30, 51, 68], "diariz": [26, 73, 74, 79], "slot_fil": 27, "nn": 28, "s3prlupstream": [28, 40], "featur": [28, 40], "framelevel": [28, 30], "utterancelevel": [28, 30], "framelevellinear": [28, 33], "meanpoolinglinear": [28, 33], "meanpool": [28, 35], "temporalaveragepool": [28, 35], "temporalstatisticspool": [28, 35], "rnnencod": [28, 36], "superbdiarizationmodel": [28, 36], "amsoftmax": [28, 37], "softmax": [28, 37], "superbxvector": [28, 38], "xvectorbackbon": [28, 38], "beamdecod": [28, 29], "beam_decod": 29, "hear": 31, "hearfullyconnectedpredict": [31, 56], "interfac": 32, "absupstream": 32, "absfeatur": 32, "absframemodel": 32, "absutterancemodel": 32, "linear": 33, "pit": 34, "pit_loss": 34, "pool": 35, "selfattentivepool": 35, "attentivestatisticspool": 35, "rnn": 36, "rnnlayer": 36, "speaker_loss": 37, "speaker_model": 38, "tdnn": 38, "speakerembeddingextractor": 38, "specaug": 39, "modelwithspecaug": 39, "upstream": [40, 97], "upstreamdownstreammodel": 40, "problem": [41, 50, 96], "superbasr": [41, 42, 44], "superbpr": [41, 42, 45], "superbsf": [41, 42, 46], "superbasv": [41, 47, 49], "superb": [41, 51, 69, 70], "superbk": [41, 51, 71], "superbsid": [41, 51, 56, 72], "superbsd": [41, 73, 75], "hearfsd": [41, 51, 54, 55, 56, 57, 63], "hearesc50": [41, 51, 52, 53, 55, 58, 59, 60, 61, 64, 65, 66, 67], "hearbeijingopera": [41, 51, 52], "hearcremad": [41, 51, 53], "heargsc5hr": [41, 51, 57], "heargtzanmusicspeech": [41, 51, 59], "heargtzan": [41, 51, 58], "heargunshot": [41, 51, 60], "hearlibricount": [41, 51, 61], "hearnsynth5hr": [41, 51, 63], "hearstrok": [41, 51, 64], "hearton": [41, 51, 65], "hearvoc": [41, 51, 66], "hearvoxlingu": [41, 51, 67], "heardcase2016task2": [41, 51, 54, 62], "hearmaestro": [41, 51, 62], "asr": [42, 43], "run": [43, 48, 68, 74, 96], "superb_asr": 44, "prepare_librispeech": 44, "prepare_common_token": 44, "superb_pr": 45, "superb_sf": 46, "audio_snips_for_slot_fil": 46, "asv": [47, 48], "superb_asv": 49, "prepare_voxceleb1_for_sv": 49, "hear_beijing_opera": 52, "hear_cremad": 53, "hear_dcase_2016_task2": 54, "eventpredictiontask": [54, 81], "heartimestampdatapip": 54, "ordereddict": [54, 56], "path": [54, 55, 56, 62], "defaultdict": [54, 55, 56, 62], "dataclass": [54, 56], "dcase_2016_task2": 54, "deepcopi": [54, 62], "hear_esc50": 55, "hear_scene_kfold": 55, "hear_fsd": 56, "hearscenepip": 56, "scenepredictiontask": [56, 82], "hear_scene_trainvaltest": 56, "hear_gsc5hr": 57, "hear_gtzan": 58, "hear_gtzan_music_speech": 59, "hear_gunshot": 60, "hear_libricount": 61, "hear_maestro": 62, "prepare_maestro": 62, "hear_nsynth5hr": 63, "hear_strok": 64, "hear_ton": 65, "hear_voc": 66, "hear_vox_lingu": 67, "superb_": [69, 70], "iemocap_for_superb": 69, "fsc_for_multi_classif": 70, "superb_k": 71, "gsc1_for_classif": 71, "superb_sid": 72, "voxceleb1_for_sid": 72, "superb_sd": 75, "util": [76, 86], "kaldi_dir_to_rttm": 76, "csv_to_kaldi_dir": 76, "kaldi_dir_to_csv": 76, "task": [77, 78], "diarizationpit": [77, 79], "dumpfeatur": [77, 80], "speakerverif": [77, 83], "speech2textctctask": [77, 84], "utteranceclassificationtask": [77, 85], "utterancemulticlassclassificationtask": 77, "dump_featur": 80, "event_predict": 81, "scene_predict": 82, "speaker_verification_task": 83, "speakerclassifi": 83, "speech2text_ctc_task": 84, "speech2textctcexampl": 84, "utterance_classification_task": 85, "utteranceclassifierexampl": 85, "benchmark": 87, "download": 88, "get_dir": 88, "set_dir": 88, "urls_to_filepath": 88, "overrid": 89, "parse_overrid": 89, "pseudo_data": 90, "pseudo_audio": 90, "get_pseudo_wav": 90, "seed": 91, "fix_random_se": 91, "intern": 92, "s3prl": [92, 93, 94, 95, 96, 97], "develop": [92, 95], "write": 92, "code": 92, "unit": 92, "test": 92, "document": [92, 94], "style": 92, "check": 92, "commit": 92, "push": 92, "send": 92, "pull": 92, "request": 92, "contribut": [93, 94], "get": 94, "start": 94, "how": 94, "api": 94, "indic": 94, "tabl": 94, "instal": 95, "minim": 95, "edit": 95, "full": 95, "us": 96, "modul": 96, "customiz": 96, "recip": 96, "usag": 96, "1": 96, "import": 96, "colab": 96, "2": [96, 97], "configur": 96, "from": 96, "cli": 96, "3": 96, "unifi": 96, "main": 96, "custom": 96, "collect": 97, "ssl": 97, "method": 97, "name1": 97, "name2": 97, "mockingjai": 97, "mockingjay_origin": 97, "mockingjay_100hr": 97, "mockingjay_960hr": 97, "mockingjay_logmelbase_t_adamw_b32_200k_100hr": 97, "mockingjay_logmellinearlarge_t_adamw_b32_500k_360hr_drop1": 97, "mockingjay_logmelbase_t_adamw_b32_1m_960hr": 97, "mockingjay_logmelbase_t_adamw_b32_1m_960hr_drop1": 97, "mockingjay_logmelbase_t_adamw_b32_1m_960hr_seq3k": 97, "tera": 97, "tera_100hr": 97, "tera_960hr": 97, "tera_logmelbase_t_f_adamw_b32_200k_100hr": 97, "tera_logmelbase_t_f_m_adamw_b32_200k_100hr": 97, "tera_logmelbase_t_f_adamw_b32_1m_960hr": 97, "tera_logmelbase_t_f_adamw_b32_1m_960hr_drop1": 97, "tera_logmelbase_t_f_adamw_b32_1m_960hr_seq3k": 97, "tera_logmelbase_t_f_m_adamw_b32_1m_960hr_drop1": 97, "tera_fbankbase_t_f_adamw_b32_200k_100hr": 97, "audio": 97, "albert": 97, "audio_albert": 97, "audio_albert_960hr": 97, "audio_albert_logmelbase_t_share_adamw_b32_1m_960hr_drop1": 97, "apc": 97, "apc_360hr": 97, "apc_960hr": 97, "vq": 97, "vq_apc": 97, "vq_apc_360hr": 97, "vq_apc_960hr": 97, "npc": 97, "npc_360hr": 97, "npc_960hr": 97, "pase": 97, "pase_plu": 97, "modifi": 97, "cpc": 97, "modified_cpc": 97, "decoar": 97, "decoar_lay": 97, "0": 97, "decoar2": 97, "wav2vec": 97, "wav2vec_larg": 97, "vq_wav2vec": 97, "vq_wav2vec_gumbel": 97, "vq_wav2vec_kmean": 97, "discret": 97, "bert": 97, "discretebert": 97, "vq_wav2vec_kmeans_roberta": 97, "wav2vec2": 97, "wav2vec2_base_960": 97, "wav2vec2_large_960": 97, "wav2vec2_large_ll60k": 97, "wav2vec2_large_lv60_cv_swbd_fsh": 97, "wav2vec2_conformer_relpo": 97, "wav2vec2_conformer_rop": 97, "xlsr_53": 97, "xl": 97, "r": 97, "xls_r_300m": 97, "xls_r_1b": 97, "xls_r_2b": 97, "hubert": 97, "hubert_bas": 97, "hubert_large_ll60k": 97, "distilhubert": 97, "distilhubert_bas": 97, "mgr": 97, "hubert_base_robust_mgr": 97, "unispeech": 97, "sat": 97, "unispeech_sat": 97, "unispeech_sat_bas": 97, "unispeech_sat_base_plu": 97, "unispeech_sat_larg": 97, "wavlm": 97, "wavlm_bas": 97, "wavlm_base_plu": 97, "wavlm_larg": 97, "data2vec": 97, "data2vec_base_960": 97, "data2vec_large_ll60k": 97, "ast": 97, "ssast": 97, "ssast_frame_bas": 97, "mae": 97, "mae_ast_fram": 97, "mae_ast_patch": 97, "byol": 97, "A": 97, "byol_a_2048": 97, "byol_a_1024": 97, "byol_a_512": 97, "": 97, "byol_s_default": 97, "byol_s_cvt": 97, "byol_s_resnetish34": 97, "vggish": 97}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"dataio": [[0, "dataio"]], "corpus": [[1, "corpus"]], "FluentSpeechCommands": [[1, "fluentspeechcommands"], [3, "fluentspeechcommands"]], "IEMOCAP": [[1, "iemocap"], [4, "id1"]], "LibriSpeech": [[1, "librispeech"], [6, "id1"]], "LibriLight": [[1, "librilight"], [5, "id1"]], "Quesst14": [[1, "quesst14"], [7, "id1"]], "SNIPS": [[1, "snips"], [8, "id1"]], "SpeechCommandsV1": [[1, "speechcommandsv1"], [9, "speechcommandsv1"]], "VoxCeleb1SID": [[1, "voxceleb1sid"], [10, "id1"]], "VoxCeleb1SV": [[1, "voxceleb1sv"], [11, "id1"]], "base": [[2, "base"], [50, "base"], [78, "base"]], "Corpus": [[2, "corpus"]], "fluent_speech_commands": [[3, "fluent-speech-commands"]], "iemocap": [[4, "iemocap"]], "librilight": [[5, "librilight"]], "librispeech": [[6, "librispeech"]], "quesst14": [[7, "quesst14"]], "snips": [[8, "snips"]], "speech_commands": [[9, "speech-commands"]], "voxceleb1sid": [[10, "voxceleb1sid"]], "voxceleb1sv": [[11, "voxceleb1sv"]], "encoder": [[12, "encoder"]], "CategoryEncoder": [[12, "categoryencoder"], [13, "categoryencoder"], [56, "categoryencoder"]], "CategoryEncoders": [[12, "categoryencoders"], [13, "categoryencoders"]], "G2P": [[12, "g2p"], [14, "id1"]], "Tokenizer": [[12, "tokenizer"]], "BertTokenizer": [[12, "berttokenizer"]], "WordTokenizer": [[12, "wordtokenizer"], [15, "wordtokenizer"]], "CharacterTokenizer": [[12, "charactertokenizer"], [15, "charactertokenizer"]], "CharacterSlotTokenizer": [[12, "characterslottokenizer"], [15, "characterslottokenizer"]], "SubwordTokenizer": [[12, "subwordtokenizer"], [15, "subwordtokenizer"]], "SubwordSlotTokenizer": [[12, "subwordslottokenizer"], [15, "subwordslottokenizer"]], "generate_basic_vocab": [[12, "generate-basic-vocab"], [16, "generate-basic-vocab"]], "generate_subword_vocab": [[12, "generate-subword-vocab"], [16, "generate-subword-vocab"]], "generate_vocab": [[12, "generate-vocab"], [16, "generate-vocab"]], "category": [[13, "category"]], "g2p": [[14, "g2p"]], "tokenizer": [[15, "tokenizer"]], "PhonemeTokenizer": [[15, "phonemetokenizer"]], "load_tokenizer": [[15, "load-tokenizer"]], "default_phoneme_tokenizer": [[15, "default-phoneme-tokenizer"]], "vocabulary": [[16, "vocabulary"]], "sampler": [[17, "sampler"]], "BalancedWeightedSampler": [[17, "balancedweightedsampler"], [18, "balancedweightedsampler"]], "DistributedBatchSamplerWrapper": [[17, "distributedbatchsamplerwrapper"], [19, "distributedbatchsamplerwrapper"]], "FixedBatchSizeBatchSampler": [[17, "fixedbatchsizebatchsampler"], [20, "fixedbatchsizebatchsampler"], [54, "fixedbatchsizebatchsampler"], [56, "fixedbatchsizebatchsampler"]], "GroupSameItemSampler": [[17, "groupsameitemsampler"], [21, "groupsameitemsampler"], [54, "groupsameitemsampler"]], "MaxTimestampBatchSampler": [[17, "maxtimestampbatchsampler"], [22, "maxtimestampbatchsampler"]], "SortedBucketingSampler": [[17, "sortedbucketingsampler"], [23, "sortedbucketingsampler"]], "SortedSliceSampler": [[17, "sortedslicesampler"], [23, "sortedslicesampler"]], "balanced_weighted_sampler": [[18, "balanced-weighted-sampler"]], "distributed_sampler": [[19, "distributed-sampler"]], "fixed_batch_size_batch_sampler": [[20, "fixed-batch-size-batch-sampler"]], "group_same_item_sampler": [[21, "group-same-item-sampler"]], "max_timestamp_batch_sampler": [[22, "max-timestamp-batch-sampler"]], "sorted_sampler": [[23, "sorted-sampler"]], "metric": [[24, "metric"]], "accuracy": [[24, "accuracy"], [25, "accuracy"]], "ter": [[24, "ter"], [25, "ter"]], "wer": [[24, "wer"], [25, "wer"]], "per": [[24, "per"], [25, "per"]], "cer": [[24, "cer"], [25, "cer"]], "compute_eer": [[24, "compute-eer"], [25, "compute-eer"]], "compute_minDCF": [[24, "compute-mindcf"], [25, "compute-mindcf"]], "calc_diarization_error": [[24, "calc-diarization-error"], [26, "calc-diarization-error"]], "slot_edit_f1": [[24, "slot-edit-f1"], [27, "slot-edit-f1"]], "slot_value_cer": [[24, "slot-value-cer"], [27, "slot-value-cer"]], "slot_value_wer": [[24, "slot-value-wer"], [27, "slot-value-wer"]], "slot_type_f1": [[24, "slot-type-f1"], [27, "slot-type-f1"]], "common": [[25, "common"], [30, "common"], [51, "common"]], "diarization": [[26, "diarization"], [73, "diarization"], [79, "diarization"]], "slot_filling": [[27, "slot-filling"]], "nn": [[28, "nn"]], "S3PRLUpstream": [[28, "s3prlupstream"], [40, "s3prlupstream"]], "Featurizer": [[28, "featurizer"], [40, "featurizer"]], "FrameLevel": [[28, "framelevel"], [30, "framelevel"]], "UtteranceLevel": [[28, "utterancelevel"], [30, "utterancelevel"]], "FrameLevelLinear": [[28, "framelevellinear"], [33, "framelevellinear"]], "MeanPoolingLinear": [[28, "meanpoolinglinear"], [33, "meanpoolinglinear"]], "MeanPooling": [[28, "meanpooling"], [35, "meanpooling"]], "TemporalAveragePooling": [[28, "temporalaveragepooling"], [35, "temporalaveragepooling"]], "TemporalStatisticsPooling": [[28, "temporalstatisticspooling"], [35, "temporalstatisticspooling"]], "RNNEncoder": [[28, "rnnencoder"], [36, "rnnencoder"]], "SuperbDiarizationModel": [[28, "superbdiarizationmodel"], [36, "superbdiarizationmodel"]], "amsoftmax": [[28, "amsoftmax"], [37, "amsoftmax"]], "softmax": [[28, "softmax"], [37, "softmax"]], "SuperbXvector": [[28, "superbxvector"], [38, "superbxvector"]], "XVectorBackbone": [[28, "xvectorbackbone"], [38, "xvectorbackbone"]], "BeamDecoder": [[28, "beamdecoder"], [29, "beamdecoder"]], "beam_decoder": [[29, "beam-decoder"]], "hear": [[31, "hear"]], "HearFullyConnectedPrediction": [[31, "hearfullyconnectedprediction"], [56, "hearfullyconnectedprediction"]], "interface": [[32, "interface"]], "AbsUpstream": [[32, "absupstream"]], "AbsFeaturizer": [[32, "absfeaturizer"]], "AbsFrameModel": [[32, "absframemodel"]], "AbsUtteranceModel": [[32, "absutterancemodel"]], "linear": [[33, "linear"]], "pit": [[34, "pit"]], "pit_loss": [[34, "pit-loss"]], "pooling": [[35, "pooling"]], "SelfAttentivePooling": [[35, "selfattentivepooling"]], "AttentiveStatisticsPooling": [[35, "attentivestatisticspooling"]], "rnn": [[36, "rnn"]], "RNNLayer": [[36, "rnnlayer"]], "speaker_loss": [[37, "speaker-loss"]], "speaker_model": [[38, "speaker-model"]], "TDNN": [[38, "tdnn"]], "SpeakerEmbeddingExtractor": [[38, "speakerembeddingextractor"]], "specaug": [[39, "specaug"]], "ModelWithSpecaug": [[39, "modelwithspecaug"]], "SpecAug": [[39, "id1"]], "upstream": [[40, "upstream"]], "UpstreamDownstreamModel": [[40, "upstreamdownstreammodel"]], "problem": [[41, "problem"]], "SuperbASR": [[41, "superbasr"], [42, "superbasr"], [44, "superbasr"]], "SuperbPR": [[41, "superbpr"], [42, "superbpr"], [45, "superbpr"]], "SuperbSF": [[41, "superbsf"], [42, "superbsf"], [46, "superbsf"]], "SuperbASV": [[41, "superbasv"], [47, "superbasv"], [49, "superbasv"]], "SuperbER": [[41, "superber"], [51, "superber"], [69, "superber"]], "SuperbIC": [[41, "superbic"], [51, "superbic"], [70, "superbic"]], "SuperbKS": [[41, "superbks"], [51, "superbks"], [71, "superbks"]], "SuperbSID": [[41, "superbsid"], [51, "superbsid"], [56, "superbsid"], [72, "superbsid"]], "SuperbSD": [[41, "superbsd"], [73, "superbsd"], [75, "superbsd"]], "HearFSD": [[41, "hearfsd"], [51, "hearfsd"], [54, "hearfsd"], [55, "hearfsd"], [56, "hearfsd"], [57, "hearfsd"], [63, "hearfsd"]], "HearESC50": [[41, "hearesc50"], [51, "hearesc50"], [52, "hearesc50"], [53, "hearesc50"], [55, "hearesc50"], [58, "hearesc50"], [59, "hearesc50"], [60, "hearesc50"], [61, "hearesc50"], [64, "hearesc50"], [65, "hearesc50"], [66, "hearesc50"], [67, "hearesc50"]], "HearBeijingOpera": [[41, "hearbeijingopera"], [51, "hearbeijingopera"], [52, "hearbeijingopera"]], "HearCremaD": [[41, "hearcremad"], [51, "hearcremad"], [53, "hearcremad"]], "HearGSC5hr": [[41, "heargsc5hr"], [51, "heargsc5hr"], [57, "heargsc5hr"]], "HearGtzanMusicSpeech": [[41, "heargtzanmusicspeech"], [51, "heargtzanmusicspeech"], [59, "heargtzanmusicspeech"]], "HearGtzan": [[41, "heargtzan"], [51, "heargtzan"], [58, "heargtzan"]], "HearGunshot": [[41, "heargunshot"], [51, "heargunshot"], [60, "heargunshot"]], "HearLibriCount": [[41, "hearlibricount"], [51, "hearlibricount"], [61, "hearlibricount"]], "HearNsynth5hr": [[41, "hearnsynth5hr"], [51, "hearnsynth5hr"], [63, "hearnsynth5hr"]], "HearStroke": [[41, "hearstroke"], [51, "hearstroke"], [64, "hearstroke"]], "HearTonic": [[41, "heartonic"], [51, "heartonic"], [65, "heartonic"]], "HearVocal": [[41, "hearvocal"], [51, "hearvocal"], [66, "hearvocal"]], "HearVoxLingual": [[41, "hearvoxlingual"], [51, "hearvoxlingual"], [67, "hearvoxlingual"]], "HearDcase2016Task2": [[41, "heardcase2016task2"], [51, "heardcase2016task2"], [54, "heardcase2016task2"], [62, "heardcase2016task2"]], "HearMaestro": [[41, "hearmaestro"], [51, "hearmaestro"], [62, "hearmaestro"]], "asr": [[42, "asr"]], "run": [[43, "run"], [48, "run"], [68, "run"], [74, "run"]], "ASR": [[43, "asr"]], "superb_asr": [[44, "superb-asr"]], "prepare_librispeech": [[44, "prepare-librispeech"]], "prepare_common_tokenizer": [[44, "prepare-common-tokenizer"]], "superb_pr": [[45, "superb-pr"]], "superb_sf": [[46, "superb-sf"]], "audio_snips_for_slot_filling": [[46, "audio-snips-for-slot-filling"]], "asv": [[47, "asv"]], "ASV": [[48, "asv"]], "superb_asv": [[49, "superb-asv"]], "prepare_voxceleb1_for_sv": [[49, "prepare-voxceleb1-for-sv"]], "Problem": [[50, "problem"]], "hear_beijing_opera": [[52, "hear-beijing-opera"]], "hear_cremad": [[53, "hear-cremad"]], "hear_dcase_2016_task2": [[54, "hear-dcase-2016-task2"]], "EventPredictionTask": [[54, "eventpredictiontask"], [81, "eventpredictiontask"]], "HearTimestampDatapipe": [[54, "heartimestampdatapipe"]], "OrderedDict": [[54, "ordereddict"], [56, "ordereddict"]], "Path": [[54, "path"], [55, "path"], [56, "path"], [62, "path"]], "defaultdict": [[54, "defaultdict"], [55, "defaultdict"], [56, "defaultdict"], [62, "defaultdict"]], "dataclass": [[54, "dataclass"], [56, "dataclass"]], "dcase_2016_task2": [[54, "dcase-2016-task2"]], "deepcopy": [[54, "deepcopy"], [62, "deepcopy"]], "hear_esc50": [[55, "hear-esc50"]], "hear_scene_kfolds": [[55, "hear-scene-kfolds"]], "hear_fsd": [[56, "hear-fsd"]], "HearScenePipe": [[56, "hearscenepipe"]], "ScenePredictionTask": [[56, "scenepredictiontask"], [82, "scenepredictiontask"]], "hear_scene_trainvaltest": [[56, "hear-scene-trainvaltest"]], "hear_gsc5hr": [[57, "hear-gsc5hr"]], "hear_gtzan": [[58, "hear-gtzan"]], "hear_gtzan_music_speech": [[59, "hear-gtzan-music-speech"]], "hear_gunshot": [[60, "hear-gunshot"]], "hear_libricount": [[61, "hear-libricount"]], "hear_maestro": [[62, "hear-maestro"]], "prepare_maestro": [[62, "prepare-maestro"]], "hear_nsynth5hr": [[63, "hear-nsynth5hr"]], "hear_stroke": [[64, "hear-stroke"]], "hear_tonic": [[65, "hear-tonic"]], "hear_vocal": [[66, "hear-vocal"]], "hear_vox_lingual": [[67, "hear-vox-lingual"]], "Common": [[68, "common"]], "superb_er": [[69, "superb-er"]], "iemocap_for_superb": [[69, "iemocap-for-superb"]], "superb_ic": [[70, "superb-ic"]], "fsc_for_multi_classification": [[70, "fsc-for-multi-classification"]], "superb_ks": [[71, "superb-ks"]], "gsc1_for_classification": [[71, "gsc1-for-classification"]], "superb_sid": [[72, "superb-sid"]], "voxceleb1_for_sid": [[72, "voxceleb1-for-sid"]], "Diarization": [[74, "diarization"]], "superb_sd": [[75, "superb-sd"]], "util": [[76, "util"], [86, "util"]], "kaldi_dir_to_rttm": [[76, "kaldi-dir-to-rttm"]], "csv_to_kaldi_dir": [[76, "csv-to-kaldi-dir"]], "kaldi_dir_to_csv": [[76, "kaldi-dir-to-csv"]], "task": [[77, "task"]], "Task": [[77, "id1"], [78, "task"]], "DiarizationPIT": [[77, "diarizationpit"], [79, "diarizationpit"]], "DumpFeature": [[77, "dumpfeature"], [80, "dumpfeature"]], "SpeakerVerification": [[77, "speakerverification"], [83, "speakerverification"]], "Speech2TextCTCTask": [[77, "speech2textctctask"], [84, "speech2textctctask"]], "UtteranceClassificationTask": [[77, "utteranceclassificationtask"], [85, "utteranceclassificationtask"]], "UtteranceMultiClassClassificationTask": [[77, "utterancemulticlassclassificationtask"]], "dump_feature": [[80, "dump-feature"]], "event_prediction": [[81, "event-prediction"]], "scene_prediction": [[82, "scene-prediction"]], "speaker_verification_task": [[83, "speaker-verification-task"]], "SpeakerClassifier": [[83, "speakerclassifier"]], "speech2text_ctc_task": [[84, "speech2text-ctc-task"]], "Speech2TextCTCExample": [[84, "speech2textctcexample"]], "utterance_classification_task": [[85, "utterance-classification-task"]], "UtteranceClassifierExample": [[85, "utteranceclassifierexample"]], "benchmark": [[87, "benchmark"], [87, "id1"]], "download": [[88, "download"], [88, "id1"]], "get_dir": [[88, "get-dir"]], "set_dir": [[88, "set-dir"]], "urls_to_filepaths": [[88, "urls-to-filepaths"]], "override": [[89, "override"]], "parse_overrides": [[89, "parse-overrides"]], "pseudo_data": [[90, "pseudo-data"]], "pseudo_audio": [[90, "pseudo-audio"]], "get_pseudo_wavs": [[90, "get-pseudo-wavs"]], "seed": [[91, "seed"]], "fix_random_seeds": [[91, "fix-random-seeds"]], "Internal S3PRL Development": [[92, "internal-s3prl-development"]], "Write code": [[92, "write-code"]], "Unit tests": [[92, "unit-tests"]], "Documentation": [[92, "documentation"]], "Coding-style check": [[92, "coding-style-check"]], "Commit / Push": [[92, "commit-push"]], "Send a pull request": [[92, "send-a-pull-request"]], "Contribute to S3PRL": [[93, "contribute-to-s3prl"]], "S3PRL": [[94, "s3prl"]], "Getting Started": [[94, "getting-started"]], "Getting started": [[94, null]], "How to Contribute": [[94, "how-to-contribute"], [94, null]], "API Documentation": [[94, "api-documentation"]], "Indices and tables": [[94, "indices-and-tables"]], "Install S3PRL": [[95, "install-s3prl"]], "Minimal installation": [[95, "minimal-installation"]], "Editable installation": [[95, "editable-installation"]], "Full installation": [[95, "full-installation"]], "Development installation": [[95, "development-installation"]], "Use Problem module to run customizable recipes": [[96, "use-problem-module-to-run-customizable-recipes"]], "Usage 1. Import and run on Colab": [[96, "usage-1-import-and-run-on-colab"]], "Usage 2. Run & configure from CLI": [[96, "usage-2-run-configure-from-cli"]], "Usage 3. Run & configure with the unified s3prl-main": [[96, "usage-3-run-configure-with-the-unified-s3prl-main"]], "Customization": [[96, "customization"]], "S3PRL Upstream Collection": [[97, "s3prl-upstream-collection"]], "SSL Method": [[97, "ssl-method"]], "name1": [[97, "name1"]], "name2": [[97, "name2"]], "Mockingjay": [[97, "mockingjay"]], "mockingjay": [[97, "id1"]], "mockingjay_origin": [[97, "mockingjay-origin"]], "mockingjay_100hr": [[97, "mockingjay-100hr"]], "mockingjay_960hr": [[97, "mockingjay-960hr"]], "mockingjay_logMelBase_T_AdamW_b32_200k_100hr": [[97, "mockingjay-logmelbase-t-adamw-b32-200k-100hr"]], "mockingjay_logMelLinearLarge_T_AdamW_b32_500k_360hr_drop1": [[97, "mockingjay-logmellinearlarge-t-adamw-b32-500k-360hr-drop1"]], "mockingjay_logMelBase_T_AdamW_b32_1m_960hr": [[97, "mockingjay-logmelbase-t-adamw-b32-1m-960hr"]], "mockingjay_logMelBase_T_AdamW_b32_1m_960hr_drop1": [[97, "mockingjay-logmelbase-t-adamw-b32-1m-960hr-drop1"]], "mockingjay_logMelBase_T_AdamW_b32_1m_960hr_seq3k": [[97, "mockingjay-logmelbase-t-adamw-b32-1m-960hr-seq3k"]], "TERA": [[97, "tera"]], "tera": [[97, "id2"]], "tera_100hr": [[97, "tera-100hr"]], "tera_960hr": [[97, "tera-960hr"]], "tera_logMelBase_T_F_AdamW_b32_200k_100hr": [[97, "tera-logmelbase-t-f-adamw-b32-200k-100hr"]], "tera_logMelBase_T_F_M_AdamW_b32_200k_100hr": [[97, "tera-logmelbase-t-f-m-adamw-b32-200k-100hr"]], "tera_logMelBase_T_F_AdamW_b32_1m_960hr": [[97, "tera-logmelbase-t-f-adamw-b32-1m-960hr"]], "tera_logMelBase_T_F_AdamW_b32_1m_960hr_drop1": [[97, "tera-logmelbase-t-f-adamw-b32-1m-960hr-drop1"]], "tera_logMelBase_T_F_AdamW_b32_1m_960hr_seq3k": [[97, "tera-logmelbase-t-f-adamw-b32-1m-960hr-seq3k"]], "tera_logMelBase_T_F_M_AdamW_b32_1m_960hr_drop1": [[97, "tera-logmelbase-t-f-m-adamw-b32-1m-960hr-drop1"]], "tera_fbankBase_T_F_AdamW_b32_200k_100hr": [[97, "tera-fbankbase-t-f-adamw-b32-200k-100hr"]], "Audio ALBERT": [[97, "audio-albert"]], "audio_albert": [[97, "id3"]], "audio_albert_960hr": [[97, "audio-albert-960hr"]], "audio_albert_logMelBase_T_share_AdamW_b32_1m_960hr_drop1": [[97, "audio-albert-logmelbase-t-share-adamw-b32-1m-960hr-drop1"]], "APC": [[97, "apc"]], "apc": [[97, "id4"]], "apc_360hr": [[97, "apc-360hr"]], "apc_960hr": [[97, "apc-960hr"]], "VQ-APC": [[97, "vq-apc"]], "vq_apc": [[97, "id5"]], "vq_apc_360hr": [[97, "vq-apc-360hr"]], "vq_apc_960hr": [[97, "vq-apc-960hr"]], "NPC": [[97, "npc"]], "npc": [[97, "id6"]], "npc_360hr": [[97, "npc-360hr"]], "npc_960hr": [[97, "npc-960hr"]], "PASE+": [[97, "pase"]], "pase_plus": [[97, "pase-plus"]], "Modified CPC": [[97, "modified-cpc"]], "modified_cpc": [[97, "id7"]], "DeCoAR": [[97, "decoar"]], "decoar_layers": [[97, "decoar-layers"]], "DeCoAR 2.0": [[97, "decoar-2-0"]], "decoar2": [[97, "decoar2"]], "wav2vec": [[97, "wav2vec"], [97, "id8"]], "wav2vec_large": [[97, "wav2vec-large"]], "vq-wav2vec": [[97, "vq-wav2vec"]], "vq_wav2vec": [[97, "id9"]], "vq_wav2vec_gumbel": [[97, "vq-wav2vec-gumbel"]], "vq_wav2vec_kmeans": [[97, "vq-wav2vec-kmeans"]], "Discrete BERT": [[97, "discrete-bert"]], "discretebert": [[97, "discretebert"]], "vq_wav2vec_kmeans_roberta": [[97, "vq-wav2vec-kmeans-roberta"]], "wav2vec 2.0": [[97, "wav2vec-2-0"]], "wav2vec2": [[97, "wav2vec2"]], "wav2vec2_base_960": [[97, "wav2vec2-base-960"]], "wav2vec2_large_960": [[97, "wav2vec2-large-960"]], "wav2vec2_large_ll60k": [[97, "wav2vec2-large-ll60k"]], "wav2vec2_large_lv60_cv_swbd_fsh": [[97, "wav2vec2-large-lv60-cv-swbd-fsh"]], "wav2vec2_conformer_relpos": [[97, "wav2vec2-conformer-relpos"]], "wav2vec2_conformer_rope": [[97, "wav2vec2-conformer-rope"]], "xlsr_53": [[97, "xlsr-53"]], "XLS-R": [[97, "xls-r"]], "xls_r_300m": [[97, "xls-r-300m"]], "xls_r_1b": [[97, "xls-r-1b"]], "xls_r_2b": [[97, "xls-r-2b"]], "HuBERT": [[97, "hubert"]], "hubert": [[97, "id11"]], "hubert_base": [[97, "hubert-base"]], "hubert_large_ll60k": [[97, "hubert-large-ll60k"]], "DistilHuBERT": [[97, "distilhubert"]], "distilhubert": [[97, "id12"]], "distilhubert_base": [[97, "distilhubert-base"]], "HuBERT-MGR": [[97, "hubert-mgr"]], "hubert_base_robust_mgr": [[97, "hubert-base-robust-mgr"]], "Unispeech-SAT": [[97, "unispeech-sat"]], "unispeech_sat": [[97, "id13"]], "unispeech_sat_base": [[97, "unispeech-sat-base"]], "unispeech_sat_base_plus": [[97, "unispeech-sat-base-plus"]], "unispeech_sat_large": [[97, "unispeech-sat-large"]], "WavLM": [[97, "wavlm"]], "wavlm": [[97, "id14"]], "wavlm_base": [[97, "wavlm-base"]], "wavlm_base_plus": [[97, "wavlm-base-plus"]], "wavlm_large": [[97, "wavlm-large"]], "data2vec": [[97, "data2vec"], [97, "id15"]], "data2vec_base_960": [[97, "data2vec-base-960"]], "data2vec_large_ll60k": [[97, "data2vec-large-ll60k"]], "AST": [[97, "ast"]], "ast": [[97, "id16"]], "SSAST": [[97, "ssast"]], "ssast_frame_base": [[97, "ssast-frame-base"]], "MAE-AST": [[97, "mae-ast"]], "mae_ast_frame": [[97, "mae-ast-frame"]], "mae_ast_patch": [[97, "mae-ast-patch"]], "Byol-A": [[97, "byol-a"]], "byol_a_2048": [[97, "byol-a-2048"]], "byol_a_1024": [[97, "byol-a-1024"]], "byol_a_512": [[97, "byol-a-512"]], "Byol-S": [[97, "byol-s"]], "byol_s_default": [[97, "byol-s-default"]], "byol_s_cvt": [[97, "byol-s-cvt"]], "byol_s_resnetish34": [[97, "byol-s-resnetish34"]], "VGGish": [[97, "vggish"]], "vggish": [[97, "id17"]]}, "indexentries": {"module": [[0, "module-s3prl.dataio"], [1, "module-s3prl.dataio.corpus"], [2, "module-s3prl.dataio.corpus.base"], [3, "module-s3prl.dataio.corpus.fluent_speech_commands"], [4, "module-s3prl.dataio.corpus.iemocap"], [5, "module-s3prl.dataio.corpus.librilight"], [6, "module-s3prl.dataio.corpus.librispeech"], [7, "module-s3prl.dataio.corpus.quesst14"], [8, "module-s3prl.dataio.corpus.snips"], [9, "module-s3prl.dataio.corpus.speech_commands"], [10, "module-s3prl.dataio.corpus.voxceleb1sid"], [11, "module-s3prl.dataio.corpus.voxceleb1sv"], [12, "module-s3prl.dataio.encoder"], [13, "module-s3prl.dataio.encoder.category"], [14, "module-s3prl.dataio.encoder.g2p"], [15, "module-s3prl.dataio.encoder.tokenizer"], [16, "module-s3prl.dataio.encoder.vocabulary"], [17, "module-s3prl.dataio.sampler"], [18, "module-s3prl.dataio.sampler.balanced_weighted_sampler"], [19, "module-s3prl.dataio.sampler.distributed_sampler"], [20, "module-s3prl.dataio.sampler.fixed_batch_size_batch_sampler"], [21, "module-s3prl.dataio.sampler.group_same_item_sampler"], [22, "module-s3prl.dataio.sampler.max_timestamp_batch_sampler"], [23, "module-s3prl.dataio.sampler.sorted_sampler"], [24, "module-s3prl.metric"], [25, "module-s3prl.metric.common"], [26, "module-s3prl.metric.diarization"], [27, "module-s3prl.metric.slot_filling"], [28, "module-s3prl.nn"], [29, "module-s3prl.nn.beam_decoder"], [30, "module-s3prl.nn.common"], [31, "module-s3prl.nn.hear"], [32, "module-s3prl.nn.interface"], [33, "module-s3prl.nn.linear"], [34, "module-s3prl.nn.pit"], [35, "module-s3prl.nn.pooling"], [36, "module-s3prl.nn.rnn"], [37, "module-s3prl.nn.speaker_loss"], [38, "module-s3prl.nn.speaker_model"], [39, "module-s3prl.nn.specaug"], [40, "module-s3prl.nn.upstream"], [41, "module-s3prl.problem"], [42, "module-s3prl.problem.asr"], [43, "module-s3prl.problem.asr.run"], [44, "module-s3prl.problem.asr.superb_asr"], [45, "module-s3prl.problem.asr.superb_pr"], [46, "module-s3prl.problem.asr.superb_sf"], [47, "module-s3prl.problem.asv"], [48, "module-s3prl.problem.asv.run"], [49, "module-s3prl.problem.asv.superb_asv"], [50, "module-s3prl.problem.base"], [51, "module-s3prl.problem.common"], [52, "module-s3prl.problem.common.hear_beijing_opera"], [53, "module-s3prl.problem.common.hear_cremad"], [54, "module-s3prl.problem.common.hear_dcase_2016_task2"], [55, "module-s3prl.problem.common.hear_esc50"], [56, "module-s3prl.problem.common.hear_fsd"], [57, "module-s3prl.problem.common.hear_gsc5hr"], [58, "module-s3prl.problem.common.hear_gtzan"], [59, "module-s3prl.problem.common.hear_gtzan_music_speech"], [60, "module-s3prl.problem.common.hear_gunshot"], [61, "module-s3prl.problem.common.hear_libricount"], [62, "module-s3prl.problem.common.hear_maestro"], [63, "module-s3prl.problem.common.hear_nsynth5hr"], [64, "module-s3prl.problem.common.hear_stroke"], [65, "module-s3prl.problem.common.hear_tonic"], [66, "module-s3prl.problem.common.hear_vocal"], [67, "module-s3prl.problem.common.hear_vox_lingual"], [68, "module-s3prl.problem.common.run"], [69, "module-s3prl.problem.common.superb_er"], [70, "module-s3prl.problem.common.superb_ic"], [71, "module-s3prl.problem.common.superb_ks"], [72, "module-s3prl.problem.common.superb_sid"], [73, "module-s3prl.problem.diarization"], [74, "module-s3prl.problem.diarization.run"], [75, "module-s3prl.problem.diarization.superb_sd"], [76, "module-s3prl.problem.diarization.util"], [77, "module-s3prl.task"], [78, "module-s3prl.task.base"], [79, "module-s3prl.task.diarization"], [80, "module-s3prl.task.dump_feature"], [81, "module-s3prl.task.event_prediction"], [82, "module-s3prl.task.scene_prediction"], [83, "module-s3prl.task.speaker_verification_task"], [84, "module-s3prl.task.speech2text_ctc_task"], [85, "module-s3prl.task.utterance_classification_task"], [86, "module-s3prl.util"], [87, "module-s3prl.util.benchmark"], [88, "module-s3prl.util.download"], [89, "module-s3prl.util.override"], [90, "module-s3prl.util.pseudo_data"], [91, "module-s3prl.util.seed"]], "s3prl.dataio": [[0, "module-s3prl.dataio"]], "fluentspeechcommands (class in s3prl.dataio.corpus)": [[1, "s3prl.dataio.corpus.FluentSpeechCommands"]], "iemocap (class in s3prl.dataio.corpus)": [[1, "s3prl.dataio.corpus.IEMOCAP"]], "librilight (class in s3prl.dataio.corpus)": [[1, "s3prl.dataio.corpus.LibriLight"]], "librispeech (class in s3prl.dataio.corpus)": [[1, "s3prl.dataio.corpus.LibriSpeech"]], "quesst14 (class in s3prl.dataio.corpus)": [[1, "s3prl.dataio.corpus.Quesst14"]], "snips (class in s3prl.dataio.corpus)": [[1, "s3prl.dataio.corpus.SNIPS"]], "speechcommandsv1 (class in s3prl.dataio.corpus)": [[1, "s3prl.dataio.corpus.SpeechCommandsV1"]], "voxceleb1sid (class in s3prl.dataio.corpus)": [[1, "s3prl.dataio.corpus.VoxCeleb1SID"]], "voxceleb1sv (class in s3prl.dataio.corpus)": [[1, "s3prl.dataio.corpus.VoxCeleb1SV"]], "all_data (s3prl.dataio.corpus.fluentspeechcommands property)": [[1, "s3prl.dataio.corpus.FluentSpeechCommands.all_data"]], "all_data (s3prl.dataio.corpus.iemocap property)": [[1, "s3prl.dataio.corpus.IEMOCAP.all_data"]], "all_data (s3prl.dataio.corpus.librilight property)": [[1, "s3prl.dataio.corpus.LibriLight.all_data"]], "all_data (s3prl.dataio.corpus.librispeech property)": [[1, "s3prl.dataio.corpus.LibriSpeech.all_data"]], "all_data (s3prl.dataio.corpus.snips property)": [[1, "s3prl.dataio.corpus.SNIPS.all_data"]], "all_data (s3prl.dataio.corpus.speechcommandsv1 property)": [[1, "s3prl.dataio.corpus.SpeechCommandsV1.all_data"]], "all_data (s3prl.dataio.corpus.voxceleb1sid property)": [[1, "s3prl.dataio.corpus.VoxCeleb1SID.all_data"]], "all_data (s3prl.dataio.corpus.voxceleb1sv property)": [[1, "s3prl.dataio.corpus.VoxCeleb1SV.all_data"]], "data_split (s3prl.dataio.corpus.fluentspeechcommands property)": [[1, "s3prl.dataio.corpus.FluentSpeechCommands.data_split"]], "data_split (s3prl.dataio.corpus.iemocap property)": [[1, "s3prl.dataio.corpus.IEMOCAP.data_split"]], "data_split (s3prl.dataio.corpus.librilight property)": [[1, "s3prl.dataio.corpus.LibriLight.data_split"]], "data_split (s3prl.dataio.corpus.librispeech property)": [[1, "s3prl.dataio.corpus.LibriSpeech.data_split"]], "data_split (s3prl.dataio.corpus.snips property)": [[1, "s3prl.dataio.corpus.SNIPS.data_split"]], "data_split (s3prl.dataio.corpus.speechcommandsv1 property)": [[1, "s3prl.dataio.corpus.SpeechCommandsV1.data_split"]], "data_split (s3prl.dataio.corpus.voxceleb1sid property)": [[1, "s3prl.dataio.corpus.VoxCeleb1SID.data_split"]], "data_split (s3prl.dataio.corpus.voxceleb1sv property)": [[1, "s3prl.dataio.corpus.VoxCeleb1SV.data_split"]], "data_split_ids (s3prl.dataio.corpus.fluentspeechcommands property)": [[1, "s3prl.dataio.corpus.FluentSpeechCommands.data_split_ids"]], "data_split_ids (s3prl.dataio.corpus.iemocap property)": [[1, "s3prl.dataio.corpus.IEMOCAP.data_split_ids"]], "data_split_ids (s3prl.dataio.corpus.librilight property)": [[1, "s3prl.dataio.corpus.LibriLight.data_split_ids"]], "data_split_ids (s3prl.dataio.corpus.librispeech property)": [[1, "s3prl.dataio.corpus.LibriSpeech.data_split_ids"]], "data_split_ids (s3prl.dataio.corpus.snips property)": [[1, "s3prl.dataio.corpus.SNIPS.data_split_ids"]], "data_split_ids (s3prl.dataio.corpus.speechcommandsv1 property)": [[1, "s3prl.dataio.corpus.SpeechCommandsV1.data_split_ids"]], "data_split_ids (s3prl.dataio.corpus.voxceleb1sid property)": [[1, "s3prl.dataio.corpus.VoxCeleb1SID.data_split_ids"]], "data_split_ids (s3prl.dataio.corpus.voxceleb1sv property)": [[1, "s3prl.dataio.corpus.VoxCeleb1SV.data_split_ids"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.fluentspeechcommands static method)": [[1, "s3prl.dataio.corpus.FluentSpeechCommands.dataframe_to_datapoints"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.iemocap static method)": [[1, "s3prl.dataio.corpus.IEMOCAP.dataframe_to_datapoints"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.librilight static method)": [[1, "s3prl.dataio.corpus.LibriLight.dataframe_to_datapoints"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.librispeech static method)": [[1, "s3prl.dataio.corpus.LibriSpeech.dataframe_to_datapoints"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.snips static method)": [[1, "s3prl.dataio.corpus.SNIPS.dataframe_to_datapoints"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.speechcommandsv1 static method)": [[1, "s3prl.dataio.corpus.SpeechCommandsV1.dataframe_to_datapoints"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.voxceleb1sid static method)": [[1, "s3prl.dataio.corpus.VoxCeleb1SID.dataframe_to_datapoints"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.voxceleb1sv static method)": [[1, "s3prl.dataio.corpus.VoxCeleb1SV.dataframe_to_datapoints"]], "docs (s3prl.dataio.corpus.quesst14 property)": [[1, "s3prl.dataio.corpus.Quesst14.docs"]], "download_dataset() (s3prl.dataio.corpus.fluentspeechcommands class method)": [[1, "s3prl.dataio.corpus.FluentSpeechCommands.download_dataset"]], "download_dataset() (s3prl.dataio.corpus.iemocap class method)": [[1, "s3prl.dataio.corpus.IEMOCAP.download_dataset"]], "download_dataset() (s3prl.dataio.corpus.librilight class method)": [[1, "s3prl.dataio.corpus.LibriLight.download_dataset"]], "download_dataset() (s3prl.dataio.corpus.librispeech class method)": [[1, "s3prl.dataio.corpus.LibriSpeech.download_dataset"]], "download_dataset() (s3prl.dataio.corpus.quesst14 class method)": [[1, "s3prl.dataio.corpus.Quesst14.download_dataset"]], "download_dataset() (s3prl.dataio.corpus.speechcommandsv1 class method)": [[1, "s3prl.dataio.corpus.SpeechCommandsV1.download_dataset"]], "download_dataset() (s3prl.dataio.corpus.voxceleb1sid class method)": [[1, "s3prl.dataio.corpus.VoxCeleb1SID.download_dataset"]], "format_path() (s3prl.dataio.corpus.voxceleb1sv static method)": [[1, "s3prl.dataio.corpus.VoxCeleb1SV.format_path"]], "format_test_trials() (s3prl.dataio.corpus.voxceleb1sv class method)": [[1, "s3prl.dataio.corpus.VoxCeleb1SV.format_test_trials"]], "get_corpus_splits() (s3prl.dataio.corpus.librispeech method)": [[1, "s3prl.dataio.corpus.LibriSpeech.get_corpus_splits"]], "get_session_with_act() (s3prl.dataio.corpus.iemocap method)": [[1, "s3prl.dataio.corpus.IEMOCAP.get_session_with_act"]], "get_whole_session() (s3prl.dataio.corpus.iemocap method)": [[1, "s3prl.dataio.corpus.IEMOCAP.get_whole_session"]], "list_to_dict() (s3prl.dataio.corpus.speechcommandsv1 class method)": [[1, "s3prl.dataio.corpus.SpeechCommandsV1.list_to_dict"]], "parse_test_data_list() (s3prl.dataio.corpus.speechcommandsv1 static method)": [[1, "s3prl.dataio.corpus.SpeechCommandsV1.parse_test_data_list"]], "parse_train_valid_data_list() (s3prl.dataio.corpus.speechcommandsv1 static method)": [[1, "s3prl.dataio.corpus.SpeechCommandsV1.parse_train_valid_data_list"]], "path2data() (s3prl.dataio.corpus.voxceleb1sv class method)": [[1, "s3prl.dataio.corpus.VoxCeleb1SV.path2data"]], "path2uid() (s3prl.dataio.corpus.voxceleb1sv class method)": [[1, "s3prl.dataio.corpus.VoxCeleb1SV.path2uid"]], "path_to_unique_name() (s3prl.dataio.corpus.speechcommandsv1 static method)": [[1, "s3prl.dataio.corpus.SpeechCommandsV1.path_to_unique_name"]], "s3prl.dataio.corpus": [[1, "module-s3prl.dataio.corpus"]], "split_dataset() (s3prl.dataio.corpus.speechcommandsv1 static method)": [[1, "s3prl.dataio.corpus.SpeechCommandsV1.split_dataset"]], "test_queries (s3prl.dataio.corpus.quesst14 property)": [[1, "s3prl.dataio.corpus.Quesst14.test_queries"]], "valid_queries (s3prl.dataio.corpus.quesst14 property)": [[1, "s3prl.dataio.corpus.Quesst14.valid_queries"]], "corpus (class in s3prl.dataio.corpus.base)": [[2, "s3prl.dataio.corpus.base.Corpus"]], "all_data (s3prl.dataio.corpus.base.corpus property)": [[2, "s3prl.dataio.corpus.base.Corpus.all_data"]], "data_split (s3prl.dataio.corpus.base.corpus property)": [[2, "s3prl.dataio.corpus.base.Corpus.data_split"]], "data_split_ids (s3prl.dataio.corpus.base.corpus property)": [[2, "s3prl.dataio.corpus.base.Corpus.data_split_ids"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.base.corpus static method)": [[2, "s3prl.dataio.corpus.base.Corpus.dataframe_to_datapoints"]], "s3prl.dataio.corpus.base": [[2, "module-s3prl.dataio.corpus.base"]], "fluentspeechcommands (class in s3prl.dataio.corpus.fluent_speech_commands)": [[3, "s3prl.dataio.corpus.fluent_speech_commands.FluentSpeechCommands"]], "all_data (s3prl.dataio.corpus.fluent_speech_commands.fluentspeechcommands property)": [[3, "s3prl.dataio.corpus.fluent_speech_commands.FluentSpeechCommands.all_data"]], "data_split (s3prl.dataio.corpus.fluent_speech_commands.fluentspeechcommands property)": [[3, "s3prl.dataio.corpus.fluent_speech_commands.FluentSpeechCommands.data_split"]], "data_split_ids (s3prl.dataio.corpus.fluent_speech_commands.fluentspeechcommands property)": [[3, "s3prl.dataio.corpus.fluent_speech_commands.FluentSpeechCommands.data_split_ids"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.fluent_speech_commands.fluentspeechcommands static method)": [[3, "s3prl.dataio.corpus.fluent_speech_commands.FluentSpeechCommands.dataframe_to_datapoints"]], "download_dataset() (s3prl.dataio.corpus.fluent_speech_commands.fluentspeechcommands class method)": [[3, "s3prl.dataio.corpus.fluent_speech_commands.FluentSpeechCommands.download_dataset"]], "s3prl.dataio.corpus.fluent_speech_commands": [[3, "module-s3prl.dataio.corpus.fluent_speech_commands"]], "iemocap (class in s3prl.dataio.corpus.iemocap)": [[4, "s3prl.dataio.corpus.iemocap.IEMOCAP"]], "all_data (s3prl.dataio.corpus.iemocap.iemocap property)": [[4, "s3prl.dataio.corpus.iemocap.IEMOCAP.all_data"]], "data_split (s3prl.dataio.corpus.iemocap.iemocap property)": [[4, "s3prl.dataio.corpus.iemocap.IEMOCAP.data_split"]], "data_split_ids (s3prl.dataio.corpus.iemocap.iemocap property)": [[4, "s3prl.dataio.corpus.iemocap.IEMOCAP.data_split_ids"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.iemocap.iemocap static method)": [[4, "s3prl.dataio.corpus.iemocap.IEMOCAP.dataframe_to_datapoints"]], "download_dataset() (s3prl.dataio.corpus.iemocap.iemocap class method)": [[4, "s3prl.dataio.corpus.iemocap.IEMOCAP.download_dataset"]], "get_session_with_act() (s3prl.dataio.corpus.iemocap.iemocap method)": [[4, "s3prl.dataio.corpus.iemocap.IEMOCAP.get_session_with_act"]], "get_whole_session() (s3prl.dataio.corpus.iemocap.iemocap method)": [[4, "s3prl.dataio.corpus.iemocap.IEMOCAP.get_whole_session"]], "s3prl.dataio.corpus.iemocap": [[4, "module-s3prl.dataio.corpus.iemocap"]], "librilight (class in s3prl.dataio.corpus.librilight)": [[5, "s3prl.dataio.corpus.librilight.LibriLight"]], "all_data (s3prl.dataio.corpus.librilight.librilight property)": [[5, "s3prl.dataio.corpus.librilight.LibriLight.all_data"]], "data_split (s3prl.dataio.corpus.librilight.librilight property)": [[5, "s3prl.dataio.corpus.librilight.LibriLight.data_split"]], "data_split_ids (s3prl.dataio.corpus.librilight.librilight property)": [[5, "s3prl.dataio.corpus.librilight.LibriLight.data_split_ids"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.librilight.librilight static method)": [[5, "s3prl.dataio.corpus.librilight.LibriLight.dataframe_to_datapoints"]], "download_dataset() (s3prl.dataio.corpus.librilight.librilight class method)": [[5, "s3prl.dataio.corpus.librilight.LibriLight.download_dataset"]], "s3prl.dataio.corpus.librilight": [[5, "module-s3prl.dataio.corpus.librilight"]], "librispeech (class in s3prl.dataio.corpus.librispeech)": [[6, "s3prl.dataio.corpus.librispeech.LibriSpeech"]], "all_data (s3prl.dataio.corpus.librispeech.librispeech property)": [[6, "s3prl.dataio.corpus.librispeech.LibriSpeech.all_data"]], "data_split (s3prl.dataio.corpus.librispeech.librispeech property)": [[6, "s3prl.dataio.corpus.librispeech.LibriSpeech.data_split"]], "data_split_ids (s3prl.dataio.corpus.librispeech.librispeech property)": [[6, "s3prl.dataio.corpus.librispeech.LibriSpeech.data_split_ids"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.librispeech.librispeech static method)": [[6, "s3prl.dataio.corpus.librispeech.LibriSpeech.dataframe_to_datapoints"]], "download_dataset() (s3prl.dataio.corpus.librispeech.librispeech class method)": [[6, "s3prl.dataio.corpus.librispeech.LibriSpeech.download_dataset"]], "get_corpus_splits() (s3prl.dataio.corpus.librispeech.librispeech method)": [[6, "s3prl.dataio.corpus.librispeech.LibriSpeech.get_corpus_splits"]], "s3prl.dataio.corpus.librispeech": [[6, "module-s3prl.dataio.corpus.librispeech"]], "quesst14 (class in s3prl.dataio.corpus.quesst14)": [[7, "s3prl.dataio.corpus.quesst14.Quesst14"]], "docs (s3prl.dataio.corpus.quesst14.quesst14 property)": [[7, "s3prl.dataio.corpus.quesst14.Quesst14.docs"]], "download_dataset() (s3prl.dataio.corpus.quesst14.quesst14 class method)": [[7, "s3prl.dataio.corpus.quesst14.Quesst14.download_dataset"]], "s3prl.dataio.corpus.quesst14": [[7, "module-s3prl.dataio.corpus.quesst14"]], "test_queries (s3prl.dataio.corpus.quesst14.quesst14 property)": [[7, "s3prl.dataio.corpus.quesst14.Quesst14.test_queries"]], "valid_queries (s3prl.dataio.corpus.quesst14.quesst14 property)": [[7, "s3prl.dataio.corpus.quesst14.Quesst14.valid_queries"]], "snips (class in s3prl.dataio.corpus.snips)": [[8, "s3prl.dataio.corpus.snips.SNIPS"]], "all_data (s3prl.dataio.corpus.snips.snips property)": [[8, "s3prl.dataio.corpus.snips.SNIPS.all_data"]], "data_split (s3prl.dataio.corpus.snips.snips property)": [[8, "s3prl.dataio.corpus.snips.SNIPS.data_split"]], "data_split_ids (s3prl.dataio.corpus.snips.snips property)": [[8, "s3prl.dataio.corpus.snips.SNIPS.data_split_ids"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.snips.snips static method)": [[8, "s3prl.dataio.corpus.snips.SNIPS.dataframe_to_datapoints"]], "s3prl.dataio.corpus.snips": [[8, "module-s3prl.dataio.corpus.snips"]], "speechcommandsv1 (class in s3prl.dataio.corpus.speech_commands)": [[9, "s3prl.dataio.corpus.speech_commands.SpeechCommandsV1"]], "all_data (s3prl.dataio.corpus.speech_commands.speechcommandsv1 property)": [[9, "s3prl.dataio.corpus.speech_commands.SpeechCommandsV1.all_data"]], "data_split (s3prl.dataio.corpus.speech_commands.speechcommandsv1 property)": [[9, "s3prl.dataio.corpus.speech_commands.SpeechCommandsV1.data_split"]], "data_split_ids (s3prl.dataio.corpus.speech_commands.speechcommandsv1 property)": [[9, "s3prl.dataio.corpus.speech_commands.SpeechCommandsV1.data_split_ids"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.speech_commands.speechcommandsv1 static method)": [[9, "s3prl.dataio.corpus.speech_commands.SpeechCommandsV1.dataframe_to_datapoints"]], "download_dataset() (s3prl.dataio.corpus.speech_commands.speechcommandsv1 class method)": [[9, "s3prl.dataio.corpus.speech_commands.SpeechCommandsV1.download_dataset"]], "list_to_dict() (s3prl.dataio.corpus.speech_commands.speechcommandsv1 class method)": [[9, "s3prl.dataio.corpus.speech_commands.SpeechCommandsV1.list_to_dict"]], "parse_test_data_list() (s3prl.dataio.corpus.speech_commands.speechcommandsv1 static method)": [[9, "s3prl.dataio.corpus.speech_commands.SpeechCommandsV1.parse_test_data_list"]], "parse_train_valid_data_list() (s3prl.dataio.corpus.speech_commands.speechcommandsv1 static method)": [[9, "s3prl.dataio.corpus.speech_commands.SpeechCommandsV1.parse_train_valid_data_list"]], "path_to_unique_name() (s3prl.dataio.corpus.speech_commands.speechcommandsv1 static method)": [[9, "s3prl.dataio.corpus.speech_commands.SpeechCommandsV1.path_to_unique_name"]], "s3prl.dataio.corpus.speech_commands": [[9, "module-s3prl.dataio.corpus.speech_commands"]], "split_dataset() (s3prl.dataio.corpus.speech_commands.speechcommandsv1 static method)": [[9, "s3prl.dataio.corpus.speech_commands.SpeechCommandsV1.split_dataset"]], "voxceleb1sid (class in s3prl.dataio.corpus.voxceleb1sid)": [[10, "s3prl.dataio.corpus.voxceleb1sid.VoxCeleb1SID"]], "all_data (s3prl.dataio.corpus.voxceleb1sid.voxceleb1sid property)": [[10, "s3prl.dataio.corpus.voxceleb1sid.VoxCeleb1SID.all_data"]], "data_split (s3prl.dataio.corpus.voxceleb1sid.voxceleb1sid property)": [[10, "s3prl.dataio.corpus.voxceleb1sid.VoxCeleb1SID.data_split"]], "data_split_ids (s3prl.dataio.corpus.voxceleb1sid.voxceleb1sid property)": [[10, "s3prl.dataio.corpus.voxceleb1sid.VoxCeleb1SID.data_split_ids"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.voxceleb1sid.voxceleb1sid static method)": [[10, "s3prl.dataio.corpus.voxceleb1sid.VoxCeleb1SID.dataframe_to_datapoints"]], "download_dataset() (s3prl.dataio.corpus.voxceleb1sid.voxceleb1sid class method)": [[10, "s3prl.dataio.corpus.voxceleb1sid.VoxCeleb1SID.download_dataset"]], "s3prl.dataio.corpus.voxceleb1sid": [[10, "module-s3prl.dataio.corpus.voxceleb1sid"]], "voxceleb1sv (class in s3prl.dataio.corpus.voxceleb1sv)": [[11, "s3prl.dataio.corpus.voxceleb1sv.VoxCeleb1SV"]], "all_data (s3prl.dataio.corpus.voxceleb1sv.voxceleb1sv property)": [[11, "s3prl.dataio.corpus.voxceleb1sv.VoxCeleb1SV.all_data"]], "data_split (s3prl.dataio.corpus.voxceleb1sv.voxceleb1sv property)": [[11, "s3prl.dataio.corpus.voxceleb1sv.VoxCeleb1SV.data_split"]], "data_split_ids (s3prl.dataio.corpus.voxceleb1sv.voxceleb1sv property)": [[11, "s3prl.dataio.corpus.voxceleb1sv.VoxCeleb1SV.data_split_ids"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.voxceleb1sv.voxceleb1sv static method)": [[11, "s3prl.dataio.corpus.voxceleb1sv.VoxCeleb1SV.dataframe_to_datapoints"]], "format_path() (s3prl.dataio.corpus.voxceleb1sv.voxceleb1sv static method)": [[11, "s3prl.dataio.corpus.voxceleb1sv.VoxCeleb1SV.format_path"]], "format_test_trials() (s3prl.dataio.corpus.voxceleb1sv.voxceleb1sv class method)": [[11, "s3prl.dataio.corpus.voxceleb1sv.VoxCeleb1SV.format_test_trials"]], "path2data() (s3prl.dataio.corpus.voxceleb1sv.voxceleb1sv class method)": [[11, "s3prl.dataio.corpus.voxceleb1sv.VoxCeleb1SV.path2data"]], "path2uid() (s3prl.dataio.corpus.voxceleb1sv.voxceleb1sv class method)": [[11, "s3prl.dataio.corpus.voxceleb1sv.VoxCeleb1SV.path2uid"]], "s3prl.dataio.corpus.voxceleb1sv": [[11, "module-s3prl.dataio.corpus.voxceleb1sv"]], "berttokenizer (class in s3prl.dataio.encoder)": [[12, "s3prl.dataio.encoder.BertTokenizer"]], "categoryencoder (class in s3prl.dataio.encoder)": [[12, "s3prl.dataio.encoder.CategoryEncoder"]], "categoryencoders (class in s3prl.dataio.encoder)": [[12, "s3prl.dataio.encoder.CategoryEncoders"]], "characterslottokenizer (class in s3prl.dataio.encoder)": [[12, "s3prl.dataio.encoder.CharacterSlotTokenizer"]], "charactertokenizer (class in s3prl.dataio.encoder)": [[12, "s3prl.dataio.encoder.CharacterTokenizer"]], "g2p (class in s3prl.dataio.encoder)": [[12, "s3prl.dataio.encoder.G2P"]], "subwordslottokenizer (class in s3prl.dataio.encoder)": [[12, "s3prl.dataio.encoder.SubwordSlotTokenizer"]], "subwordtokenizer (class in s3prl.dataio.encoder)": [[12, "s3prl.dataio.encoder.SubwordTokenizer"]], "tokenizer (class in s3prl.dataio.encoder)": [[12, "s3prl.dataio.encoder.Tokenizer"]], "wordtokenizer (class in s3prl.dataio.encoder)": [[12, "s3prl.dataio.encoder.WordTokenizer"]], "decode() (s3prl.dataio.encoder.berttokenizer method)": [[12, "s3prl.dataio.encoder.BertTokenizer.decode"]], "decode() (s3prl.dataio.encoder.categoryencoder method)": [[12, "s3prl.dataio.encoder.CategoryEncoder.decode"]], "decode() (s3prl.dataio.encoder.characterslottokenizer method)": [[12, "s3prl.dataio.encoder.CharacterSlotTokenizer.decode"]], "decode() (s3prl.dataio.encoder.charactertokenizer method)": [[12, "s3prl.dataio.encoder.CharacterTokenizer.decode"]], "decode() (s3prl.dataio.encoder.subwordslottokenizer method)": [[12, "s3prl.dataio.encoder.SubwordSlotTokenizer.decode"]], "decode() (s3prl.dataio.encoder.subwordtokenizer method)": [[12, "s3prl.dataio.encoder.SubwordTokenizer.decode"]], "decode() (s3prl.dataio.encoder.tokenizer method)": [[12, "s3prl.dataio.encoder.Tokenizer.decode"]], "decode() (s3prl.dataio.encoder.wordtokenizer method)": [[12, "s3prl.dataio.encoder.WordTokenizer.decode"]], "encode() (s3prl.dataio.encoder.berttokenizer method)": [[12, "s3prl.dataio.encoder.BertTokenizer.encode"]], "encode() (s3prl.dataio.encoder.categoryencoder method)": [[12, "s3prl.dataio.encoder.CategoryEncoder.encode"]], "encode() (s3prl.dataio.encoder.characterslottokenizer method)": [[12, "s3prl.dataio.encoder.CharacterSlotTokenizer.encode"]], "encode() (s3prl.dataio.encoder.charactertokenizer method)": [[12, "s3prl.dataio.encoder.CharacterTokenizer.encode"]], "encode() (s3prl.dataio.encoder.g2p method)": [[12, "s3prl.dataio.encoder.G2P.encode"]], "encode() (s3prl.dataio.encoder.subwordslottokenizer method)": [[12, "s3prl.dataio.encoder.SubwordSlotTokenizer.encode"]], "encode() (s3prl.dataio.encoder.subwordtokenizer method)": [[12, "s3prl.dataio.encoder.SubwordTokenizer.encode"]], "encode() (s3prl.dataio.encoder.tokenizer method)": [[12, "s3prl.dataio.encoder.Tokenizer.encode"]], "encode() (s3prl.dataio.encoder.wordtokenizer method)": [[12, "s3prl.dataio.encoder.WordTokenizer.encode"]], "eos_idx (s3prl.dataio.encoder.berttokenizer property)": [[12, "s3prl.dataio.encoder.BertTokenizer.eos_idx"]], "eos_idx (s3prl.dataio.encoder.characterslottokenizer property)": [[12, "s3prl.dataio.encoder.CharacterSlotTokenizer.eos_idx"]], "eos_idx (s3prl.dataio.encoder.charactertokenizer property)": [[12, "s3prl.dataio.encoder.CharacterTokenizer.eos_idx"]], "eos_idx (s3prl.dataio.encoder.subwordslottokenizer property)": [[12, "s3prl.dataio.encoder.SubwordSlotTokenizer.eos_idx"]], "eos_idx (s3prl.dataio.encoder.subwordtokenizer property)": [[12, "s3prl.dataio.encoder.SubwordTokenizer.eos_idx"]], "eos_idx (s3prl.dataio.encoder.tokenizer property)": [[12, "s3prl.dataio.encoder.Tokenizer.eos_idx"]], "eos_idx (s3prl.dataio.encoder.wordtokenizer property)": [[12, "s3prl.dataio.encoder.WordTokenizer.eos_idx"]], "generate_basic_vocab() (in module s3prl.dataio.encoder)": [[12, "s3prl.dataio.encoder.generate_basic_vocab"]], "generate_subword_vocab() (in module s3prl.dataio.encoder)": [[12, "s3prl.dataio.encoder.generate_subword_vocab"]], "generate_vocab() (in module s3prl.dataio.encoder)": [[12, "s3prl.dataio.encoder.generate_vocab"]], "idx_to_vocab() (s3prl.dataio.encoder.characterslottokenizer method)": [[12, "s3prl.dataio.encoder.CharacterSlotTokenizer.idx_to_vocab"]], "idx_to_vocab() (s3prl.dataio.encoder.charactertokenizer method)": [[12, "s3prl.dataio.encoder.CharacterTokenizer.idx_to_vocab"]], "idx_to_vocab() (s3prl.dataio.encoder.wordtokenizer method)": [[12, "s3prl.dataio.encoder.WordTokenizer.idx_to_vocab"]], "load_from_file() (s3prl.dataio.encoder.berttokenizer class method)": [[12, "s3prl.dataio.encoder.BertTokenizer.load_from_file"]], "load_from_file() (s3prl.dataio.encoder.characterslottokenizer class method)": [[12, "s3prl.dataio.encoder.CharacterSlotTokenizer.load_from_file"]], "load_from_file() (s3prl.dataio.encoder.charactertokenizer class method)": [[12, "s3prl.dataio.encoder.CharacterTokenizer.load_from_file"]], "load_from_file() (s3prl.dataio.encoder.subwordslottokenizer class method)": [[12, "s3prl.dataio.encoder.SubwordSlotTokenizer.load_from_file"]], "load_from_file() (s3prl.dataio.encoder.subwordtokenizer class method)": [[12, "s3prl.dataio.encoder.SubwordTokenizer.load_from_file"]], "load_from_file() (s3prl.dataio.encoder.tokenizer class method)": [[12, "s3prl.dataio.encoder.Tokenizer.load_from_file"]], "load_from_file() (s3prl.dataio.encoder.wordtokenizer class method)": [[12, "s3prl.dataio.encoder.WordTokenizer.load_from_file"]], "pad_idx (s3prl.dataio.encoder.berttokenizer property)": [[12, "s3prl.dataio.encoder.BertTokenizer.pad_idx"]], "pad_idx (s3prl.dataio.encoder.characterslottokenizer property)": [[12, "s3prl.dataio.encoder.CharacterSlotTokenizer.pad_idx"]], "pad_idx (s3prl.dataio.encoder.charactertokenizer property)": [[12, "s3prl.dataio.encoder.CharacterTokenizer.pad_idx"]], "pad_idx (s3prl.dataio.encoder.subwordslottokenizer property)": [[12, "s3prl.dataio.encoder.SubwordSlotTokenizer.pad_idx"]], "pad_idx (s3prl.dataio.encoder.subwordtokenizer property)": [[12, "s3prl.dataio.encoder.SubwordTokenizer.pad_idx"]], "pad_idx (s3prl.dataio.encoder.tokenizer property)": [[12, "s3prl.dataio.encoder.Tokenizer.pad_idx"]], "pad_idx (s3prl.dataio.encoder.wordtokenizer property)": [[12, "s3prl.dataio.encoder.WordTokenizer.pad_idx"]], "s3prl.dataio.encoder": [[12, "module-s3prl.dataio.encoder"]], "token_type (s3prl.dataio.encoder.berttokenizer property)": [[12, "s3prl.dataio.encoder.BertTokenizer.token_type"]], "token_type (s3prl.dataio.encoder.characterslottokenizer property)": [[12, "s3prl.dataio.encoder.CharacterSlotTokenizer.token_type"]], "token_type (s3prl.dataio.encoder.charactertokenizer property)": [[12, "s3prl.dataio.encoder.CharacterTokenizer.token_type"]], "token_type (s3prl.dataio.encoder.subwordslottokenizer property)": [[12, "s3prl.dataio.encoder.SubwordSlotTokenizer.token_type"]], "token_type (s3prl.dataio.encoder.subwordtokenizer property)": [[12, "s3prl.dataio.encoder.SubwordTokenizer.token_type"]], "token_type (s3prl.dataio.encoder.tokenizer property)": [[12, "s3prl.dataio.encoder.Tokenizer.token_type"]], "token_type (s3prl.dataio.encoder.wordtokenizer property)": [[12, "s3prl.dataio.encoder.WordTokenizer.token_type"]], "unk_idx (s3prl.dataio.encoder.berttokenizer property)": [[12, "s3prl.dataio.encoder.BertTokenizer.unk_idx"]], "unk_idx (s3prl.dataio.encoder.characterslottokenizer property)": [[12, "s3prl.dataio.encoder.CharacterSlotTokenizer.unk_idx"]], "unk_idx (s3prl.dataio.encoder.charactertokenizer property)": [[12, "s3prl.dataio.encoder.CharacterTokenizer.unk_idx"]], "unk_idx (s3prl.dataio.encoder.subwordslottokenizer property)": [[12, "s3prl.dataio.encoder.SubwordSlotTokenizer.unk_idx"]], "unk_idx (s3prl.dataio.encoder.subwordtokenizer property)": [[12, "s3prl.dataio.encoder.SubwordTokenizer.unk_idx"]], "unk_idx (s3prl.dataio.encoder.tokenizer property)": [[12, "s3prl.dataio.encoder.Tokenizer.unk_idx"]], "unk_idx (s3prl.dataio.encoder.wordtokenizer property)": [[12, "s3prl.dataio.encoder.WordTokenizer.unk_idx"]], "vocab_size (s3prl.dataio.encoder.berttokenizer property)": [[12, "s3prl.dataio.encoder.BertTokenizer.vocab_size"]], "vocab_size (s3prl.dataio.encoder.characterslottokenizer property)": [[12, "s3prl.dataio.encoder.CharacterSlotTokenizer.vocab_size"]], "vocab_size (s3prl.dataio.encoder.charactertokenizer property)": [[12, "s3prl.dataio.encoder.CharacterTokenizer.vocab_size"]], "vocab_size (s3prl.dataio.encoder.subwordslottokenizer property)": [[12, "s3prl.dataio.encoder.SubwordSlotTokenizer.vocab_size"]], "vocab_size (s3prl.dataio.encoder.subwordtokenizer property)": [[12, "s3prl.dataio.encoder.SubwordTokenizer.vocab_size"]], "vocab_size (s3prl.dataio.encoder.tokenizer property)": [[12, "s3prl.dataio.encoder.Tokenizer.vocab_size"]], "vocab_size (s3prl.dataio.encoder.wordtokenizer property)": [[12, "s3prl.dataio.encoder.WordTokenizer.vocab_size"]], "vocab_to_idx() (s3prl.dataio.encoder.characterslottokenizer method)": [[12, "s3prl.dataio.encoder.CharacterSlotTokenizer.vocab_to_idx"]], "vocab_to_idx() (s3prl.dataio.encoder.charactertokenizer method)": [[12, "s3prl.dataio.encoder.CharacterTokenizer.vocab_to_idx"]], "vocab_to_idx() (s3prl.dataio.encoder.wordtokenizer method)": [[12, "s3prl.dataio.encoder.WordTokenizer.vocab_to_idx"]], "categoryencoder (class in s3prl.dataio.encoder.category)": [[13, "s3prl.dataio.encoder.category.CategoryEncoder"]], "categoryencoders (class in s3prl.dataio.encoder.category)": [[13, "s3prl.dataio.encoder.category.CategoryEncoders"]], "decode() (s3prl.dataio.encoder.category.categoryencoder method)": [[13, "s3prl.dataio.encoder.category.CategoryEncoder.decode"]], "encode() (s3prl.dataio.encoder.category.categoryencoder method)": [[13, "s3prl.dataio.encoder.category.CategoryEncoder.encode"]], "s3prl.dataio.encoder.category": [[13, "module-s3prl.dataio.encoder.category"]], "g2p (class in s3prl.dataio.encoder.g2p)": [[14, "s3prl.dataio.encoder.g2p.G2P"]], "encode() (s3prl.dataio.encoder.g2p.g2p method)": [[14, "s3prl.dataio.encoder.g2p.G2P.encode"]], "s3prl.dataio.encoder.g2p": [[14, "module-s3prl.dataio.encoder.g2p"]], "characterslottokenizer (class in s3prl.dataio.encoder.tokenizer)": [[15, "s3prl.dataio.encoder.tokenizer.CharacterSlotTokenizer"]], "charactertokenizer (class in s3prl.dataio.encoder.tokenizer)": [[15, "s3prl.dataio.encoder.tokenizer.CharacterTokenizer"]], "phonemetokenizer (class in s3prl.dataio.encoder.tokenizer)": [[15, "s3prl.dataio.encoder.tokenizer.PhonemeTokenizer"]], "subwordslottokenizer (class in s3prl.dataio.encoder.tokenizer)": [[15, "s3prl.dataio.encoder.tokenizer.SubwordSlotTokenizer"]], "subwordtokenizer (class in s3prl.dataio.encoder.tokenizer)": [[15, "s3prl.dataio.encoder.tokenizer.SubwordTokenizer"]], "wordtokenizer (class in s3prl.dataio.encoder.tokenizer)": [[15, "s3prl.dataio.encoder.tokenizer.WordTokenizer"]], "decode() (s3prl.dataio.encoder.tokenizer.characterslottokenizer method)": [[15, "s3prl.dataio.encoder.tokenizer.CharacterSlotTokenizer.decode"]], "decode() (s3prl.dataio.encoder.tokenizer.charactertokenizer method)": [[15, "s3prl.dataio.encoder.tokenizer.CharacterTokenizer.decode"]], "decode() (s3prl.dataio.encoder.tokenizer.phonemetokenizer method)": [[15, "s3prl.dataio.encoder.tokenizer.PhonemeTokenizer.decode"]], "decode() (s3prl.dataio.encoder.tokenizer.subwordslottokenizer method)": [[15, "s3prl.dataio.encoder.tokenizer.SubwordSlotTokenizer.decode"]], "decode() (s3prl.dataio.encoder.tokenizer.subwordtokenizer method)": [[15, "s3prl.dataio.encoder.tokenizer.SubwordTokenizer.decode"]], "decode() (s3prl.dataio.encoder.tokenizer.wordtokenizer method)": [[15, "s3prl.dataio.encoder.tokenizer.WordTokenizer.decode"]], "default_phoneme_tokenizer() (in module s3prl.dataio.encoder.tokenizer)": [[15, "s3prl.dataio.encoder.tokenizer.default_phoneme_tokenizer"]], "encode() (s3prl.dataio.encoder.tokenizer.characterslottokenizer method)": [[15, "s3prl.dataio.encoder.tokenizer.CharacterSlotTokenizer.encode"]], "encode() (s3prl.dataio.encoder.tokenizer.charactertokenizer method)": [[15, "s3prl.dataio.encoder.tokenizer.CharacterTokenizer.encode"]], "encode() (s3prl.dataio.encoder.tokenizer.phonemetokenizer method)": [[15, "s3prl.dataio.encoder.tokenizer.PhonemeTokenizer.encode"]], "encode() (s3prl.dataio.encoder.tokenizer.subwordslottokenizer method)": [[15, "s3prl.dataio.encoder.tokenizer.SubwordSlotTokenizer.encode"]], "encode() (s3prl.dataio.encoder.tokenizer.subwordtokenizer method)": [[15, "s3prl.dataio.encoder.tokenizer.SubwordTokenizer.encode"]], "encode() (s3prl.dataio.encoder.tokenizer.wordtokenizer method)": [[15, "s3prl.dataio.encoder.tokenizer.WordTokenizer.encode"]], "eos_idx (s3prl.dataio.encoder.tokenizer.characterslottokenizer property)": [[15, "s3prl.dataio.encoder.tokenizer.CharacterSlotTokenizer.eos_idx"]], "eos_idx (s3prl.dataio.encoder.tokenizer.charactertokenizer property)": [[15, "s3prl.dataio.encoder.tokenizer.CharacterTokenizer.eos_idx"]], "eos_idx (s3prl.dataio.encoder.tokenizer.phonemetokenizer property)": [[15, "s3prl.dataio.encoder.tokenizer.PhonemeTokenizer.eos_idx"]], "eos_idx (s3prl.dataio.encoder.tokenizer.subwordslottokenizer property)": [[15, "s3prl.dataio.encoder.tokenizer.SubwordSlotTokenizer.eos_idx"]], "eos_idx (s3prl.dataio.encoder.tokenizer.subwordtokenizer property)": [[15, "s3prl.dataio.encoder.tokenizer.SubwordTokenizer.eos_idx"]], "eos_idx (s3prl.dataio.encoder.tokenizer.wordtokenizer property)": [[15, "s3prl.dataio.encoder.tokenizer.WordTokenizer.eos_idx"]], "idx_to_vocab() (s3prl.dataio.encoder.tokenizer.characterslottokenizer method)": [[15, "s3prl.dataio.encoder.tokenizer.CharacterSlotTokenizer.idx_to_vocab"]], "idx_to_vocab() (s3prl.dataio.encoder.tokenizer.charactertokenizer method)": [[15, "s3prl.dataio.encoder.tokenizer.CharacterTokenizer.idx_to_vocab"]], "idx_to_vocab() (s3prl.dataio.encoder.tokenizer.phonemetokenizer method)": [[15, "s3prl.dataio.encoder.tokenizer.PhonemeTokenizer.idx_to_vocab"]], "idx_to_vocab() (s3prl.dataio.encoder.tokenizer.wordtokenizer method)": [[15, "s3prl.dataio.encoder.tokenizer.WordTokenizer.idx_to_vocab"]], "load_from_file() (s3prl.dataio.encoder.tokenizer.characterslottokenizer class method)": [[15, "s3prl.dataio.encoder.tokenizer.CharacterSlotTokenizer.load_from_file"]], "load_from_file() (s3prl.dataio.encoder.tokenizer.charactertokenizer class method)": [[15, "s3prl.dataio.encoder.tokenizer.CharacterTokenizer.load_from_file"]], "load_from_file() (s3prl.dataio.encoder.tokenizer.phonemetokenizer class method)": [[15, "s3prl.dataio.encoder.tokenizer.PhonemeTokenizer.load_from_file"]], "load_from_file() (s3prl.dataio.encoder.tokenizer.subwordslottokenizer class method)": [[15, "s3prl.dataio.encoder.tokenizer.SubwordSlotTokenizer.load_from_file"]], "load_from_file() (s3prl.dataio.encoder.tokenizer.subwordtokenizer class method)": [[15, "s3prl.dataio.encoder.tokenizer.SubwordTokenizer.load_from_file"]], "load_from_file() (s3prl.dataio.encoder.tokenizer.wordtokenizer class method)": [[15, "s3prl.dataio.encoder.tokenizer.WordTokenizer.load_from_file"]], "load_tokenizer() (in module s3prl.dataio.encoder.tokenizer)": [[15, "s3prl.dataio.encoder.tokenizer.load_tokenizer"]], "pad_idx (s3prl.dataio.encoder.tokenizer.characterslottokenizer property)": [[15, "s3prl.dataio.encoder.tokenizer.CharacterSlotTokenizer.pad_idx"]], "pad_idx (s3prl.dataio.encoder.tokenizer.charactertokenizer property)": [[15, "s3prl.dataio.encoder.tokenizer.CharacterTokenizer.pad_idx"]], "pad_idx (s3prl.dataio.encoder.tokenizer.phonemetokenizer property)": [[15, "s3prl.dataio.encoder.tokenizer.PhonemeTokenizer.pad_idx"]], "pad_idx (s3prl.dataio.encoder.tokenizer.subwordslottokenizer property)": [[15, "s3prl.dataio.encoder.tokenizer.SubwordSlotTokenizer.pad_idx"]], "pad_idx (s3prl.dataio.encoder.tokenizer.subwordtokenizer property)": [[15, "s3prl.dataio.encoder.tokenizer.SubwordTokenizer.pad_idx"]], "pad_idx (s3prl.dataio.encoder.tokenizer.wordtokenizer property)": [[15, "s3prl.dataio.encoder.tokenizer.WordTokenizer.pad_idx"]], "s3prl.dataio.encoder.tokenizer": [[15, "module-s3prl.dataio.encoder.tokenizer"]], "token_type (s3prl.dataio.encoder.tokenizer.characterslottokenizer property)": [[15, "s3prl.dataio.encoder.tokenizer.CharacterSlotTokenizer.token_type"]], "token_type (s3prl.dataio.encoder.tokenizer.charactertokenizer property)": [[15, "s3prl.dataio.encoder.tokenizer.CharacterTokenizer.token_type"]], "token_type (s3prl.dataio.encoder.tokenizer.phonemetokenizer property)": [[15, "s3prl.dataio.encoder.tokenizer.PhonemeTokenizer.token_type"]], "token_type (s3prl.dataio.encoder.tokenizer.subwordslottokenizer property)": [[15, "s3prl.dataio.encoder.tokenizer.SubwordSlotTokenizer.token_type"]], "token_type (s3prl.dataio.encoder.tokenizer.subwordtokenizer property)": [[15, "s3prl.dataio.encoder.tokenizer.SubwordTokenizer.token_type"]], "token_type (s3prl.dataio.encoder.tokenizer.wordtokenizer property)": [[15, "s3prl.dataio.encoder.tokenizer.WordTokenizer.token_type"]], "unk_idx (s3prl.dataio.encoder.tokenizer.characterslottokenizer property)": [[15, "s3prl.dataio.encoder.tokenizer.CharacterSlotTokenizer.unk_idx"]], "unk_idx (s3prl.dataio.encoder.tokenizer.charactertokenizer property)": [[15, "s3prl.dataio.encoder.tokenizer.CharacterTokenizer.unk_idx"]], "unk_idx (s3prl.dataio.encoder.tokenizer.phonemetokenizer property)": [[15, "s3prl.dataio.encoder.tokenizer.PhonemeTokenizer.unk_idx"]], "unk_idx (s3prl.dataio.encoder.tokenizer.subwordslottokenizer property)": [[15, "s3prl.dataio.encoder.tokenizer.SubwordSlotTokenizer.unk_idx"]], "unk_idx (s3prl.dataio.encoder.tokenizer.subwordtokenizer property)": [[15, "s3prl.dataio.encoder.tokenizer.SubwordTokenizer.unk_idx"]], "unk_idx (s3prl.dataio.encoder.tokenizer.wordtokenizer property)": [[15, "s3prl.dataio.encoder.tokenizer.WordTokenizer.unk_idx"]], "vocab_size (s3prl.dataio.encoder.tokenizer.characterslottokenizer property)": [[15, "s3prl.dataio.encoder.tokenizer.CharacterSlotTokenizer.vocab_size"]], "vocab_size (s3prl.dataio.encoder.tokenizer.charactertokenizer property)": [[15, "s3prl.dataio.encoder.tokenizer.CharacterTokenizer.vocab_size"]], "vocab_size (s3prl.dataio.encoder.tokenizer.phonemetokenizer property)": [[15, "s3prl.dataio.encoder.tokenizer.PhonemeTokenizer.vocab_size"]], "vocab_size (s3prl.dataio.encoder.tokenizer.subwordslottokenizer property)": [[15, "s3prl.dataio.encoder.tokenizer.SubwordSlotTokenizer.vocab_size"]], "vocab_size (s3prl.dataio.encoder.tokenizer.subwordtokenizer property)": [[15, "s3prl.dataio.encoder.tokenizer.SubwordTokenizer.vocab_size"]], "vocab_size (s3prl.dataio.encoder.tokenizer.wordtokenizer property)": [[15, "s3prl.dataio.encoder.tokenizer.WordTokenizer.vocab_size"]], "vocab_to_idx() (s3prl.dataio.encoder.tokenizer.characterslottokenizer method)": [[15, "s3prl.dataio.encoder.tokenizer.CharacterSlotTokenizer.vocab_to_idx"]], "vocab_to_idx() (s3prl.dataio.encoder.tokenizer.charactertokenizer method)": [[15, "s3prl.dataio.encoder.tokenizer.CharacterTokenizer.vocab_to_idx"]], "vocab_to_idx() (s3prl.dataio.encoder.tokenizer.phonemetokenizer method)": [[15, "s3prl.dataio.encoder.tokenizer.PhonemeTokenizer.vocab_to_idx"]], "vocab_to_idx() (s3prl.dataio.encoder.tokenizer.wordtokenizer method)": [[15, "s3prl.dataio.encoder.tokenizer.WordTokenizer.vocab_to_idx"]], "generate_basic_vocab() (in module s3prl.dataio.encoder.vocabulary)": [[16, "s3prl.dataio.encoder.vocabulary.generate_basic_vocab"]], "generate_subword_vocab() (in module s3prl.dataio.encoder.vocabulary)": [[16, "s3prl.dataio.encoder.vocabulary.generate_subword_vocab"]], "generate_vocab() (in module s3prl.dataio.encoder.vocabulary)": [[16, "s3prl.dataio.encoder.vocabulary.generate_vocab"]], "s3prl.dataio.encoder.vocabulary": [[16, "module-s3prl.dataio.encoder.vocabulary"]], "balancedweightedsampler (class in s3prl.dataio.sampler)": [[17, "s3prl.dataio.sampler.BalancedWeightedSampler"]], "distributedbatchsamplerwrapper (class in s3prl.dataio.sampler)": [[17, "s3prl.dataio.sampler.DistributedBatchSamplerWrapper"]], "fixedbatchsizebatchsampler (class in s3prl.dataio.sampler)": [[17, "s3prl.dataio.sampler.FixedBatchSizeBatchSampler"]], "groupsameitemsampler (class in s3prl.dataio.sampler)": [[17, "s3prl.dataio.sampler.GroupSameItemSampler"]], "maxtimestampbatchsampler (class in s3prl.dataio.sampler)": [[17, "s3prl.dataio.sampler.MaxTimestampBatchSampler"]], "sortedbucketingsampler (class in s3prl.dataio.sampler)": [[17, "s3prl.dataio.sampler.SortedBucketingSampler"]], "sortedslicesampler (class in s3prl.dataio.sampler)": [[17, "s3prl.dataio.sampler.SortedSliceSampler"]], "get_length() (s3prl.dataio.sampler.maxtimestampbatchsampler static method)": [[17, "s3prl.dataio.sampler.MaxTimestampBatchSampler.get_length"]], "get_length() (s3prl.dataio.sampler.sortedbucketingsampler static method)": [[17, "s3prl.dataio.sampler.SortedBucketingSampler.get_length"]], "get_length() (s3prl.dataio.sampler.sortedslicesampler static method)": [[17, "s3prl.dataio.sampler.SortedSliceSampler.get_length"]], "get_weights() (s3prl.dataio.sampler.balancedweightedsampler static method)": [[17, "s3prl.dataio.sampler.BalancedWeightedSampler.get_weights"]], "s3prl.dataio.sampler": [[17, "module-s3prl.dataio.sampler"]], "set_epoch() (s3prl.dataio.sampler.balancedweightedsampler method)": [[17, "s3prl.dataio.sampler.BalancedWeightedSampler.set_epoch"]], "set_epoch() (s3prl.dataio.sampler.distributedbatchsamplerwrapper method)": [[17, "s3prl.dataio.sampler.DistributedBatchSamplerWrapper.set_epoch"]], "set_epoch() (s3prl.dataio.sampler.fixedbatchsizebatchsampler method)": [[17, "s3prl.dataio.sampler.FixedBatchSizeBatchSampler.set_epoch"]], "set_epoch() (s3prl.dataio.sampler.groupsameitemsampler method)": [[17, "s3prl.dataio.sampler.GroupSameItemSampler.set_epoch"]], "set_epoch() (s3prl.dataio.sampler.maxtimestampbatchsampler method)": [[17, "s3prl.dataio.sampler.MaxTimestampBatchSampler.set_epoch"]], "set_epoch() (s3prl.dataio.sampler.sortedbucketingsampler method)": [[17, "s3prl.dataio.sampler.SortedBucketingSampler.set_epoch"]], "set_epoch() (s3prl.dataio.sampler.sortedslicesampler method)": [[17, "s3prl.dataio.sampler.SortedSliceSampler.set_epoch"]], "balancedweightedsampler (class in s3prl.dataio.sampler.balanced_weighted_sampler)": [[18, "s3prl.dataio.sampler.balanced_weighted_sampler.BalancedWeightedSampler"]], "get_weights() (s3prl.dataio.sampler.balanced_weighted_sampler.balancedweightedsampler static method)": [[18, "s3prl.dataio.sampler.balanced_weighted_sampler.BalancedWeightedSampler.get_weights"]], "s3prl.dataio.sampler.balanced_weighted_sampler": [[18, "module-s3prl.dataio.sampler.balanced_weighted_sampler"]], "set_epoch() (s3prl.dataio.sampler.balanced_weighted_sampler.balancedweightedsampler method)": [[18, "s3prl.dataio.sampler.balanced_weighted_sampler.BalancedWeightedSampler.set_epoch"]], "distributedbatchsamplerwrapper (class in s3prl.dataio.sampler.distributed_sampler)": [[19, "s3prl.dataio.sampler.distributed_sampler.DistributedBatchSamplerWrapper"]], "s3prl.dataio.sampler.distributed_sampler": [[19, "module-s3prl.dataio.sampler.distributed_sampler"]], "set_epoch() (s3prl.dataio.sampler.distributed_sampler.distributedbatchsamplerwrapper method)": [[19, "s3prl.dataio.sampler.distributed_sampler.DistributedBatchSamplerWrapper.set_epoch"]], "fixedbatchsizebatchsampler (class in s3prl.dataio.sampler.fixed_batch_size_batch_sampler)": [[20, "s3prl.dataio.sampler.fixed_batch_size_batch_sampler.FixedBatchSizeBatchSampler"]], "s3prl.dataio.sampler.fixed_batch_size_batch_sampler": [[20, "module-s3prl.dataio.sampler.fixed_batch_size_batch_sampler"]], "set_epoch() (s3prl.dataio.sampler.fixed_batch_size_batch_sampler.fixedbatchsizebatchsampler method)": [[20, "s3prl.dataio.sampler.fixed_batch_size_batch_sampler.FixedBatchSizeBatchSampler.set_epoch"]], "groupsameitemsampler (class in s3prl.dataio.sampler.group_same_item_sampler)": [[21, "s3prl.dataio.sampler.group_same_item_sampler.GroupSameItemSampler"]], "s3prl.dataio.sampler.group_same_item_sampler": [[21, "module-s3prl.dataio.sampler.group_same_item_sampler"]], "set_epoch() (s3prl.dataio.sampler.group_same_item_sampler.groupsameitemsampler method)": [[21, "s3prl.dataio.sampler.group_same_item_sampler.GroupSameItemSampler.set_epoch"]], "maxtimestampbatchsampler (class in s3prl.dataio.sampler.max_timestamp_batch_sampler)": [[22, "s3prl.dataio.sampler.max_timestamp_batch_sampler.MaxTimestampBatchSampler"]], "get_length() (s3prl.dataio.sampler.max_timestamp_batch_sampler.maxtimestampbatchsampler static method)": [[22, "s3prl.dataio.sampler.max_timestamp_batch_sampler.MaxTimestampBatchSampler.get_length"]], "s3prl.dataio.sampler.max_timestamp_batch_sampler": [[22, "module-s3prl.dataio.sampler.max_timestamp_batch_sampler"]], "set_epoch() (s3prl.dataio.sampler.max_timestamp_batch_sampler.maxtimestampbatchsampler method)": [[22, "s3prl.dataio.sampler.max_timestamp_batch_sampler.MaxTimestampBatchSampler.set_epoch"]], "sortedbucketingsampler (class in s3prl.dataio.sampler.sorted_sampler)": [[23, "s3prl.dataio.sampler.sorted_sampler.SortedBucketingSampler"]], "sortedslicesampler (class in s3prl.dataio.sampler.sorted_sampler)": [[23, "s3prl.dataio.sampler.sorted_sampler.SortedSliceSampler"]], "get_length() (s3prl.dataio.sampler.sorted_sampler.sortedbucketingsampler static method)": [[23, "s3prl.dataio.sampler.sorted_sampler.SortedBucketingSampler.get_length"]], "get_length() (s3prl.dataio.sampler.sorted_sampler.sortedslicesampler static method)": [[23, "s3prl.dataio.sampler.sorted_sampler.SortedSliceSampler.get_length"]], "s3prl.dataio.sampler.sorted_sampler": [[23, "module-s3prl.dataio.sampler.sorted_sampler"]], "set_epoch() (s3prl.dataio.sampler.sorted_sampler.sortedbucketingsampler method)": [[23, "s3prl.dataio.sampler.sorted_sampler.SortedBucketingSampler.set_epoch"]], "set_epoch() (s3prl.dataio.sampler.sorted_sampler.sortedslicesampler method)": [[23, "s3prl.dataio.sampler.sorted_sampler.SortedSliceSampler.set_epoch"]], "accuracy() (in module s3prl.metric)": [[24, "s3prl.metric.accuracy"]], "calc_diarization_error() (in module s3prl.metric)": [[24, "s3prl.metric.calc_diarization_error"]], "cer() (in module s3prl.metric)": [[24, "s3prl.metric.cer"]], "compute_eer() (in module s3prl.metric)": [[24, "s3prl.metric.compute_eer"]], "compute_mindcf() (in module s3prl.metric)": [[24, "s3prl.metric.compute_minDCF"]], "per() (in module s3prl.metric)": [[24, "s3prl.metric.per"]], "s3prl.metric": [[24, "module-s3prl.metric"]], "slot_edit_f1() (in module s3prl.metric)": [[24, "s3prl.metric.slot_edit_f1"]], "slot_type_f1() (in module s3prl.metric)": [[24, "s3prl.metric.slot_type_f1"]], "slot_value_cer() (in module s3prl.metric)": [[24, "s3prl.metric.slot_value_cer"]], "slot_value_wer() (in module s3prl.metric)": [[24, "s3prl.metric.slot_value_wer"]], "ter() (in module s3prl.metric)": [[24, "s3prl.metric.ter"]], "wer() (in module s3prl.metric)": [[24, "s3prl.metric.wer"]], "accuracy() (in module s3prl.metric.common)": [[25, "s3prl.metric.common.accuracy"]], "cer() (in module s3prl.metric.common)": [[25, "s3prl.metric.common.cer"]], "compute_eer() (in module s3prl.metric.common)": [[25, "s3prl.metric.common.compute_eer"]], "compute_mindcf() (in module s3prl.metric.common)": [[25, "s3prl.metric.common.compute_minDCF"]], "per() (in module s3prl.metric.common)": [[25, "s3prl.metric.common.per"]], "s3prl.metric.common": [[25, "module-s3prl.metric.common"]], "ter() (in module s3prl.metric.common)": [[25, "s3prl.metric.common.ter"]], "wer() (in module s3prl.metric.common)": [[25, "s3prl.metric.common.wer"]], "calc_diarization_error() (in module s3prl.metric.diarization)": [[26, "s3prl.metric.diarization.calc_diarization_error"]], "s3prl.metric.diarization": [[26, "module-s3prl.metric.diarization"]], "s3prl.metric.slot_filling": [[27, "module-s3prl.metric.slot_filling"]], "slot_edit_f1() (in module s3prl.metric.slot_filling)": [[27, "s3prl.metric.slot_filling.slot_edit_f1"]], "slot_type_f1() (in module s3prl.metric.slot_filling)": [[27, "s3prl.metric.slot_filling.slot_type_f1"]], "slot_value_cer() (in module s3prl.metric.slot_filling)": [[27, "s3prl.metric.slot_filling.slot_value_cer"]], "slot_value_wer() (in module s3prl.metric.slot_filling)": [[27, "s3prl.metric.slot_filling.slot_value_wer"]], "beamdecoder (class in s3prl.nn)": [[28, "s3prl.nn.BeamDecoder"]], "featurizer (class in s3prl.nn)": [[28, "s3prl.nn.Featurizer"]], "framelevel (class in s3prl.nn)": [[28, "s3prl.nn.FrameLevel"]], "framelevellinear (class in s3prl.nn)": [[28, "s3prl.nn.FrameLevelLinear"]], "meanpooling (class in s3prl.nn)": [[28, "s3prl.nn.MeanPooling"]], "meanpoolinglinear (class in s3prl.nn)": [[28, "s3prl.nn.MeanPoolingLinear"]], "rnnencoder (class in s3prl.nn)": [[28, "s3prl.nn.RNNEncoder"]], "s3prlupstream (class in s3prl.nn)": [[28, "s3prl.nn.S3PRLUpstream"]], "superbdiarizationmodel (class in s3prl.nn)": [[28, "s3prl.nn.SuperbDiarizationModel"]], "superbxvector (class in s3prl.nn)": [[28, "s3prl.nn.SuperbXvector"]], "temporalaveragepooling (in module s3prl.nn)": [[28, "s3prl.nn.TemporalAveragePooling"]], "temporalstatisticspooling (class in s3prl.nn)": [[28, "s3prl.nn.TemporalStatisticsPooling"]], "utterancelevel (class in s3prl.nn)": [[28, "s3prl.nn.UtteranceLevel"]], "xvectorbackbone (class in s3prl.nn)": [[28, "s3prl.nn.XVectorBackbone"]], "amsoftmax (class in s3prl.nn)": [[28, "s3prl.nn.amsoftmax"]], "available_names() (s3prl.nn.s3prlupstream class method)": [[28, "s3prl.nn.S3PRLUpstream.available_names"]], "decode() (s3prl.nn.beamdecoder method)": [[28, "s3prl.nn.BeamDecoder.decode"]], "downsample_rate (s3prl.nn.featurizer property)": [[28, "s3prl.nn.Featurizer.downsample_rate"]], "downsample_rates (s3prl.nn.s3prlupstream property)": [[28, "s3prl.nn.S3PRLUpstream.downsample_rates"]], "dump_patches (s3prl.nn.featurizer attribute)": [[28, "s3prl.nn.Featurizer.dump_patches"]], "dump_patches (s3prl.nn.framelevel attribute)": [[28, "s3prl.nn.FrameLevel.dump_patches"]], "dump_patches (s3prl.nn.framelevellinear attribute)": [[28, "s3prl.nn.FrameLevelLinear.dump_patches"]], "dump_patches (s3prl.nn.meanpooling attribute)": [[28, "s3prl.nn.MeanPooling.dump_patches"]], "dump_patches (s3prl.nn.meanpoolinglinear attribute)": [[28, "s3prl.nn.MeanPoolingLinear.dump_patches"]], "dump_patches (s3prl.nn.rnnencoder attribute)": [[28, "s3prl.nn.RNNEncoder.dump_patches"]], "dump_patches (s3prl.nn.s3prlupstream attribute)": [[28, "s3prl.nn.S3PRLUpstream.dump_patches"]], "dump_patches (s3prl.nn.superbdiarizationmodel attribute)": [[28, "s3prl.nn.SuperbDiarizationModel.dump_patches"]], "dump_patches (s3prl.nn.superbxvector attribute)": [[28, "s3prl.nn.SuperbXvector.dump_patches"]], "dump_patches (s3prl.nn.temporalstatisticspooling attribute)": [[28, "s3prl.nn.TemporalStatisticsPooling.dump_patches"]], "dump_patches (s3prl.nn.utterancelevel attribute)": [[28, "s3prl.nn.UtteranceLevel.dump_patches"]], "dump_patches (s3prl.nn.xvectorbackbone attribute)": [[28, "s3prl.nn.XVectorBackbone.dump_patches"]], "dump_patches (s3prl.nn.amsoftmax attribute)": [[28, "s3prl.nn.amsoftmax.dump_patches"]], "dump_patches (s3prl.nn.softmax attribute)": [[28, "s3prl.nn.softmax.dump_patches"]], "forward() (s3prl.nn.featurizer method)": [[28, "s3prl.nn.Featurizer.forward"]], "forward() (s3prl.nn.framelevel method)": [[28, "s3prl.nn.FrameLevel.forward"]], "forward() (s3prl.nn.framelevellinear method)": [[28, "s3prl.nn.FrameLevelLinear.forward"]], "forward() (s3prl.nn.meanpooling method)": [[28, "s3prl.nn.MeanPooling.forward"]], "forward() (s3prl.nn.meanpoolinglinear method)": [[28, "s3prl.nn.MeanPoolingLinear.forward"]], "forward() (s3prl.nn.rnnencoder method)": [[28, "s3prl.nn.RNNEncoder.forward"]], "forward() (s3prl.nn.s3prlupstream method)": [[28, "s3prl.nn.S3PRLUpstream.forward"]], "forward() (s3prl.nn.superbdiarizationmodel method)": [[28, "s3prl.nn.SuperbDiarizationModel.forward"]], "forward() (s3prl.nn.superbxvector method)": [[28, "s3prl.nn.SuperbXvector.forward"]], "forward() (s3prl.nn.temporalstatisticspooling method)": [[28, "s3prl.nn.TemporalStatisticsPooling.forward"]], "forward() (s3prl.nn.utterancelevel method)": [[28, "s3prl.nn.UtteranceLevel.forward"]], "forward() (s3prl.nn.xvectorbackbone method)": [[28, "s3prl.nn.XVectorBackbone.forward"]], "forward() (s3prl.nn.amsoftmax method)": [[28, "s3prl.nn.amsoftmax.forward"]], "forward() (s3prl.nn.softmax method)": [[28, "s3prl.nn.softmax.forward"]], "get_timesteps() (s3prl.nn.beamdecoder method)": [[28, "s3prl.nn.BeamDecoder.get_timesteps"]], "get_tokens() (s3prl.nn.beamdecoder method)": [[28, "s3prl.nn.BeamDecoder.get_tokens"]], "hidden_sizes (s3prl.nn.s3prlupstream property)": [[28, "s3prl.nn.S3PRLUpstream.hidden_sizes"]], "input_size (s3prl.nn.framelevel property)": [[28, "s3prl.nn.FrameLevel.input_size"]], "input_size (s3prl.nn.framelevellinear property)": [[28, "s3prl.nn.FrameLevelLinear.input_size"]], "input_size (s3prl.nn.meanpooling property)": [[28, "s3prl.nn.MeanPooling.input_size"]], "input_size (s3prl.nn.meanpoolinglinear property)": [[28, "s3prl.nn.MeanPoolingLinear.input_size"]], "input_size (s3prl.nn.rnnencoder property)": [[28, "s3prl.nn.RNNEncoder.input_size"]], "input_size (s3prl.nn.superbdiarizationmodel property)": [[28, "s3prl.nn.SuperbDiarizationModel.input_size"]], "input_size (s3prl.nn.superbxvector property)": [[28, "s3prl.nn.SuperbXvector.input_size"]], "input_size (s3prl.nn.temporalstatisticspooling property)": [[28, "s3prl.nn.TemporalStatisticsPooling.input_size"]], "input_size (s3prl.nn.utterancelevel property)": [[28, "s3prl.nn.UtteranceLevel.input_size"]], "input_size (s3prl.nn.xvectorbackbone property)": [[28, "s3prl.nn.XVectorBackbone.input_size"]], "input_size (s3prl.nn.amsoftmax property)": [[28, "s3prl.nn.amsoftmax.input_size"]], "input_size (s3prl.nn.softmax property)": [[28, "s3prl.nn.softmax.input_size"]], "num_layers (s3prl.nn.s3prlupstream property)": [[28, "s3prl.nn.S3PRLUpstream.num_layers"]], "output_size (s3prl.nn.featurizer property)": [[28, "s3prl.nn.Featurizer.output_size"]], "output_size (s3prl.nn.framelevel property)": [[28, "s3prl.nn.FrameLevel.output_size"]], "output_size (s3prl.nn.framelevellinear property)": [[28, "s3prl.nn.FrameLevelLinear.output_size"]], "output_size (s3prl.nn.meanpooling property)": [[28, "s3prl.nn.MeanPooling.output_size"]], "output_size (s3prl.nn.meanpoolinglinear property)": [[28, "s3prl.nn.MeanPoolingLinear.output_size"]], "output_size (s3prl.nn.rnnencoder property)": [[28, "s3prl.nn.RNNEncoder.output_size"]], "output_size (s3prl.nn.superbdiarizationmodel property)": [[28, "s3prl.nn.SuperbDiarizationModel.output_size"]], "output_size (s3prl.nn.superbxvector property)": [[28, "s3prl.nn.SuperbXvector.output_size"]], "output_size (s3prl.nn.temporalstatisticspooling property)": [[28, "s3prl.nn.TemporalStatisticsPooling.output_size"]], "output_size (s3prl.nn.utterancelevel property)": [[28, "s3prl.nn.UtteranceLevel.output_size"]], "output_size (s3prl.nn.xvectorbackbone property)": [[28, "s3prl.nn.XVectorBackbone.output_size"]], "output_size (s3prl.nn.amsoftmax property)": [[28, "s3prl.nn.amsoftmax.output_size"]], "output_size (s3prl.nn.softmax property)": [[28, "s3prl.nn.softmax.output_size"]], "s3prl.nn": [[28, "module-s3prl.nn"]], "softmax (class in s3prl.nn)": [[28, "s3prl.nn.softmax"]], "training (s3prl.nn.featurizer attribute)": [[28, "s3prl.nn.Featurizer.training"]], "training (s3prl.nn.framelevel attribute)": [[28, "s3prl.nn.FrameLevel.training"]], "training (s3prl.nn.framelevellinear attribute)": [[28, "s3prl.nn.FrameLevelLinear.training"]], "training (s3prl.nn.meanpooling attribute)": [[28, "s3prl.nn.MeanPooling.training"]], "training (s3prl.nn.meanpoolinglinear attribute)": [[28, "s3prl.nn.MeanPoolingLinear.training"]], "training (s3prl.nn.rnnencoder attribute)": [[28, "s3prl.nn.RNNEncoder.training"]], "training (s3prl.nn.s3prlupstream attribute)": [[28, "s3prl.nn.S3PRLUpstream.training"]], "training (s3prl.nn.superbdiarizationmodel attribute)": [[28, "s3prl.nn.SuperbDiarizationModel.training"]], "training (s3prl.nn.superbxvector attribute)": [[28, "s3prl.nn.SuperbXvector.training"]], "training (s3prl.nn.temporalstatisticspooling attribute)": [[28, "s3prl.nn.TemporalStatisticsPooling.training"]], "training (s3prl.nn.utterancelevel attribute)": [[28, "s3prl.nn.UtteranceLevel.training"]], "training (s3prl.nn.xvectorbackbone attribute)": [[28, "s3prl.nn.XVectorBackbone.training"]], "training (s3prl.nn.amsoftmax attribute)": [[28, "s3prl.nn.amsoftmax.training"]], "training (s3prl.nn.softmax attribute)": [[28, "s3prl.nn.softmax.training"]], "beamdecoder (class in s3prl.nn.beam_decoder)": [[29, "s3prl.nn.beam_decoder.BeamDecoder"]], "decode() (s3prl.nn.beam_decoder.beamdecoder method)": [[29, "s3prl.nn.beam_decoder.BeamDecoder.decode"]], "get_timesteps() (s3prl.nn.beam_decoder.beamdecoder method)": [[29, "s3prl.nn.beam_decoder.BeamDecoder.get_timesteps"]], "get_tokens() (s3prl.nn.beam_decoder.beamdecoder method)": [[29, "s3prl.nn.beam_decoder.BeamDecoder.get_tokens"]], "s3prl.nn.beam_decoder": [[29, "module-s3prl.nn.beam_decoder"]], "framelevel (class in s3prl.nn.common)": [[30, "s3prl.nn.common.FrameLevel"]], "utterancelevel (class in s3prl.nn.common)": [[30, "s3prl.nn.common.UtteranceLevel"]], "dump_patches (s3prl.nn.common.framelevel attribute)": [[30, "s3prl.nn.common.FrameLevel.dump_patches"]], "dump_patches (s3prl.nn.common.utterancelevel attribute)": [[30, "s3prl.nn.common.UtteranceLevel.dump_patches"]], "forward() (s3prl.nn.common.framelevel method)": [[30, "s3prl.nn.common.FrameLevel.forward"]], "forward() (s3prl.nn.common.utterancelevel method)": [[30, "s3prl.nn.common.UtteranceLevel.forward"]], "input_size (s3prl.nn.common.framelevel property)": [[30, "s3prl.nn.common.FrameLevel.input_size"]], "input_size (s3prl.nn.common.utterancelevel property)": [[30, "s3prl.nn.common.UtteranceLevel.input_size"]], "output_size (s3prl.nn.common.framelevel property)": [[30, "s3prl.nn.common.FrameLevel.output_size"]], "output_size (s3prl.nn.common.utterancelevel property)": [[30, "s3prl.nn.common.UtteranceLevel.output_size"]], "s3prl.nn.common": [[30, "module-s3prl.nn.common"]], "training (s3prl.nn.common.framelevel attribute)": [[30, "s3prl.nn.common.FrameLevel.training"]], "training (s3prl.nn.common.utterancelevel attribute)": [[30, "s3prl.nn.common.UtteranceLevel.training"]], "hearfullyconnectedprediction (class in s3prl.nn.hear)": [[31, "s3prl.nn.hear.HearFullyConnectedPrediction"]], "dump_patches (s3prl.nn.hear.hearfullyconnectedprediction attribute)": [[31, "s3prl.nn.hear.HearFullyConnectedPrediction.dump_patches"]], "forward() (s3prl.nn.hear.hearfullyconnectedprediction method)": [[31, "s3prl.nn.hear.HearFullyConnectedPrediction.forward"]], "input_size (s3prl.nn.hear.hearfullyconnectedprediction property)": [[31, "s3prl.nn.hear.HearFullyConnectedPrediction.input_size"]], "output_size (s3prl.nn.hear.hearfullyconnectedprediction property)": [[31, "s3prl.nn.hear.HearFullyConnectedPrediction.output_size"]], "s3prl.nn.hear": [[31, "module-s3prl.nn.hear"]], "training (s3prl.nn.hear.hearfullyconnectedprediction attribute)": [[31, "s3prl.nn.hear.HearFullyConnectedPrediction.training"]], "absfeaturizer (class in s3prl.nn.interface)": [[32, "s3prl.nn.interface.AbsFeaturizer"]], "absframemodel (class in s3prl.nn.interface)": [[32, "s3prl.nn.interface.AbsFrameModel"]], "absupstream (class in s3prl.nn.interface)": [[32, "s3prl.nn.interface.AbsUpstream"]], "absutterancemodel (class in s3prl.nn.interface)": [[32, "s3prl.nn.interface.AbsUtteranceModel"]], "downsample_rate (s3prl.nn.interface.absfeaturizer property)": [[32, "s3prl.nn.interface.AbsFeaturizer.downsample_rate"]], "downsample_rates (s3prl.nn.interface.absupstream property)": [[32, "s3prl.nn.interface.AbsUpstream.downsample_rates"]], "dump_patches (s3prl.nn.interface.absfeaturizer attribute)": [[32, "s3prl.nn.interface.AbsFeaturizer.dump_patches"]], "dump_patches (s3prl.nn.interface.absframemodel attribute)": [[32, "s3prl.nn.interface.AbsFrameModel.dump_patches"]], "dump_patches (s3prl.nn.interface.absupstream attribute)": [[32, "s3prl.nn.interface.AbsUpstream.dump_patches"]], "dump_patches (s3prl.nn.interface.absutterancemodel attribute)": [[32, "s3prl.nn.interface.AbsUtteranceModel.dump_patches"]], "forward() (s3prl.nn.interface.absfeaturizer method)": [[32, "s3prl.nn.interface.AbsFeaturizer.forward"]], "forward() (s3prl.nn.interface.absframemodel method)": [[32, "s3prl.nn.interface.AbsFrameModel.forward"]], "forward() (s3prl.nn.interface.absupstream method)": [[32, "s3prl.nn.interface.AbsUpstream.forward"]], "forward() (s3prl.nn.interface.absutterancemodel method)": [[32, "s3prl.nn.interface.AbsUtteranceModel.forward"]], "hidden_sizes (s3prl.nn.interface.absupstream property)": [[32, "s3prl.nn.interface.AbsUpstream.hidden_sizes"]], "input_size (s3prl.nn.interface.absframemodel property)": [[32, "s3prl.nn.interface.AbsFrameModel.input_size"]], "input_size (s3prl.nn.interface.absutterancemodel property)": [[32, "s3prl.nn.interface.AbsUtteranceModel.input_size"]], "num_layer (s3prl.nn.interface.absupstream property)": [[32, "s3prl.nn.interface.AbsUpstream.num_layer"]], "output_size (s3prl.nn.interface.absfeaturizer property)": [[32, "s3prl.nn.interface.AbsFeaturizer.output_size"]], "output_size (s3prl.nn.interface.absframemodel property)": [[32, "s3prl.nn.interface.AbsFrameModel.output_size"]], "output_size (s3prl.nn.interface.absutterancemodel property)": [[32, "s3prl.nn.interface.AbsUtteranceModel.output_size"]], "s3prl.nn.interface": [[32, "module-s3prl.nn.interface"]], "training (s3prl.nn.interface.absfeaturizer attribute)": [[32, "s3prl.nn.interface.AbsFeaturizer.training"]], "training (s3prl.nn.interface.absframemodel attribute)": [[32, "s3prl.nn.interface.AbsFrameModel.training"]], "training (s3prl.nn.interface.absupstream attribute)": [[32, "s3prl.nn.interface.AbsUpstream.training"]], "training (s3prl.nn.interface.absutterancemodel attribute)": [[32, "s3prl.nn.interface.AbsUtteranceModel.training"]], "framelevellinear (class in s3prl.nn.linear)": [[33, "s3prl.nn.linear.FrameLevelLinear"]], "meanpoolinglinear (class in s3prl.nn.linear)": [[33, "s3prl.nn.linear.MeanPoolingLinear"]], "dump_patches (s3prl.nn.linear.framelevellinear attribute)": [[33, "s3prl.nn.linear.FrameLevelLinear.dump_patches"]], "dump_patches (s3prl.nn.linear.meanpoolinglinear attribute)": [[33, "s3prl.nn.linear.MeanPoolingLinear.dump_patches"]], "forward() (s3prl.nn.linear.framelevellinear method)": [[33, "s3prl.nn.linear.FrameLevelLinear.forward"]], "forward() (s3prl.nn.linear.meanpoolinglinear method)": [[33, "s3prl.nn.linear.MeanPoolingLinear.forward"]], "input_size (s3prl.nn.linear.framelevellinear property)": [[33, "s3prl.nn.linear.FrameLevelLinear.input_size"]], "input_size (s3prl.nn.linear.meanpoolinglinear property)": [[33, "s3prl.nn.linear.MeanPoolingLinear.input_size"]], "output_size (s3prl.nn.linear.framelevellinear property)": [[33, "s3prl.nn.linear.FrameLevelLinear.output_size"]], "output_size (s3prl.nn.linear.meanpoolinglinear property)": [[33, "s3prl.nn.linear.MeanPoolingLinear.output_size"]], "s3prl.nn.linear": [[33, "module-s3prl.nn.linear"]], "training (s3prl.nn.linear.framelevellinear attribute)": [[33, "s3prl.nn.linear.FrameLevelLinear.training"]], "training (s3prl.nn.linear.meanpoolinglinear attribute)": [[33, "s3prl.nn.linear.MeanPoolingLinear.training"]], "pit_loss() (in module s3prl.nn.pit)": [[34, "s3prl.nn.pit.pit_loss"]], "s3prl.nn.pit": [[34, "module-s3prl.nn.pit"]], "attentivestatisticspooling (class in s3prl.nn.pooling)": [[35, "s3prl.nn.pooling.AttentiveStatisticsPooling"]], "meanpooling (class in s3prl.nn.pooling)": [[35, "s3prl.nn.pooling.MeanPooling"]], "selfattentivepooling (class in s3prl.nn.pooling)": [[35, "s3prl.nn.pooling.SelfAttentivePooling"]], "temporalaveragepooling (in module s3prl.nn.pooling)": [[35, "s3prl.nn.pooling.TemporalAveragePooling"]], "temporalstatisticspooling (class in s3prl.nn.pooling)": [[35, "s3prl.nn.pooling.TemporalStatisticsPooling"]], "dump_patches (s3prl.nn.pooling.attentivestatisticspooling attribute)": [[35, "s3prl.nn.pooling.AttentiveStatisticsPooling.dump_patches"]], "dump_patches (s3prl.nn.pooling.meanpooling attribute)": [[35, "s3prl.nn.pooling.MeanPooling.dump_patches"]], "dump_patches (s3prl.nn.pooling.selfattentivepooling attribute)": [[35, "s3prl.nn.pooling.SelfAttentivePooling.dump_patches"]], "dump_patches (s3prl.nn.pooling.temporalstatisticspooling attribute)": [[35, "s3prl.nn.pooling.TemporalStatisticsPooling.dump_patches"]], "forward() (s3prl.nn.pooling.attentivestatisticspooling method)": [[35, "s3prl.nn.pooling.AttentiveStatisticsPooling.forward"]], "forward() (s3prl.nn.pooling.meanpooling method)": [[35, "s3prl.nn.pooling.MeanPooling.forward"]], "forward() (s3prl.nn.pooling.selfattentivepooling method)": [[35, "s3prl.nn.pooling.SelfAttentivePooling.forward"]], "forward() (s3prl.nn.pooling.temporalstatisticspooling method)": [[35, "s3prl.nn.pooling.TemporalStatisticsPooling.forward"]], "input_size (s3prl.nn.pooling.attentivestatisticspooling property)": [[35, "s3prl.nn.pooling.AttentiveStatisticsPooling.input_size"]], "input_size (s3prl.nn.pooling.meanpooling property)": [[35, "s3prl.nn.pooling.MeanPooling.input_size"]], "input_size (s3prl.nn.pooling.selfattentivepooling property)": [[35, "s3prl.nn.pooling.SelfAttentivePooling.input_size"]], "input_size (s3prl.nn.pooling.temporalstatisticspooling property)": [[35, "s3prl.nn.pooling.TemporalStatisticsPooling.input_size"]], "output_size (s3prl.nn.pooling.attentivestatisticspooling property)": [[35, "s3prl.nn.pooling.AttentiveStatisticsPooling.output_size"]], "output_size (s3prl.nn.pooling.meanpooling property)": [[35, "s3prl.nn.pooling.MeanPooling.output_size"]], "output_size (s3prl.nn.pooling.selfattentivepooling property)": [[35, "s3prl.nn.pooling.SelfAttentivePooling.output_size"]], "output_size (s3prl.nn.pooling.temporalstatisticspooling property)": [[35, "s3prl.nn.pooling.TemporalStatisticsPooling.output_size"]], "s3prl.nn.pooling": [[35, "module-s3prl.nn.pooling"]], "training (s3prl.nn.pooling.attentivestatisticspooling attribute)": [[35, "s3prl.nn.pooling.AttentiveStatisticsPooling.training"]], "training (s3prl.nn.pooling.meanpooling attribute)": [[35, "s3prl.nn.pooling.MeanPooling.training"]], "training (s3prl.nn.pooling.selfattentivepooling attribute)": [[35, "s3prl.nn.pooling.SelfAttentivePooling.training"]], "training (s3prl.nn.pooling.temporalstatisticspooling attribute)": [[35, "s3prl.nn.pooling.TemporalStatisticsPooling.training"]], "rnnencoder (class in s3prl.nn.rnn)": [[36, "s3prl.nn.rnn.RNNEncoder"]], "rnnlayer (class in s3prl.nn.rnn)": [[36, "s3prl.nn.rnn.RNNLayer"]], "superbdiarizationmodel (class in s3prl.nn.rnn)": [[36, "s3prl.nn.rnn.SuperbDiarizationModel"]], "dump_patches (s3prl.nn.rnn.rnnencoder attribute)": [[36, "s3prl.nn.rnn.RNNEncoder.dump_patches"]], "dump_patches (s3prl.nn.rnn.rnnlayer attribute)": [[36, "s3prl.nn.rnn.RNNLayer.dump_patches"]], "dump_patches (s3prl.nn.rnn.superbdiarizationmodel attribute)": [[36, "s3prl.nn.rnn.SuperbDiarizationModel.dump_patches"]], "forward() (s3prl.nn.rnn.rnnencoder method)": [[36, "s3prl.nn.rnn.RNNEncoder.forward"]], "forward() (s3prl.nn.rnn.rnnlayer method)": [[36, "s3prl.nn.rnn.RNNLayer.forward"]], "forward() (s3prl.nn.rnn.superbdiarizationmodel method)": [[36, "s3prl.nn.rnn.SuperbDiarizationModel.forward"]], "input_size (s3prl.nn.rnn.rnnencoder property)": [[36, "s3prl.nn.rnn.RNNEncoder.input_size"]], "input_size (s3prl.nn.rnn.rnnlayer property)": [[36, "s3prl.nn.rnn.RNNLayer.input_size"]], "input_size (s3prl.nn.rnn.superbdiarizationmodel property)": [[36, "s3prl.nn.rnn.SuperbDiarizationModel.input_size"]], "output_size (s3prl.nn.rnn.rnnencoder property)": [[36, "s3prl.nn.rnn.RNNEncoder.output_size"]], "output_size (s3prl.nn.rnn.rnnlayer property)": [[36, "s3prl.nn.rnn.RNNLayer.output_size"]], "output_size (s3prl.nn.rnn.superbdiarizationmodel property)": [[36, "s3prl.nn.rnn.SuperbDiarizationModel.output_size"]], "s3prl.nn.rnn": [[36, "module-s3prl.nn.rnn"]], "training (s3prl.nn.rnn.rnnencoder attribute)": [[36, "s3prl.nn.rnn.RNNEncoder.training"]], "training (s3prl.nn.rnn.rnnlayer attribute)": [[36, "s3prl.nn.rnn.RNNLayer.training"]], "training (s3prl.nn.rnn.superbdiarizationmodel attribute)": [[36, "s3prl.nn.rnn.SuperbDiarizationModel.training"]], "amsoftmax (class in s3prl.nn.speaker_loss)": [[37, "s3prl.nn.speaker_loss.amsoftmax"]], "dump_patches (s3prl.nn.speaker_loss.amsoftmax attribute)": [[37, "s3prl.nn.speaker_loss.amsoftmax.dump_patches"]], "dump_patches (s3prl.nn.speaker_loss.softmax attribute)": [[37, "s3prl.nn.speaker_loss.softmax.dump_patches"]], "forward() (s3prl.nn.speaker_loss.amsoftmax method)": [[37, "s3prl.nn.speaker_loss.amsoftmax.forward"]], "forward() (s3prl.nn.speaker_loss.softmax method)": [[37, "s3prl.nn.speaker_loss.softmax.forward"]], "input_size (s3prl.nn.speaker_loss.amsoftmax property)": [[37, "s3prl.nn.speaker_loss.amsoftmax.input_size"]], "input_size (s3prl.nn.speaker_loss.softmax property)": [[37, "s3prl.nn.speaker_loss.softmax.input_size"]], "output_size (s3prl.nn.speaker_loss.amsoftmax property)": [[37, "s3prl.nn.speaker_loss.amsoftmax.output_size"]], "output_size (s3prl.nn.speaker_loss.softmax property)": [[37, "s3prl.nn.speaker_loss.softmax.output_size"]], "s3prl.nn.speaker_loss": [[37, "module-s3prl.nn.speaker_loss"]], "softmax (class in s3prl.nn.speaker_loss)": [[37, "s3prl.nn.speaker_loss.softmax"]], "training (s3prl.nn.speaker_loss.amsoftmax attribute)": [[37, "s3prl.nn.speaker_loss.amsoftmax.training"]], "training (s3prl.nn.speaker_loss.softmax attribute)": [[37, "s3prl.nn.speaker_loss.softmax.training"]], "speakerembeddingextractor (class in s3prl.nn.speaker_model)": [[38, "s3prl.nn.speaker_model.SpeakerEmbeddingExtractor"]], "superbxvector (class in s3prl.nn.speaker_model)": [[38, "s3prl.nn.speaker_model.SuperbXvector"]], "tdnn (class in s3prl.nn.speaker_model)": [[38, "s3prl.nn.speaker_model.TDNN"]], "xvectorbackbone (class in s3prl.nn.speaker_model)": [[38, "s3prl.nn.speaker_model.XVectorBackbone"]], "dump_patches (s3prl.nn.speaker_model.speakerembeddingextractor attribute)": [[38, "s3prl.nn.speaker_model.SpeakerEmbeddingExtractor.dump_patches"]], "dump_patches (s3prl.nn.speaker_model.superbxvector attribute)": [[38, "s3prl.nn.speaker_model.SuperbXvector.dump_patches"]], "dump_patches (s3prl.nn.speaker_model.tdnn attribute)": [[38, "s3prl.nn.speaker_model.TDNN.dump_patches"]], "dump_patches (s3prl.nn.speaker_model.xvectorbackbone attribute)": [[38, "s3prl.nn.speaker_model.XVectorBackbone.dump_patches"]], "forward() (s3prl.nn.speaker_model.speakerembeddingextractor method)": [[38, "s3prl.nn.speaker_model.SpeakerEmbeddingExtractor.forward"]], "forward() (s3prl.nn.speaker_model.superbxvector method)": [[38, "s3prl.nn.speaker_model.SuperbXvector.forward"]], "forward() (s3prl.nn.speaker_model.tdnn method)": [[38, "s3prl.nn.speaker_model.TDNN.forward"]], "forward() (s3prl.nn.speaker_model.xvectorbackbone method)": [[38, "s3prl.nn.speaker_model.XVectorBackbone.forward"]], "input_size (s3prl.nn.speaker_model.speakerembeddingextractor property)": [[38, "s3prl.nn.speaker_model.SpeakerEmbeddingExtractor.input_size"]], "input_size (s3prl.nn.speaker_model.superbxvector property)": [[38, "s3prl.nn.speaker_model.SuperbXvector.input_size"]], "input_size (s3prl.nn.speaker_model.tdnn property)": [[38, "s3prl.nn.speaker_model.TDNN.input_size"]], "input_size (s3prl.nn.speaker_model.xvectorbackbone property)": [[38, "s3prl.nn.speaker_model.XVectorBackbone.input_size"]], "output_size (s3prl.nn.speaker_model.speakerembeddingextractor property)": [[38, "s3prl.nn.speaker_model.SpeakerEmbeddingExtractor.output_size"]], "output_size (s3prl.nn.speaker_model.superbxvector property)": [[38, "s3prl.nn.speaker_model.SuperbXvector.output_size"]], "output_size (s3prl.nn.speaker_model.tdnn property)": [[38, "s3prl.nn.speaker_model.TDNN.output_size"]], "output_size (s3prl.nn.speaker_model.xvectorbackbone property)": [[38, "s3prl.nn.speaker_model.XVectorBackbone.output_size"]], "s3prl.nn.speaker_model": [[38, "module-s3prl.nn.speaker_model"]], "training (s3prl.nn.speaker_model.speakerembeddingextractor attribute)": [[38, "s3prl.nn.speaker_model.SpeakerEmbeddingExtractor.training"]], "training (s3prl.nn.speaker_model.superbxvector attribute)": [[38, "s3prl.nn.speaker_model.SuperbXvector.training"]], "training (s3prl.nn.speaker_model.tdnn attribute)": [[38, "s3prl.nn.speaker_model.TDNN.training"]], "training (s3prl.nn.speaker_model.xvectorbackbone attribute)": [[38, "s3prl.nn.speaker_model.XVectorBackbone.training"]], "modelwithspecaug (class in s3prl.nn.specaug)": [[39, "s3prl.nn.specaug.ModelWithSpecaug"]], "specaug (class in s3prl.nn.specaug)": [[39, "s3prl.nn.specaug.SpecAug"]], "apply_specaug() (s3prl.nn.specaug.specaug method)": [[39, "s3prl.nn.specaug.SpecAug.apply_specaug"]], "dump_patches (s3prl.nn.specaug.modelwithspecaug attribute)": [[39, "s3prl.nn.specaug.ModelWithSpecaug.dump_patches"]], "dump_patches (s3prl.nn.specaug.specaug attribute)": [[39, "s3prl.nn.specaug.SpecAug.dump_patches"]], "forward() (s3prl.nn.specaug.modelwithspecaug method)": [[39, "s3prl.nn.specaug.ModelWithSpecaug.forward"]], "forward() (s3prl.nn.specaug.specaug method)": [[39, "s3prl.nn.specaug.SpecAug.forward"]], "input_size (s3prl.nn.specaug.modelwithspecaug property)": [[39, "s3prl.nn.specaug.ModelWithSpecaug.input_size"]], "output_size (s3prl.nn.specaug.modelwithspecaug property)": [[39, "s3prl.nn.specaug.ModelWithSpecaug.output_size"]], "s3prl.nn.specaug": [[39, "module-s3prl.nn.specaug"]], "training (s3prl.nn.specaug.modelwithspecaug attribute)": [[39, "s3prl.nn.specaug.ModelWithSpecaug.training"]], "training (s3prl.nn.specaug.specaug attribute)": [[39, "s3prl.nn.specaug.SpecAug.training"]], "featurizer (class in s3prl.nn.upstream)": [[40, "s3prl.nn.upstream.Featurizer"]], "s3prlupstream (class in s3prl.nn.upstream)": [[40, "s3prl.nn.upstream.S3PRLUpstream"]], "upstreamdownstreammodel (class in s3prl.nn.upstream)": [[40, "s3prl.nn.upstream.UpstreamDownstreamModel"]], "available_names() (s3prl.nn.upstream.s3prlupstream class method)": [[40, "s3prl.nn.upstream.S3PRLUpstream.available_names"]], "downsample_rate (s3prl.nn.upstream.featurizer property)": [[40, "s3prl.nn.upstream.Featurizer.downsample_rate"]], "downsample_rate (s3prl.nn.upstream.upstreamdownstreammodel property)": [[40, "s3prl.nn.upstream.UpstreamDownstreamModel.downsample_rate"]], "downsample_rates (s3prl.nn.upstream.s3prlupstream property)": [[40, "s3prl.nn.upstream.S3PRLUpstream.downsample_rates"]], "dump_patches (s3prl.nn.upstream.featurizer attribute)": [[40, "s3prl.nn.upstream.Featurizer.dump_patches"]], "dump_patches (s3prl.nn.upstream.s3prlupstream attribute)": [[40, "s3prl.nn.upstream.S3PRLUpstream.dump_patches"]], "dump_patches (s3prl.nn.upstream.upstreamdownstreammodel attribute)": [[40, "s3prl.nn.upstream.UpstreamDownstreamModel.dump_patches"]], "forward() (s3prl.nn.upstream.featurizer method)": [[40, "s3prl.nn.upstream.Featurizer.forward"]], "forward() (s3prl.nn.upstream.s3prlupstream method)": [[40, "s3prl.nn.upstream.S3PRLUpstream.forward"]], "forward() (s3prl.nn.upstream.upstreamdownstreammodel method)": [[40, "s3prl.nn.upstream.UpstreamDownstreamModel.forward"]], "hidden_sizes (s3prl.nn.upstream.s3prlupstream property)": [[40, "s3prl.nn.upstream.S3PRLUpstream.hidden_sizes"]], "input_size (s3prl.nn.upstream.upstreamdownstreammodel property)": [[40, "s3prl.nn.upstream.UpstreamDownstreamModel.input_size"]], "num_layers (s3prl.nn.upstream.s3prlupstream property)": [[40, "s3prl.nn.upstream.S3PRLUpstream.num_layers"]], "output_size (s3prl.nn.upstream.featurizer property)": [[40, "s3prl.nn.upstream.Featurizer.output_size"]], "output_size (s3prl.nn.upstream.upstreamdownstreammodel property)": [[40, "s3prl.nn.upstream.UpstreamDownstreamModel.output_size"]], "s3prl.nn.upstream": [[40, "module-s3prl.nn.upstream"]], "training (s3prl.nn.upstream.featurizer attribute)": [[40, "s3prl.nn.upstream.Featurizer.training"]], "training (s3prl.nn.upstream.s3prlupstream attribute)": [[40, "s3prl.nn.upstream.S3PRLUpstream.training"]], "training (s3prl.nn.upstream.upstreamdownstreammodel attribute)": [[40, "s3prl.nn.upstream.UpstreamDownstreamModel.training"]], "hearbeijingopera (class in s3prl.problem)": [[41, "s3prl.problem.HearBeijingOpera"]], "hearcremad (class in s3prl.problem)": [[41, "s3prl.problem.HearCremaD"]], "heardcase2016task2 (class in s3prl.problem)": [[41, "s3prl.problem.HearDcase2016Task2"]], "hearesc50 (class in s3prl.problem)": [[41, "s3prl.problem.HearESC50"]], "hearfsd (class in s3prl.problem)": [[41, "s3prl.problem.HearFSD"]], "heargsc5hr (class in s3prl.problem)": [[41, "s3prl.problem.HearGSC5hr"]], "heargtzan (class in s3prl.problem)": [[41, "s3prl.problem.HearGtzan"]], "heargtzanmusicspeech (class in s3prl.problem)": [[41, "s3prl.problem.HearGtzanMusicSpeech"]], "heargunshot (class in s3prl.problem)": [[41, "s3prl.problem.HearGunshot"]], "hearlibricount (class in s3prl.problem)": [[41, "s3prl.problem.HearLibriCount"]], "hearmaestro (class in s3prl.problem)": [[41, "s3prl.problem.HearMaestro"]], "hearnsynth5hr (class in s3prl.problem)": [[41, "s3prl.problem.HearNsynth5hr"]], "hearstroke (class in s3prl.problem)": [[41, "s3prl.problem.HearStroke"]], "heartonic (class in s3prl.problem)": [[41, "s3prl.problem.HearTonic"]], "hearvocal (class in s3prl.problem)": [[41, "s3prl.problem.HearVocal"]], "hearvoxlingual (class in s3prl.problem)": [[41, "s3prl.problem.HearVoxLingual"]], "superbasr (class in s3prl.problem)": [[41, "s3prl.problem.SuperbASR"]], "superbasv (class in s3prl.problem)": [[41, "s3prl.problem.SuperbASV"]], "superber (class in s3prl.problem)": [[41, "s3prl.problem.SuperbER"]], "superbic (class in s3prl.problem)": [[41, "s3prl.problem.SuperbIC"]], "superbks (class in s3prl.problem)": [[41, "s3prl.problem.SuperbKS"]], "superbpr (class in s3prl.problem)": [[41, "s3prl.problem.SuperbPR"]], "superbsd (class in s3prl.problem)": [[41, "s3prl.problem.SuperbSD"]], "superbsf (class in s3prl.problem)": [[41, "s3prl.problem.SuperbSF"]], "superbsid (class in s3prl.problem)": [[41, "s3prl.problem.SuperbSID"]], "build_batch_sampler() (s3prl.problem.hearbeijingopera method)": [[41, "s3prl.problem.HearBeijingOpera.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.hearcremad method)": [[41, "s3prl.problem.HearCremaD.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.heardcase2016task2 method)": [[41, "s3prl.problem.HearDcase2016Task2.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.hearesc50 method)": [[41, "s3prl.problem.HearESC50.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.hearfsd method)": [[41, "s3prl.problem.HearFSD.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.heargsc5hr method)": [[41, "s3prl.problem.HearGSC5hr.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.heargtzan method)": [[41, "s3prl.problem.HearGtzan.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.heargtzanmusicspeech method)": [[41, "s3prl.problem.HearGtzanMusicSpeech.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.heargunshot method)": [[41, "s3prl.problem.HearGunshot.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.hearlibricount method)": [[41, "s3prl.problem.HearLibriCount.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.hearmaestro method)": [[41, "s3prl.problem.HearMaestro.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.hearnsynth5hr method)": [[41, "s3prl.problem.HearNsynth5hr.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.hearstroke method)": [[41, "s3prl.problem.HearStroke.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.heartonic method)": [[41, "s3prl.problem.HearTonic.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.hearvocal method)": [[41, "s3prl.problem.HearVocal.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.hearvoxlingual method)": [[41, "s3prl.problem.HearVoxLingual.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.superbasr method)": [[41, "s3prl.problem.SuperbASR.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.superbasv method)": [[41, "s3prl.problem.SuperbASV.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.superber method)": [[41, "s3prl.problem.SuperbER.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.superbic method)": [[41, "s3prl.problem.SuperbIC.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.superbks method)": [[41, "s3prl.problem.SuperbKS.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.superbpr method)": [[41, "s3prl.problem.SuperbPR.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.superbsd method)": [[41, "s3prl.problem.SuperbSD.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.superbsf method)": [[41, "s3prl.problem.SuperbSF.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.superbsid method)": [[41, "s3prl.problem.SuperbSID.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.hearbeijingopera method)": [[41, "s3prl.problem.HearBeijingOpera.build_collate_fn"]], "build_collate_fn() (s3prl.problem.hearcremad method)": [[41, "s3prl.problem.HearCremaD.build_collate_fn"]], "build_collate_fn() (s3prl.problem.heardcase2016task2 method)": [[41, "s3prl.problem.HearDcase2016Task2.build_collate_fn"]], "build_collate_fn() (s3prl.problem.hearesc50 method)": [[41, "s3prl.problem.HearESC50.build_collate_fn"]], "build_collate_fn() (s3prl.problem.hearfsd method)": [[41, "s3prl.problem.HearFSD.build_collate_fn"]], "build_collate_fn() (s3prl.problem.heargsc5hr method)": [[41, "s3prl.problem.HearGSC5hr.build_collate_fn"]], "build_collate_fn() (s3prl.problem.heargtzan method)": [[41, "s3prl.problem.HearGtzan.build_collate_fn"]], "build_collate_fn() (s3prl.problem.heargtzanmusicspeech method)": [[41, "s3prl.problem.HearGtzanMusicSpeech.build_collate_fn"]], "build_collate_fn() (s3prl.problem.heargunshot method)": [[41, "s3prl.problem.HearGunshot.build_collate_fn"]], "build_collate_fn() (s3prl.problem.hearlibricount method)": [[41, "s3prl.problem.HearLibriCount.build_collate_fn"]], "build_collate_fn() (s3prl.problem.hearmaestro method)": [[41, "s3prl.problem.HearMaestro.build_collate_fn"]], "build_collate_fn() (s3prl.problem.hearnsynth5hr method)": [[41, "s3prl.problem.HearNsynth5hr.build_collate_fn"]], "build_collate_fn() (s3prl.problem.hearstroke method)": [[41, "s3prl.problem.HearStroke.build_collate_fn"]], "build_collate_fn() (s3prl.problem.heartonic method)": [[41, "s3prl.problem.HearTonic.build_collate_fn"]], "build_collate_fn() (s3prl.problem.hearvocal method)": [[41, "s3prl.problem.HearVocal.build_collate_fn"]], "build_collate_fn() (s3prl.problem.hearvoxlingual method)": [[41, "s3prl.problem.HearVoxLingual.build_collate_fn"]], "build_collate_fn() (s3prl.problem.superbasr method)": [[41, "s3prl.problem.SuperbASR.build_collate_fn"]], "build_collate_fn() (s3prl.problem.superbasv method)": [[41, "s3prl.problem.SuperbASV.build_collate_fn"]], "build_collate_fn() (s3prl.problem.superber method)": [[41, "s3prl.problem.SuperbER.build_collate_fn"]], "build_collate_fn() (s3prl.problem.superbic method)": [[41, "s3prl.problem.SuperbIC.build_collate_fn"]], "build_collate_fn() (s3prl.problem.superbks method)": [[41, "s3prl.problem.SuperbKS.build_collate_fn"]], "build_collate_fn() (s3prl.problem.superbpr method)": [[41, "s3prl.problem.SuperbPR.build_collate_fn"]], "build_collate_fn() (s3prl.problem.superbsd method)": [[41, "s3prl.problem.SuperbSD.build_collate_fn"]], "build_collate_fn() (s3prl.problem.superbsf method)": [[41, "s3prl.problem.SuperbSF.build_collate_fn"]], "build_collate_fn() (s3prl.problem.superbsid method)": [[41, "s3prl.problem.SuperbSID.build_collate_fn"]], "build_dataset() (s3prl.problem.hearbeijingopera method)": [[41, "s3prl.problem.HearBeijingOpera.build_dataset"]], "build_dataset() (s3prl.problem.hearcremad method)": [[41, "s3prl.problem.HearCremaD.build_dataset"]], "build_dataset() (s3prl.problem.heardcase2016task2 method)": [[41, "s3prl.problem.HearDcase2016Task2.build_dataset"]], "build_dataset() (s3prl.problem.hearesc50 method)": [[41, "s3prl.problem.HearESC50.build_dataset"]], "build_dataset() (s3prl.problem.hearfsd method)": [[41, "s3prl.problem.HearFSD.build_dataset"]], "build_dataset() (s3prl.problem.heargsc5hr method)": [[41, "s3prl.problem.HearGSC5hr.build_dataset"]], "build_dataset() (s3prl.problem.heargtzan method)": [[41, "s3prl.problem.HearGtzan.build_dataset"]], "build_dataset() (s3prl.problem.heargtzanmusicspeech method)": [[41, "s3prl.problem.HearGtzanMusicSpeech.build_dataset"]], "build_dataset() (s3prl.problem.heargunshot method)": [[41, "s3prl.problem.HearGunshot.build_dataset"]], "build_dataset() (s3prl.problem.hearlibricount method)": [[41, "s3prl.problem.HearLibriCount.build_dataset"]], "build_dataset() (s3prl.problem.hearmaestro method)": [[41, "s3prl.problem.HearMaestro.build_dataset"]], "build_dataset() (s3prl.problem.hearnsynth5hr method)": [[41, "s3prl.problem.HearNsynth5hr.build_dataset"]], "build_dataset() (s3prl.problem.hearstroke method)": [[41, "s3prl.problem.HearStroke.build_dataset"]], "build_dataset() (s3prl.problem.heartonic method)": [[41, "s3prl.problem.HearTonic.build_dataset"]], "build_dataset() (s3prl.problem.hearvocal method)": [[41, "s3prl.problem.HearVocal.build_dataset"]], "build_dataset() (s3prl.problem.hearvoxlingual method)": [[41, "s3prl.problem.HearVoxLingual.build_dataset"]], "build_dataset() (s3prl.problem.superbasr method)": [[41, "s3prl.problem.SuperbASR.build_dataset"]], "build_dataset() (s3prl.problem.superbasv method)": [[41, "s3prl.problem.SuperbASV.build_dataset"]], "build_dataset() (s3prl.problem.superber method)": [[41, "s3prl.problem.SuperbER.build_dataset"]], "build_dataset() (s3prl.problem.superbic method)": [[41, "s3prl.problem.SuperbIC.build_dataset"]], "build_dataset() (s3prl.problem.superbks method)": [[41, "s3prl.problem.SuperbKS.build_dataset"]], "build_dataset() (s3prl.problem.superbpr method)": [[41, "s3prl.problem.SuperbPR.build_dataset"]], "build_dataset() (s3prl.problem.superbsd method)": [[41, "s3prl.problem.SuperbSD.build_dataset"]], "build_dataset() (s3prl.problem.superbsf method)": [[41, "s3prl.problem.SuperbSF.build_dataset"]], "build_dataset() (s3prl.problem.superbsid method)": [[41, "s3prl.problem.SuperbSID.build_dataset"]], "build_downstream() (s3prl.problem.hearbeijingopera method)": [[41, "s3prl.problem.HearBeijingOpera.build_downstream"]], "build_downstream() (s3prl.problem.hearcremad method)": [[41, "s3prl.problem.HearCremaD.build_downstream"]], "build_downstream() (s3prl.problem.heardcase2016task2 method)": [[41, "s3prl.problem.HearDcase2016Task2.build_downstream"]], "build_downstream() (s3prl.problem.hearesc50 method)": [[41, "s3prl.problem.HearESC50.build_downstream"]], "build_downstream() (s3prl.problem.hearfsd method)": [[41, "s3prl.problem.HearFSD.build_downstream"]], "build_downstream() (s3prl.problem.heargsc5hr method)": [[41, "s3prl.problem.HearGSC5hr.build_downstream"]], "build_downstream() (s3prl.problem.heargtzan method)": [[41, "s3prl.problem.HearGtzan.build_downstream"]], "build_downstream() (s3prl.problem.heargtzanmusicspeech method)": [[41, "s3prl.problem.HearGtzanMusicSpeech.build_downstream"]], "build_downstream() (s3prl.problem.heargunshot method)": [[41, "s3prl.problem.HearGunshot.build_downstream"]], "build_downstream() (s3prl.problem.hearlibricount method)": [[41, "s3prl.problem.HearLibriCount.build_downstream"]], "build_downstream() (s3prl.problem.hearmaestro method)": [[41, "s3prl.problem.HearMaestro.build_downstream"]], "build_downstream() (s3prl.problem.hearnsynth5hr method)": [[41, "s3prl.problem.HearNsynth5hr.build_downstream"]], "build_downstream() (s3prl.problem.hearstroke method)": [[41, "s3prl.problem.HearStroke.build_downstream"]], "build_downstream() (s3prl.problem.heartonic method)": [[41, "s3prl.problem.HearTonic.build_downstream"]], "build_downstream() (s3prl.problem.hearvocal method)": [[41, "s3prl.problem.HearVocal.build_downstream"]], "build_downstream() (s3prl.problem.hearvoxlingual method)": [[41, "s3prl.problem.HearVoxLingual.build_downstream"]], "build_downstream() (s3prl.problem.superbasr method)": [[41, "s3prl.problem.SuperbASR.build_downstream"]], "build_downstream() (s3prl.problem.superbasv method)": [[41, "s3prl.problem.SuperbASV.build_downstream"]], "build_downstream() (s3prl.problem.superber method)": [[41, "s3prl.problem.SuperbER.build_downstream"]], "build_downstream() (s3prl.problem.superbic method)": [[41, "s3prl.problem.SuperbIC.build_downstream"]], "build_downstream() (s3prl.problem.superbks method)": [[41, "s3prl.problem.SuperbKS.build_downstream"]], "build_downstream() (s3prl.problem.superbpr method)": [[41, "s3prl.problem.SuperbPR.build_downstream"]], "build_downstream() (s3prl.problem.superbsd method)": [[41, "s3prl.problem.SuperbSD.build_downstream"]], "build_downstream() (s3prl.problem.superbsf method)": [[41, "s3prl.problem.SuperbSF.build_downstream"]], "build_downstream() (s3prl.problem.superbsid method)": [[41, "s3prl.problem.SuperbSID.build_downstream"]], "build_encoder() (s3prl.problem.hearbeijingopera method)": [[41, "s3prl.problem.HearBeijingOpera.build_encoder"]], "build_encoder() (s3prl.problem.hearcremad method)": [[41, "s3prl.problem.HearCremaD.build_encoder"]], "build_encoder() (s3prl.problem.heardcase2016task2 method)": [[41, "s3prl.problem.HearDcase2016Task2.build_encoder"]], "build_encoder() (s3prl.problem.hearesc50 method)": [[41, "s3prl.problem.HearESC50.build_encoder"]], "build_encoder() (s3prl.problem.hearfsd method)": [[41, "s3prl.problem.HearFSD.build_encoder"]], "build_encoder() (s3prl.problem.heargsc5hr method)": [[41, "s3prl.problem.HearGSC5hr.build_encoder"]], "build_encoder() (s3prl.problem.heargtzan method)": [[41, "s3prl.problem.HearGtzan.build_encoder"]], "build_encoder() (s3prl.problem.heargtzanmusicspeech method)": [[41, "s3prl.problem.HearGtzanMusicSpeech.build_encoder"]], "build_encoder() (s3prl.problem.heargunshot method)": [[41, "s3prl.problem.HearGunshot.build_encoder"]], "build_encoder() (s3prl.problem.hearlibricount method)": [[41, "s3prl.problem.HearLibriCount.build_encoder"]], "build_encoder() (s3prl.problem.hearmaestro method)": [[41, "s3prl.problem.HearMaestro.build_encoder"]], "build_encoder() (s3prl.problem.hearnsynth5hr method)": [[41, "s3prl.problem.HearNsynth5hr.build_encoder"]], "build_encoder() (s3prl.problem.hearstroke method)": [[41, "s3prl.problem.HearStroke.build_encoder"]], "build_encoder() (s3prl.problem.heartonic method)": [[41, "s3prl.problem.HearTonic.build_encoder"]], "build_encoder() (s3prl.problem.hearvocal method)": [[41, "s3prl.problem.HearVocal.build_encoder"]], "build_encoder() (s3prl.problem.hearvoxlingual method)": [[41, "s3prl.problem.HearVoxLingual.build_encoder"]], "build_encoder() (s3prl.problem.superbasv method)": [[41, "s3prl.problem.SuperbASV.build_encoder"]], "build_encoder() (s3prl.problem.superber method)": [[41, "s3prl.problem.SuperbER.build_encoder"]], "build_encoder() (s3prl.problem.superbic method)": [[41, "s3prl.problem.SuperbIC.build_encoder"]], "build_encoder() (s3prl.problem.superbks method)": [[41, "s3prl.problem.SuperbKS.build_encoder"]], "build_encoder() (s3prl.problem.superbsid method)": [[41, "s3prl.problem.SuperbSID.build_encoder"]], "build_featurizer() (s3prl.problem.hearbeijingopera method)": [[41, "s3prl.problem.HearBeijingOpera.build_featurizer"]], "build_featurizer() (s3prl.problem.hearcremad method)": [[41, "s3prl.problem.HearCremaD.build_featurizer"]], "build_featurizer() (s3prl.problem.heardcase2016task2 method)": [[41, "s3prl.problem.HearDcase2016Task2.build_featurizer"]], "build_featurizer() (s3prl.problem.hearesc50 method)": [[41, "s3prl.problem.HearESC50.build_featurizer"]], "build_featurizer() (s3prl.problem.hearfsd method)": [[41, "s3prl.problem.HearFSD.build_featurizer"]], "build_featurizer() (s3prl.problem.heargsc5hr method)": [[41, "s3prl.problem.HearGSC5hr.build_featurizer"]], "build_featurizer() (s3prl.problem.heargtzan method)": [[41, "s3prl.problem.HearGtzan.build_featurizer"]], "build_featurizer() (s3prl.problem.heargtzanmusicspeech method)": [[41, "s3prl.problem.HearGtzanMusicSpeech.build_featurizer"]], "build_featurizer() (s3prl.problem.heargunshot method)": [[41, "s3prl.problem.HearGunshot.build_featurizer"]], "build_featurizer() (s3prl.problem.hearlibricount method)": [[41, "s3prl.problem.HearLibriCount.build_featurizer"]], "build_featurizer() (s3prl.problem.hearmaestro method)": [[41, "s3prl.problem.HearMaestro.build_featurizer"]], "build_featurizer() (s3prl.problem.hearnsynth5hr method)": [[41, "s3prl.problem.HearNsynth5hr.build_featurizer"]], "build_featurizer() (s3prl.problem.hearstroke method)": [[41, "s3prl.problem.HearStroke.build_featurizer"]], "build_featurizer() (s3prl.problem.heartonic method)": [[41, "s3prl.problem.HearTonic.build_featurizer"]], "build_featurizer() (s3prl.problem.hearvocal method)": [[41, "s3prl.problem.HearVocal.build_featurizer"]], "build_featurizer() (s3prl.problem.hearvoxlingual method)": [[41, "s3prl.problem.HearVoxLingual.build_featurizer"]], "build_featurizer() (s3prl.problem.superbasr method)": [[41, "s3prl.problem.SuperbASR.build_featurizer"]], "build_featurizer() (s3prl.problem.superbasv method)": [[41, "s3prl.problem.SuperbASV.build_featurizer"]], "build_featurizer() (s3prl.problem.superber method)": [[41, "s3prl.problem.SuperbER.build_featurizer"]], "build_featurizer() (s3prl.problem.superbic method)": [[41, "s3prl.problem.SuperbIC.build_featurizer"]], "build_featurizer() (s3prl.problem.superbks method)": [[41, "s3prl.problem.SuperbKS.build_featurizer"]], "build_featurizer() (s3prl.problem.superbpr method)": [[41, "s3prl.problem.SuperbPR.build_featurizer"]], "build_featurizer() (s3prl.problem.superbsd method)": [[41, "s3prl.problem.SuperbSD.build_featurizer"]], "build_featurizer() (s3prl.problem.superbsf method)": [[41, "s3prl.problem.SuperbSF.build_featurizer"]], "build_featurizer() (s3prl.problem.superbsid method)": [[41, "s3prl.problem.SuperbSID.build_featurizer"]], "build_model() (s3prl.problem.hearbeijingopera method)": [[41, "s3prl.problem.HearBeijingOpera.build_model"]], "build_model() (s3prl.problem.hearcremad method)": [[41, "s3prl.problem.HearCremaD.build_model"]], "build_model() (s3prl.problem.heardcase2016task2 method)": [[41, "s3prl.problem.HearDcase2016Task2.build_model"]], "build_model() (s3prl.problem.hearesc50 method)": [[41, "s3prl.problem.HearESC50.build_model"]], "build_model() (s3prl.problem.hearfsd method)": [[41, "s3prl.problem.HearFSD.build_model"]], "build_model() (s3prl.problem.heargsc5hr method)": [[41, "s3prl.problem.HearGSC5hr.build_model"]], "build_model() (s3prl.problem.heargtzan method)": [[41, "s3prl.problem.HearGtzan.build_model"]], "build_model() (s3prl.problem.heargtzanmusicspeech method)": [[41, "s3prl.problem.HearGtzanMusicSpeech.build_model"]], "build_model() (s3prl.problem.heargunshot method)": [[41, "s3prl.problem.HearGunshot.build_model"]], "build_model() (s3prl.problem.hearlibricount method)": [[41, "s3prl.problem.HearLibriCount.build_model"]], "build_model() (s3prl.problem.hearmaestro method)": [[41, "s3prl.problem.HearMaestro.build_model"]], "build_model() (s3prl.problem.hearnsynth5hr method)": [[41, "s3prl.problem.HearNsynth5hr.build_model"]], "build_model() (s3prl.problem.hearstroke method)": [[41, "s3prl.problem.HearStroke.build_model"]], "build_model() (s3prl.problem.heartonic method)": [[41, "s3prl.problem.HearTonic.build_model"]], "build_model() (s3prl.problem.hearvocal method)": [[41, "s3prl.problem.HearVocal.build_model"]], "build_model() (s3prl.problem.hearvoxlingual method)": [[41, "s3prl.problem.HearVoxLingual.build_model"]], "build_model() (s3prl.problem.superbasr method)": [[41, "s3prl.problem.SuperbASR.build_model"]], "build_model() (s3prl.problem.superbasv method)": [[41, "s3prl.problem.SuperbASV.build_model"]], "build_model() (s3prl.problem.superber method)": [[41, "s3prl.problem.SuperbER.build_model"]], "build_model() (s3prl.problem.superbic method)": [[41, "s3prl.problem.SuperbIC.build_model"]], "build_model() (s3prl.problem.superbks method)": [[41, "s3prl.problem.SuperbKS.build_model"]], "build_model() (s3prl.problem.superbpr method)": [[41, "s3prl.problem.SuperbPR.build_model"]], "build_model() (s3prl.problem.superbsd method)": [[41, "s3prl.problem.SuperbSD.build_model"]], "build_model() (s3prl.problem.superbsf method)": [[41, "s3prl.problem.SuperbSF.build_model"]], "build_model() (s3prl.problem.superbsid method)": [[41, "s3prl.problem.SuperbSID.build_model"]], "build_optimizer() (s3prl.problem.hearbeijingopera method)": [[41, "s3prl.problem.HearBeijingOpera.build_optimizer"]], "build_optimizer() (s3prl.problem.hearcremad method)": [[41, "s3prl.problem.HearCremaD.build_optimizer"]], "build_optimizer() (s3prl.problem.heardcase2016task2 method)": [[41, "s3prl.problem.HearDcase2016Task2.build_optimizer"]], "build_optimizer() (s3prl.problem.hearesc50 method)": [[41, "s3prl.problem.HearESC50.build_optimizer"]], "build_optimizer() (s3prl.problem.hearfsd method)": [[41, "s3prl.problem.HearFSD.build_optimizer"]], "build_optimizer() (s3prl.problem.heargsc5hr method)": [[41, "s3prl.problem.HearGSC5hr.build_optimizer"]], "build_optimizer() (s3prl.problem.heargtzan method)": [[41, "s3prl.problem.HearGtzan.build_optimizer"]], "build_optimizer() (s3prl.problem.heargtzanmusicspeech method)": [[41, "s3prl.problem.HearGtzanMusicSpeech.build_optimizer"]], "build_optimizer() (s3prl.problem.heargunshot method)": [[41, "s3prl.problem.HearGunshot.build_optimizer"]], "build_optimizer() (s3prl.problem.hearlibricount method)": [[41, "s3prl.problem.HearLibriCount.build_optimizer"]], "build_optimizer() (s3prl.problem.hearmaestro method)": [[41, "s3prl.problem.HearMaestro.build_optimizer"]], "build_optimizer() (s3prl.problem.hearnsynth5hr method)": [[41, "s3prl.problem.HearNsynth5hr.build_optimizer"]], "build_optimizer() (s3prl.problem.hearstroke method)": [[41, "s3prl.problem.HearStroke.build_optimizer"]], "build_optimizer() (s3prl.problem.heartonic method)": [[41, "s3prl.problem.HearTonic.build_optimizer"]], "build_optimizer() (s3prl.problem.hearvocal method)": [[41, "s3prl.problem.HearVocal.build_optimizer"]], "build_optimizer() (s3prl.problem.hearvoxlingual method)": [[41, "s3prl.problem.HearVoxLingual.build_optimizer"]], "build_optimizer() (s3prl.problem.superbasr method)": [[41, "s3prl.problem.SuperbASR.build_optimizer"]], "build_optimizer() (s3prl.problem.superbasv method)": [[41, "s3prl.problem.SuperbASV.build_optimizer"]], "build_optimizer() (s3prl.problem.superber method)": [[41, "s3prl.problem.SuperbER.build_optimizer"]], "build_optimizer() (s3prl.problem.superbic method)": [[41, "s3prl.problem.SuperbIC.build_optimizer"]], "build_optimizer() (s3prl.problem.superbks method)": [[41, "s3prl.problem.SuperbKS.build_optimizer"]], "build_optimizer() (s3prl.problem.superbpr method)": [[41, "s3prl.problem.SuperbPR.build_optimizer"]], "build_optimizer() (s3prl.problem.superbsd method)": [[41, "s3prl.problem.SuperbSD.build_optimizer"]], "build_optimizer() (s3prl.problem.superbsf method)": [[41, "s3prl.problem.SuperbSF.build_optimizer"]], "build_optimizer() (s3prl.problem.superbsid method)": [[41, "s3prl.problem.SuperbSID.build_optimizer"]], "build_scheduler() (s3prl.problem.hearbeijingopera method)": [[41, "s3prl.problem.HearBeijingOpera.build_scheduler"]], "build_scheduler() (s3prl.problem.hearcremad method)": [[41, "s3prl.problem.HearCremaD.build_scheduler"]], "build_scheduler() (s3prl.problem.heardcase2016task2 method)": [[41, "s3prl.problem.HearDcase2016Task2.build_scheduler"]], "build_scheduler() (s3prl.problem.hearesc50 method)": [[41, "s3prl.problem.HearESC50.build_scheduler"]], "build_scheduler() (s3prl.problem.hearfsd method)": [[41, "s3prl.problem.HearFSD.build_scheduler"]], "build_scheduler() (s3prl.problem.heargsc5hr method)": [[41, "s3prl.problem.HearGSC5hr.build_scheduler"]], "build_scheduler() (s3prl.problem.heargtzan method)": [[41, "s3prl.problem.HearGtzan.build_scheduler"]], "build_scheduler() (s3prl.problem.heargtzanmusicspeech method)": [[41, "s3prl.problem.HearGtzanMusicSpeech.build_scheduler"]], "build_scheduler() (s3prl.problem.heargunshot method)": [[41, "s3prl.problem.HearGunshot.build_scheduler"]], "build_scheduler() (s3prl.problem.hearlibricount method)": [[41, "s3prl.problem.HearLibriCount.build_scheduler"]], "build_scheduler() (s3prl.problem.hearmaestro method)": [[41, "s3prl.problem.HearMaestro.build_scheduler"]], "build_scheduler() (s3prl.problem.hearnsynth5hr method)": [[41, "s3prl.problem.HearNsynth5hr.build_scheduler"]], "build_scheduler() (s3prl.problem.hearstroke method)": [[41, "s3prl.problem.HearStroke.build_scheduler"]], "build_scheduler() (s3prl.problem.heartonic method)": [[41, "s3prl.problem.HearTonic.build_scheduler"]], "build_scheduler() (s3prl.problem.hearvocal method)": [[41, "s3prl.problem.HearVocal.build_scheduler"]], "build_scheduler() (s3prl.problem.hearvoxlingual method)": [[41, "s3prl.problem.HearVoxLingual.build_scheduler"]], "build_scheduler() (s3prl.problem.superbasr method)": [[41, "s3prl.problem.SuperbASR.build_scheduler"]], "build_scheduler() (s3prl.problem.superbasv method)": [[41, "s3prl.problem.SuperbASV.build_scheduler"]], "build_scheduler() (s3prl.problem.superber method)": [[41, "s3prl.problem.SuperbER.build_scheduler"]], "build_scheduler() (s3prl.problem.superbic method)": [[41, "s3prl.problem.SuperbIC.build_scheduler"]], "build_scheduler() (s3prl.problem.superbks method)": [[41, "s3prl.problem.SuperbKS.build_scheduler"]], "build_scheduler() (s3prl.problem.superbpr method)": [[41, "s3prl.problem.SuperbPR.build_scheduler"]], "build_scheduler() (s3prl.problem.superbsd method)": [[41, "s3prl.problem.SuperbSD.build_scheduler"]], "build_scheduler() (s3prl.problem.superbsf method)": [[41, "s3prl.problem.SuperbSF.build_scheduler"]], "build_scheduler() (s3prl.problem.superbsid method)": [[41, "s3prl.problem.SuperbSID.build_scheduler"]], "build_task() (s3prl.problem.hearbeijingopera method)": [[41, "s3prl.problem.HearBeijingOpera.build_task"]], "build_task() (s3prl.problem.hearcremad method)": [[41, "s3prl.problem.HearCremaD.build_task"]], "build_task() (s3prl.problem.heardcase2016task2 method)": [[41, "s3prl.problem.HearDcase2016Task2.build_task"]], "build_task() (s3prl.problem.hearesc50 method)": [[41, "s3prl.problem.HearESC50.build_task"]], "build_task() (s3prl.problem.hearfsd method)": [[41, "s3prl.problem.HearFSD.build_task"]], "build_task() (s3prl.problem.heargsc5hr method)": [[41, "s3prl.problem.HearGSC5hr.build_task"]], "build_task() (s3prl.problem.heargtzan method)": [[41, "s3prl.problem.HearGtzan.build_task"]], "build_task() (s3prl.problem.heargtzanmusicspeech method)": [[41, "s3prl.problem.HearGtzanMusicSpeech.build_task"]], "build_task() (s3prl.problem.heargunshot method)": [[41, "s3prl.problem.HearGunshot.build_task"]], "build_task() (s3prl.problem.hearlibricount method)": [[41, "s3prl.problem.HearLibriCount.build_task"]], "build_task() (s3prl.problem.hearmaestro method)": [[41, "s3prl.problem.HearMaestro.build_task"]], "build_task() (s3prl.problem.hearnsynth5hr method)": [[41, "s3prl.problem.HearNsynth5hr.build_task"]], "build_task() (s3prl.problem.hearstroke method)": [[41, "s3prl.problem.HearStroke.build_task"]], "build_task() (s3prl.problem.heartonic method)": [[41, "s3prl.problem.HearTonic.build_task"]], "build_task() (s3prl.problem.hearvocal method)": [[41, "s3prl.problem.HearVocal.build_task"]], "build_task() (s3prl.problem.hearvoxlingual method)": [[41, "s3prl.problem.HearVoxLingual.build_task"]], "build_task() (s3prl.problem.superbasr method)": [[41, "s3prl.problem.SuperbASR.build_task"]], "build_task() (s3prl.problem.superbasv method)": [[41, "s3prl.problem.SuperbASV.build_task"]], "build_task() (s3prl.problem.superber method)": [[41, "s3prl.problem.SuperbER.build_task"]], "build_task() (s3prl.problem.superbic method)": [[41, "s3prl.problem.SuperbIC.build_task"]], "build_task() (s3prl.problem.superbks method)": [[41, "s3prl.problem.SuperbKS.build_task"]], "build_task() (s3prl.problem.superbpr method)": [[41, "s3prl.problem.SuperbPR.build_task"]], "build_task() (s3prl.problem.superbsd method)": [[41, "s3prl.problem.SuperbSD.build_task"]], "build_task() (s3prl.problem.superbsf method)": [[41, "s3prl.problem.SuperbSF.build_task"]], "build_task() (s3prl.problem.superbsid method)": [[41, "s3prl.problem.SuperbSID.build_task"]], "build_tokenizer() (s3prl.problem.superbasr method)": [[41, "s3prl.problem.SuperbASR.build_tokenizer"]], "build_tokenizer() (s3prl.problem.superbpr method)": [[41, "s3prl.problem.SuperbPR.build_tokenizer"]], "build_tokenizer() (s3prl.problem.superbsf method)": [[41, "s3prl.problem.SuperbSF.build_tokenizer"]], "build_upstream() (s3prl.problem.hearbeijingopera method)": [[41, "s3prl.problem.HearBeijingOpera.build_upstream"]], "build_upstream() (s3prl.problem.hearcremad method)": [[41, "s3prl.problem.HearCremaD.build_upstream"]], "build_upstream() (s3prl.problem.heardcase2016task2 method)": [[41, "s3prl.problem.HearDcase2016Task2.build_upstream"]], "build_upstream() (s3prl.problem.hearesc50 method)": [[41, "s3prl.problem.HearESC50.build_upstream"]], "build_upstream() (s3prl.problem.hearfsd method)": [[41, "s3prl.problem.HearFSD.build_upstream"]], "build_upstream() (s3prl.problem.heargsc5hr method)": [[41, "s3prl.problem.HearGSC5hr.build_upstream"]], "build_upstream() (s3prl.problem.heargtzan method)": [[41, "s3prl.problem.HearGtzan.build_upstream"]], "build_upstream() (s3prl.problem.heargtzanmusicspeech method)": [[41, "s3prl.problem.HearGtzanMusicSpeech.build_upstream"]], "build_upstream() (s3prl.problem.heargunshot method)": [[41, "s3prl.problem.HearGunshot.build_upstream"]], "build_upstream() (s3prl.problem.hearlibricount method)": [[41, "s3prl.problem.HearLibriCount.build_upstream"]], "build_upstream() (s3prl.problem.hearmaestro method)": [[41, "s3prl.problem.HearMaestro.build_upstream"]], "build_upstream() (s3prl.problem.hearnsynth5hr method)": [[41, "s3prl.problem.HearNsynth5hr.build_upstream"]], "build_upstream() (s3prl.problem.hearstroke method)": [[41, "s3prl.problem.HearStroke.build_upstream"]], "build_upstream() (s3prl.problem.heartonic method)": [[41, "s3prl.problem.HearTonic.build_upstream"]], "build_upstream() (s3prl.problem.hearvocal method)": [[41, "s3prl.problem.HearVocal.build_upstream"]], "build_upstream() (s3prl.problem.hearvoxlingual method)": [[41, "s3prl.problem.HearVoxLingual.build_upstream"]], "build_upstream() (s3prl.problem.superbasr method)": [[41, "s3prl.problem.SuperbASR.build_upstream"]], "build_upstream() (s3prl.problem.superbasv method)": [[41, "s3prl.problem.SuperbASV.build_upstream"]], "build_upstream() (s3prl.problem.superber method)": [[41, "s3prl.problem.SuperbER.build_upstream"]], "build_upstream() (s3prl.problem.superbic method)": [[41, "s3prl.problem.SuperbIC.build_upstream"]], "build_upstream() (s3prl.problem.superbks method)": [[41, "s3prl.problem.SuperbKS.build_upstream"]], "build_upstream() (s3prl.problem.superbpr method)": [[41, "s3prl.problem.SuperbPR.build_upstream"]], "build_upstream() (s3prl.problem.superbsd method)": [[41, "s3prl.problem.SuperbSD.build_upstream"]], "build_upstream() (s3prl.problem.superbsf method)": [[41, "s3prl.problem.SuperbSF.build_upstream"]], "build_upstream() (s3prl.problem.superbsid method)": [[41, "s3prl.problem.SuperbSID.build_upstream"]], "default_config() (s3prl.problem.hearbeijingopera method)": [[41, "s3prl.problem.HearBeijingOpera.default_config"]], "default_config() (s3prl.problem.hearcremad method)": [[41, "s3prl.problem.HearCremaD.default_config"]], "default_config() (s3prl.problem.heardcase2016task2 method)": [[41, "s3prl.problem.HearDcase2016Task2.default_config"]], "default_config() (s3prl.problem.hearesc50 method)": [[41, "s3prl.problem.HearESC50.default_config"]], "default_config() (s3prl.problem.hearfsd method)": [[41, "s3prl.problem.HearFSD.default_config"]], "default_config() (s3prl.problem.heargsc5hr method)": [[41, "s3prl.problem.HearGSC5hr.default_config"]], "default_config() (s3prl.problem.heargtzan method)": [[41, "s3prl.problem.HearGtzan.default_config"]], "default_config() (s3prl.problem.heargtzanmusicspeech method)": [[41, "s3prl.problem.HearGtzanMusicSpeech.default_config"]], "default_config() (s3prl.problem.heargunshot method)": [[41, "s3prl.problem.HearGunshot.default_config"]], "default_config() (s3prl.problem.hearlibricount method)": [[41, "s3prl.problem.HearLibriCount.default_config"]], "default_config() (s3prl.problem.hearmaestro method)": [[41, "s3prl.problem.HearMaestro.default_config"]], "default_config() (s3prl.problem.hearnsynth5hr method)": [[41, "s3prl.problem.HearNsynth5hr.default_config"]], "default_config() (s3prl.problem.hearstroke method)": [[41, "s3prl.problem.HearStroke.default_config"]], "default_config() (s3prl.problem.heartonic method)": [[41, "s3prl.problem.HearTonic.default_config"]], "default_config() (s3prl.problem.hearvocal method)": [[41, "s3prl.problem.HearVocal.default_config"]], "default_config() (s3prl.problem.hearvoxlingual method)": [[41, "s3prl.problem.HearVoxLingual.default_config"]], "default_config() (s3prl.problem.superbasr method)": [[41, "s3prl.problem.SuperbASR.default_config"]], "default_config() (s3prl.problem.superbasv method)": [[41, "s3prl.problem.SuperbASV.default_config"]], "default_config() (s3prl.problem.superber method)": [[41, "s3prl.problem.SuperbER.default_config"]], "default_config() (s3prl.problem.superbic method)": [[41, "s3prl.problem.SuperbIC.default_config"]], "default_config() (s3prl.problem.superbks method)": [[41, "s3prl.problem.SuperbKS.default_config"]], "default_config() (s3prl.problem.superbpr method)": [[41, "s3prl.problem.SuperbPR.default_config"]], "default_config() (s3prl.problem.superbsd method)": [[41, "s3prl.problem.SuperbSD.default_config"]], "default_config() (s3prl.problem.superbsf method)": [[41, "s3prl.problem.SuperbSF.default_config"]], "default_config() (s3prl.problem.superbsid method)": [[41, "s3prl.problem.SuperbSID.default_config"]], "evaluate() (s3prl.problem.hearbeijingopera method)": [[41, "s3prl.problem.HearBeijingOpera.evaluate"]], "evaluate() (s3prl.problem.hearcremad method)": [[41, "s3prl.problem.HearCremaD.evaluate"]], "evaluate() (s3prl.problem.heardcase2016task2 method)": [[41, "s3prl.problem.HearDcase2016Task2.evaluate"]], "evaluate() (s3prl.problem.hearesc50 method)": [[41, "s3prl.problem.HearESC50.evaluate"]], "evaluate() (s3prl.problem.hearfsd method)": [[41, "s3prl.problem.HearFSD.evaluate"]], "evaluate() (s3prl.problem.heargsc5hr method)": [[41, "s3prl.problem.HearGSC5hr.evaluate"]], "evaluate() (s3prl.problem.heargtzan method)": [[41, "s3prl.problem.HearGtzan.evaluate"]], "evaluate() (s3prl.problem.heargtzanmusicspeech method)": [[41, "s3prl.problem.HearGtzanMusicSpeech.evaluate"]], "evaluate() (s3prl.problem.heargunshot method)": [[41, "s3prl.problem.HearGunshot.evaluate"]], "evaluate() (s3prl.problem.hearlibricount method)": [[41, "s3prl.problem.HearLibriCount.evaluate"]], "evaluate() (s3prl.problem.hearmaestro method)": [[41, "s3prl.problem.HearMaestro.evaluate"]], "evaluate() (s3prl.problem.hearnsynth5hr method)": [[41, "s3prl.problem.HearNsynth5hr.evaluate"]], "evaluate() (s3prl.problem.hearstroke method)": [[41, "s3prl.problem.HearStroke.evaluate"]], "evaluate() (s3prl.problem.heartonic method)": [[41, "s3prl.problem.HearTonic.evaluate"]], "evaluate() (s3prl.problem.hearvocal method)": [[41, "s3prl.problem.HearVocal.evaluate"]], "evaluate() (s3prl.problem.hearvoxlingual method)": [[41, "s3prl.problem.HearVoxLingual.evaluate"]], "evaluate() (s3prl.problem.superbasr method)": [[41, "s3prl.problem.SuperbASR.evaluate"]], "evaluate() (s3prl.problem.superbasv method)": [[41, "s3prl.problem.SuperbASV.evaluate"]], "evaluate() (s3prl.problem.superber method)": [[41, "s3prl.problem.SuperbER.evaluate"]], "evaluate() (s3prl.problem.superbic method)": [[41, "s3prl.problem.SuperbIC.evaluate"]], "evaluate() (s3prl.problem.superbks method)": [[41, "s3prl.problem.SuperbKS.evaluate"]], "evaluate() (s3prl.problem.superbpr method)": [[41, "s3prl.problem.SuperbPR.evaluate"]], "evaluate() (s3prl.problem.superbsd method)": [[41, "s3prl.problem.SuperbSD.evaluate"]], "evaluate() (s3prl.problem.superbsf method)": [[41, "s3prl.problem.SuperbSF.evaluate"]], "evaluate() (s3prl.problem.superbsid method)": [[41, "s3prl.problem.SuperbSID.evaluate"]], "get_class_from_name() (s3prl.problem.hearbeijingopera class method)": [[41, "s3prl.problem.HearBeijingOpera.get_class_from_name"]], "get_class_from_name() (s3prl.problem.hearcremad class method)": [[41, "s3prl.problem.HearCremaD.get_class_from_name"]], "get_class_from_name() (s3prl.problem.heardcase2016task2 class method)": [[41, "s3prl.problem.HearDcase2016Task2.get_class_from_name"]], "get_class_from_name() (s3prl.problem.hearesc50 class method)": [[41, "s3prl.problem.HearESC50.get_class_from_name"]], "get_class_from_name() (s3prl.problem.hearfsd class method)": [[41, "s3prl.problem.HearFSD.get_class_from_name"]], "get_class_from_name() (s3prl.problem.heargsc5hr class method)": [[41, "s3prl.problem.HearGSC5hr.get_class_from_name"]], "get_class_from_name() (s3prl.problem.heargtzan class method)": [[41, "s3prl.problem.HearGtzan.get_class_from_name"]], "get_class_from_name() (s3prl.problem.heargtzanmusicspeech class method)": [[41, "s3prl.problem.HearGtzanMusicSpeech.get_class_from_name"]], "get_class_from_name() (s3prl.problem.heargunshot class method)": [[41, "s3prl.problem.HearGunshot.get_class_from_name"]], "get_class_from_name() (s3prl.problem.hearlibricount class method)": [[41, "s3prl.problem.HearLibriCount.get_class_from_name"]], "get_class_from_name() (s3prl.problem.hearmaestro class method)": [[41, "s3prl.problem.HearMaestro.get_class_from_name"]], "get_class_from_name() (s3prl.problem.hearnsynth5hr class method)": [[41, "s3prl.problem.HearNsynth5hr.get_class_from_name"]], "get_class_from_name() (s3prl.problem.hearstroke class method)": [[41, "s3prl.problem.HearStroke.get_class_from_name"]], "get_class_from_name() (s3prl.problem.heartonic class method)": [[41, "s3prl.problem.HearTonic.get_class_from_name"]], "get_class_from_name() (s3prl.problem.hearvocal class method)": [[41, "s3prl.problem.HearVocal.get_class_from_name"]], "get_class_from_name() (s3prl.problem.hearvoxlingual class method)": [[41, "s3prl.problem.HearVoxLingual.get_class_from_name"]], "get_class_from_name() (s3prl.problem.superbasr class method)": [[41, "s3prl.problem.SuperbASR.get_class_from_name"]], "get_class_from_name() (s3prl.problem.superbasv class method)": [[41, "s3prl.problem.SuperbASV.get_class_from_name"]], "get_class_from_name() (s3prl.problem.superber class method)": [[41, "s3prl.problem.SuperbER.get_class_from_name"]], "get_class_from_name() (s3prl.problem.superbic class method)": [[41, "s3prl.problem.SuperbIC.get_class_from_name"]], "get_class_from_name() (s3prl.problem.superbks class method)": [[41, "s3prl.problem.SuperbKS.get_class_from_name"]], "get_class_from_name() (s3prl.problem.superbpr class method)": [[41, "s3prl.problem.SuperbPR.get_class_from_name"]], "get_class_from_name() (s3prl.problem.superbsd class method)": [[41, "s3prl.problem.SuperbSD.get_class_from_name"]], "get_class_from_name() (s3prl.problem.superbsf class method)": [[41, "s3prl.problem.SuperbSF.get_class_from_name"]], "get_class_from_name() (s3prl.problem.superbsid class method)": [[41, "s3prl.problem.SuperbSID.get_class_from_name"]], "load_model() (s3prl.problem.hearbeijingopera method)": [[41, "s3prl.problem.HearBeijingOpera.load_model"]], "load_model() (s3prl.problem.hearcremad method)": [[41, "s3prl.problem.HearCremaD.load_model"]], "load_model() (s3prl.problem.heardcase2016task2 method)": [[41, "s3prl.problem.HearDcase2016Task2.load_model"]], "load_model() (s3prl.problem.hearesc50 method)": [[41, "s3prl.problem.HearESC50.load_model"]], "load_model() (s3prl.problem.hearfsd method)": [[41, "s3prl.problem.HearFSD.load_model"]], "load_model() (s3prl.problem.heargsc5hr method)": [[41, "s3prl.problem.HearGSC5hr.load_model"]], "load_model() (s3prl.problem.heargtzan method)": [[41, "s3prl.problem.HearGtzan.load_model"]], "load_model() (s3prl.problem.heargtzanmusicspeech method)": [[41, "s3prl.problem.HearGtzanMusicSpeech.load_model"]], "load_model() (s3prl.problem.heargunshot method)": [[41, "s3prl.problem.HearGunshot.load_model"]], "load_model() (s3prl.problem.hearlibricount method)": [[41, "s3prl.problem.HearLibriCount.load_model"]], "load_model() (s3prl.problem.hearmaestro method)": [[41, "s3prl.problem.HearMaestro.load_model"]], "load_model() (s3prl.problem.hearnsynth5hr method)": [[41, "s3prl.problem.HearNsynth5hr.load_model"]], "load_model() (s3prl.problem.hearstroke method)": [[41, "s3prl.problem.HearStroke.load_model"]], "load_model() (s3prl.problem.heartonic method)": [[41, "s3prl.problem.HearTonic.load_model"]], "load_model() (s3prl.problem.hearvocal method)": [[41, "s3prl.problem.HearVocal.load_model"]], "load_model() (s3prl.problem.hearvoxlingual method)": [[41, "s3prl.problem.HearVoxLingual.load_model"]], "load_model() (s3prl.problem.superbasr method)": [[41, "s3prl.problem.SuperbASR.load_model"]], "load_model() (s3prl.problem.superbasv method)": [[41, "s3prl.problem.SuperbASV.load_model"]], "load_model() (s3prl.problem.superber method)": [[41, "s3prl.problem.SuperbER.load_model"]], "load_model() (s3prl.problem.superbic method)": [[41, "s3prl.problem.SuperbIC.load_model"]], "load_model() (s3prl.problem.superbks method)": [[41, "s3prl.problem.SuperbKS.load_model"]], "load_model() (s3prl.problem.superbpr method)": [[41, "s3prl.problem.SuperbPR.load_model"]], "load_model() (s3prl.problem.superbsd method)": [[41, "s3prl.problem.SuperbSD.load_model"]], "load_model() (s3prl.problem.superbsf method)": [[41, "s3prl.problem.SuperbSF.load_model"]], "load_model() (s3prl.problem.superbsid method)": [[41, "s3prl.problem.SuperbSID.load_model"]], "load_model_and_task() (s3prl.problem.hearbeijingopera method)": [[41, "s3prl.problem.HearBeijingOpera.load_model_and_task"]], "load_model_and_task() (s3prl.problem.hearcremad method)": [[41, "s3prl.problem.HearCremaD.load_model_and_task"]], "load_model_and_task() (s3prl.problem.heardcase2016task2 method)": [[41, "s3prl.problem.HearDcase2016Task2.load_model_and_task"]], "load_model_and_task() (s3prl.problem.hearesc50 method)": [[41, "s3prl.problem.HearESC50.load_model_and_task"]], "load_model_and_task() (s3prl.problem.hearfsd method)": [[41, "s3prl.problem.HearFSD.load_model_and_task"]], "load_model_and_task() (s3prl.problem.heargsc5hr method)": [[41, "s3prl.problem.HearGSC5hr.load_model_and_task"]], "load_model_and_task() (s3prl.problem.heargtzan method)": [[41, "s3prl.problem.HearGtzan.load_model_and_task"]], "load_model_and_task() (s3prl.problem.heargtzanmusicspeech method)": [[41, "s3prl.problem.HearGtzanMusicSpeech.load_model_and_task"]], "load_model_and_task() (s3prl.problem.heargunshot method)": [[41, "s3prl.problem.HearGunshot.load_model_and_task"]], "load_model_and_task() (s3prl.problem.hearlibricount method)": [[41, "s3prl.problem.HearLibriCount.load_model_and_task"]], "load_model_and_task() (s3prl.problem.hearmaestro method)": [[41, "s3prl.problem.HearMaestro.load_model_and_task"]], "load_model_and_task() (s3prl.problem.hearnsynth5hr method)": [[41, "s3prl.problem.HearNsynth5hr.load_model_and_task"]], "load_model_and_task() (s3prl.problem.hearstroke method)": [[41, "s3prl.problem.HearStroke.load_model_and_task"]], "load_model_and_task() (s3prl.problem.heartonic method)": [[41, "s3prl.problem.HearTonic.load_model_and_task"]], "load_model_and_task() (s3prl.problem.hearvocal method)": [[41, "s3prl.problem.HearVocal.load_model_and_task"]], "load_model_and_task() (s3prl.problem.hearvoxlingual method)": [[41, "s3prl.problem.HearVoxLingual.load_model_and_task"]], "load_model_and_task() (s3prl.problem.superbasr method)": [[41, "s3prl.problem.SuperbASR.load_model_and_task"]], "load_model_and_task() (s3prl.problem.superbasv method)": [[41, "s3prl.problem.SuperbASV.load_model_and_task"]], "load_model_and_task() (s3prl.problem.superber method)": [[41, "s3prl.problem.SuperbER.load_model_and_task"]], "load_model_and_task() (s3prl.problem.superbic method)": [[41, "s3prl.problem.SuperbIC.load_model_and_task"]], "load_model_and_task() (s3prl.problem.superbks method)": [[41, "s3prl.problem.SuperbKS.load_model_and_task"]], "load_model_and_task() (s3prl.problem.superbpr method)": [[41, "s3prl.problem.SuperbPR.load_model_and_task"]], "load_model_and_task() (s3prl.problem.superbsd method)": [[41, "s3prl.problem.SuperbSD.load_model_and_task"]], "load_model_and_task() (s3prl.problem.superbsf method)": [[41, "s3prl.problem.SuperbSF.load_model_and_task"]], "load_model_and_task() (s3prl.problem.superbsid method)": [[41, "s3prl.problem.SuperbSID.load_model_and_task"]], "load_task() (s3prl.problem.hearbeijingopera method)": [[41, "s3prl.problem.HearBeijingOpera.load_task"]], "load_task() (s3prl.problem.hearcremad method)": [[41, "s3prl.problem.HearCremaD.load_task"]], "load_task() (s3prl.problem.heardcase2016task2 method)": [[41, "s3prl.problem.HearDcase2016Task2.load_task"]], "load_task() (s3prl.problem.hearesc50 method)": [[41, "s3prl.problem.HearESC50.load_task"]], "load_task() (s3prl.problem.hearfsd method)": [[41, "s3prl.problem.HearFSD.load_task"]], "load_task() (s3prl.problem.heargsc5hr method)": [[41, "s3prl.problem.HearGSC5hr.load_task"]], "load_task() (s3prl.problem.heargtzan method)": [[41, "s3prl.problem.HearGtzan.load_task"]], "load_task() (s3prl.problem.heargtzanmusicspeech method)": [[41, "s3prl.problem.HearGtzanMusicSpeech.load_task"]], "load_task() (s3prl.problem.heargunshot method)": [[41, "s3prl.problem.HearGunshot.load_task"]], "load_task() (s3prl.problem.hearlibricount method)": [[41, "s3prl.problem.HearLibriCount.load_task"]], "load_task() (s3prl.problem.hearmaestro method)": [[41, "s3prl.problem.HearMaestro.load_task"]], "load_task() (s3prl.problem.hearnsynth5hr method)": [[41, "s3prl.problem.HearNsynth5hr.load_task"]], "load_task() (s3prl.problem.hearstroke method)": [[41, "s3prl.problem.HearStroke.load_task"]], "load_task() (s3prl.problem.heartonic method)": [[41, "s3prl.problem.HearTonic.load_task"]], "load_task() (s3prl.problem.hearvocal method)": [[41, "s3prl.problem.HearVocal.load_task"]], "load_task() (s3prl.problem.hearvoxlingual method)": [[41, "s3prl.problem.HearVoxLingual.load_task"]], "load_task() (s3prl.problem.superbasr method)": [[41, "s3prl.problem.SuperbASR.load_task"]], "load_task() (s3prl.problem.superbasv method)": [[41, "s3prl.problem.SuperbASV.load_task"]], "load_task() (s3prl.problem.superber method)": [[41, "s3prl.problem.SuperbER.load_task"]], "load_task() (s3prl.problem.superbic method)": [[41, "s3prl.problem.SuperbIC.load_task"]], "load_task() (s3prl.problem.superbks method)": [[41, "s3prl.problem.SuperbKS.load_task"]], "load_task() (s3prl.problem.superbpr method)": [[41, "s3prl.problem.SuperbPR.load_task"]], "load_task() (s3prl.problem.superbsd method)": [[41, "s3prl.problem.SuperbSD.load_task"]], "load_task() (s3prl.problem.superbsf method)": [[41, "s3prl.problem.SuperbSF.load_task"]], "load_task() (s3prl.problem.superbsid method)": [[41, "s3prl.problem.SuperbSID.load_task"]], "main() (s3prl.problem.hearbeijingopera method)": [[41, "s3prl.problem.HearBeijingOpera.main"]], "main() (s3prl.problem.hearcremad method)": [[41, "s3prl.problem.HearCremaD.main"]], "main() (s3prl.problem.heardcase2016task2 method)": [[41, "s3prl.problem.HearDcase2016Task2.main"]], "main() (s3prl.problem.hearesc50 method)": [[41, "s3prl.problem.HearESC50.main"]], "main() (s3prl.problem.hearfsd method)": [[41, "s3prl.problem.HearFSD.main"]], "main() (s3prl.problem.heargsc5hr method)": [[41, "s3prl.problem.HearGSC5hr.main"]], "main() (s3prl.problem.heargtzan method)": [[41, "s3prl.problem.HearGtzan.main"]], "main() (s3prl.problem.heargtzanmusicspeech method)": [[41, "s3prl.problem.HearGtzanMusicSpeech.main"]], "main() (s3prl.problem.heargunshot method)": [[41, "s3prl.problem.HearGunshot.main"]], "main() (s3prl.problem.hearlibricount method)": [[41, "s3prl.problem.HearLibriCount.main"]], "main() (s3prl.problem.hearmaestro method)": [[41, "s3prl.problem.HearMaestro.main"]], "main() (s3prl.problem.hearnsynth5hr method)": [[41, "s3prl.problem.HearNsynth5hr.main"]], "main() (s3prl.problem.hearstroke method)": [[41, "s3prl.problem.HearStroke.main"]], "main() (s3prl.problem.heartonic method)": [[41, "s3prl.problem.HearTonic.main"]], "main() (s3prl.problem.hearvocal method)": [[41, "s3prl.problem.HearVocal.main"]], "main() (s3prl.problem.hearvoxlingual method)": [[41, "s3prl.problem.HearVoxLingual.main"]], "main() (s3prl.problem.superbasr method)": [[41, "s3prl.problem.SuperbASR.main"]], "main() (s3prl.problem.superbasv method)": [[41, "s3prl.problem.SuperbASV.main"]], "main() (s3prl.problem.superber method)": [[41, "s3prl.problem.SuperbER.main"]], "main() (s3prl.problem.superbic method)": [[41, "s3prl.problem.SuperbIC.main"]], "main() (s3prl.problem.superbks method)": [[41, "s3prl.problem.SuperbKS.main"]], "main() (s3prl.problem.superbpr method)": [[41, "s3prl.problem.SuperbPR.main"]], "main() (s3prl.problem.superbsd method)": [[41, "s3prl.problem.SuperbSD.main"]], "main() (s3prl.problem.superbsf method)": [[41, "s3prl.problem.SuperbSF.main"]], "main() (s3prl.problem.superbsid method)": [[41, "s3prl.problem.SuperbSID.main"]], "prepare_data() (s3prl.problem.hearbeijingopera method)": [[41, "s3prl.problem.HearBeijingOpera.prepare_data"]], "prepare_data() (s3prl.problem.hearcremad method)": [[41, "s3prl.problem.HearCremaD.prepare_data"]], "prepare_data() (s3prl.problem.heardcase2016task2 method)": [[41, "s3prl.problem.HearDcase2016Task2.prepare_data"]], "prepare_data() (s3prl.problem.hearesc50 method)": [[41, "s3prl.problem.HearESC50.prepare_data"]], "prepare_data() (s3prl.problem.hearfsd method)": [[41, "s3prl.problem.HearFSD.prepare_data"]], "prepare_data() (s3prl.problem.heargsc5hr method)": [[41, "s3prl.problem.HearGSC5hr.prepare_data"]], "prepare_data() (s3prl.problem.heargtzan method)": [[41, "s3prl.problem.HearGtzan.prepare_data"]], "prepare_data() (s3prl.problem.heargtzanmusicspeech method)": [[41, "s3prl.problem.HearGtzanMusicSpeech.prepare_data"]], "prepare_data() (s3prl.problem.heargunshot method)": [[41, "s3prl.problem.HearGunshot.prepare_data"]], "prepare_data() (s3prl.problem.hearlibricount method)": [[41, "s3prl.problem.HearLibriCount.prepare_data"]], "prepare_data() (s3prl.problem.hearmaestro method)": [[41, "s3prl.problem.HearMaestro.prepare_data"]], "prepare_data() (s3prl.problem.hearnsynth5hr method)": [[41, "s3prl.problem.HearNsynth5hr.prepare_data"]], "prepare_data() (s3prl.problem.hearstroke method)": [[41, "s3prl.problem.HearStroke.prepare_data"]], "prepare_data() (s3prl.problem.heartonic method)": [[41, "s3prl.problem.HearTonic.prepare_data"]], "prepare_data() (s3prl.problem.hearvocal method)": [[41, "s3prl.problem.HearVocal.prepare_data"]], "prepare_data() (s3prl.problem.hearvoxlingual method)": [[41, "s3prl.problem.HearVoxLingual.prepare_data"]], "prepare_data() (s3prl.problem.superbasr method)": [[41, "s3prl.problem.SuperbASR.prepare_data"]], "prepare_data() (s3prl.problem.superbasv method)": [[41, "s3prl.problem.SuperbASV.prepare_data"]], "prepare_data() (s3prl.problem.superber method)": [[41, "s3prl.problem.SuperbER.prepare_data"]], "prepare_data() (s3prl.problem.superbic method)": [[41, "s3prl.problem.SuperbIC.prepare_data"]], "prepare_data() (s3prl.problem.superbks method)": [[41, "s3prl.problem.SuperbKS.prepare_data"]], "prepare_data() (s3prl.problem.superbpr method)": [[41, "s3prl.problem.SuperbPR.prepare_data"]], "prepare_data() (s3prl.problem.superbsd method)": [[41, "s3prl.problem.SuperbSD.prepare_data"]], "prepare_data() (s3prl.problem.superbsf method)": [[41, "s3prl.problem.SuperbSF.prepare_data"]], "prepare_data() (s3prl.problem.superbsid method)": [[41, "s3prl.problem.SuperbSID.prepare_data"]], "prepare_tokenizer_data() (s3prl.problem.superbasr method)": [[41, "s3prl.problem.SuperbASR.prepare_tokenizer_data"]], "prepare_tokenizer_data() (s3prl.problem.superbpr method)": [[41, "s3prl.problem.SuperbPR.prepare_tokenizer_data"]], "prepare_tokenizer_data() (s3prl.problem.superbsf method)": [[41, "s3prl.problem.SuperbSF.prepare_tokenizer_data"]], "run() (s3prl.problem.hearbeijingopera method)": [[41, "s3prl.problem.HearBeijingOpera.run"]], "run() (s3prl.problem.hearcremad method)": [[41, "s3prl.problem.HearCremaD.run"]], "run() (s3prl.problem.heardcase2016task2 method)": [[41, "s3prl.problem.HearDcase2016Task2.run"]], "run() (s3prl.problem.hearesc50 method)": [[41, "s3prl.problem.HearESC50.run"]], "run() (s3prl.problem.hearfsd method)": [[41, "s3prl.problem.HearFSD.run"]], "run() (s3prl.problem.heargsc5hr method)": [[41, "s3prl.problem.HearGSC5hr.run"]], "run() (s3prl.problem.heargtzan method)": [[41, "s3prl.problem.HearGtzan.run"]], "run() (s3prl.problem.heargtzanmusicspeech method)": [[41, "s3prl.problem.HearGtzanMusicSpeech.run"]], "run() (s3prl.problem.heargunshot method)": [[41, "s3prl.problem.HearGunshot.run"]], "run() (s3prl.problem.hearlibricount method)": [[41, "s3prl.problem.HearLibriCount.run"]], "run() (s3prl.problem.hearmaestro method)": [[41, "s3prl.problem.HearMaestro.run"]], "run() (s3prl.problem.hearnsynth5hr method)": [[41, "s3prl.problem.HearNsynth5hr.run"]], "run() (s3prl.problem.hearstroke method)": [[41, "s3prl.problem.HearStroke.run"]], "run() (s3prl.problem.heartonic method)": [[41, "s3prl.problem.HearTonic.run"]], "run() (s3prl.problem.hearvocal method)": [[41, "s3prl.problem.HearVocal.run"]], "run() (s3prl.problem.hearvoxlingual method)": [[41, "s3prl.problem.HearVoxLingual.run"]], "run() (s3prl.problem.superbasr method)": [[41, "s3prl.problem.SuperbASR.run"]], "run() (s3prl.problem.superbasv method)": [[41, "s3prl.problem.SuperbASV.run"]], "run() (s3prl.problem.superber method)": [[41, "s3prl.problem.SuperbER.run"]], "run() (s3prl.problem.superbic method)": [[41, "s3prl.problem.SuperbIC.run"]], "run() (s3prl.problem.superbks method)": [[41, "s3prl.problem.SuperbKS.run"]], "run() (s3prl.problem.superbpr method)": [[41, "s3prl.problem.SuperbPR.run"]], "run() (s3prl.problem.superbsd method)": [[41, "s3prl.problem.SuperbSD.run"]], "run() (s3prl.problem.superbsf method)": [[41, "s3prl.problem.SuperbSF.run"]], "run() (s3prl.problem.superbsid method)": [[41, "s3prl.problem.SuperbSID.run"]], "s3prl.problem": [[41, "module-s3prl.problem"]], "save_model() (s3prl.problem.hearbeijingopera method)": [[41, "s3prl.problem.HearBeijingOpera.save_model"]], "save_model() (s3prl.problem.hearcremad method)": [[41, "s3prl.problem.HearCremaD.save_model"]], "save_model() (s3prl.problem.heardcase2016task2 method)": [[41, "s3prl.problem.HearDcase2016Task2.save_model"]], "save_model() (s3prl.problem.hearesc50 method)": [[41, "s3prl.problem.HearESC50.save_model"]], "save_model() (s3prl.problem.hearfsd method)": [[41, "s3prl.problem.HearFSD.save_model"]], "save_model() (s3prl.problem.heargsc5hr method)": [[41, "s3prl.problem.HearGSC5hr.save_model"]], "save_model() (s3prl.problem.heargtzan method)": [[41, "s3prl.problem.HearGtzan.save_model"]], "save_model() (s3prl.problem.heargtzanmusicspeech method)": [[41, "s3prl.problem.HearGtzanMusicSpeech.save_model"]], "save_model() (s3prl.problem.heargunshot method)": [[41, "s3prl.problem.HearGunshot.save_model"]], "save_model() (s3prl.problem.hearlibricount method)": [[41, "s3prl.problem.HearLibriCount.save_model"]], "save_model() (s3prl.problem.hearmaestro method)": [[41, "s3prl.problem.HearMaestro.save_model"]], "save_model() (s3prl.problem.hearnsynth5hr method)": [[41, "s3prl.problem.HearNsynth5hr.save_model"]], "save_model() (s3prl.problem.hearstroke method)": [[41, "s3prl.problem.HearStroke.save_model"]], "save_model() (s3prl.problem.heartonic method)": [[41, "s3prl.problem.HearTonic.save_model"]], "save_model() (s3prl.problem.hearvocal method)": [[41, "s3prl.problem.HearVocal.save_model"]], "save_model() (s3prl.problem.hearvoxlingual method)": [[41, "s3prl.problem.HearVoxLingual.save_model"]], "save_model() (s3prl.problem.superbasr method)": [[41, "s3prl.problem.SuperbASR.save_model"]], "save_model() (s3prl.problem.superbasv method)": [[41, "s3prl.problem.SuperbASV.save_model"]], "save_model() (s3prl.problem.superber method)": [[41, "s3prl.problem.SuperbER.save_model"]], "save_model() (s3prl.problem.superbic method)": [[41, "s3prl.problem.SuperbIC.save_model"]], "save_model() (s3prl.problem.superbks method)": [[41, "s3prl.problem.SuperbKS.save_model"]], "save_model() (s3prl.problem.superbpr method)": [[41, "s3prl.problem.SuperbPR.save_model"]], "save_model() (s3prl.problem.superbsd method)": [[41, "s3prl.problem.SuperbSD.save_model"]], "save_model() (s3prl.problem.superbsf method)": [[41, "s3prl.problem.SuperbSF.save_model"]], "save_model() (s3prl.problem.superbsid method)": [[41, "s3prl.problem.SuperbSID.save_model"]], "save_task() (s3prl.problem.hearbeijingopera method)": [[41, "s3prl.problem.HearBeijingOpera.save_task"]], "save_task() (s3prl.problem.hearcremad method)": [[41, "s3prl.problem.HearCremaD.save_task"]], "save_task() (s3prl.problem.heardcase2016task2 method)": [[41, "s3prl.problem.HearDcase2016Task2.save_task"]], "save_task() (s3prl.problem.hearesc50 method)": [[41, "s3prl.problem.HearESC50.save_task"]], "save_task() (s3prl.problem.hearfsd method)": [[41, "s3prl.problem.HearFSD.save_task"]], "save_task() (s3prl.problem.heargsc5hr method)": [[41, "s3prl.problem.HearGSC5hr.save_task"]], "save_task() (s3prl.problem.heargtzan method)": [[41, "s3prl.problem.HearGtzan.save_task"]], "save_task() (s3prl.problem.heargtzanmusicspeech method)": [[41, "s3prl.problem.HearGtzanMusicSpeech.save_task"]], "save_task() (s3prl.problem.heargunshot method)": [[41, "s3prl.problem.HearGunshot.save_task"]], "save_task() (s3prl.problem.hearlibricount method)": [[41, "s3prl.problem.HearLibriCount.save_task"]], "save_task() (s3prl.problem.hearmaestro method)": [[41, "s3prl.problem.HearMaestro.save_task"]], "save_task() (s3prl.problem.hearnsynth5hr method)": [[41, "s3prl.problem.HearNsynth5hr.save_task"]], "save_task() (s3prl.problem.hearstroke method)": [[41, "s3prl.problem.HearStroke.save_task"]], "save_task() (s3prl.problem.heartonic method)": [[41, "s3prl.problem.HearTonic.save_task"]], "save_task() (s3prl.problem.hearvocal method)": [[41, "s3prl.problem.HearVocal.save_task"]], "save_task() (s3prl.problem.hearvoxlingual method)": [[41, "s3prl.problem.HearVoxLingual.save_task"]], "save_task() (s3prl.problem.superbasr method)": [[41, "s3prl.problem.SuperbASR.save_task"]], "save_task() (s3prl.problem.superbasv method)": [[41, "s3prl.problem.SuperbASV.save_task"]], "save_task() (s3prl.problem.superber method)": [[41, "s3prl.problem.SuperbER.save_task"]], "save_task() (s3prl.problem.superbic method)": [[41, "s3prl.problem.SuperbIC.save_task"]], "save_task() (s3prl.problem.superbks method)": [[41, "s3prl.problem.SuperbKS.save_task"]], "save_task() (s3prl.problem.superbpr method)": [[41, "s3prl.problem.SuperbPR.save_task"]], "save_task() (s3prl.problem.superbsd method)": [[41, "s3prl.problem.SuperbSD.save_task"]], "save_task() (s3prl.problem.superbsf method)": [[41, "s3prl.problem.SuperbSF.save_task"]], "save_task() (s3prl.problem.superbsid method)": [[41, "s3prl.problem.SuperbSID.save_task"]], "scoring() (s3prl.problem.superbsd method)": [[41, "s3prl.problem.SuperbSD.scoring"]], "train() (s3prl.problem.hearbeijingopera method)": [[41, "s3prl.problem.HearBeijingOpera.train"]], "train() (s3prl.problem.hearcremad method)": [[41, "s3prl.problem.HearCremaD.train"]], "train() (s3prl.problem.heardcase2016task2 method)": [[41, "s3prl.problem.HearDcase2016Task2.train"]], "train() (s3prl.problem.hearesc50 method)": [[41, "s3prl.problem.HearESC50.train"]], "train() (s3prl.problem.hearfsd method)": [[41, "s3prl.problem.HearFSD.train"]], "train() (s3prl.problem.heargsc5hr method)": [[41, "s3prl.problem.HearGSC5hr.train"]], "train() (s3prl.problem.heargtzan method)": [[41, "s3prl.problem.HearGtzan.train"]], "train() (s3prl.problem.heargtzanmusicspeech method)": [[41, "s3prl.problem.HearGtzanMusicSpeech.train"]], "train() (s3prl.problem.heargunshot method)": [[41, "s3prl.problem.HearGunshot.train"]], "train() (s3prl.problem.hearlibricount method)": [[41, "s3prl.problem.HearLibriCount.train"]], "train() (s3prl.problem.hearmaestro method)": [[41, "s3prl.problem.HearMaestro.train"]], "train() (s3prl.problem.hearnsynth5hr method)": [[41, "s3prl.problem.HearNsynth5hr.train"]], "train() (s3prl.problem.hearstroke method)": [[41, "s3prl.problem.HearStroke.train"]], "train() (s3prl.problem.heartonic method)": [[41, "s3prl.problem.HearTonic.train"]], "train() (s3prl.problem.hearvocal method)": [[41, "s3prl.problem.HearVocal.train"]], "train() (s3prl.problem.hearvoxlingual method)": [[41, "s3prl.problem.HearVoxLingual.train"]], "train() (s3prl.problem.superbasr method)": [[41, "s3prl.problem.SuperbASR.train"]], "train() (s3prl.problem.superbasv method)": [[41, "s3prl.problem.SuperbASV.train"]], "train() (s3prl.problem.superber method)": [[41, "s3prl.problem.SuperbER.train"]], "train() (s3prl.problem.superbic method)": [[41, "s3prl.problem.SuperbIC.train"]], "train() (s3prl.problem.superbks method)": [[41, "s3prl.problem.SuperbKS.train"]], "train() (s3prl.problem.superbpr method)": [[41, "s3prl.problem.SuperbPR.train"]], "train() (s3prl.problem.superbsd method)": [[41, "s3prl.problem.SuperbSD.train"]], "train() (s3prl.problem.superbsf method)": [[41, "s3prl.problem.SuperbSF.train"]], "train() (s3prl.problem.superbsid method)": [[41, "s3prl.problem.SuperbSID.train"]], "superbasr (class in s3prl.problem.asr)": [[42, "s3prl.problem.asr.SuperbASR"]], "superbpr (class in s3prl.problem.asr)": [[42, "s3prl.problem.asr.SuperbPR"]], "superbsf (class in s3prl.problem.asr)": [[42, "s3prl.problem.asr.SuperbSF"]], "build_batch_sampler() (s3prl.problem.asr.superbasr method)": [[42, "s3prl.problem.asr.SuperbASR.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.asr.superbpr method)": [[42, "s3prl.problem.asr.SuperbPR.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.asr.superbsf method)": [[42, "s3prl.problem.asr.SuperbSF.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.asr.superbasr method)": [[42, "s3prl.problem.asr.SuperbASR.build_collate_fn"]], "build_collate_fn() (s3prl.problem.asr.superbpr method)": [[42, "s3prl.problem.asr.SuperbPR.build_collate_fn"]], "build_collate_fn() (s3prl.problem.asr.superbsf method)": [[42, "s3prl.problem.asr.SuperbSF.build_collate_fn"]], "build_dataset() (s3prl.problem.asr.superbasr method)": [[42, "s3prl.problem.asr.SuperbASR.build_dataset"]], "build_dataset() (s3prl.problem.asr.superbpr method)": [[42, "s3prl.problem.asr.SuperbPR.build_dataset"]], "build_dataset() (s3prl.problem.asr.superbsf method)": [[42, "s3prl.problem.asr.SuperbSF.build_dataset"]], "build_downstream() (s3prl.problem.asr.superbasr method)": [[42, "s3prl.problem.asr.SuperbASR.build_downstream"]], "build_downstream() (s3prl.problem.asr.superbpr method)": [[42, "s3prl.problem.asr.SuperbPR.build_downstream"]], "build_downstream() (s3prl.problem.asr.superbsf method)": [[42, "s3prl.problem.asr.SuperbSF.build_downstream"]], "build_featurizer() (s3prl.problem.asr.superbasr method)": [[42, "s3prl.problem.asr.SuperbASR.build_featurizer"]], "build_featurizer() (s3prl.problem.asr.superbpr method)": [[42, "s3prl.problem.asr.SuperbPR.build_featurizer"]], "build_featurizer() (s3prl.problem.asr.superbsf method)": [[42, "s3prl.problem.asr.SuperbSF.build_featurizer"]], "build_model() (s3prl.problem.asr.superbasr method)": [[42, "s3prl.problem.asr.SuperbASR.build_model"]], "build_model() (s3prl.problem.asr.superbpr method)": [[42, "s3prl.problem.asr.SuperbPR.build_model"]], "build_model() (s3prl.problem.asr.superbsf method)": [[42, "s3prl.problem.asr.SuperbSF.build_model"]], "build_optimizer() (s3prl.problem.asr.superbasr method)": [[42, "s3prl.problem.asr.SuperbASR.build_optimizer"]], "build_optimizer() (s3prl.problem.asr.superbpr method)": [[42, "s3prl.problem.asr.SuperbPR.build_optimizer"]], "build_optimizer() (s3prl.problem.asr.superbsf method)": [[42, "s3prl.problem.asr.SuperbSF.build_optimizer"]], "build_scheduler() (s3prl.problem.asr.superbasr method)": [[42, "s3prl.problem.asr.SuperbASR.build_scheduler"]], "build_scheduler() (s3prl.problem.asr.superbpr method)": [[42, "s3prl.problem.asr.SuperbPR.build_scheduler"]], "build_scheduler() (s3prl.problem.asr.superbsf method)": [[42, "s3prl.problem.asr.SuperbSF.build_scheduler"]], "build_task() (s3prl.problem.asr.superbasr method)": [[42, "s3prl.problem.asr.SuperbASR.build_task"]], "build_task() (s3prl.problem.asr.superbpr method)": [[42, "s3prl.problem.asr.SuperbPR.build_task"]], "build_task() (s3prl.problem.asr.superbsf method)": [[42, "s3prl.problem.asr.SuperbSF.build_task"]], "build_tokenizer() (s3prl.problem.asr.superbasr method)": [[42, "s3prl.problem.asr.SuperbASR.build_tokenizer"]], "build_tokenizer() (s3prl.problem.asr.superbpr method)": [[42, "s3prl.problem.asr.SuperbPR.build_tokenizer"]], "build_tokenizer() (s3prl.problem.asr.superbsf method)": [[42, "s3prl.problem.asr.SuperbSF.build_tokenizer"]], "build_upstream() (s3prl.problem.asr.superbasr method)": [[42, "s3prl.problem.asr.SuperbASR.build_upstream"]], "build_upstream() (s3prl.problem.asr.superbpr method)": [[42, "s3prl.problem.asr.SuperbPR.build_upstream"]], "build_upstream() (s3prl.problem.asr.superbsf method)": [[42, "s3prl.problem.asr.SuperbSF.build_upstream"]], "default_config() (s3prl.problem.asr.superbasr method)": [[42, "s3prl.problem.asr.SuperbASR.default_config"]], "default_config() (s3prl.problem.asr.superbpr method)": [[42, "s3prl.problem.asr.SuperbPR.default_config"]], "default_config() (s3prl.problem.asr.superbsf method)": [[42, "s3prl.problem.asr.SuperbSF.default_config"]], "evaluate() (s3prl.problem.asr.superbasr method)": [[42, "s3prl.problem.asr.SuperbASR.evaluate"]], "evaluate() (s3prl.problem.asr.superbpr method)": [[42, "s3prl.problem.asr.SuperbPR.evaluate"]], "evaluate() (s3prl.problem.asr.superbsf method)": [[42, "s3prl.problem.asr.SuperbSF.evaluate"]], "get_class_from_name() (s3prl.problem.asr.superbasr class method)": [[42, "s3prl.problem.asr.SuperbASR.get_class_from_name"]], "get_class_from_name() (s3prl.problem.asr.superbpr class method)": [[42, "s3prl.problem.asr.SuperbPR.get_class_from_name"]], "get_class_from_name() (s3prl.problem.asr.superbsf class method)": [[42, "s3prl.problem.asr.SuperbSF.get_class_from_name"]], "load_model() (s3prl.problem.asr.superbasr method)": [[42, "s3prl.problem.asr.SuperbASR.load_model"]], "load_model() (s3prl.problem.asr.superbpr method)": [[42, "s3prl.problem.asr.SuperbPR.load_model"]], "load_model() (s3prl.problem.asr.superbsf method)": [[42, "s3prl.problem.asr.SuperbSF.load_model"]], "load_model_and_task() (s3prl.problem.asr.superbasr method)": [[42, "s3prl.problem.asr.SuperbASR.load_model_and_task"]], "load_model_and_task() (s3prl.problem.asr.superbpr method)": [[42, "s3prl.problem.asr.SuperbPR.load_model_and_task"]], "load_model_and_task() (s3prl.problem.asr.superbsf method)": [[42, "s3prl.problem.asr.SuperbSF.load_model_and_task"]], "load_task() (s3prl.problem.asr.superbasr method)": [[42, "s3prl.problem.asr.SuperbASR.load_task"]], "load_task() (s3prl.problem.asr.superbpr method)": [[42, "s3prl.problem.asr.SuperbPR.load_task"]], "load_task() (s3prl.problem.asr.superbsf method)": [[42, "s3prl.problem.asr.SuperbSF.load_task"]], "main() (s3prl.problem.asr.superbasr method)": [[42, "s3prl.problem.asr.SuperbASR.main"]], "main() (s3prl.problem.asr.superbpr method)": [[42, "s3prl.problem.asr.SuperbPR.main"]], "main() (s3prl.problem.asr.superbsf method)": [[42, "s3prl.problem.asr.SuperbSF.main"]], "prepare_data() (s3prl.problem.asr.superbasr method)": [[42, "s3prl.problem.asr.SuperbASR.prepare_data"]], "prepare_data() (s3prl.problem.asr.superbpr method)": [[42, "s3prl.problem.asr.SuperbPR.prepare_data"]], "prepare_data() (s3prl.problem.asr.superbsf method)": [[42, "s3prl.problem.asr.SuperbSF.prepare_data"]], "prepare_tokenizer_data() (s3prl.problem.asr.superbasr method)": [[42, "s3prl.problem.asr.SuperbASR.prepare_tokenizer_data"]], "prepare_tokenizer_data() (s3prl.problem.asr.superbpr method)": [[42, "s3prl.problem.asr.SuperbPR.prepare_tokenizer_data"]], "prepare_tokenizer_data() (s3prl.problem.asr.superbsf method)": [[42, "s3prl.problem.asr.SuperbSF.prepare_tokenizer_data"]], "run() (s3prl.problem.asr.superbasr method)": [[42, "s3prl.problem.asr.SuperbASR.run"]], "run() (s3prl.problem.asr.superbpr method)": [[42, "s3prl.problem.asr.SuperbPR.run"]], "run() (s3prl.problem.asr.superbsf method)": [[42, "s3prl.problem.asr.SuperbSF.run"]], "s3prl.problem.asr": [[42, "module-s3prl.problem.asr"]], "save_model() (s3prl.problem.asr.superbasr method)": [[42, "s3prl.problem.asr.SuperbASR.save_model"]], "save_model() (s3prl.problem.asr.superbpr method)": [[42, "s3prl.problem.asr.SuperbPR.save_model"]], "save_model() (s3prl.problem.asr.superbsf method)": [[42, "s3prl.problem.asr.SuperbSF.save_model"]], "save_task() (s3prl.problem.asr.superbasr method)": [[42, "s3prl.problem.asr.SuperbASR.save_task"]], "save_task() (s3prl.problem.asr.superbpr method)": [[42, "s3prl.problem.asr.SuperbPR.save_task"]], "save_task() (s3prl.problem.asr.superbsf method)": [[42, "s3prl.problem.asr.SuperbSF.save_task"]], "train() (s3prl.problem.asr.superbasr method)": [[42, "s3prl.problem.asr.SuperbASR.train"]], "train() (s3prl.problem.asr.superbpr method)": [[42, "s3prl.problem.asr.SuperbPR.train"]], "train() (s3prl.problem.asr.superbsf method)": [[42, "s3prl.problem.asr.SuperbSF.train"]], "asr (class in s3prl.problem.asr.run)": [[43, "s3prl.problem.asr.run.ASR"]], "build_collate_fn() (s3prl.problem.asr.run.asr method)": [[43, "s3prl.problem.asr.run.ASR.build_collate_fn"]], "build_featurizer() (s3prl.problem.asr.run.asr method)": [[43, "s3prl.problem.asr.run.ASR.build_featurizer"]], "build_model() (s3prl.problem.asr.run.asr method)": [[43, "s3prl.problem.asr.run.ASR.build_model"]], "build_optimizer() (s3prl.problem.asr.run.asr method)": [[43, "s3prl.problem.asr.run.ASR.build_optimizer"]], "build_scheduler() (s3prl.problem.asr.run.asr method)": [[43, "s3prl.problem.asr.run.ASR.build_scheduler"]], "build_task() (s3prl.problem.asr.run.asr method)": [[43, "s3prl.problem.asr.run.ASR.build_task"]], "build_upstream() (s3prl.problem.asr.run.asr method)": [[43, "s3prl.problem.asr.run.ASR.build_upstream"]], "evaluate() (s3prl.problem.asr.run.asr method)": [[43, "s3prl.problem.asr.run.ASR.evaluate"]], "get_class_from_name() (s3prl.problem.asr.run.asr class method)": [[43, "s3prl.problem.asr.run.ASR.get_class_from_name"]], "load_model() (s3prl.problem.asr.run.asr method)": [[43, "s3prl.problem.asr.run.ASR.load_model"]], "load_model_and_task() (s3prl.problem.asr.run.asr method)": [[43, "s3prl.problem.asr.run.ASR.load_model_and_task"]], "load_task() (s3prl.problem.asr.run.asr method)": [[43, "s3prl.problem.asr.run.ASR.load_task"]], "main() (s3prl.problem.asr.run.asr method)": [[43, "s3prl.problem.asr.run.ASR.main"]], "run() (s3prl.problem.asr.run.asr method)": [[43, "s3prl.problem.asr.run.ASR.run"]], "s3prl.problem.asr.run": [[43, "module-s3prl.problem.asr.run"]], "save_model() (s3prl.problem.asr.run.asr method)": [[43, "s3prl.problem.asr.run.ASR.save_model"]], "save_task() (s3prl.problem.asr.run.asr method)": [[43, "s3prl.problem.asr.run.ASR.save_task"]], "train() (s3prl.problem.asr.run.asr method)": [[43, "s3prl.problem.asr.run.ASR.train"]], "superbasr (class in s3prl.problem.asr.superb_asr)": [[44, "s3prl.problem.asr.superb_asr.SuperbASR"]], "build_batch_sampler() (s3prl.problem.asr.superb_asr.superbasr method)": [[44, "s3prl.problem.asr.superb_asr.SuperbASR.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.asr.superb_asr.superbasr method)": [[44, "s3prl.problem.asr.superb_asr.SuperbASR.build_collate_fn"]], "build_dataset() (s3prl.problem.asr.superb_asr.superbasr method)": [[44, "s3prl.problem.asr.superb_asr.SuperbASR.build_dataset"]], "build_downstream() (s3prl.problem.asr.superb_asr.superbasr method)": [[44, "s3prl.problem.asr.superb_asr.SuperbASR.build_downstream"]], "build_featurizer() (s3prl.problem.asr.superb_asr.superbasr method)": [[44, "s3prl.problem.asr.superb_asr.SuperbASR.build_featurizer"]], "build_model() (s3prl.problem.asr.superb_asr.superbasr method)": [[44, "s3prl.problem.asr.superb_asr.SuperbASR.build_model"]], "build_optimizer() (s3prl.problem.asr.superb_asr.superbasr method)": [[44, "s3prl.problem.asr.superb_asr.SuperbASR.build_optimizer"]], "build_scheduler() (s3prl.problem.asr.superb_asr.superbasr method)": [[44, "s3prl.problem.asr.superb_asr.SuperbASR.build_scheduler"]], "build_task() (s3prl.problem.asr.superb_asr.superbasr method)": [[44, "s3prl.problem.asr.superb_asr.SuperbASR.build_task"]], "build_tokenizer() (s3prl.problem.asr.superb_asr.superbasr method)": [[44, "s3prl.problem.asr.superb_asr.SuperbASR.build_tokenizer"]], "build_upstream() (s3prl.problem.asr.superb_asr.superbasr method)": [[44, "s3prl.problem.asr.superb_asr.SuperbASR.build_upstream"]], "default_config() (s3prl.problem.asr.superb_asr.superbasr method)": [[44, "s3prl.problem.asr.superb_asr.SuperbASR.default_config"]], "evaluate() (s3prl.problem.asr.superb_asr.superbasr method)": [[44, "s3prl.problem.asr.superb_asr.SuperbASR.evaluate"]], "get_class_from_name() (s3prl.problem.asr.superb_asr.superbasr class method)": [[44, "s3prl.problem.asr.superb_asr.SuperbASR.get_class_from_name"]], "load_model() (s3prl.problem.asr.superb_asr.superbasr method)": [[44, "s3prl.problem.asr.superb_asr.SuperbASR.load_model"]], "load_model_and_task() (s3prl.problem.asr.superb_asr.superbasr method)": [[44, "s3prl.problem.asr.superb_asr.SuperbASR.load_model_and_task"]], "load_task() (s3prl.problem.asr.superb_asr.superbasr method)": [[44, "s3prl.problem.asr.superb_asr.SuperbASR.load_task"]], "main() (s3prl.problem.asr.superb_asr.superbasr method)": [[44, "s3prl.problem.asr.superb_asr.SuperbASR.main"]], "prepare_common_tokenizer() (in module s3prl.problem.asr.superb_asr)": [[44, "s3prl.problem.asr.superb_asr.prepare_common_tokenizer"]], "prepare_data() (s3prl.problem.asr.superb_asr.superbasr method)": [[44, "s3prl.problem.asr.superb_asr.SuperbASR.prepare_data"]], "prepare_librispeech() (in module s3prl.problem.asr.superb_asr)": [[44, "s3prl.problem.asr.superb_asr.prepare_librispeech"]], "prepare_tokenizer_data() (s3prl.problem.asr.superb_asr.superbasr method)": [[44, "s3prl.problem.asr.superb_asr.SuperbASR.prepare_tokenizer_data"]], "run() (s3prl.problem.asr.superb_asr.superbasr method)": [[44, "s3prl.problem.asr.superb_asr.SuperbASR.run"]], "s3prl.problem.asr.superb_asr": [[44, "module-s3prl.problem.asr.superb_asr"]], "save_model() (s3prl.problem.asr.superb_asr.superbasr method)": [[44, "s3prl.problem.asr.superb_asr.SuperbASR.save_model"]], "save_task() (s3prl.problem.asr.superb_asr.superbasr method)": [[44, "s3prl.problem.asr.superb_asr.SuperbASR.save_task"]], "train() (s3prl.problem.asr.superb_asr.superbasr method)": [[44, "s3prl.problem.asr.superb_asr.SuperbASR.train"]], "superbpr (class in s3prl.problem.asr.superb_pr)": [[45, "s3prl.problem.asr.superb_pr.SuperbPR"]], "build_batch_sampler() (s3prl.problem.asr.superb_pr.superbpr method)": [[45, "s3prl.problem.asr.superb_pr.SuperbPR.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.asr.superb_pr.superbpr method)": [[45, "s3prl.problem.asr.superb_pr.SuperbPR.build_collate_fn"]], "build_dataset() (s3prl.problem.asr.superb_pr.superbpr method)": [[45, "s3prl.problem.asr.superb_pr.SuperbPR.build_dataset"]], "build_downstream() (s3prl.problem.asr.superb_pr.superbpr method)": [[45, "s3prl.problem.asr.superb_pr.SuperbPR.build_downstream"]], "build_featurizer() (s3prl.problem.asr.superb_pr.superbpr method)": [[45, "s3prl.problem.asr.superb_pr.SuperbPR.build_featurizer"]], "build_model() (s3prl.problem.asr.superb_pr.superbpr method)": [[45, "s3prl.problem.asr.superb_pr.SuperbPR.build_model"]], "build_optimizer() (s3prl.problem.asr.superb_pr.superbpr method)": [[45, "s3prl.problem.asr.superb_pr.SuperbPR.build_optimizer"]], "build_scheduler() (s3prl.problem.asr.superb_pr.superbpr method)": [[45, "s3prl.problem.asr.superb_pr.SuperbPR.build_scheduler"]], "build_task() (s3prl.problem.asr.superb_pr.superbpr method)": [[45, "s3prl.problem.asr.superb_pr.SuperbPR.build_task"]], "build_tokenizer() (s3prl.problem.asr.superb_pr.superbpr method)": [[45, "s3prl.problem.asr.superb_pr.SuperbPR.build_tokenizer"]], "build_upstream() (s3prl.problem.asr.superb_pr.superbpr method)": [[45, "s3prl.problem.asr.superb_pr.SuperbPR.build_upstream"]], "default_config() (s3prl.problem.asr.superb_pr.superbpr method)": [[45, "s3prl.problem.asr.superb_pr.SuperbPR.default_config"]], "evaluate() (s3prl.problem.asr.superb_pr.superbpr method)": [[45, "s3prl.problem.asr.superb_pr.SuperbPR.evaluate"]], "get_class_from_name() (s3prl.problem.asr.superb_pr.superbpr class method)": [[45, "s3prl.problem.asr.superb_pr.SuperbPR.get_class_from_name"]], "load_model() (s3prl.problem.asr.superb_pr.superbpr method)": [[45, "s3prl.problem.asr.superb_pr.SuperbPR.load_model"]], "load_model_and_task() (s3prl.problem.asr.superb_pr.superbpr method)": [[45, "s3prl.problem.asr.superb_pr.SuperbPR.load_model_and_task"]], "load_task() (s3prl.problem.asr.superb_pr.superbpr method)": [[45, "s3prl.problem.asr.superb_pr.SuperbPR.load_task"]], "main() (s3prl.problem.asr.superb_pr.superbpr method)": [[45, "s3prl.problem.asr.superb_pr.SuperbPR.main"]], "prepare_data() (s3prl.problem.asr.superb_pr.superbpr method)": [[45, "s3prl.problem.asr.superb_pr.SuperbPR.prepare_data"]], "prepare_tokenizer_data() (s3prl.problem.asr.superb_pr.superbpr method)": [[45, "s3prl.problem.asr.superb_pr.SuperbPR.prepare_tokenizer_data"]], "run() (s3prl.problem.asr.superb_pr.superbpr method)": [[45, "s3prl.problem.asr.superb_pr.SuperbPR.run"]], "s3prl.problem.asr.superb_pr": [[45, "module-s3prl.problem.asr.superb_pr"]], "save_model() (s3prl.problem.asr.superb_pr.superbpr method)": [[45, "s3prl.problem.asr.superb_pr.SuperbPR.save_model"]], "save_task() (s3prl.problem.asr.superb_pr.superbpr method)": [[45, "s3prl.problem.asr.superb_pr.SuperbPR.save_task"]], "train() (s3prl.problem.asr.superb_pr.superbpr method)": [[45, "s3prl.problem.asr.superb_pr.SuperbPR.train"]], "superbsf (class in s3prl.problem.asr.superb_sf)": [[46, "s3prl.problem.asr.superb_sf.SuperbSF"]], "audio_snips_for_slot_filling() (in module s3prl.problem.asr.superb_sf)": [[46, "s3prl.problem.asr.superb_sf.audio_snips_for_slot_filling"]], "build_batch_sampler() (s3prl.problem.asr.superb_sf.superbsf method)": [[46, "s3prl.problem.asr.superb_sf.SuperbSF.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.asr.superb_sf.superbsf method)": [[46, "s3prl.problem.asr.superb_sf.SuperbSF.build_collate_fn"]], "build_dataset() (s3prl.problem.asr.superb_sf.superbsf method)": [[46, "s3prl.problem.asr.superb_sf.SuperbSF.build_dataset"]], "build_downstream() (s3prl.problem.asr.superb_sf.superbsf method)": [[46, "s3prl.problem.asr.superb_sf.SuperbSF.build_downstream"]], "build_featurizer() (s3prl.problem.asr.superb_sf.superbsf method)": [[46, "s3prl.problem.asr.superb_sf.SuperbSF.build_featurizer"]], "build_model() (s3prl.problem.asr.superb_sf.superbsf method)": [[46, "s3prl.problem.asr.superb_sf.SuperbSF.build_model"]], "build_optimizer() (s3prl.problem.asr.superb_sf.superbsf method)": [[46, "s3prl.problem.asr.superb_sf.SuperbSF.build_optimizer"]], "build_scheduler() (s3prl.problem.asr.superb_sf.superbsf method)": [[46, "s3prl.problem.asr.superb_sf.SuperbSF.build_scheduler"]], "build_task() (s3prl.problem.asr.superb_sf.superbsf method)": [[46, "s3prl.problem.asr.superb_sf.SuperbSF.build_task"]], "build_tokenizer() (s3prl.problem.asr.superb_sf.superbsf method)": [[46, "s3prl.problem.asr.superb_sf.SuperbSF.build_tokenizer"]], "build_upstream() (s3prl.problem.asr.superb_sf.superbsf method)": [[46, "s3prl.problem.asr.superb_sf.SuperbSF.build_upstream"]], "default_config() (s3prl.problem.asr.superb_sf.superbsf method)": [[46, "s3prl.problem.asr.superb_sf.SuperbSF.default_config"]], "evaluate() (s3prl.problem.asr.superb_sf.superbsf method)": [[46, "s3prl.problem.asr.superb_sf.SuperbSF.evaluate"]], "get_class_from_name() (s3prl.problem.asr.superb_sf.superbsf class method)": [[46, "s3prl.problem.asr.superb_sf.SuperbSF.get_class_from_name"]], "load_model() (s3prl.problem.asr.superb_sf.superbsf method)": [[46, "s3prl.problem.asr.superb_sf.SuperbSF.load_model"]], "load_model_and_task() (s3prl.problem.asr.superb_sf.superbsf method)": [[46, "s3prl.problem.asr.superb_sf.SuperbSF.load_model_and_task"]], "load_task() (s3prl.problem.asr.superb_sf.superbsf method)": [[46, "s3prl.problem.asr.superb_sf.SuperbSF.load_task"]], "main() (s3prl.problem.asr.superb_sf.superbsf method)": [[46, "s3prl.problem.asr.superb_sf.SuperbSF.main"]], "prepare_data() (s3prl.problem.asr.superb_sf.superbsf method)": [[46, "s3prl.problem.asr.superb_sf.SuperbSF.prepare_data"]], "prepare_tokenizer_data() (s3prl.problem.asr.superb_sf.superbsf method)": [[46, "s3prl.problem.asr.superb_sf.SuperbSF.prepare_tokenizer_data"]], "run() (s3prl.problem.asr.superb_sf.superbsf method)": [[46, "s3prl.problem.asr.superb_sf.SuperbSF.run"]], "s3prl.problem.asr.superb_sf": [[46, "module-s3prl.problem.asr.superb_sf"]], "save_model() (s3prl.problem.asr.superb_sf.superbsf method)": [[46, "s3prl.problem.asr.superb_sf.SuperbSF.save_model"]], "save_task() (s3prl.problem.asr.superb_sf.superbsf method)": [[46, "s3prl.problem.asr.superb_sf.SuperbSF.save_task"]], "train() (s3prl.problem.asr.superb_sf.superbsf method)": [[46, "s3prl.problem.asr.superb_sf.SuperbSF.train"]], "superbasv (class in s3prl.problem.asv)": [[47, "s3prl.problem.asv.SuperbASV"]], "build_batch_sampler() (s3prl.problem.asv.superbasv method)": [[47, "s3prl.problem.asv.SuperbASV.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.asv.superbasv method)": [[47, "s3prl.problem.asv.SuperbASV.build_collate_fn"]], "build_dataset() (s3prl.problem.asv.superbasv method)": [[47, "s3prl.problem.asv.SuperbASV.build_dataset"]], "build_downstream() (s3prl.problem.asv.superbasv method)": [[47, "s3prl.problem.asv.SuperbASV.build_downstream"]], "build_encoder() (s3prl.problem.asv.superbasv method)": [[47, "s3prl.problem.asv.SuperbASV.build_encoder"]], "build_featurizer() (s3prl.problem.asv.superbasv method)": [[47, "s3prl.problem.asv.SuperbASV.build_featurizer"]], "build_model() (s3prl.problem.asv.superbasv method)": [[47, "s3prl.problem.asv.SuperbASV.build_model"]], "build_optimizer() (s3prl.problem.asv.superbasv method)": [[47, "s3prl.problem.asv.SuperbASV.build_optimizer"]], "build_scheduler() (s3prl.problem.asv.superbasv method)": [[47, "s3prl.problem.asv.SuperbASV.build_scheduler"]], "build_task() (s3prl.problem.asv.superbasv method)": [[47, "s3prl.problem.asv.SuperbASV.build_task"]], "build_upstream() (s3prl.problem.asv.superbasv method)": [[47, "s3prl.problem.asv.SuperbASV.build_upstream"]], "default_config() (s3prl.problem.asv.superbasv method)": [[47, "s3prl.problem.asv.SuperbASV.default_config"]], "evaluate() (s3prl.problem.asv.superbasv method)": [[47, "s3prl.problem.asv.SuperbASV.evaluate"]], "get_class_from_name() (s3prl.problem.asv.superbasv class method)": [[47, "s3prl.problem.asv.SuperbASV.get_class_from_name"]], "load_model() (s3prl.problem.asv.superbasv method)": [[47, "s3prl.problem.asv.SuperbASV.load_model"]], "load_model_and_task() (s3prl.problem.asv.superbasv method)": [[47, "s3prl.problem.asv.SuperbASV.load_model_and_task"]], "load_task() (s3prl.problem.asv.superbasv method)": [[47, "s3prl.problem.asv.SuperbASV.load_task"]], "main() (s3prl.problem.asv.superbasv method)": [[47, "s3prl.problem.asv.SuperbASV.main"]], "prepare_data() (s3prl.problem.asv.superbasv method)": [[47, "s3prl.problem.asv.SuperbASV.prepare_data"]], "run() (s3prl.problem.asv.superbasv method)": [[47, "s3prl.problem.asv.SuperbASV.run"]], "s3prl.problem.asv": [[47, "module-s3prl.problem.asv"]], "save_model() (s3prl.problem.asv.superbasv method)": [[47, "s3prl.problem.asv.SuperbASV.save_model"]], "save_task() (s3prl.problem.asv.superbasv method)": [[47, "s3prl.problem.asv.SuperbASV.save_task"]], "train() (s3prl.problem.asv.superbasv method)": [[47, "s3prl.problem.asv.SuperbASV.train"]], "asv (class in s3prl.problem.asv.run)": [[48, "s3prl.problem.asv.run.ASV"]], "build_collate_fn() (s3prl.problem.asv.run.asv method)": [[48, "s3prl.problem.asv.run.ASV.build_collate_fn"]], "build_featurizer() (s3prl.problem.asv.run.asv method)": [[48, "s3prl.problem.asv.run.ASV.build_featurizer"]], "build_model() (s3prl.problem.asv.run.asv method)": [[48, "s3prl.problem.asv.run.ASV.build_model"]], "build_optimizer() (s3prl.problem.asv.run.asv method)": [[48, "s3prl.problem.asv.run.ASV.build_optimizer"]], "build_scheduler() (s3prl.problem.asv.run.asv method)": [[48, "s3prl.problem.asv.run.ASV.build_scheduler"]], "build_task() (s3prl.problem.asv.run.asv method)": [[48, "s3prl.problem.asv.run.ASV.build_task"]], "build_upstream() (s3prl.problem.asv.run.asv method)": [[48, "s3prl.problem.asv.run.ASV.build_upstream"]], "evaluate() (s3prl.problem.asv.run.asv method)": [[48, "s3prl.problem.asv.run.ASV.evaluate"]], "get_class_from_name() (s3prl.problem.asv.run.asv class method)": [[48, "s3prl.problem.asv.run.ASV.get_class_from_name"]], "load_model() (s3prl.problem.asv.run.asv method)": [[48, "s3prl.problem.asv.run.ASV.load_model"]], "load_model_and_task() (s3prl.problem.asv.run.asv method)": [[48, "s3prl.problem.asv.run.ASV.load_model_and_task"]], "load_task() (s3prl.problem.asv.run.asv method)": [[48, "s3prl.problem.asv.run.ASV.load_task"]], "main() (s3prl.problem.asv.run.asv method)": [[48, "s3prl.problem.asv.run.ASV.main"]], "run() (s3prl.problem.asv.run.asv method)": [[48, "s3prl.problem.asv.run.ASV.run"]], "s3prl.problem.asv.run": [[48, "module-s3prl.problem.asv.run"]], "save_model() (s3prl.problem.asv.run.asv method)": [[48, "s3prl.problem.asv.run.ASV.save_model"]], "save_task() (s3prl.problem.asv.run.asv method)": [[48, "s3prl.problem.asv.run.ASV.save_task"]], "train() (s3prl.problem.asv.run.asv method)": [[48, "s3prl.problem.asv.run.ASV.train"]], "superbasv (class in s3prl.problem.asv.superb_asv)": [[49, "s3prl.problem.asv.superb_asv.SuperbASV"]], "build_batch_sampler() (s3prl.problem.asv.superb_asv.superbasv method)": [[49, "s3prl.problem.asv.superb_asv.SuperbASV.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.asv.superb_asv.superbasv method)": [[49, "s3prl.problem.asv.superb_asv.SuperbASV.build_collate_fn"]], "build_dataset() (s3prl.problem.asv.superb_asv.superbasv method)": [[49, "s3prl.problem.asv.superb_asv.SuperbASV.build_dataset"]], "build_downstream() (s3prl.problem.asv.superb_asv.superbasv method)": [[49, "s3prl.problem.asv.superb_asv.SuperbASV.build_downstream"]], "build_encoder() (s3prl.problem.asv.superb_asv.superbasv method)": [[49, "s3prl.problem.asv.superb_asv.SuperbASV.build_encoder"]], "build_featurizer() (s3prl.problem.asv.superb_asv.superbasv method)": [[49, "s3prl.problem.asv.superb_asv.SuperbASV.build_featurizer"]], "build_model() (s3prl.problem.asv.superb_asv.superbasv method)": [[49, "s3prl.problem.asv.superb_asv.SuperbASV.build_model"]], "build_optimizer() (s3prl.problem.asv.superb_asv.superbasv method)": [[49, "s3prl.problem.asv.superb_asv.SuperbASV.build_optimizer"]], "build_scheduler() (s3prl.problem.asv.superb_asv.superbasv method)": [[49, "s3prl.problem.asv.superb_asv.SuperbASV.build_scheduler"]], "build_task() (s3prl.problem.asv.superb_asv.superbasv method)": [[49, "s3prl.problem.asv.superb_asv.SuperbASV.build_task"]], "build_upstream() (s3prl.problem.asv.superb_asv.superbasv method)": [[49, "s3prl.problem.asv.superb_asv.SuperbASV.build_upstream"]], "default_config() (s3prl.problem.asv.superb_asv.superbasv method)": [[49, "s3prl.problem.asv.superb_asv.SuperbASV.default_config"]], "evaluate() (s3prl.problem.asv.superb_asv.superbasv method)": [[49, "s3prl.problem.asv.superb_asv.SuperbASV.evaluate"]], "get_class_from_name() (s3prl.problem.asv.superb_asv.superbasv class method)": [[49, "s3prl.problem.asv.superb_asv.SuperbASV.get_class_from_name"]], "load_model() (s3prl.problem.asv.superb_asv.superbasv method)": [[49, "s3prl.problem.asv.superb_asv.SuperbASV.load_model"]], "load_model_and_task() (s3prl.problem.asv.superb_asv.superbasv method)": [[49, "s3prl.problem.asv.superb_asv.SuperbASV.load_model_and_task"]], "load_task() (s3prl.problem.asv.superb_asv.superbasv method)": [[49, "s3prl.problem.asv.superb_asv.SuperbASV.load_task"]], "main() (s3prl.problem.asv.superb_asv.superbasv method)": [[49, "s3prl.problem.asv.superb_asv.SuperbASV.main"]], "prepare_data() (s3prl.problem.asv.superb_asv.superbasv method)": [[49, "s3prl.problem.asv.superb_asv.SuperbASV.prepare_data"]], "prepare_voxceleb1_for_sv() (in module s3prl.problem.asv.superb_asv)": [[49, "s3prl.problem.asv.superb_asv.prepare_voxceleb1_for_sv"]], "run() (s3prl.problem.asv.superb_asv.superbasv method)": [[49, "s3prl.problem.asv.superb_asv.SuperbASV.run"]], "s3prl.problem.asv.superb_asv": [[49, "module-s3prl.problem.asv.superb_asv"]], "save_model() (s3prl.problem.asv.superb_asv.superbasv method)": [[49, "s3prl.problem.asv.superb_asv.SuperbASV.save_model"]], "save_task() (s3prl.problem.asv.superb_asv.superbasv method)": [[49, "s3prl.problem.asv.superb_asv.SuperbASV.save_task"]], "train() (s3prl.problem.asv.superb_asv.superbasv method)": [[49, "s3prl.problem.asv.superb_asv.SuperbASV.train"]], "problem (class in s3prl.problem.base)": [[50, "s3prl.problem.base.Problem"]], "build_collate_fn() (s3prl.problem.base.problem method)": [[50, "s3prl.problem.base.Problem.build_collate_fn"]], "build_featurizer() (s3prl.problem.base.problem method)": [[50, "s3prl.problem.base.Problem.build_featurizer"]], "build_model() (s3prl.problem.base.problem method)": [[50, "s3prl.problem.base.Problem.build_model"]], "build_optimizer() (s3prl.problem.base.problem method)": [[50, "s3prl.problem.base.Problem.build_optimizer"]], "build_scheduler() (s3prl.problem.base.problem method)": [[50, "s3prl.problem.base.Problem.build_scheduler"]], "build_upstream() (s3prl.problem.base.problem method)": [[50, "s3prl.problem.base.Problem.build_upstream"]], "evaluate() (s3prl.problem.base.problem method)": [[50, "s3prl.problem.base.Problem.evaluate"]], "get_class_from_name() (s3prl.problem.base.problem class method)": [[50, "s3prl.problem.base.Problem.get_class_from_name"]], "load_model() (s3prl.problem.base.problem method)": [[50, "s3prl.problem.base.Problem.load_model"]], "load_model_and_task() (s3prl.problem.base.problem method)": [[50, "s3prl.problem.base.Problem.load_model_and_task"]], "load_task() (s3prl.problem.base.problem method)": [[50, "s3prl.problem.base.Problem.load_task"]], "main() (s3prl.problem.base.problem method)": [[50, "s3prl.problem.base.Problem.main"]], "s3prl.problem.base": [[50, "module-s3prl.problem.base"]], "save_model() (s3prl.problem.base.problem method)": [[50, "s3prl.problem.base.Problem.save_model"]], "save_task() (s3prl.problem.base.problem method)": [[50, "s3prl.problem.base.Problem.save_task"]], "train() (s3prl.problem.base.problem method)": [[50, "s3prl.problem.base.Problem.train"]], "hearbeijingopera (class in s3prl.problem.common)": [[51, "s3prl.problem.common.HearBeijingOpera"]], "hearcremad (class in s3prl.problem.common)": [[51, "s3prl.problem.common.HearCremaD"]], "heardcase2016task2 (class in s3prl.problem.common)": [[51, "s3prl.problem.common.HearDcase2016Task2"]], "hearesc50 (class in s3prl.problem.common)": [[51, "s3prl.problem.common.HearESC50"]], "hearfsd (class in s3prl.problem.common)": [[51, "s3prl.problem.common.HearFSD"]], "heargsc5hr (class in s3prl.problem.common)": [[51, "s3prl.problem.common.HearGSC5hr"]], "heargtzan (class in s3prl.problem.common)": [[51, "s3prl.problem.common.HearGtzan"]], "heargtzanmusicspeech (class in s3prl.problem.common)": [[51, "s3prl.problem.common.HearGtzanMusicSpeech"]], "heargunshot (class in s3prl.problem.common)": [[51, "s3prl.problem.common.HearGunshot"]], "hearlibricount (class in s3prl.problem.common)": [[51, "s3prl.problem.common.HearLibriCount"]], "hearmaestro (class in s3prl.problem.common)": [[51, "s3prl.problem.common.HearMaestro"]], "hearnsynth5hr (class in s3prl.problem.common)": [[51, "s3prl.problem.common.HearNsynth5hr"]], "hearstroke (class in s3prl.problem.common)": [[51, "s3prl.problem.common.HearStroke"]], "heartonic (class in s3prl.problem.common)": [[51, "s3prl.problem.common.HearTonic"]], "hearvocal (class in s3prl.problem.common)": [[51, "s3prl.problem.common.HearVocal"]], "hearvoxlingual (class in s3prl.problem.common)": [[51, "s3prl.problem.common.HearVoxLingual"]], "superber (class in s3prl.problem.common)": [[51, "s3prl.problem.common.SuperbER"]], "superbic (class in s3prl.problem.common)": [[51, "s3prl.problem.common.SuperbIC"]], "superbks (class in s3prl.problem.common)": [[51, "s3prl.problem.common.SuperbKS"]], "superbsid (class in s3prl.problem.common)": [[51, "s3prl.problem.common.SuperbSID"]], "build_batch_sampler() (s3prl.problem.common.hearbeijingopera method)": [[51, "s3prl.problem.common.HearBeijingOpera.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hearcremad method)": [[51, "s3prl.problem.common.HearCremaD.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.heardcase2016task2 method)": [[51, "s3prl.problem.common.HearDcase2016Task2.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hearesc50 method)": [[51, "s3prl.problem.common.HearESC50.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hearfsd method)": [[51, "s3prl.problem.common.HearFSD.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.heargsc5hr method)": [[51, "s3prl.problem.common.HearGSC5hr.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.heargtzan method)": [[51, "s3prl.problem.common.HearGtzan.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.heargtzanmusicspeech method)": [[51, "s3prl.problem.common.HearGtzanMusicSpeech.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.heargunshot method)": [[51, "s3prl.problem.common.HearGunshot.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hearlibricount method)": [[51, "s3prl.problem.common.HearLibriCount.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hearmaestro method)": [[51, "s3prl.problem.common.HearMaestro.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hearnsynth5hr method)": [[51, "s3prl.problem.common.HearNsynth5hr.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hearstroke method)": [[51, "s3prl.problem.common.HearStroke.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.heartonic method)": [[51, "s3prl.problem.common.HearTonic.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hearvocal method)": [[51, "s3prl.problem.common.HearVocal.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hearvoxlingual method)": [[51, "s3prl.problem.common.HearVoxLingual.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.superber method)": [[51, "s3prl.problem.common.SuperbER.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.superbic method)": [[51, "s3prl.problem.common.SuperbIC.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.superbks method)": [[51, "s3prl.problem.common.SuperbKS.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.superbsid method)": [[51, "s3prl.problem.common.SuperbSID.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hearbeijingopera method)": [[51, "s3prl.problem.common.HearBeijingOpera.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hearcremad method)": [[51, "s3prl.problem.common.HearCremaD.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.heardcase2016task2 method)": [[51, "s3prl.problem.common.HearDcase2016Task2.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hearesc50 method)": [[51, "s3prl.problem.common.HearESC50.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hearfsd method)": [[51, "s3prl.problem.common.HearFSD.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.heargsc5hr method)": [[51, "s3prl.problem.common.HearGSC5hr.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.heargtzan method)": [[51, "s3prl.problem.common.HearGtzan.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.heargtzanmusicspeech method)": [[51, "s3prl.problem.common.HearGtzanMusicSpeech.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.heargunshot method)": [[51, "s3prl.problem.common.HearGunshot.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hearlibricount method)": [[51, "s3prl.problem.common.HearLibriCount.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hearmaestro method)": [[51, "s3prl.problem.common.HearMaestro.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hearnsynth5hr method)": [[51, "s3prl.problem.common.HearNsynth5hr.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hearstroke method)": [[51, "s3prl.problem.common.HearStroke.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.heartonic method)": [[51, "s3prl.problem.common.HearTonic.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hearvocal method)": [[51, "s3prl.problem.common.HearVocal.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hearvoxlingual method)": [[51, "s3prl.problem.common.HearVoxLingual.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.superber method)": [[51, "s3prl.problem.common.SuperbER.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.superbic method)": [[51, "s3prl.problem.common.SuperbIC.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.superbks method)": [[51, "s3prl.problem.common.SuperbKS.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.superbsid method)": [[51, "s3prl.problem.common.SuperbSID.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hearbeijingopera method)": [[51, "s3prl.problem.common.HearBeijingOpera.build_dataset"]], "build_dataset() (s3prl.problem.common.hearcremad method)": [[51, "s3prl.problem.common.HearCremaD.build_dataset"]], "build_dataset() (s3prl.problem.common.heardcase2016task2 method)": [[51, "s3prl.problem.common.HearDcase2016Task2.build_dataset"]], "build_dataset() (s3prl.problem.common.hearesc50 method)": [[51, "s3prl.problem.common.HearESC50.build_dataset"]], "build_dataset() (s3prl.problem.common.hearfsd method)": [[51, "s3prl.problem.common.HearFSD.build_dataset"]], "build_dataset() (s3prl.problem.common.heargsc5hr method)": [[51, "s3prl.problem.common.HearGSC5hr.build_dataset"]], "build_dataset() (s3prl.problem.common.heargtzan method)": [[51, "s3prl.problem.common.HearGtzan.build_dataset"]], "build_dataset() (s3prl.problem.common.heargtzanmusicspeech method)": [[51, "s3prl.problem.common.HearGtzanMusicSpeech.build_dataset"]], "build_dataset() (s3prl.problem.common.heargunshot method)": [[51, "s3prl.problem.common.HearGunshot.build_dataset"]], "build_dataset() (s3prl.problem.common.hearlibricount method)": [[51, "s3prl.problem.common.HearLibriCount.build_dataset"]], "build_dataset() (s3prl.problem.common.hearmaestro method)": [[51, "s3prl.problem.common.HearMaestro.build_dataset"]], "build_dataset() (s3prl.problem.common.hearnsynth5hr method)": [[51, "s3prl.problem.common.HearNsynth5hr.build_dataset"]], "build_dataset() (s3prl.problem.common.hearstroke method)": [[51, "s3prl.problem.common.HearStroke.build_dataset"]], "build_dataset() (s3prl.problem.common.heartonic method)": [[51, "s3prl.problem.common.HearTonic.build_dataset"]], "build_dataset() (s3prl.problem.common.hearvocal method)": [[51, "s3prl.problem.common.HearVocal.build_dataset"]], "build_dataset() (s3prl.problem.common.hearvoxlingual method)": [[51, "s3prl.problem.common.HearVoxLingual.build_dataset"]], "build_dataset() (s3prl.problem.common.superber method)": [[51, "s3prl.problem.common.SuperbER.build_dataset"]], "build_dataset() (s3prl.problem.common.superbic method)": [[51, "s3prl.problem.common.SuperbIC.build_dataset"]], "build_dataset() (s3prl.problem.common.superbks method)": [[51, "s3prl.problem.common.SuperbKS.build_dataset"]], "build_dataset() (s3prl.problem.common.superbsid method)": [[51, "s3prl.problem.common.SuperbSID.build_dataset"]], "build_downstream() (s3prl.problem.common.hearbeijingopera method)": [[51, "s3prl.problem.common.HearBeijingOpera.build_downstream"]], "build_downstream() (s3prl.problem.common.hearcremad method)": [[51, "s3prl.problem.common.HearCremaD.build_downstream"]], "build_downstream() (s3prl.problem.common.heardcase2016task2 method)": [[51, "s3prl.problem.common.HearDcase2016Task2.build_downstream"]], "build_downstream() (s3prl.problem.common.hearesc50 method)": [[51, "s3prl.problem.common.HearESC50.build_downstream"]], "build_downstream() (s3prl.problem.common.hearfsd method)": [[51, "s3prl.problem.common.HearFSD.build_downstream"]], "build_downstream() (s3prl.problem.common.heargsc5hr method)": [[51, "s3prl.problem.common.HearGSC5hr.build_downstream"]], "build_downstream() (s3prl.problem.common.heargtzan method)": [[51, "s3prl.problem.common.HearGtzan.build_downstream"]], "build_downstream() (s3prl.problem.common.heargtzanmusicspeech method)": [[51, "s3prl.problem.common.HearGtzanMusicSpeech.build_downstream"]], "build_downstream() (s3prl.problem.common.heargunshot method)": [[51, "s3prl.problem.common.HearGunshot.build_downstream"]], "build_downstream() (s3prl.problem.common.hearlibricount method)": [[51, "s3prl.problem.common.HearLibriCount.build_downstream"]], "build_downstream() (s3prl.problem.common.hearmaestro method)": [[51, "s3prl.problem.common.HearMaestro.build_downstream"]], "build_downstream() (s3prl.problem.common.hearnsynth5hr method)": [[51, "s3prl.problem.common.HearNsynth5hr.build_downstream"]], "build_downstream() (s3prl.problem.common.hearstroke method)": [[51, "s3prl.problem.common.HearStroke.build_downstream"]], "build_downstream() (s3prl.problem.common.heartonic method)": [[51, "s3prl.problem.common.HearTonic.build_downstream"]], "build_downstream() (s3prl.problem.common.hearvocal method)": [[51, "s3prl.problem.common.HearVocal.build_downstream"]], "build_downstream() (s3prl.problem.common.hearvoxlingual method)": [[51, "s3prl.problem.common.HearVoxLingual.build_downstream"]], "build_downstream() (s3prl.problem.common.superber method)": [[51, "s3prl.problem.common.SuperbER.build_downstream"]], "build_downstream() (s3prl.problem.common.superbic method)": [[51, "s3prl.problem.common.SuperbIC.build_downstream"]], "build_downstream() (s3prl.problem.common.superbks method)": [[51, "s3prl.problem.common.SuperbKS.build_downstream"]], "build_downstream() (s3prl.problem.common.superbsid method)": [[51, "s3prl.problem.common.SuperbSID.build_downstream"]], "build_encoder() (s3prl.problem.common.hearbeijingopera method)": [[51, "s3prl.problem.common.HearBeijingOpera.build_encoder"]], "build_encoder() (s3prl.problem.common.hearcremad method)": [[51, "s3prl.problem.common.HearCremaD.build_encoder"]], "build_encoder() (s3prl.problem.common.heardcase2016task2 method)": [[51, "s3prl.problem.common.HearDcase2016Task2.build_encoder"]], "build_encoder() (s3prl.problem.common.hearesc50 method)": [[51, "s3prl.problem.common.HearESC50.build_encoder"]], "build_encoder() (s3prl.problem.common.hearfsd method)": [[51, "s3prl.problem.common.HearFSD.build_encoder"]], "build_encoder() (s3prl.problem.common.heargsc5hr method)": [[51, "s3prl.problem.common.HearGSC5hr.build_encoder"]], "build_encoder() (s3prl.problem.common.heargtzan method)": [[51, "s3prl.problem.common.HearGtzan.build_encoder"]], "build_encoder() (s3prl.problem.common.heargtzanmusicspeech method)": [[51, "s3prl.problem.common.HearGtzanMusicSpeech.build_encoder"]], "build_encoder() (s3prl.problem.common.heargunshot method)": [[51, "s3prl.problem.common.HearGunshot.build_encoder"]], "build_encoder() (s3prl.problem.common.hearlibricount method)": [[51, "s3prl.problem.common.HearLibriCount.build_encoder"]], "build_encoder() (s3prl.problem.common.hearmaestro method)": [[51, "s3prl.problem.common.HearMaestro.build_encoder"]], "build_encoder() (s3prl.problem.common.hearnsynth5hr method)": [[51, "s3prl.problem.common.HearNsynth5hr.build_encoder"]], "build_encoder() (s3prl.problem.common.hearstroke method)": [[51, "s3prl.problem.common.HearStroke.build_encoder"]], "build_encoder() (s3prl.problem.common.heartonic method)": [[51, "s3prl.problem.common.HearTonic.build_encoder"]], "build_encoder() (s3prl.problem.common.hearvocal method)": [[51, "s3prl.problem.common.HearVocal.build_encoder"]], "build_encoder() (s3prl.problem.common.hearvoxlingual method)": [[51, "s3prl.problem.common.HearVoxLingual.build_encoder"]], "build_encoder() (s3prl.problem.common.superber method)": [[51, "s3prl.problem.common.SuperbER.build_encoder"]], "build_encoder() (s3prl.problem.common.superbic method)": [[51, "s3prl.problem.common.SuperbIC.build_encoder"]], "build_encoder() (s3prl.problem.common.superbks method)": [[51, "s3prl.problem.common.SuperbKS.build_encoder"]], "build_encoder() (s3prl.problem.common.superbsid method)": [[51, "s3prl.problem.common.SuperbSID.build_encoder"]], "build_featurizer() (s3prl.problem.common.hearbeijingopera method)": [[51, "s3prl.problem.common.HearBeijingOpera.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hearcremad method)": [[51, "s3prl.problem.common.HearCremaD.build_featurizer"]], "build_featurizer() (s3prl.problem.common.heardcase2016task2 method)": [[51, "s3prl.problem.common.HearDcase2016Task2.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hearesc50 method)": [[51, "s3prl.problem.common.HearESC50.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hearfsd method)": [[51, "s3prl.problem.common.HearFSD.build_featurizer"]], "build_featurizer() (s3prl.problem.common.heargsc5hr method)": [[51, "s3prl.problem.common.HearGSC5hr.build_featurizer"]], "build_featurizer() (s3prl.problem.common.heargtzan method)": [[51, "s3prl.problem.common.HearGtzan.build_featurizer"]], "build_featurizer() (s3prl.problem.common.heargtzanmusicspeech method)": [[51, "s3prl.problem.common.HearGtzanMusicSpeech.build_featurizer"]], "build_featurizer() (s3prl.problem.common.heargunshot method)": [[51, "s3prl.problem.common.HearGunshot.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hearlibricount method)": [[51, "s3prl.problem.common.HearLibriCount.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hearmaestro method)": [[51, "s3prl.problem.common.HearMaestro.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hearnsynth5hr method)": [[51, "s3prl.problem.common.HearNsynth5hr.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hearstroke method)": [[51, "s3prl.problem.common.HearStroke.build_featurizer"]], "build_featurizer() (s3prl.problem.common.heartonic method)": [[51, "s3prl.problem.common.HearTonic.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hearvocal method)": [[51, "s3prl.problem.common.HearVocal.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hearvoxlingual method)": [[51, "s3prl.problem.common.HearVoxLingual.build_featurizer"]], "build_featurizer() (s3prl.problem.common.superber method)": [[51, "s3prl.problem.common.SuperbER.build_featurizer"]], "build_featurizer() (s3prl.problem.common.superbic method)": [[51, "s3prl.problem.common.SuperbIC.build_featurizer"]], "build_featurizer() (s3prl.problem.common.superbks method)": [[51, "s3prl.problem.common.SuperbKS.build_featurizer"]], "build_featurizer() (s3prl.problem.common.superbsid method)": [[51, "s3prl.problem.common.SuperbSID.build_featurizer"]], "build_model() (s3prl.problem.common.hearbeijingopera method)": [[51, "s3prl.problem.common.HearBeijingOpera.build_model"]], "build_model() (s3prl.problem.common.hearcremad method)": [[51, "s3prl.problem.common.HearCremaD.build_model"]], "build_model() (s3prl.problem.common.heardcase2016task2 method)": [[51, "s3prl.problem.common.HearDcase2016Task2.build_model"]], "build_model() (s3prl.problem.common.hearesc50 method)": [[51, "s3prl.problem.common.HearESC50.build_model"]], "build_model() (s3prl.problem.common.hearfsd method)": [[51, "s3prl.problem.common.HearFSD.build_model"]], "build_model() (s3prl.problem.common.heargsc5hr method)": [[51, "s3prl.problem.common.HearGSC5hr.build_model"]], "build_model() (s3prl.problem.common.heargtzan method)": [[51, "s3prl.problem.common.HearGtzan.build_model"]], "build_model() (s3prl.problem.common.heargtzanmusicspeech method)": [[51, "s3prl.problem.common.HearGtzanMusicSpeech.build_model"]], "build_model() (s3prl.problem.common.heargunshot method)": [[51, "s3prl.problem.common.HearGunshot.build_model"]], "build_model() (s3prl.problem.common.hearlibricount method)": [[51, "s3prl.problem.common.HearLibriCount.build_model"]], "build_model() (s3prl.problem.common.hearmaestro method)": [[51, "s3prl.problem.common.HearMaestro.build_model"]], "build_model() (s3prl.problem.common.hearnsynth5hr method)": [[51, "s3prl.problem.common.HearNsynth5hr.build_model"]], "build_model() (s3prl.problem.common.hearstroke method)": [[51, "s3prl.problem.common.HearStroke.build_model"]], "build_model() (s3prl.problem.common.heartonic method)": [[51, "s3prl.problem.common.HearTonic.build_model"]], "build_model() (s3prl.problem.common.hearvocal method)": [[51, "s3prl.problem.common.HearVocal.build_model"]], "build_model() (s3prl.problem.common.hearvoxlingual method)": [[51, "s3prl.problem.common.HearVoxLingual.build_model"]], "build_model() (s3prl.problem.common.superber method)": [[51, "s3prl.problem.common.SuperbER.build_model"]], "build_model() (s3prl.problem.common.superbic method)": [[51, "s3prl.problem.common.SuperbIC.build_model"]], "build_model() (s3prl.problem.common.superbks method)": [[51, "s3prl.problem.common.SuperbKS.build_model"]], "build_model() (s3prl.problem.common.superbsid method)": [[51, "s3prl.problem.common.SuperbSID.build_model"]], "build_optimizer() (s3prl.problem.common.hearbeijingopera method)": [[51, "s3prl.problem.common.HearBeijingOpera.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hearcremad method)": [[51, "s3prl.problem.common.HearCremaD.build_optimizer"]], "build_optimizer() (s3prl.problem.common.heardcase2016task2 method)": [[51, "s3prl.problem.common.HearDcase2016Task2.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hearesc50 method)": [[51, "s3prl.problem.common.HearESC50.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hearfsd method)": [[51, "s3prl.problem.common.HearFSD.build_optimizer"]], "build_optimizer() (s3prl.problem.common.heargsc5hr method)": [[51, "s3prl.problem.common.HearGSC5hr.build_optimizer"]], "build_optimizer() (s3prl.problem.common.heargtzan method)": [[51, "s3prl.problem.common.HearGtzan.build_optimizer"]], "build_optimizer() (s3prl.problem.common.heargtzanmusicspeech method)": [[51, "s3prl.problem.common.HearGtzanMusicSpeech.build_optimizer"]], "build_optimizer() (s3prl.problem.common.heargunshot method)": [[51, "s3prl.problem.common.HearGunshot.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hearlibricount method)": [[51, "s3prl.problem.common.HearLibriCount.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hearmaestro method)": [[51, "s3prl.problem.common.HearMaestro.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hearnsynth5hr method)": [[51, "s3prl.problem.common.HearNsynth5hr.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hearstroke method)": [[51, "s3prl.problem.common.HearStroke.build_optimizer"]], "build_optimizer() (s3prl.problem.common.heartonic method)": [[51, "s3prl.problem.common.HearTonic.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hearvocal method)": [[51, "s3prl.problem.common.HearVocal.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hearvoxlingual method)": [[51, "s3prl.problem.common.HearVoxLingual.build_optimizer"]], "build_optimizer() (s3prl.problem.common.superber method)": [[51, "s3prl.problem.common.SuperbER.build_optimizer"]], "build_optimizer() (s3prl.problem.common.superbic method)": [[51, "s3prl.problem.common.SuperbIC.build_optimizer"]], "build_optimizer() (s3prl.problem.common.superbks method)": [[51, "s3prl.problem.common.SuperbKS.build_optimizer"]], "build_optimizer() (s3prl.problem.common.superbsid method)": [[51, "s3prl.problem.common.SuperbSID.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hearbeijingopera method)": [[51, "s3prl.problem.common.HearBeijingOpera.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hearcremad method)": [[51, "s3prl.problem.common.HearCremaD.build_scheduler"]], "build_scheduler() (s3prl.problem.common.heardcase2016task2 method)": [[51, "s3prl.problem.common.HearDcase2016Task2.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hearesc50 method)": [[51, "s3prl.problem.common.HearESC50.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hearfsd method)": [[51, "s3prl.problem.common.HearFSD.build_scheduler"]], "build_scheduler() (s3prl.problem.common.heargsc5hr method)": [[51, "s3prl.problem.common.HearGSC5hr.build_scheduler"]], "build_scheduler() (s3prl.problem.common.heargtzan method)": [[51, "s3prl.problem.common.HearGtzan.build_scheduler"]], "build_scheduler() (s3prl.problem.common.heargtzanmusicspeech method)": [[51, "s3prl.problem.common.HearGtzanMusicSpeech.build_scheduler"]], "build_scheduler() (s3prl.problem.common.heargunshot method)": [[51, "s3prl.problem.common.HearGunshot.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hearlibricount method)": [[51, "s3prl.problem.common.HearLibriCount.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hearmaestro method)": [[51, "s3prl.problem.common.HearMaestro.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hearnsynth5hr method)": [[51, "s3prl.problem.common.HearNsynth5hr.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hearstroke method)": [[51, "s3prl.problem.common.HearStroke.build_scheduler"]], "build_scheduler() (s3prl.problem.common.heartonic method)": [[51, "s3prl.problem.common.HearTonic.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hearvocal method)": [[51, "s3prl.problem.common.HearVocal.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hearvoxlingual method)": [[51, "s3prl.problem.common.HearVoxLingual.build_scheduler"]], "build_scheduler() (s3prl.problem.common.superber method)": [[51, "s3prl.problem.common.SuperbER.build_scheduler"]], "build_scheduler() (s3prl.problem.common.superbic method)": [[51, "s3prl.problem.common.SuperbIC.build_scheduler"]], "build_scheduler() (s3prl.problem.common.superbks method)": [[51, "s3prl.problem.common.SuperbKS.build_scheduler"]], "build_scheduler() (s3prl.problem.common.superbsid method)": [[51, "s3prl.problem.common.SuperbSID.build_scheduler"]], "build_task() (s3prl.problem.common.hearbeijingopera method)": [[51, "s3prl.problem.common.HearBeijingOpera.build_task"]], "build_task() (s3prl.problem.common.hearcremad method)": [[51, "s3prl.problem.common.HearCremaD.build_task"]], "build_task() (s3prl.problem.common.heardcase2016task2 method)": [[51, "s3prl.problem.common.HearDcase2016Task2.build_task"]], "build_task() (s3prl.problem.common.hearesc50 method)": [[51, "s3prl.problem.common.HearESC50.build_task"]], "build_task() (s3prl.problem.common.hearfsd method)": [[51, "s3prl.problem.common.HearFSD.build_task"]], "build_task() (s3prl.problem.common.heargsc5hr method)": [[51, "s3prl.problem.common.HearGSC5hr.build_task"]], "build_task() (s3prl.problem.common.heargtzan method)": [[51, "s3prl.problem.common.HearGtzan.build_task"]], "build_task() (s3prl.problem.common.heargtzanmusicspeech method)": [[51, "s3prl.problem.common.HearGtzanMusicSpeech.build_task"]], "build_task() (s3prl.problem.common.heargunshot method)": [[51, "s3prl.problem.common.HearGunshot.build_task"]], "build_task() (s3prl.problem.common.hearlibricount method)": [[51, "s3prl.problem.common.HearLibriCount.build_task"]], "build_task() (s3prl.problem.common.hearmaestro method)": [[51, "s3prl.problem.common.HearMaestro.build_task"]], "build_task() (s3prl.problem.common.hearnsynth5hr method)": [[51, "s3prl.problem.common.HearNsynth5hr.build_task"]], "build_task() (s3prl.problem.common.hearstroke method)": [[51, "s3prl.problem.common.HearStroke.build_task"]], "build_task() (s3prl.problem.common.heartonic method)": [[51, "s3prl.problem.common.HearTonic.build_task"]], "build_task() (s3prl.problem.common.hearvocal method)": [[51, "s3prl.problem.common.HearVocal.build_task"]], "build_task() (s3prl.problem.common.hearvoxlingual method)": [[51, "s3prl.problem.common.HearVoxLingual.build_task"]], "build_task() (s3prl.problem.common.superber method)": [[51, "s3prl.problem.common.SuperbER.build_task"]], "build_task() (s3prl.problem.common.superbic method)": [[51, "s3prl.problem.common.SuperbIC.build_task"]], "build_task() (s3prl.problem.common.superbks method)": [[51, "s3prl.problem.common.SuperbKS.build_task"]], "build_task() (s3prl.problem.common.superbsid method)": [[51, "s3prl.problem.common.SuperbSID.build_task"]], "build_upstream() (s3prl.problem.common.hearbeijingopera method)": [[51, "s3prl.problem.common.HearBeijingOpera.build_upstream"]], "build_upstream() (s3prl.problem.common.hearcremad method)": [[51, "s3prl.problem.common.HearCremaD.build_upstream"]], "build_upstream() (s3prl.problem.common.heardcase2016task2 method)": [[51, "s3prl.problem.common.HearDcase2016Task2.build_upstream"]], "build_upstream() (s3prl.problem.common.hearesc50 method)": [[51, "s3prl.problem.common.HearESC50.build_upstream"]], "build_upstream() (s3prl.problem.common.hearfsd method)": [[51, "s3prl.problem.common.HearFSD.build_upstream"]], "build_upstream() (s3prl.problem.common.heargsc5hr method)": [[51, "s3prl.problem.common.HearGSC5hr.build_upstream"]], "build_upstream() (s3prl.problem.common.heargtzan method)": [[51, "s3prl.problem.common.HearGtzan.build_upstream"]], "build_upstream() (s3prl.problem.common.heargtzanmusicspeech method)": [[51, "s3prl.problem.common.HearGtzanMusicSpeech.build_upstream"]], "build_upstream() (s3prl.problem.common.heargunshot method)": [[51, "s3prl.problem.common.HearGunshot.build_upstream"]], "build_upstream() (s3prl.problem.common.hearlibricount method)": [[51, "s3prl.problem.common.HearLibriCount.build_upstream"]], "build_upstream() (s3prl.problem.common.hearmaestro method)": [[51, "s3prl.problem.common.HearMaestro.build_upstream"]], "build_upstream() (s3prl.problem.common.hearnsynth5hr method)": [[51, "s3prl.problem.common.HearNsynth5hr.build_upstream"]], "build_upstream() (s3prl.problem.common.hearstroke method)": [[51, "s3prl.problem.common.HearStroke.build_upstream"]], "build_upstream() (s3prl.problem.common.heartonic method)": [[51, "s3prl.problem.common.HearTonic.build_upstream"]], "build_upstream() (s3prl.problem.common.hearvocal method)": [[51, "s3prl.problem.common.HearVocal.build_upstream"]], "build_upstream() (s3prl.problem.common.hearvoxlingual method)": [[51, "s3prl.problem.common.HearVoxLingual.build_upstream"]], "build_upstream() (s3prl.problem.common.superber method)": [[51, "s3prl.problem.common.SuperbER.build_upstream"]], "build_upstream() (s3prl.problem.common.superbic method)": [[51, "s3prl.problem.common.SuperbIC.build_upstream"]], "build_upstream() (s3prl.problem.common.superbks method)": [[51, "s3prl.problem.common.SuperbKS.build_upstream"]], "build_upstream() (s3prl.problem.common.superbsid method)": [[51, "s3prl.problem.common.SuperbSID.build_upstream"]], "default_config() (s3prl.problem.common.hearbeijingopera method)": [[51, "s3prl.problem.common.HearBeijingOpera.default_config"]], "default_config() (s3prl.problem.common.hearcremad method)": [[51, "s3prl.problem.common.HearCremaD.default_config"]], "default_config() (s3prl.problem.common.heardcase2016task2 method)": [[51, "s3prl.problem.common.HearDcase2016Task2.default_config"]], "default_config() (s3prl.problem.common.hearesc50 method)": [[51, "s3prl.problem.common.HearESC50.default_config"]], "default_config() (s3prl.problem.common.hearfsd method)": [[51, "s3prl.problem.common.HearFSD.default_config"]], "default_config() (s3prl.problem.common.heargsc5hr method)": [[51, "s3prl.problem.common.HearGSC5hr.default_config"]], "default_config() (s3prl.problem.common.heargtzan method)": [[51, "s3prl.problem.common.HearGtzan.default_config"]], "default_config() (s3prl.problem.common.heargtzanmusicspeech method)": [[51, "s3prl.problem.common.HearGtzanMusicSpeech.default_config"]], "default_config() (s3prl.problem.common.heargunshot method)": [[51, "s3prl.problem.common.HearGunshot.default_config"]], "default_config() (s3prl.problem.common.hearlibricount method)": [[51, "s3prl.problem.common.HearLibriCount.default_config"]], "default_config() (s3prl.problem.common.hearmaestro method)": [[51, "s3prl.problem.common.HearMaestro.default_config"]], "default_config() (s3prl.problem.common.hearnsynth5hr method)": [[51, "s3prl.problem.common.HearNsynth5hr.default_config"]], "default_config() (s3prl.problem.common.hearstroke method)": [[51, "s3prl.problem.common.HearStroke.default_config"]], "default_config() (s3prl.problem.common.heartonic method)": [[51, "s3prl.problem.common.HearTonic.default_config"]], "default_config() (s3prl.problem.common.hearvocal method)": [[51, "s3prl.problem.common.HearVocal.default_config"]], "default_config() (s3prl.problem.common.hearvoxlingual method)": [[51, "s3prl.problem.common.HearVoxLingual.default_config"]], "default_config() (s3prl.problem.common.superber method)": [[51, "s3prl.problem.common.SuperbER.default_config"]], "default_config() (s3prl.problem.common.superbic method)": [[51, "s3prl.problem.common.SuperbIC.default_config"]], "default_config() (s3prl.problem.common.superbks method)": [[51, "s3prl.problem.common.SuperbKS.default_config"]], "default_config() (s3prl.problem.common.superbsid method)": [[51, "s3prl.problem.common.SuperbSID.default_config"]], "evaluate() (s3prl.problem.common.hearbeijingopera method)": [[51, "s3prl.problem.common.HearBeijingOpera.evaluate"]], "evaluate() (s3prl.problem.common.hearcremad method)": [[51, "s3prl.problem.common.HearCremaD.evaluate"]], "evaluate() (s3prl.problem.common.heardcase2016task2 method)": [[51, "s3prl.problem.common.HearDcase2016Task2.evaluate"]], "evaluate() (s3prl.problem.common.hearesc50 method)": [[51, "s3prl.problem.common.HearESC50.evaluate"]], "evaluate() (s3prl.problem.common.hearfsd method)": [[51, "s3prl.problem.common.HearFSD.evaluate"]], "evaluate() (s3prl.problem.common.heargsc5hr method)": [[51, "s3prl.problem.common.HearGSC5hr.evaluate"]], "evaluate() (s3prl.problem.common.heargtzan method)": [[51, "s3prl.problem.common.HearGtzan.evaluate"]], "evaluate() (s3prl.problem.common.heargtzanmusicspeech method)": [[51, "s3prl.problem.common.HearGtzanMusicSpeech.evaluate"]], "evaluate() (s3prl.problem.common.heargunshot method)": [[51, "s3prl.problem.common.HearGunshot.evaluate"]], "evaluate() (s3prl.problem.common.hearlibricount method)": [[51, "s3prl.problem.common.HearLibriCount.evaluate"]], "evaluate() (s3prl.problem.common.hearmaestro method)": [[51, "s3prl.problem.common.HearMaestro.evaluate"]], "evaluate() (s3prl.problem.common.hearnsynth5hr method)": [[51, "s3prl.problem.common.HearNsynth5hr.evaluate"]], "evaluate() (s3prl.problem.common.hearstroke method)": [[51, "s3prl.problem.common.HearStroke.evaluate"]], "evaluate() (s3prl.problem.common.heartonic method)": [[51, "s3prl.problem.common.HearTonic.evaluate"]], "evaluate() (s3prl.problem.common.hearvocal method)": [[51, "s3prl.problem.common.HearVocal.evaluate"]], "evaluate() (s3prl.problem.common.hearvoxlingual method)": [[51, "s3prl.problem.common.HearVoxLingual.evaluate"]], "evaluate() (s3prl.problem.common.superber method)": [[51, "s3prl.problem.common.SuperbER.evaluate"]], "evaluate() (s3prl.problem.common.superbic method)": [[51, "s3prl.problem.common.SuperbIC.evaluate"]], "evaluate() (s3prl.problem.common.superbks method)": [[51, "s3prl.problem.common.SuperbKS.evaluate"]], "evaluate() (s3prl.problem.common.superbsid method)": [[51, "s3prl.problem.common.SuperbSID.evaluate"]], "get_class_from_name() (s3prl.problem.common.hearbeijingopera class method)": [[51, "s3prl.problem.common.HearBeijingOpera.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hearcremad class method)": [[51, "s3prl.problem.common.HearCremaD.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.heardcase2016task2 class method)": [[51, "s3prl.problem.common.HearDcase2016Task2.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hearesc50 class method)": [[51, "s3prl.problem.common.HearESC50.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hearfsd class method)": [[51, "s3prl.problem.common.HearFSD.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.heargsc5hr class method)": [[51, "s3prl.problem.common.HearGSC5hr.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.heargtzan class method)": [[51, "s3prl.problem.common.HearGtzan.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.heargtzanmusicspeech class method)": [[51, "s3prl.problem.common.HearGtzanMusicSpeech.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.heargunshot class method)": [[51, "s3prl.problem.common.HearGunshot.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hearlibricount class method)": [[51, "s3prl.problem.common.HearLibriCount.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hearmaestro class method)": [[51, "s3prl.problem.common.HearMaestro.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hearnsynth5hr class method)": [[51, "s3prl.problem.common.HearNsynth5hr.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hearstroke class method)": [[51, "s3prl.problem.common.HearStroke.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.heartonic class method)": [[51, "s3prl.problem.common.HearTonic.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hearvocal class method)": [[51, "s3prl.problem.common.HearVocal.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hearvoxlingual class method)": [[51, "s3prl.problem.common.HearVoxLingual.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.superber class method)": [[51, "s3prl.problem.common.SuperbER.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.superbic class method)": [[51, "s3prl.problem.common.SuperbIC.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.superbks class method)": [[51, "s3prl.problem.common.SuperbKS.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.superbsid class method)": [[51, "s3prl.problem.common.SuperbSID.get_class_from_name"]], "load_model() (s3prl.problem.common.hearbeijingopera method)": [[51, "s3prl.problem.common.HearBeijingOpera.load_model"]], "load_model() (s3prl.problem.common.hearcremad method)": [[51, "s3prl.problem.common.HearCremaD.load_model"]], "load_model() (s3prl.problem.common.heardcase2016task2 method)": [[51, "s3prl.problem.common.HearDcase2016Task2.load_model"]], "load_model() (s3prl.problem.common.hearesc50 method)": [[51, "s3prl.problem.common.HearESC50.load_model"]], "load_model() (s3prl.problem.common.hearfsd method)": [[51, "s3prl.problem.common.HearFSD.load_model"]], "load_model() (s3prl.problem.common.heargsc5hr method)": [[51, "s3prl.problem.common.HearGSC5hr.load_model"]], "load_model() (s3prl.problem.common.heargtzan method)": [[51, "s3prl.problem.common.HearGtzan.load_model"]], "load_model() (s3prl.problem.common.heargtzanmusicspeech method)": [[51, "s3prl.problem.common.HearGtzanMusicSpeech.load_model"]], "load_model() (s3prl.problem.common.heargunshot method)": [[51, "s3prl.problem.common.HearGunshot.load_model"]], "load_model() (s3prl.problem.common.hearlibricount method)": [[51, "s3prl.problem.common.HearLibriCount.load_model"]], "load_model() (s3prl.problem.common.hearmaestro method)": [[51, "s3prl.problem.common.HearMaestro.load_model"]], "load_model() (s3prl.problem.common.hearnsynth5hr method)": [[51, "s3prl.problem.common.HearNsynth5hr.load_model"]], "load_model() (s3prl.problem.common.hearstroke method)": [[51, "s3prl.problem.common.HearStroke.load_model"]], "load_model() (s3prl.problem.common.heartonic method)": [[51, "s3prl.problem.common.HearTonic.load_model"]], "load_model() (s3prl.problem.common.hearvocal method)": [[51, "s3prl.problem.common.HearVocal.load_model"]], "load_model() (s3prl.problem.common.hearvoxlingual method)": [[51, "s3prl.problem.common.HearVoxLingual.load_model"]], "load_model() (s3prl.problem.common.superber method)": [[51, "s3prl.problem.common.SuperbER.load_model"]], "load_model() (s3prl.problem.common.superbic method)": [[51, "s3prl.problem.common.SuperbIC.load_model"]], "load_model() (s3prl.problem.common.superbks method)": [[51, "s3prl.problem.common.SuperbKS.load_model"]], "load_model() (s3prl.problem.common.superbsid method)": [[51, "s3prl.problem.common.SuperbSID.load_model"]], "load_model_and_task() (s3prl.problem.common.hearbeijingopera method)": [[51, "s3prl.problem.common.HearBeijingOpera.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hearcremad method)": [[51, "s3prl.problem.common.HearCremaD.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.heardcase2016task2 method)": [[51, "s3prl.problem.common.HearDcase2016Task2.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hearesc50 method)": [[51, "s3prl.problem.common.HearESC50.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hearfsd method)": [[51, "s3prl.problem.common.HearFSD.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.heargsc5hr method)": [[51, "s3prl.problem.common.HearGSC5hr.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.heargtzan method)": [[51, "s3prl.problem.common.HearGtzan.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.heargtzanmusicspeech method)": [[51, "s3prl.problem.common.HearGtzanMusicSpeech.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.heargunshot method)": [[51, "s3prl.problem.common.HearGunshot.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hearlibricount method)": [[51, "s3prl.problem.common.HearLibriCount.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hearmaestro method)": [[51, "s3prl.problem.common.HearMaestro.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hearnsynth5hr method)": [[51, "s3prl.problem.common.HearNsynth5hr.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hearstroke method)": [[51, "s3prl.problem.common.HearStroke.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.heartonic method)": [[51, "s3prl.problem.common.HearTonic.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hearvocal method)": [[51, "s3prl.problem.common.HearVocal.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hearvoxlingual method)": [[51, "s3prl.problem.common.HearVoxLingual.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.superber method)": [[51, "s3prl.problem.common.SuperbER.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.superbic method)": [[51, "s3prl.problem.common.SuperbIC.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.superbks method)": [[51, "s3prl.problem.common.SuperbKS.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.superbsid method)": [[51, "s3prl.problem.common.SuperbSID.load_model_and_task"]], "load_task() (s3prl.problem.common.hearbeijingopera method)": [[51, "s3prl.problem.common.HearBeijingOpera.load_task"]], "load_task() (s3prl.problem.common.hearcremad method)": [[51, "s3prl.problem.common.HearCremaD.load_task"]], "load_task() (s3prl.problem.common.heardcase2016task2 method)": [[51, "s3prl.problem.common.HearDcase2016Task2.load_task"]], "load_task() (s3prl.problem.common.hearesc50 method)": [[51, "s3prl.problem.common.HearESC50.load_task"]], "load_task() (s3prl.problem.common.hearfsd method)": [[51, "s3prl.problem.common.HearFSD.load_task"]], "load_task() (s3prl.problem.common.heargsc5hr method)": [[51, "s3prl.problem.common.HearGSC5hr.load_task"]], "load_task() (s3prl.problem.common.heargtzan method)": [[51, "s3prl.problem.common.HearGtzan.load_task"]], "load_task() (s3prl.problem.common.heargtzanmusicspeech method)": [[51, "s3prl.problem.common.HearGtzanMusicSpeech.load_task"]], "load_task() (s3prl.problem.common.heargunshot method)": [[51, "s3prl.problem.common.HearGunshot.load_task"]], "load_task() (s3prl.problem.common.hearlibricount method)": [[51, "s3prl.problem.common.HearLibriCount.load_task"]], "load_task() (s3prl.problem.common.hearmaestro method)": [[51, "s3prl.problem.common.HearMaestro.load_task"]], "load_task() (s3prl.problem.common.hearnsynth5hr method)": [[51, "s3prl.problem.common.HearNsynth5hr.load_task"]], "load_task() (s3prl.problem.common.hearstroke method)": [[51, "s3prl.problem.common.HearStroke.load_task"]], "load_task() (s3prl.problem.common.heartonic method)": [[51, "s3prl.problem.common.HearTonic.load_task"]], "load_task() (s3prl.problem.common.hearvocal method)": [[51, "s3prl.problem.common.HearVocal.load_task"]], "load_task() (s3prl.problem.common.hearvoxlingual method)": [[51, "s3prl.problem.common.HearVoxLingual.load_task"]], "load_task() (s3prl.problem.common.superber method)": [[51, "s3prl.problem.common.SuperbER.load_task"]], "load_task() (s3prl.problem.common.superbic method)": [[51, "s3prl.problem.common.SuperbIC.load_task"]], "load_task() (s3prl.problem.common.superbks method)": [[51, "s3prl.problem.common.SuperbKS.load_task"]], "load_task() (s3prl.problem.common.superbsid method)": [[51, "s3prl.problem.common.SuperbSID.load_task"]], "main() (s3prl.problem.common.hearbeijingopera method)": [[51, "s3prl.problem.common.HearBeijingOpera.main"]], "main() (s3prl.problem.common.hearcremad method)": [[51, "s3prl.problem.common.HearCremaD.main"]], "main() (s3prl.problem.common.heardcase2016task2 method)": [[51, "s3prl.problem.common.HearDcase2016Task2.main"]], "main() (s3prl.problem.common.hearesc50 method)": [[51, "s3prl.problem.common.HearESC50.main"]], "main() (s3prl.problem.common.hearfsd method)": [[51, "s3prl.problem.common.HearFSD.main"]], "main() (s3prl.problem.common.heargsc5hr method)": [[51, "s3prl.problem.common.HearGSC5hr.main"]], "main() (s3prl.problem.common.heargtzan method)": [[51, "s3prl.problem.common.HearGtzan.main"]], "main() (s3prl.problem.common.heargtzanmusicspeech method)": [[51, "s3prl.problem.common.HearGtzanMusicSpeech.main"]], "main() (s3prl.problem.common.heargunshot method)": [[51, "s3prl.problem.common.HearGunshot.main"]], "main() (s3prl.problem.common.hearlibricount method)": [[51, "s3prl.problem.common.HearLibriCount.main"]], "main() (s3prl.problem.common.hearmaestro method)": [[51, "s3prl.problem.common.HearMaestro.main"]], "main() (s3prl.problem.common.hearnsynth5hr method)": [[51, "s3prl.problem.common.HearNsynth5hr.main"]], "main() (s3prl.problem.common.hearstroke method)": [[51, "s3prl.problem.common.HearStroke.main"]], "main() (s3prl.problem.common.heartonic method)": [[51, "s3prl.problem.common.HearTonic.main"]], "main() (s3prl.problem.common.hearvocal method)": [[51, "s3prl.problem.common.HearVocal.main"]], "main() (s3prl.problem.common.hearvoxlingual method)": [[51, "s3prl.problem.common.HearVoxLingual.main"]], "main() (s3prl.problem.common.superber method)": [[51, "s3prl.problem.common.SuperbER.main"]], "main() (s3prl.problem.common.superbic method)": [[51, "s3prl.problem.common.SuperbIC.main"]], "main() (s3prl.problem.common.superbks method)": [[51, "s3prl.problem.common.SuperbKS.main"]], "main() (s3prl.problem.common.superbsid method)": [[51, "s3prl.problem.common.SuperbSID.main"]], "prepare_data() (s3prl.problem.common.hearbeijingopera method)": [[51, "s3prl.problem.common.HearBeijingOpera.prepare_data"]], "prepare_data() (s3prl.problem.common.hearcremad method)": [[51, "s3prl.problem.common.HearCremaD.prepare_data"]], "prepare_data() (s3prl.problem.common.heardcase2016task2 method)": [[51, "s3prl.problem.common.HearDcase2016Task2.prepare_data"]], "prepare_data() (s3prl.problem.common.hearesc50 method)": [[51, "s3prl.problem.common.HearESC50.prepare_data"]], "prepare_data() (s3prl.problem.common.hearfsd method)": [[51, "s3prl.problem.common.HearFSD.prepare_data"]], "prepare_data() (s3prl.problem.common.heargsc5hr method)": [[51, "s3prl.problem.common.HearGSC5hr.prepare_data"]], "prepare_data() (s3prl.problem.common.heargtzan method)": [[51, "s3prl.problem.common.HearGtzan.prepare_data"]], "prepare_data() (s3prl.problem.common.heargtzanmusicspeech method)": [[51, "s3prl.problem.common.HearGtzanMusicSpeech.prepare_data"]], "prepare_data() (s3prl.problem.common.heargunshot method)": [[51, "s3prl.problem.common.HearGunshot.prepare_data"]], "prepare_data() (s3prl.problem.common.hearlibricount method)": [[51, "s3prl.problem.common.HearLibriCount.prepare_data"]], "prepare_data() (s3prl.problem.common.hearmaestro method)": [[51, "s3prl.problem.common.HearMaestro.prepare_data"]], "prepare_data() (s3prl.problem.common.hearnsynth5hr method)": [[51, "s3prl.problem.common.HearNsynth5hr.prepare_data"]], "prepare_data() (s3prl.problem.common.hearstroke method)": [[51, "s3prl.problem.common.HearStroke.prepare_data"]], "prepare_data() (s3prl.problem.common.heartonic method)": [[51, "s3prl.problem.common.HearTonic.prepare_data"]], "prepare_data() (s3prl.problem.common.hearvocal method)": [[51, "s3prl.problem.common.HearVocal.prepare_data"]], "prepare_data() (s3prl.problem.common.hearvoxlingual method)": [[51, "s3prl.problem.common.HearVoxLingual.prepare_data"]], "prepare_data() (s3prl.problem.common.superber method)": [[51, "s3prl.problem.common.SuperbER.prepare_data"]], "prepare_data() (s3prl.problem.common.superbic method)": [[51, "s3prl.problem.common.SuperbIC.prepare_data"]], "prepare_data() (s3prl.problem.common.superbks method)": [[51, "s3prl.problem.common.SuperbKS.prepare_data"]], "prepare_data() (s3prl.problem.common.superbsid method)": [[51, "s3prl.problem.common.SuperbSID.prepare_data"]], "run() (s3prl.problem.common.hearbeijingopera method)": [[51, "s3prl.problem.common.HearBeijingOpera.run"]], "run() (s3prl.problem.common.hearcremad method)": [[51, "s3prl.problem.common.HearCremaD.run"]], "run() (s3prl.problem.common.heardcase2016task2 method)": [[51, "s3prl.problem.common.HearDcase2016Task2.run"]], "run() (s3prl.problem.common.hearesc50 method)": [[51, "s3prl.problem.common.HearESC50.run"]], "run() (s3prl.problem.common.hearfsd method)": [[51, "s3prl.problem.common.HearFSD.run"]], "run() (s3prl.problem.common.heargsc5hr method)": [[51, "s3prl.problem.common.HearGSC5hr.run"]], "run() (s3prl.problem.common.heargtzan method)": [[51, "s3prl.problem.common.HearGtzan.run"]], "run() (s3prl.problem.common.heargtzanmusicspeech method)": [[51, "s3prl.problem.common.HearGtzanMusicSpeech.run"]], "run() (s3prl.problem.common.heargunshot method)": [[51, "s3prl.problem.common.HearGunshot.run"]], "run() (s3prl.problem.common.hearlibricount method)": [[51, "s3prl.problem.common.HearLibriCount.run"]], "run() (s3prl.problem.common.hearmaestro method)": [[51, "s3prl.problem.common.HearMaestro.run"]], "run() (s3prl.problem.common.hearnsynth5hr method)": [[51, "s3prl.problem.common.HearNsynth5hr.run"]], "run() (s3prl.problem.common.hearstroke method)": [[51, "s3prl.problem.common.HearStroke.run"]], "run() (s3prl.problem.common.heartonic method)": [[51, "s3prl.problem.common.HearTonic.run"]], "run() (s3prl.problem.common.hearvocal method)": [[51, "s3prl.problem.common.HearVocal.run"]], "run() (s3prl.problem.common.hearvoxlingual method)": [[51, "s3prl.problem.common.HearVoxLingual.run"]], "run() (s3prl.problem.common.superber method)": [[51, "s3prl.problem.common.SuperbER.run"]], "run() (s3prl.problem.common.superbic method)": [[51, "s3prl.problem.common.SuperbIC.run"]], "run() (s3prl.problem.common.superbks method)": [[51, "s3prl.problem.common.SuperbKS.run"]], "run() (s3prl.problem.common.superbsid method)": [[51, "s3prl.problem.common.SuperbSID.run"]], "s3prl.problem.common": [[51, "module-s3prl.problem.common"]], "save_model() (s3prl.problem.common.hearbeijingopera method)": [[51, "s3prl.problem.common.HearBeijingOpera.save_model"]], "save_model() (s3prl.problem.common.hearcremad method)": [[51, "s3prl.problem.common.HearCremaD.save_model"]], "save_model() (s3prl.problem.common.heardcase2016task2 method)": [[51, "s3prl.problem.common.HearDcase2016Task2.save_model"]], "save_model() (s3prl.problem.common.hearesc50 method)": [[51, "s3prl.problem.common.HearESC50.save_model"]], "save_model() (s3prl.problem.common.hearfsd method)": [[51, "s3prl.problem.common.HearFSD.save_model"]], "save_model() (s3prl.problem.common.heargsc5hr method)": [[51, "s3prl.problem.common.HearGSC5hr.save_model"]], "save_model() (s3prl.problem.common.heargtzan method)": [[51, "s3prl.problem.common.HearGtzan.save_model"]], "save_model() (s3prl.problem.common.heargtzanmusicspeech method)": [[51, "s3prl.problem.common.HearGtzanMusicSpeech.save_model"]], "save_model() (s3prl.problem.common.heargunshot method)": [[51, "s3prl.problem.common.HearGunshot.save_model"]], "save_model() (s3prl.problem.common.hearlibricount method)": [[51, "s3prl.problem.common.HearLibriCount.save_model"]], "save_model() (s3prl.problem.common.hearmaestro method)": [[51, "s3prl.problem.common.HearMaestro.save_model"]], "save_model() (s3prl.problem.common.hearnsynth5hr method)": [[51, "s3prl.problem.common.HearNsynth5hr.save_model"]], "save_model() (s3prl.problem.common.hearstroke method)": [[51, "s3prl.problem.common.HearStroke.save_model"]], "save_model() (s3prl.problem.common.heartonic method)": [[51, "s3prl.problem.common.HearTonic.save_model"]], "save_model() (s3prl.problem.common.hearvocal method)": [[51, "s3prl.problem.common.HearVocal.save_model"]], "save_model() (s3prl.problem.common.hearvoxlingual method)": [[51, "s3prl.problem.common.HearVoxLingual.save_model"]], "save_model() (s3prl.problem.common.superber method)": [[51, "s3prl.problem.common.SuperbER.save_model"]], "save_model() (s3prl.problem.common.superbic method)": [[51, "s3prl.problem.common.SuperbIC.save_model"]], "save_model() (s3prl.problem.common.superbks method)": [[51, "s3prl.problem.common.SuperbKS.save_model"]], "save_model() (s3prl.problem.common.superbsid method)": [[51, "s3prl.problem.common.SuperbSID.save_model"]], "save_task() (s3prl.problem.common.hearbeijingopera method)": [[51, "s3prl.problem.common.HearBeijingOpera.save_task"]], "save_task() (s3prl.problem.common.hearcremad method)": [[51, "s3prl.problem.common.HearCremaD.save_task"]], "save_task() (s3prl.problem.common.heardcase2016task2 method)": [[51, "s3prl.problem.common.HearDcase2016Task2.save_task"]], "save_task() (s3prl.problem.common.hearesc50 method)": [[51, "s3prl.problem.common.HearESC50.save_task"]], "save_task() (s3prl.problem.common.hearfsd method)": [[51, "s3prl.problem.common.HearFSD.save_task"]], "save_task() (s3prl.problem.common.heargsc5hr method)": [[51, "s3prl.problem.common.HearGSC5hr.save_task"]], "save_task() (s3prl.problem.common.heargtzan method)": [[51, "s3prl.problem.common.HearGtzan.save_task"]], "save_task() (s3prl.problem.common.heargtzanmusicspeech method)": [[51, "s3prl.problem.common.HearGtzanMusicSpeech.save_task"]], "save_task() (s3prl.problem.common.heargunshot method)": [[51, "s3prl.problem.common.HearGunshot.save_task"]], "save_task() (s3prl.problem.common.hearlibricount method)": [[51, "s3prl.problem.common.HearLibriCount.save_task"]], "save_task() (s3prl.problem.common.hearmaestro method)": [[51, "s3prl.problem.common.HearMaestro.save_task"]], "save_task() (s3prl.problem.common.hearnsynth5hr method)": [[51, "s3prl.problem.common.HearNsynth5hr.save_task"]], "save_task() (s3prl.problem.common.hearstroke method)": [[51, "s3prl.problem.common.HearStroke.save_task"]], "save_task() (s3prl.problem.common.heartonic method)": [[51, "s3prl.problem.common.HearTonic.save_task"]], "save_task() (s3prl.problem.common.hearvocal method)": [[51, "s3prl.problem.common.HearVocal.save_task"]], "save_task() (s3prl.problem.common.hearvoxlingual method)": [[51, "s3prl.problem.common.HearVoxLingual.save_task"]], "save_task() (s3prl.problem.common.superber method)": [[51, "s3prl.problem.common.SuperbER.save_task"]], "save_task() (s3prl.problem.common.superbic method)": [[51, "s3prl.problem.common.SuperbIC.save_task"]], "save_task() (s3prl.problem.common.superbks method)": [[51, "s3prl.problem.common.SuperbKS.save_task"]], "save_task() (s3prl.problem.common.superbsid method)": [[51, "s3prl.problem.common.SuperbSID.save_task"]], "train() (s3prl.problem.common.hearbeijingopera method)": [[51, "s3prl.problem.common.HearBeijingOpera.train"]], "train() (s3prl.problem.common.hearcremad method)": [[51, "s3prl.problem.common.HearCremaD.train"]], "train() (s3prl.problem.common.heardcase2016task2 method)": [[51, "s3prl.problem.common.HearDcase2016Task2.train"]], "train() (s3prl.problem.common.hearesc50 method)": [[51, "s3prl.problem.common.HearESC50.train"]], "train() (s3prl.problem.common.hearfsd method)": [[51, "s3prl.problem.common.HearFSD.train"]], "train() (s3prl.problem.common.heargsc5hr method)": [[51, "s3prl.problem.common.HearGSC5hr.train"]], "train() (s3prl.problem.common.heargtzan method)": [[51, "s3prl.problem.common.HearGtzan.train"]], "train() (s3prl.problem.common.heargtzanmusicspeech method)": [[51, "s3prl.problem.common.HearGtzanMusicSpeech.train"]], "train() (s3prl.problem.common.heargunshot method)": [[51, "s3prl.problem.common.HearGunshot.train"]], "train() (s3prl.problem.common.hearlibricount method)": [[51, "s3prl.problem.common.HearLibriCount.train"]], "train() (s3prl.problem.common.hearmaestro method)": [[51, "s3prl.problem.common.HearMaestro.train"]], "train() (s3prl.problem.common.hearnsynth5hr method)": [[51, "s3prl.problem.common.HearNsynth5hr.train"]], "train() (s3prl.problem.common.hearstroke method)": [[51, "s3prl.problem.common.HearStroke.train"]], "train() (s3prl.problem.common.heartonic method)": [[51, "s3prl.problem.common.HearTonic.train"]], "train() (s3prl.problem.common.hearvocal method)": [[51, "s3prl.problem.common.HearVocal.train"]], "train() (s3prl.problem.common.hearvoxlingual method)": [[51, "s3prl.problem.common.HearVoxLingual.train"]], "train() (s3prl.problem.common.superber method)": [[51, "s3prl.problem.common.SuperbER.train"]], "train() (s3prl.problem.common.superbic method)": [[51, "s3prl.problem.common.SuperbIC.train"]], "train() (s3prl.problem.common.superbks method)": [[51, "s3prl.problem.common.SuperbKS.train"]], "train() (s3prl.problem.common.superbsid method)": [[51, "s3prl.problem.common.SuperbSID.train"]], "hearbeijingopera (class in s3prl.problem.common.hear_beijing_opera)": [[52, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera"]], "hearesc50 (class in s3prl.problem.common.hear_beijing_opera)": [[52, "s3prl.problem.common.hear_beijing_opera.HearESC50"]], "build_batch_sampler() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearESC50.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearESC50.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearESC50.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearESC50.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearESC50.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearESC50.build_featurizer"]], "build_model() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.build_model"]], "build_model() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearESC50.build_model"]], "build_optimizer() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearESC50.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearESC50.build_scheduler"]], "build_task() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.build_task"]], "build_task() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearESC50.build_task"]], "build_upstream() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearESC50.build_upstream"]], "default_config() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.default_config"]], "default_config() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearESC50.default_config"]], "evaluate() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.evaluate"]], "evaluate() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearESC50.evaluate"]], "get_class_from_name() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera class method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_beijing_opera.hearesc50 class method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearESC50.get_class_from_name"]], "load_model() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.load_model"]], "load_model() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearESC50.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearESC50.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.load_task"]], "load_task() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearESC50.load_task"]], "main() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.main"]], "main() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearESC50.main"]], "prepare_data() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearESC50.prepare_data"]], "run() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.run"]], "run() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearESC50.run"]], "s3prl.problem.common.hear_beijing_opera": [[52, "module-s3prl.problem.common.hear_beijing_opera"]], "save_model() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.save_model"]], "save_model() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearESC50.save_model"]], "save_task() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.save_task"]], "save_task() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearESC50.save_task"]], "train() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.train"]], "train() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[52, "s3prl.problem.common.hear_beijing_opera.HearESC50.train"]], "hearcremad (class in s3prl.problem.common.hear_cremad)": [[53, "s3prl.problem.common.hear_cremad.HearCremaD"]], "hearesc50 (class in s3prl.problem.common.hear_cremad)": [[53, "s3prl.problem.common.hear_cremad.HearESC50"]], "build_batch_sampler() (s3prl.problem.common.hear_cremad.hearcremad method)": [[53, "s3prl.problem.common.hear_cremad.HearCremaD.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[53, "s3prl.problem.common.hear_cremad.HearESC50.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_cremad.hearcremad method)": [[53, "s3prl.problem.common.hear_cremad.HearCremaD.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[53, "s3prl.problem.common.hear_cremad.HearESC50.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_cremad.hearcremad method)": [[53, "s3prl.problem.common.hear_cremad.HearCremaD.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[53, "s3prl.problem.common.hear_cremad.HearESC50.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_cremad.hearcremad method)": [[53, "s3prl.problem.common.hear_cremad.HearCremaD.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[53, "s3prl.problem.common.hear_cremad.HearESC50.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_cremad.hearcremad method)": [[53, "s3prl.problem.common.hear_cremad.HearCremaD.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[53, "s3prl.problem.common.hear_cremad.HearESC50.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_cremad.hearcremad method)": [[53, "s3prl.problem.common.hear_cremad.HearCremaD.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[53, "s3prl.problem.common.hear_cremad.HearESC50.build_featurizer"]], "build_model() (s3prl.problem.common.hear_cremad.hearcremad method)": [[53, "s3prl.problem.common.hear_cremad.HearCremaD.build_model"]], "build_model() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[53, "s3prl.problem.common.hear_cremad.HearESC50.build_model"]], "build_optimizer() (s3prl.problem.common.hear_cremad.hearcremad method)": [[53, "s3prl.problem.common.hear_cremad.HearCremaD.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[53, "s3prl.problem.common.hear_cremad.HearESC50.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_cremad.hearcremad method)": [[53, "s3prl.problem.common.hear_cremad.HearCremaD.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[53, "s3prl.problem.common.hear_cremad.HearESC50.build_scheduler"]], "build_task() (s3prl.problem.common.hear_cremad.hearcremad method)": [[53, "s3prl.problem.common.hear_cremad.HearCremaD.build_task"]], "build_task() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[53, "s3prl.problem.common.hear_cremad.HearESC50.build_task"]], "build_upstream() (s3prl.problem.common.hear_cremad.hearcremad method)": [[53, "s3prl.problem.common.hear_cremad.HearCremaD.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[53, "s3prl.problem.common.hear_cremad.HearESC50.build_upstream"]], "default_config() (s3prl.problem.common.hear_cremad.hearcremad method)": [[53, "s3prl.problem.common.hear_cremad.HearCremaD.default_config"]], "default_config() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[53, "s3prl.problem.common.hear_cremad.HearESC50.default_config"]], "evaluate() (s3prl.problem.common.hear_cremad.hearcremad method)": [[53, "s3prl.problem.common.hear_cremad.HearCremaD.evaluate"]], "evaluate() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[53, "s3prl.problem.common.hear_cremad.HearESC50.evaluate"]], "get_class_from_name() (s3prl.problem.common.hear_cremad.hearcremad class method)": [[53, "s3prl.problem.common.hear_cremad.HearCremaD.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_cremad.hearesc50 class method)": [[53, "s3prl.problem.common.hear_cremad.HearESC50.get_class_from_name"]], "load_model() (s3prl.problem.common.hear_cremad.hearcremad method)": [[53, "s3prl.problem.common.hear_cremad.HearCremaD.load_model"]], "load_model() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[53, "s3prl.problem.common.hear_cremad.HearESC50.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_cremad.hearcremad method)": [[53, "s3prl.problem.common.hear_cremad.HearCremaD.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[53, "s3prl.problem.common.hear_cremad.HearESC50.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_cremad.hearcremad method)": [[53, "s3prl.problem.common.hear_cremad.HearCremaD.load_task"]], "load_task() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[53, "s3prl.problem.common.hear_cremad.HearESC50.load_task"]], "main() (s3prl.problem.common.hear_cremad.hearcremad method)": [[53, "s3prl.problem.common.hear_cremad.HearCremaD.main"]], "main() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[53, "s3prl.problem.common.hear_cremad.HearESC50.main"]], "prepare_data() (s3prl.problem.common.hear_cremad.hearcremad method)": [[53, "s3prl.problem.common.hear_cremad.HearCremaD.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[53, "s3prl.problem.common.hear_cremad.HearESC50.prepare_data"]], "run() (s3prl.problem.common.hear_cremad.hearcremad method)": [[53, "s3prl.problem.common.hear_cremad.HearCremaD.run"]], "run() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[53, "s3prl.problem.common.hear_cremad.HearESC50.run"]], "s3prl.problem.common.hear_cremad": [[53, "module-s3prl.problem.common.hear_cremad"]], "save_model() (s3prl.problem.common.hear_cremad.hearcremad method)": [[53, "s3prl.problem.common.hear_cremad.HearCremaD.save_model"]], "save_model() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[53, "s3prl.problem.common.hear_cremad.HearESC50.save_model"]], "save_task() (s3prl.problem.common.hear_cremad.hearcremad method)": [[53, "s3prl.problem.common.hear_cremad.HearCremaD.save_task"]], "save_task() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[53, "s3prl.problem.common.hear_cremad.HearESC50.save_task"]], "train() (s3prl.problem.common.hear_cremad.hearcremad method)": [[53, "s3prl.problem.common.hear_cremad.HearCremaD.train"]], "train() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[53, "s3prl.problem.common.hear_cremad.HearESC50.train"]], "eventpredictiontask (class in s3prl.problem.common.hear_dcase_2016_task2)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask"]], "fixedbatchsizebatchsampler (class in s3prl.problem.common.hear_dcase_2016_task2)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.FixedBatchSizeBatchSampler"]], "groupsameitemsampler (class in s3prl.problem.common.hear_dcase_2016_task2)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.GroupSameItemSampler"]], "heardcase2016task2 (class in s3prl.problem.common.hear_dcase_2016_task2)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2"]], "hearfsd (class in s3prl.problem.common.hear_dcase_2016_task2)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD"]], "heartimestampdatapipe (class in s3prl.problem.common.hear_dcase_2016_task2)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearTimestampDatapipe"]], "ordereddict (class in s3prl.problem.common.hear_dcase_2016_task2)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.OrderedDict"]], "path (class in s3prl.problem.common.hear_dcase_2016_task2)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path"]], "absolute() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.absolute"]], "anchor (s3prl.problem.common.hear_dcase_2016_task2.path property)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.anchor"]], "as_posix() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.as_posix"]], "as_uri() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.as_uri"]], "build_batch_sampler() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.build_featurizer"]], "build_model() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.build_model"]], "build_model() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.build_model"]], "build_optimizer() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.build_scheduler"]], "build_task() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.build_task"]], "build_task() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.build_task"]], "build_upstream() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.build_upstream"]], "chmod() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.chmod"]], "clear() (s3prl.problem.common.hear_dcase_2016_task2.ordereddict method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.OrderedDict.clear"]], "clear() (s3prl.problem.common.hear_dcase_2016_task2.defaultdict method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.defaultdict.clear"]], "copy() (s3prl.problem.common.hear_dcase_2016_task2.ordereddict method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.OrderedDict.copy"]], "copy() (s3prl.problem.common.hear_dcase_2016_task2.defaultdict method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.defaultdict.copy"]], "cwd() (s3prl.problem.common.hear_dcase_2016_task2.path class method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.cwd"]], "dataclass() (in module s3prl.problem.common.hear_dcase_2016_task2)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.dataclass"]], "dcase_2016_task2() (in module s3prl.problem.common.hear_dcase_2016_task2)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.dcase_2016_task2"]], "deepcopy() (in module s3prl.problem.common.hear_dcase_2016_task2)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.deepcopy"]], "default_config() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.default_config"]], "default_config() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.default_config"]], "default_factory (s3prl.problem.common.hear_dcase_2016_task2.defaultdict attribute)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.defaultdict.default_factory"]], "defaultdict (class in s3prl.problem.common.hear_dcase_2016_task2)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.defaultdict"]], "drive (s3prl.problem.common.hear_dcase_2016_task2.path property)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.drive"]], "dump_patches (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask attribute)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.dump_patches"]], "eval_reduction() (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.eval_reduction"]], "evaluate() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.evaluate"]], "evaluate() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.evaluate"]], "exists() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.exists"]], "expanduser() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.expanduser"]], "forward() (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.forward"]], "forward() (s3prl.problem.common.hear_dcase_2016_task2.heartimestampdatapipe method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearTimestampDatapipe.forward"]], "fromkeys() (s3prl.problem.common.hear_dcase_2016_task2.ordereddict method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.OrderedDict.fromkeys"]], "fromkeys() (s3prl.problem.common.hear_dcase_2016_task2.defaultdict method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.defaultdict.fromkeys"]], "get() (s3prl.problem.common.hear_dcase_2016_task2.ordereddict method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.OrderedDict.get"]], "get() (s3prl.problem.common.hear_dcase_2016_task2.defaultdict method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.defaultdict.get"]], "get_class_from_name() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 class method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd class method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.get_class_from_name"]], "get_state() (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.get_state"]], "glob() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.glob"]], "group() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.group"]], "home() (s3prl.problem.common.hear_dcase_2016_task2.path class method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.home"]], "is_absolute() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.is_absolute"]], "is_block_device() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.is_block_device"]], "is_char_device() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.is_char_device"]], "is_dir() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.is_dir"]], "is_fifo() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.is_fifo"]], "is_file() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.is_file"]], "is_mount() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.is_mount"]], "is_reserved() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.is_reserved"]], "is_socket() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.is_socket"]], "is_symlink() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.is_symlink"]], "items() (s3prl.problem.common.hear_dcase_2016_task2.ordereddict method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.OrderedDict.items"]], "items() (s3prl.problem.common.hear_dcase_2016_task2.defaultdict method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.defaultdict.items"]], "iterdir() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.iterdir"]], "joinpath() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.joinpath"]], "keys() (s3prl.problem.common.hear_dcase_2016_task2.ordereddict method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.OrderedDict.keys"]], "keys() (s3prl.problem.common.hear_dcase_2016_task2.defaultdict method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.defaultdict.keys"]], "lchmod() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.lchmod"]], "link_to() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.link_to"]], "load_model() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.load_model"]], "load_model() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.load_task"]], "load_task() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.load_task"]], "log_scores() (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.log_scores"]], "lstat() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.lstat"]], "main() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.main"]], "main() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.main"]], "match() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.match"]], "mkdir() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.mkdir"]], "move_to_end() (s3prl.problem.common.hear_dcase_2016_task2.ordereddict method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.OrderedDict.move_to_end"]], "name (s3prl.problem.common.hear_dcase_2016_task2.path property)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.name"]], "open() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.open"]], "owner() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.owner"]], "parent (s3prl.problem.common.hear_dcase_2016_task2.path property)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.parent"]], "parents (s3prl.problem.common.hear_dcase_2016_task2.path property)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.parents"]], "parse_cached_results() (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.parse_cached_results"]], "parts (s3prl.problem.common.hear_dcase_2016_task2.path property)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.parts"]], "pop() (s3prl.problem.common.hear_dcase_2016_task2.ordereddict method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.OrderedDict.pop"]], "pop() (s3prl.problem.common.hear_dcase_2016_task2.defaultdict method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.defaultdict.pop"]], "popitem() (s3prl.problem.common.hear_dcase_2016_task2.ordereddict method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.OrderedDict.popitem"]], "popitem() (s3prl.problem.common.hear_dcase_2016_task2.defaultdict method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.defaultdict.popitem"]], "predict() (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.predict"]], "prepare_data() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.prepare_data"]], "read_bytes() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.read_bytes"]], "read_text() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.read_text"]], "reduction() (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.reduction"]], "relative_to() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.relative_to"]], "rename() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.rename"]], "replace() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.replace"]], "resolve() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.resolve"]], "rglob() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.rglob"]], "rmdir() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.rmdir"]], "root (s3prl.problem.common.hear_dcase_2016_task2.path property)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.root"]], "run() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.run"]], "run() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.run"]], "s3prl.problem.common.hear_dcase_2016_task2": [[54, "module-s3prl.problem.common.hear_dcase_2016_task2"]], "samefile() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.samefile"]], "save_model() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.save_model"]], "save_model() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.save_model"]], "save_task() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.save_task"]], "save_task() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.save_task"]], "set_epoch() (s3prl.problem.common.hear_dcase_2016_task2.fixedbatchsizebatchsampler method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.FixedBatchSizeBatchSampler.set_epoch"]], "set_epoch() (s3prl.problem.common.hear_dcase_2016_task2.groupsameitemsampler method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.GroupSameItemSampler.set_epoch"]], "set_state() (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.set_state"]], "setdefault() (s3prl.problem.common.hear_dcase_2016_task2.ordereddict method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.OrderedDict.setdefault"]], "setdefault() (s3prl.problem.common.hear_dcase_2016_task2.defaultdict method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.defaultdict.setdefault"]], "stat() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.stat"]], "stem (s3prl.problem.common.hear_dcase_2016_task2.path property)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.stem"]], "suffix (s3prl.problem.common.hear_dcase_2016_task2.path property)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.suffix"]], "suffixes (s3prl.problem.common.hear_dcase_2016_task2.path property)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.suffixes"]], "symlink_to() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.symlink_to"]], "test_reduction() (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.test_reduction"]], "test_step() (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.test_step"]], "touch() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.touch"]], "train() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.train"]], "train() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.train"]], "train_reduction() (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.train_reduction"]], "train_step() (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.train_step"]], "training (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask attribute)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.training"]], "unlink() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.unlink"]], "update() (s3prl.problem.common.hear_dcase_2016_task2.ordereddict method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.OrderedDict.update"]], "update() (s3prl.problem.common.hear_dcase_2016_task2.defaultdict method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.defaultdict.update"]], "valid_reduction() (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.valid_reduction"]], "valid_step() (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.valid_step"]], "values() (s3prl.problem.common.hear_dcase_2016_task2.ordereddict method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.OrderedDict.values"]], "values() (s3prl.problem.common.hear_dcase_2016_task2.defaultdict method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.defaultdict.values"]], "with_name() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.with_name"]], "with_suffix() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.with_suffix"]], "write_bytes() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.write_bytes"]], "write_text() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[54, "s3prl.problem.common.hear_dcase_2016_task2.Path.write_text"]], "hearesc50 (class in s3prl.problem.common.hear_esc50)": [[55, "s3prl.problem.common.hear_esc50.HearESC50"]], "hearfsd (class in s3prl.problem.common.hear_esc50)": [[55, "s3prl.problem.common.hear_esc50.HearFSD"]], "path (class in s3prl.problem.common.hear_esc50)": [[55, "s3prl.problem.common.hear_esc50.Path"]], "absolute() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.absolute"]], "anchor (s3prl.problem.common.hear_esc50.path property)": [[55, "s3prl.problem.common.hear_esc50.Path.anchor"]], "as_posix() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.as_posix"]], "as_uri() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.as_uri"]], "build_batch_sampler() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[55, "s3prl.problem.common.hear_esc50.HearESC50.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_esc50.hearfsd method)": [[55, "s3prl.problem.common.hear_esc50.HearFSD.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[55, "s3prl.problem.common.hear_esc50.HearESC50.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_esc50.hearfsd method)": [[55, "s3prl.problem.common.hear_esc50.HearFSD.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[55, "s3prl.problem.common.hear_esc50.HearESC50.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_esc50.hearfsd method)": [[55, "s3prl.problem.common.hear_esc50.HearFSD.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[55, "s3prl.problem.common.hear_esc50.HearESC50.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_esc50.hearfsd method)": [[55, "s3prl.problem.common.hear_esc50.HearFSD.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[55, "s3prl.problem.common.hear_esc50.HearESC50.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_esc50.hearfsd method)": [[55, "s3prl.problem.common.hear_esc50.HearFSD.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[55, "s3prl.problem.common.hear_esc50.HearESC50.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_esc50.hearfsd method)": [[55, "s3prl.problem.common.hear_esc50.HearFSD.build_featurizer"]], "build_model() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[55, "s3prl.problem.common.hear_esc50.HearESC50.build_model"]], "build_model() (s3prl.problem.common.hear_esc50.hearfsd method)": [[55, "s3prl.problem.common.hear_esc50.HearFSD.build_model"]], "build_optimizer() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[55, "s3prl.problem.common.hear_esc50.HearESC50.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_esc50.hearfsd method)": [[55, "s3prl.problem.common.hear_esc50.HearFSD.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[55, "s3prl.problem.common.hear_esc50.HearESC50.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_esc50.hearfsd method)": [[55, "s3prl.problem.common.hear_esc50.HearFSD.build_scheduler"]], "build_task() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[55, "s3prl.problem.common.hear_esc50.HearESC50.build_task"]], "build_task() (s3prl.problem.common.hear_esc50.hearfsd method)": [[55, "s3prl.problem.common.hear_esc50.HearFSD.build_task"]], "build_upstream() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[55, "s3prl.problem.common.hear_esc50.HearESC50.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_esc50.hearfsd method)": [[55, "s3prl.problem.common.hear_esc50.HearFSD.build_upstream"]], "chmod() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.chmod"]], "clear() (s3prl.problem.common.hear_esc50.defaultdict method)": [[55, "s3prl.problem.common.hear_esc50.defaultdict.clear"]], "copy() (s3prl.problem.common.hear_esc50.defaultdict method)": [[55, "s3prl.problem.common.hear_esc50.defaultdict.copy"]], "cwd() (s3prl.problem.common.hear_esc50.path class method)": [[55, "s3prl.problem.common.hear_esc50.Path.cwd"]], "default_config() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[55, "s3prl.problem.common.hear_esc50.HearESC50.default_config"]], "default_config() (s3prl.problem.common.hear_esc50.hearfsd method)": [[55, "s3prl.problem.common.hear_esc50.HearFSD.default_config"]], "default_factory (s3prl.problem.common.hear_esc50.defaultdict attribute)": [[55, "s3prl.problem.common.hear_esc50.defaultdict.default_factory"]], "defaultdict (class in s3prl.problem.common.hear_esc50)": [[55, "s3prl.problem.common.hear_esc50.defaultdict"]], "drive (s3prl.problem.common.hear_esc50.path property)": [[55, "s3prl.problem.common.hear_esc50.Path.drive"]], "evaluate() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[55, "s3prl.problem.common.hear_esc50.HearESC50.evaluate"]], "evaluate() (s3prl.problem.common.hear_esc50.hearfsd method)": [[55, "s3prl.problem.common.hear_esc50.HearFSD.evaluate"]], "exists() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.exists"]], "expanduser() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.expanduser"]], "fromkeys() (s3prl.problem.common.hear_esc50.defaultdict method)": [[55, "s3prl.problem.common.hear_esc50.defaultdict.fromkeys"]], "get() (s3prl.problem.common.hear_esc50.defaultdict method)": [[55, "s3prl.problem.common.hear_esc50.defaultdict.get"]], "get_class_from_name() (s3prl.problem.common.hear_esc50.hearesc50 class method)": [[55, "s3prl.problem.common.hear_esc50.HearESC50.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_esc50.hearfsd class method)": [[55, "s3prl.problem.common.hear_esc50.HearFSD.get_class_from_name"]], "glob() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.glob"]], "group() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.group"]], "hear_scene_kfolds() (in module s3prl.problem.common.hear_esc50)": [[55, "s3prl.problem.common.hear_esc50.hear_scene_kfolds"]], "home() (s3prl.problem.common.hear_esc50.path class method)": [[55, "s3prl.problem.common.hear_esc50.Path.home"]], "is_absolute() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.is_absolute"]], "is_block_device() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.is_block_device"]], "is_char_device() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.is_char_device"]], "is_dir() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.is_dir"]], "is_fifo() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.is_fifo"]], "is_file() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.is_file"]], "is_mount() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.is_mount"]], "is_reserved() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.is_reserved"]], "is_socket() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.is_socket"]], "is_symlink() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.is_symlink"]], "items() (s3prl.problem.common.hear_esc50.defaultdict method)": [[55, "s3prl.problem.common.hear_esc50.defaultdict.items"]], "iterdir() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.iterdir"]], "joinpath() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.joinpath"]], "keys() (s3prl.problem.common.hear_esc50.defaultdict method)": [[55, "s3prl.problem.common.hear_esc50.defaultdict.keys"]], "lchmod() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.lchmod"]], "link_to() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.link_to"]], "load_model() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[55, "s3prl.problem.common.hear_esc50.HearESC50.load_model"]], "load_model() (s3prl.problem.common.hear_esc50.hearfsd method)": [[55, "s3prl.problem.common.hear_esc50.HearFSD.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[55, "s3prl.problem.common.hear_esc50.HearESC50.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_esc50.hearfsd method)": [[55, "s3prl.problem.common.hear_esc50.HearFSD.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[55, "s3prl.problem.common.hear_esc50.HearESC50.load_task"]], "load_task() (s3prl.problem.common.hear_esc50.hearfsd method)": [[55, "s3prl.problem.common.hear_esc50.HearFSD.load_task"]], "lstat() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.lstat"]], "main() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[55, "s3prl.problem.common.hear_esc50.HearESC50.main"]], "main() (s3prl.problem.common.hear_esc50.hearfsd method)": [[55, "s3prl.problem.common.hear_esc50.HearFSD.main"]], "match() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.match"]], "mkdir() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.mkdir"]], "name (s3prl.problem.common.hear_esc50.path property)": [[55, "s3prl.problem.common.hear_esc50.Path.name"]], "open() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.open"]], "owner() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.owner"]], "parent (s3prl.problem.common.hear_esc50.path property)": [[55, "s3prl.problem.common.hear_esc50.Path.parent"]], "parents (s3prl.problem.common.hear_esc50.path property)": [[55, "s3prl.problem.common.hear_esc50.Path.parents"]], "parts (s3prl.problem.common.hear_esc50.path property)": [[55, "s3prl.problem.common.hear_esc50.Path.parts"]], "pop() (s3prl.problem.common.hear_esc50.defaultdict method)": [[55, "s3prl.problem.common.hear_esc50.defaultdict.pop"]], "popitem() (s3prl.problem.common.hear_esc50.defaultdict method)": [[55, "s3prl.problem.common.hear_esc50.defaultdict.popitem"]], "prepare_data() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[55, "s3prl.problem.common.hear_esc50.HearESC50.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_esc50.hearfsd method)": [[55, "s3prl.problem.common.hear_esc50.HearFSD.prepare_data"]], "read_bytes() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.read_bytes"]], "read_text() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.read_text"]], "relative_to() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.relative_to"]], "rename() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.rename"]], "replace() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.replace"]], "resolve() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.resolve"]], "rglob() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.rglob"]], "rmdir() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.rmdir"]], "root (s3prl.problem.common.hear_esc50.path property)": [[55, "s3prl.problem.common.hear_esc50.Path.root"]], "run() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[55, "s3prl.problem.common.hear_esc50.HearESC50.run"]], "run() (s3prl.problem.common.hear_esc50.hearfsd method)": [[55, "s3prl.problem.common.hear_esc50.HearFSD.run"]], "s3prl.problem.common.hear_esc50": [[55, "module-s3prl.problem.common.hear_esc50"]], "samefile() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.samefile"]], "save_model() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[55, "s3prl.problem.common.hear_esc50.HearESC50.save_model"]], "save_model() (s3prl.problem.common.hear_esc50.hearfsd method)": [[55, "s3prl.problem.common.hear_esc50.HearFSD.save_model"]], "save_task() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[55, "s3prl.problem.common.hear_esc50.HearESC50.save_task"]], "save_task() (s3prl.problem.common.hear_esc50.hearfsd method)": [[55, "s3prl.problem.common.hear_esc50.HearFSD.save_task"]], "setdefault() (s3prl.problem.common.hear_esc50.defaultdict method)": [[55, "s3prl.problem.common.hear_esc50.defaultdict.setdefault"]], "stat() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.stat"]], "stem (s3prl.problem.common.hear_esc50.path property)": [[55, "s3prl.problem.common.hear_esc50.Path.stem"]], "suffix (s3prl.problem.common.hear_esc50.path property)": [[55, "s3prl.problem.common.hear_esc50.Path.suffix"]], "suffixes (s3prl.problem.common.hear_esc50.path property)": [[55, "s3prl.problem.common.hear_esc50.Path.suffixes"]], "symlink_to() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.symlink_to"]], "touch() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.touch"]], "train() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[55, "s3prl.problem.common.hear_esc50.HearESC50.train"]], "train() (s3prl.problem.common.hear_esc50.hearfsd method)": [[55, "s3prl.problem.common.hear_esc50.HearFSD.train"]], "unlink() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.unlink"]], "update() (s3prl.problem.common.hear_esc50.defaultdict method)": [[55, "s3prl.problem.common.hear_esc50.defaultdict.update"]], "values() (s3prl.problem.common.hear_esc50.defaultdict method)": [[55, "s3prl.problem.common.hear_esc50.defaultdict.values"]], "with_name() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.with_name"]], "with_suffix() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.with_suffix"]], "write_bytes() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.write_bytes"]], "write_text() (s3prl.problem.common.hear_esc50.path method)": [[55, "s3prl.problem.common.hear_esc50.Path.write_text"]], "categoryencoder (class in s3prl.problem.common.hear_fsd)": [[56, "s3prl.problem.common.hear_fsd.CategoryEncoder"]], "fixedbatchsizebatchsampler (class in s3prl.problem.common.hear_fsd)": [[56, "s3prl.problem.common.hear_fsd.FixedBatchSizeBatchSampler"]], "hearfsd (class in s3prl.problem.common.hear_fsd)": [[56, "s3prl.problem.common.hear_fsd.HearFSD"]], "hearfullyconnectedprediction (class in s3prl.problem.common.hear_fsd)": [[56, "s3prl.problem.common.hear_fsd.HearFullyConnectedPrediction"]], "hearscenepipe (class in s3prl.problem.common.hear_fsd)": [[56, "s3prl.problem.common.hear_fsd.HearScenePipe"]], "ordereddict (class in s3prl.problem.common.hear_fsd)": [[56, "s3prl.problem.common.hear_fsd.OrderedDict"]], "path (class in s3prl.problem.common.hear_fsd)": [[56, "s3prl.problem.common.hear_fsd.Path"]], "scenepredictiontask (class in s3prl.problem.common.hear_fsd)": [[56, "s3prl.problem.common.hear_fsd.ScenePredictionTask"]], "superbsid (class in s3prl.problem.common.hear_fsd)": [[56, "s3prl.problem.common.hear_fsd.SuperbSID"]], "absolute() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.absolute"]], "anchor (s3prl.problem.common.hear_fsd.path property)": [[56, "s3prl.problem.common.hear_fsd.Path.anchor"]], "as_posix() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.as_posix"]], "as_uri() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.as_uri"]], "build_batch_sampler() (s3prl.problem.common.hear_fsd.hearfsd method)": [[56, "s3prl.problem.common.hear_fsd.HearFSD.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_fsd.superbsid method)": [[56, "s3prl.problem.common.hear_fsd.SuperbSID.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_fsd.hearfsd method)": [[56, "s3prl.problem.common.hear_fsd.HearFSD.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_fsd.superbsid method)": [[56, "s3prl.problem.common.hear_fsd.SuperbSID.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_fsd.hearfsd method)": [[56, "s3prl.problem.common.hear_fsd.HearFSD.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_fsd.superbsid method)": [[56, "s3prl.problem.common.hear_fsd.SuperbSID.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_fsd.hearfsd method)": [[56, "s3prl.problem.common.hear_fsd.HearFSD.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_fsd.superbsid method)": [[56, "s3prl.problem.common.hear_fsd.SuperbSID.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_fsd.hearfsd method)": [[56, "s3prl.problem.common.hear_fsd.HearFSD.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_fsd.superbsid method)": [[56, "s3prl.problem.common.hear_fsd.SuperbSID.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_fsd.hearfsd method)": [[56, "s3prl.problem.common.hear_fsd.HearFSD.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_fsd.superbsid method)": [[56, "s3prl.problem.common.hear_fsd.SuperbSID.build_featurizer"]], "build_model() (s3prl.problem.common.hear_fsd.hearfsd method)": [[56, "s3prl.problem.common.hear_fsd.HearFSD.build_model"]], "build_model() (s3prl.problem.common.hear_fsd.superbsid method)": [[56, "s3prl.problem.common.hear_fsd.SuperbSID.build_model"]], "build_optimizer() (s3prl.problem.common.hear_fsd.hearfsd method)": [[56, "s3prl.problem.common.hear_fsd.HearFSD.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_fsd.superbsid method)": [[56, "s3prl.problem.common.hear_fsd.SuperbSID.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_fsd.hearfsd method)": [[56, "s3prl.problem.common.hear_fsd.HearFSD.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_fsd.superbsid method)": [[56, "s3prl.problem.common.hear_fsd.SuperbSID.build_scheduler"]], "build_task() (s3prl.problem.common.hear_fsd.hearfsd method)": [[56, "s3prl.problem.common.hear_fsd.HearFSD.build_task"]], "build_task() (s3prl.problem.common.hear_fsd.superbsid method)": [[56, "s3prl.problem.common.hear_fsd.SuperbSID.build_task"]], "build_upstream() (s3prl.problem.common.hear_fsd.hearfsd method)": [[56, "s3prl.problem.common.hear_fsd.HearFSD.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_fsd.superbsid method)": [[56, "s3prl.problem.common.hear_fsd.SuperbSID.build_upstream"]], "chmod() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.chmod"]], "clear() (s3prl.problem.common.hear_fsd.ordereddict method)": [[56, "s3prl.problem.common.hear_fsd.OrderedDict.clear"]], "clear() (s3prl.problem.common.hear_fsd.defaultdict method)": [[56, "s3prl.problem.common.hear_fsd.defaultdict.clear"]], "copy() (s3prl.problem.common.hear_fsd.ordereddict method)": [[56, "s3prl.problem.common.hear_fsd.OrderedDict.copy"]], "copy() (s3prl.problem.common.hear_fsd.defaultdict method)": [[56, "s3prl.problem.common.hear_fsd.defaultdict.copy"]], "cwd() (s3prl.problem.common.hear_fsd.path class method)": [[56, "s3prl.problem.common.hear_fsd.Path.cwd"]], "dataclass() (in module s3prl.problem.common.hear_fsd)": [[56, "s3prl.problem.common.hear_fsd.dataclass"]], "decode() (s3prl.problem.common.hear_fsd.categoryencoder method)": [[56, "s3prl.problem.common.hear_fsd.CategoryEncoder.decode"]], "default_config() (s3prl.problem.common.hear_fsd.hearfsd method)": [[56, "s3prl.problem.common.hear_fsd.HearFSD.default_config"]], "default_config() (s3prl.problem.common.hear_fsd.superbsid method)": [[56, "s3prl.problem.common.hear_fsd.SuperbSID.default_config"]], "default_factory (s3prl.problem.common.hear_fsd.defaultdict attribute)": [[56, "s3prl.problem.common.hear_fsd.defaultdict.default_factory"]], "defaultdict (class in s3prl.problem.common.hear_fsd)": [[56, "s3prl.problem.common.hear_fsd.defaultdict"]], "drive (s3prl.problem.common.hear_fsd.path property)": [[56, "s3prl.problem.common.hear_fsd.Path.drive"]], "dump_patches (s3prl.problem.common.hear_fsd.hearfullyconnectedprediction attribute)": [[56, "s3prl.problem.common.hear_fsd.HearFullyConnectedPrediction.dump_patches"]], "dump_patches (s3prl.problem.common.hear_fsd.scenepredictiontask attribute)": [[56, "s3prl.problem.common.hear_fsd.ScenePredictionTask.dump_patches"]], "encode() (s3prl.problem.common.hear_fsd.categoryencoder method)": [[56, "s3prl.problem.common.hear_fsd.CategoryEncoder.encode"]], "evaluate() (s3prl.problem.common.hear_fsd.hearfsd method)": [[56, "s3prl.problem.common.hear_fsd.HearFSD.evaluate"]], "evaluate() (s3prl.problem.common.hear_fsd.superbsid method)": [[56, "s3prl.problem.common.hear_fsd.SuperbSID.evaluate"]], "exists() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.exists"]], "expanduser() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.expanduser"]], "forward() (s3prl.problem.common.hear_fsd.hearfullyconnectedprediction method)": [[56, "s3prl.problem.common.hear_fsd.HearFullyConnectedPrediction.forward"]], "forward() (s3prl.problem.common.hear_fsd.hearscenepipe method)": [[56, "s3prl.problem.common.hear_fsd.HearScenePipe.forward"]], "forward() (s3prl.problem.common.hear_fsd.scenepredictiontask method)": [[56, "s3prl.problem.common.hear_fsd.ScenePredictionTask.forward"]], "fromkeys() (s3prl.problem.common.hear_fsd.ordereddict method)": [[56, "s3prl.problem.common.hear_fsd.OrderedDict.fromkeys"]], "fromkeys() (s3prl.problem.common.hear_fsd.defaultdict method)": [[56, "s3prl.problem.common.hear_fsd.defaultdict.fromkeys"]], "get() (s3prl.problem.common.hear_fsd.ordereddict method)": [[56, "s3prl.problem.common.hear_fsd.OrderedDict.get"]], "get() (s3prl.problem.common.hear_fsd.defaultdict method)": [[56, "s3prl.problem.common.hear_fsd.defaultdict.get"]], "get_class_from_name() (s3prl.problem.common.hear_fsd.hearfsd class method)": [[56, "s3prl.problem.common.hear_fsd.HearFSD.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_fsd.superbsid class method)": [[56, "s3prl.problem.common.hear_fsd.SuperbSID.get_class_from_name"]], "get_state() (s3prl.problem.common.hear_fsd.scenepredictiontask method)": [[56, "s3prl.problem.common.hear_fsd.ScenePredictionTask.get_state"]], "glob() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.glob"]], "group() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.group"]], "hear_scene_trainvaltest() (in module s3prl.problem.common.hear_fsd)": [[56, "s3prl.problem.common.hear_fsd.hear_scene_trainvaltest"]], "home() (s3prl.problem.common.hear_fsd.path class method)": [[56, "s3prl.problem.common.hear_fsd.Path.home"]], "input_size (s3prl.problem.common.hear_fsd.hearfullyconnectedprediction property)": [[56, "s3prl.problem.common.hear_fsd.HearFullyConnectedPrediction.input_size"]], "is_absolute() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.is_absolute"]], "is_block_device() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.is_block_device"]], "is_char_device() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.is_char_device"]], "is_dir() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.is_dir"]], "is_fifo() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.is_fifo"]], "is_file() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.is_file"]], "is_mount() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.is_mount"]], "is_reserved() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.is_reserved"]], "is_socket() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.is_socket"]], "is_symlink() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.is_symlink"]], "items() (s3prl.problem.common.hear_fsd.ordereddict method)": [[56, "s3prl.problem.common.hear_fsd.OrderedDict.items"]], "items() (s3prl.problem.common.hear_fsd.defaultdict method)": [[56, "s3prl.problem.common.hear_fsd.defaultdict.items"]], "iterdir() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.iterdir"]], "joinpath() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.joinpath"]], "keys() (s3prl.problem.common.hear_fsd.ordereddict method)": [[56, "s3prl.problem.common.hear_fsd.OrderedDict.keys"]], "keys() (s3prl.problem.common.hear_fsd.defaultdict method)": [[56, "s3prl.problem.common.hear_fsd.defaultdict.keys"]], "lchmod() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.lchmod"]], "link_to() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.link_to"]], "load_model() (s3prl.problem.common.hear_fsd.hearfsd method)": [[56, "s3prl.problem.common.hear_fsd.HearFSD.load_model"]], "load_model() (s3prl.problem.common.hear_fsd.superbsid method)": [[56, "s3prl.problem.common.hear_fsd.SuperbSID.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_fsd.hearfsd method)": [[56, "s3prl.problem.common.hear_fsd.HearFSD.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_fsd.superbsid method)": [[56, "s3prl.problem.common.hear_fsd.SuperbSID.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_fsd.hearfsd method)": [[56, "s3prl.problem.common.hear_fsd.HearFSD.load_task"]], "load_task() (s3prl.problem.common.hear_fsd.superbsid method)": [[56, "s3prl.problem.common.hear_fsd.SuperbSID.load_task"]], "log_scores() (s3prl.problem.common.hear_fsd.scenepredictiontask method)": [[56, "s3prl.problem.common.hear_fsd.ScenePredictionTask.log_scores"]], "lstat() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.lstat"]], "main() (s3prl.problem.common.hear_fsd.hearfsd method)": [[56, "s3prl.problem.common.hear_fsd.HearFSD.main"]], "main() (s3prl.problem.common.hear_fsd.superbsid method)": [[56, "s3prl.problem.common.hear_fsd.SuperbSID.main"]], "match() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.match"]], "mkdir() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.mkdir"]], "move_to_end() (s3prl.problem.common.hear_fsd.ordereddict method)": [[56, "s3prl.problem.common.hear_fsd.OrderedDict.move_to_end"]], "name (s3prl.problem.common.hear_fsd.path property)": [[56, "s3prl.problem.common.hear_fsd.Path.name"]], "open() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.open"]], "output_size (s3prl.problem.common.hear_fsd.hearfullyconnectedprediction property)": [[56, "s3prl.problem.common.hear_fsd.HearFullyConnectedPrediction.output_size"]], "owner() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.owner"]], "parent (s3prl.problem.common.hear_fsd.path property)": [[56, "s3prl.problem.common.hear_fsd.Path.parent"]], "parents (s3prl.problem.common.hear_fsd.path property)": [[56, "s3prl.problem.common.hear_fsd.Path.parents"]], "parse_cached_results() (s3prl.problem.common.hear_fsd.scenepredictiontask method)": [[56, "s3prl.problem.common.hear_fsd.ScenePredictionTask.parse_cached_results"]], "parts (s3prl.problem.common.hear_fsd.path property)": [[56, "s3prl.problem.common.hear_fsd.Path.parts"]], "pop() (s3prl.problem.common.hear_fsd.ordereddict method)": [[56, "s3prl.problem.common.hear_fsd.OrderedDict.pop"]], "pop() (s3prl.problem.common.hear_fsd.defaultdict method)": [[56, "s3prl.problem.common.hear_fsd.defaultdict.pop"]], "popitem() (s3prl.problem.common.hear_fsd.ordereddict method)": [[56, "s3prl.problem.common.hear_fsd.OrderedDict.popitem"]], "popitem() (s3prl.problem.common.hear_fsd.defaultdict method)": [[56, "s3prl.problem.common.hear_fsd.defaultdict.popitem"]], "predict() (s3prl.problem.common.hear_fsd.scenepredictiontask method)": [[56, "s3prl.problem.common.hear_fsd.ScenePredictionTask.predict"]], "prepare_data() (s3prl.problem.common.hear_fsd.hearfsd method)": [[56, "s3prl.problem.common.hear_fsd.HearFSD.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_fsd.superbsid method)": [[56, "s3prl.problem.common.hear_fsd.SuperbSID.prepare_data"]], "read_bytes() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.read_bytes"]], "read_text() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.read_text"]], "reduction() (s3prl.problem.common.hear_fsd.scenepredictiontask method)": [[56, "s3prl.problem.common.hear_fsd.ScenePredictionTask.reduction"]], "relative_to() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.relative_to"]], "rename() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.rename"]], "replace() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.replace"]], "resolve() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.resolve"]], "rglob() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.rglob"]], "rmdir() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.rmdir"]], "root (s3prl.problem.common.hear_fsd.path property)": [[56, "s3prl.problem.common.hear_fsd.Path.root"]], "run() (s3prl.problem.common.hear_fsd.hearfsd method)": [[56, "s3prl.problem.common.hear_fsd.HearFSD.run"]], "run() (s3prl.problem.common.hear_fsd.superbsid method)": [[56, "s3prl.problem.common.hear_fsd.SuperbSID.run"]], "s3prl.problem.common.hear_fsd": [[56, "module-s3prl.problem.common.hear_fsd"]], "samefile() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.samefile"]], "save_model() (s3prl.problem.common.hear_fsd.hearfsd method)": [[56, "s3prl.problem.common.hear_fsd.HearFSD.save_model"]], "save_model() (s3prl.problem.common.hear_fsd.superbsid method)": [[56, "s3prl.problem.common.hear_fsd.SuperbSID.save_model"]], "save_task() (s3prl.problem.common.hear_fsd.hearfsd method)": [[56, "s3prl.problem.common.hear_fsd.HearFSD.save_task"]], "save_task() (s3prl.problem.common.hear_fsd.superbsid method)": [[56, "s3prl.problem.common.hear_fsd.SuperbSID.save_task"]], "set_epoch() (s3prl.problem.common.hear_fsd.fixedbatchsizebatchsampler method)": [[56, "s3prl.problem.common.hear_fsd.FixedBatchSizeBatchSampler.set_epoch"]], "set_state() (s3prl.problem.common.hear_fsd.scenepredictiontask method)": [[56, "s3prl.problem.common.hear_fsd.ScenePredictionTask.set_state"]], "setdefault() (s3prl.problem.common.hear_fsd.ordereddict method)": [[56, "s3prl.problem.common.hear_fsd.OrderedDict.setdefault"]], "setdefault() (s3prl.problem.common.hear_fsd.defaultdict method)": [[56, "s3prl.problem.common.hear_fsd.defaultdict.setdefault"]], "stat() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.stat"]], "stem (s3prl.problem.common.hear_fsd.path property)": [[56, "s3prl.problem.common.hear_fsd.Path.stem"]], "suffix (s3prl.problem.common.hear_fsd.path property)": [[56, "s3prl.problem.common.hear_fsd.Path.suffix"]], "suffixes (s3prl.problem.common.hear_fsd.path property)": [[56, "s3prl.problem.common.hear_fsd.Path.suffixes"]], "symlink_to() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.symlink_to"]], "test_reduction() (s3prl.problem.common.hear_fsd.scenepredictiontask method)": [[56, "s3prl.problem.common.hear_fsd.ScenePredictionTask.test_reduction"]], "test_step() (s3prl.problem.common.hear_fsd.scenepredictiontask method)": [[56, "s3prl.problem.common.hear_fsd.ScenePredictionTask.test_step"]], "touch() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.touch"]], "train() (s3prl.problem.common.hear_fsd.hearfsd method)": [[56, "s3prl.problem.common.hear_fsd.HearFSD.train"]], "train() (s3prl.problem.common.hear_fsd.superbsid method)": [[56, "s3prl.problem.common.hear_fsd.SuperbSID.train"]], "train_reduction() (s3prl.problem.common.hear_fsd.scenepredictiontask method)": [[56, "s3prl.problem.common.hear_fsd.ScenePredictionTask.train_reduction"]], "train_step() (s3prl.problem.common.hear_fsd.scenepredictiontask method)": [[56, "s3prl.problem.common.hear_fsd.ScenePredictionTask.train_step"]], "training (s3prl.problem.common.hear_fsd.hearfullyconnectedprediction attribute)": [[56, "s3prl.problem.common.hear_fsd.HearFullyConnectedPrediction.training"]], "training (s3prl.problem.common.hear_fsd.scenepredictiontask attribute)": [[56, "s3prl.problem.common.hear_fsd.ScenePredictionTask.training"]], "unlink() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.unlink"]], "update() (s3prl.problem.common.hear_fsd.ordereddict method)": [[56, "s3prl.problem.common.hear_fsd.OrderedDict.update"]], "update() (s3prl.problem.common.hear_fsd.defaultdict method)": [[56, "s3prl.problem.common.hear_fsd.defaultdict.update"]], "valid_reduction() (s3prl.problem.common.hear_fsd.scenepredictiontask method)": [[56, "s3prl.problem.common.hear_fsd.ScenePredictionTask.valid_reduction"]], "valid_step() (s3prl.problem.common.hear_fsd.scenepredictiontask method)": [[56, "s3prl.problem.common.hear_fsd.ScenePredictionTask.valid_step"]], "values() (s3prl.problem.common.hear_fsd.ordereddict method)": [[56, "s3prl.problem.common.hear_fsd.OrderedDict.values"]], "values() (s3prl.problem.common.hear_fsd.defaultdict method)": [[56, "s3prl.problem.common.hear_fsd.defaultdict.values"]], "with_name() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.with_name"]], "with_suffix() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.with_suffix"]], "write_bytes() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.write_bytes"]], "write_text() (s3prl.problem.common.hear_fsd.path method)": [[56, "s3prl.problem.common.hear_fsd.Path.write_text"]], "hearfsd (class in s3prl.problem.common.hear_gsc5hr)": [[57, "s3prl.problem.common.hear_gsc5hr.HearFSD"]], "heargsc5hr (class in s3prl.problem.common.hear_gsc5hr)": [[57, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr"]], "build_batch_sampler() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearFSD.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearFSD.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearFSD.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearFSD.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearFSD.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearFSD.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.build_featurizer"]], "build_model() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearFSD.build_model"]], "build_model() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.build_model"]], "build_optimizer() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearFSD.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearFSD.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.build_scheduler"]], "build_task() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearFSD.build_task"]], "build_task() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.build_task"]], "build_upstream() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearFSD.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.build_upstream"]], "default_config() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearFSD.default_config"]], "default_config() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.default_config"]], "evaluate() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearFSD.evaluate"]], "evaluate() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.evaluate"]], "get_class_from_name() (s3prl.problem.common.hear_gsc5hr.hearfsd class method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearFSD.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_gsc5hr.heargsc5hr class method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.get_class_from_name"]], "load_model() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearFSD.load_model"]], "load_model() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearFSD.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearFSD.load_task"]], "load_task() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.load_task"]], "main() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearFSD.main"]], "main() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.main"]], "prepare_data() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearFSD.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.prepare_data"]], "run() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearFSD.run"]], "run() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.run"]], "s3prl.problem.common.hear_gsc5hr": [[57, "module-s3prl.problem.common.hear_gsc5hr"]], "save_model() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearFSD.save_model"]], "save_model() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.save_model"]], "save_task() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearFSD.save_task"]], "save_task() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.save_task"]], "train() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearFSD.train"]], "train() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[57, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.train"]], "hearesc50 (class in s3prl.problem.common.hear_gtzan)": [[58, "s3prl.problem.common.hear_gtzan.HearESC50"]], "heargtzan (class in s3prl.problem.common.hear_gtzan)": [[58, "s3prl.problem.common.hear_gtzan.HearGtzan"]], "build_batch_sampler() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[58, "s3prl.problem.common.hear_gtzan.HearESC50.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[58, "s3prl.problem.common.hear_gtzan.HearGtzan.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[58, "s3prl.problem.common.hear_gtzan.HearESC50.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[58, "s3prl.problem.common.hear_gtzan.HearGtzan.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[58, "s3prl.problem.common.hear_gtzan.HearESC50.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[58, "s3prl.problem.common.hear_gtzan.HearGtzan.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[58, "s3prl.problem.common.hear_gtzan.HearESC50.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[58, "s3prl.problem.common.hear_gtzan.HearGtzan.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[58, "s3prl.problem.common.hear_gtzan.HearESC50.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[58, "s3prl.problem.common.hear_gtzan.HearGtzan.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[58, "s3prl.problem.common.hear_gtzan.HearESC50.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[58, "s3prl.problem.common.hear_gtzan.HearGtzan.build_featurizer"]], "build_model() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[58, "s3prl.problem.common.hear_gtzan.HearESC50.build_model"]], "build_model() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[58, "s3prl.problem.common.hear_gtzan.HearGtzan.build_model"]], "build_optimizer() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[58, "s3prl.problem.common.hear_gtzan.HearESC50.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[58, "s3prl.problem.common.hear_gtzan.HearGtzan.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[58, "s3prl.problem.common.hear_gtzan.HearESC50.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[58, "s3prl.problem.common.hear_gtzan.HearGtzan.build_scheduler"]], "build_task() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[58, "s3prl.problem.common.hear_gtzan.HearESC50.build_task"]], "build_task() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[58, "s3prl.problem.common.hear_gtzan.HearGtzan.build_task"]], "build_upstream() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[58, "s3prl.problem.common.hear_gtzan.HearESC50.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[58, "s3prl.problem.common.hear_gtzan.HearGtzan.build_upstream"]], "default_config() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[58, "s3prl.problem.common.hear_gtzan.HearESC50.default_config"]], "default_config() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[58, "s3prl.problem.common.hear_gtzan.HearGtzan.default_config"]], "evaluate() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[58, "s3prl.problem.common.hear_gtzan.HearESC50.evaluate"]], "evaluate() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[58, "s3prl.problem.common.hear_gtzan.HearGtzan.evaluate"]], "get_class_from_name() (s3prl.problem.common.hear_gtzan.hearesc50 class method)": [[58, "s3prl.problem.common.hear_gtzan.HearESC50.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_gtzan.heargtzan class method)": [[58, "s3prl.problem.common.hear_gtzan.HearGtzan.get_class_from_name"]], "load_model() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[58, "s3prl.problem.common.hear_gtzan.HearESC50.load_model"]], "load_model() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[58, "s3prl.problem.common.hear_gtzan.HearGtzan.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[58, "s3prl.problem.common.hear_gtzan.HearESC50.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[58, "s3prl.problem.common.hear_gtzan.HearGtzan.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[58, "s3prl.problem.common.hear_gtzan.HearESC50.load_task"]], "load_task() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[58, "s3prl.problem.common.hear_gtzan.HearGtzan.load_task"]], "main() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[58, "s3prl.problem.common.hear_gtzan.HearESC50.main"]], "main() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[58, "s3prl.problem.common.hear_gtzan.HearGtzan.main"]], "prepare_data() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[58, "s3prl.problem.common.hear_gtzan.HearESC50.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[58, "s3prl.problem.common.hear_gtzan.HearGtzan.prepare_data"]], "run() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[58, "s3prl.problem.common.hear_gtzan.HearESC50.run"]], "run() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[58, "s3prl.problem.common.hear_gtzan.HearGtzan.run"]], "s3prl.problem.common.hear_gtzan": [[58, "module-s3prl.problem.common.hear_gtzan"]], "save_model() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[58, "s3prl.problem.common.hear_gtzan.HearESC50.save_model"]], "save_model() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[58, "s3prl.problem.common.hear_gtzan.HearGtzan.save_model"]], "save_task() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[58, "s3prl.problem.common.hear_gtzan.HearESC50.save_task"]], "save_task() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[58, "s3prl.problem.common.hear_gtzan.HearGtzan.save_task"]], "train() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[58, "s3prl.problem.common.hear_gtzan.HearESC50.train"]], "train() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[58, "s3prl.problem.common.hear_gtzan.HearGtzan.train"]], "hearesc50 (class in s3prl.problem.common.hear_gtzan_music_speech)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50"]], "heargtzanmusicspeech (class in s3prl.problem.common.hear_gtzan_music_speech)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech"]], "build_batch_sampler() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.build_featurizer"]], "build_model() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.build_model"]], "build_model() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.build_model"]], "build_optimizer() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.build_scheduler"]], "build_task() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.build_task"]], "build_task() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.build_task"]], "build_upstream() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.build_upstream"]], "default_config() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.default_config"]], "default_config() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.default_config"]], "evaluate() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.evaluate"]], "evaluate() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.evaluate"]], "get_class_from_name() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 class method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech class method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.get_class_from_name"]], "load_model() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.load_model"]], "load_model() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.load_task"]], "load_task() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.load_task"]], "main() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.main"]], "main() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.main"]], "prepare_data() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.prepare_data"]], "run() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.run"]], "run() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.run"]], "s3prl.problem.common.hear_gtzan_music_speech": [[59, "module-s3prl.problem.common.hear_gtzan_music_speech"]], "save_model() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.save_model"]], "save_model() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.save_model"]], "save_task() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.save_task"]], "save_task() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.save_task"]], "train() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.train"]], "train() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[59, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.train"]], "hearesc50 (class in s3prl.problem.common.hear_gunshot)": [[60, "s3prl.problem.common.hear_gunshot.HearESC50"]], "heargunshot (class in s3prl.problem.common.hear_gunshot)": [[60, "s3prl.problem.common.hear_gunshot.HearGunshot"]], "build_batch_sampler() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[60, "s3prl.problem.common.hear_gunshot.HearESC50.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[60, "s3prl.problem.common.hear_gunshot.HearGunshot.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[60, "s3prl.problem.common.hear_gunshot.HearESC50.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[60, "s3prl.problem.common.hear_gunshot.HearGunshot.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[60, "s3prl.problem.common.hear_gunshot.HearESC50.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[60, "s3prl.problem.common.hear_gunshot.HearGunshot.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[60, "s3prl.problem.common.hear_gunshot.HearESC50.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[60, "s3prl.problem.common.hear_gunshot.HearGunshot.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[60, "s3prl.problem.common.hear_gunshot.HearESC50.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[60, "s3prl.problem.common.hear_gunshot.HearGunshot.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[60, "s3prl.problem.common.hear_gunshot.HearESC50.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[60, "s3prl.problem.common.hear_gunshot.HearGunshot.build_featurizer"]], "build_model() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[60, "s3prl.problem.common.hear_gunshot.HearESC50.build_model"]], "build_model() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[60, "s3prl.problem.common.hear_gunshot.HearGunshot.build_model"]], "build_optimizer() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[60, "s3prl.problem.common.hear_gunshot.HearESC50.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[60, "s3prl.problem.common.hear_gunshot.HearGunshot.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[60, "s3prl.problem.common.hear_gunshot.HearESC50.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[60, "s3prl.problem.common.hear_gunshot.HearGunshot.build_scheduler"]], "build_task() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[60, "s3prl.problem.common.hear_gunshot.HearESC50.build_task"]], "build_task() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[60, "s3prl.problem.common.hear_gunshot.HearGunshot.build_task"]], "build_upstream() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[60, "s3prl.problem.common.hear_gunshot.HearESC50.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[60, "s3prl.problem.common.hear_gunshot.HearGunshot.build_upstream"]], "default_config() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[60, "s3prl.problem.common.hear_gunshot.HearESC50.default_config"]], "default_config() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[60, "s3prl.problem.common.hear_gunshot.HearGunshot.default_config"]], "evaluate() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[60, "s3prl.problem.common.hear_gunshot.HearESC50.evaluate"]], "evaluate() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[60, "s3prl.problem.common.hear_gunshot.HearGunshot.evaluate"]], "get_class_from_name() (s3prl.problem.common.hear_gunshot.hearesc50 class method)": [[60, "s3prl.problem.common.hear_gunshot.HearESC50.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_gunshot.heargunshot class method)": [[60, "s3prl.problem.common.hear_gunshot.HearGunshot.get_class_from_name"]], "load_model() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[60, "s3prl.problem.common.hear_gunshot.HearESC50.load_model"]], "load_model() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[60, "s3prl.problem.common.hear_gunshot.HearGunshot.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[60, "s3prl.problem.common.hear_gunshot.HearESC50.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[60, "s3prl.problem.common.hear_gunshot.HearGunshot.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[60, "s3prl.problem.common.hear_gunshot.HearESC50.load_task"]], "load_task() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[60, "s3prl.problem.common.hear_gunshot.HearGunshot.load_task"]], "main() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[60, "s3prl.problem.common.hear_gunshot.HearESC50.main"]], "main() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[60, "s3prl.problem.common.hear_gunshot.HearGunshot.main"]], "prepare_data() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[60, "s3prl.problem.common.hear_gunshot.HearESC50.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[60, "s3prl.problem.common.hear_gunshot.HearGunshot.prepare_data"]], "run() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[60, "s3prl.problem.common.hear_gunshot.HearESC50.run"]], "run() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[60, "s3prl.problem.common.hear_gunshot.HearGunshot.run"]], "s3prl.problem.common.hear_gunshot": [[60, "module-s3prl.problem.common.hear_gunshot"]], "save_model() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[60, "s3prl.problem.common.hear_gunshot.HearESC50.save_model"]], "save_model() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[60, "s3prl.problem.common.hear_gunshot.HearGunshot.save_model"]], "save_task() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[60, "s3prl.problem.common.hear_gunshot.HearESC50.save_task"]], "save_task() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[60, "s3prl.problem.common.hear_gunshot.HearGunshot.save_task"]], "train() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[60, "s3prl.problem.common.hear_gunshot.HearESC50.train"]], "train() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[60, "s3prl.problem.common.hear_gunshot.HearGunshot.train"]], "hearesc50 (class in s3prl.problem.common.hear_libricount)": [[61, "s3prl.problem.common.hear_libricount.HearESC50"]], "hearlibricount (class in s3prl.problem.common.hear_libricount)": [[61, "s3prl.problem.common.hear_libricount.HearLibriCount"]], "build_batch_sampler() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[61, "s3prl.problem.common.hear_libricount.HearESC50.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[61, "s3prl.problem.common.hear_libricount.HearLibriCount.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[61, "s3prl.problem.common.hear_libricount.HearESC50.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[61, "s3prl.problem.common.hear_libricount.HearLibriCount.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[61, "s3prl.problem.common.hear_libricount.HearESC50.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[61, "s3prl.problem.common.hear_libricount.HearLibriCount.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[61, "s3prl.problem.common.hear_libricount.HearESC50.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[61, "s3prl.problem.common.hear_libricount.HearLibriCount.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[61, "s3prl.problem.common.hear_libricount.HearESC50.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[61, "s3prl.problem.common.hear_libricount.HearLibriCount.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[61, "s3prl.problem.common.hear_libricount.HearESC50.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[61, "s3prl.problem.common.hear_libricount.HearLibriCount.build_featurizer"]], "build_model() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[61, "s3prl.problem.common.hear_libricount.HearESC50.build_model"]], "build_model() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[61, "s3prl.problem.common.hear_libricount.HearLibriCount.build_model"]], "build_optimizer() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[61, "s3prl.problem.common.hear_libricount.HearESC50.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[61, "s3prl.problem.common.hear_libricount.HearLibriCount.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[61, "s3prl.problem.common.hear_libricount.HearESC50.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[61, "s3prl.problem.common.hear_libricount.HearLibriCount.build_scheduler"]], "build_task() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[61, "s3prl.problem.common.hear_libricount.HearESC50.build_task"]], "build_task() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[61, "s3prl.problem.common.hear_libricount.HearLibriCount.build_task"]], "build_upstream() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[61, "s3prl.problem.common.hear_libricount.HearESC50.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[61, "s3prl.problem.common.hear_libricount.HearLibriCount.build_upstream"]], "default_config() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[61, "s3prl.problem.common.hear_libricount.HearESC50.default_config"]], "default_config() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[61, "s3prl.problem.common.hear_libricount.HearLibriCount.default_config"]], "evaluate() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[61, "s3prl.problem.common.hear_libricount.HearESC50.evaluate"]], "evaluate() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[61, "s3prl.problem.common.hear_libricount.HearLibriCount.evaluate"]], "get_class_from_name() (s3prl.problem.common.hear_libricount.hearesc50 class method)": [[61, "s3prl.problem.common.hear_libricount.HearESC50.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_libricount.hearlibricount class method)": [[61, "s3prl.problem.common.hear_libricount.HearLibriCount.get_class_from_name"]], "load_model() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[61, "s3prl.problem.common.hear_libricount.HearESC50.load_model"]], "load_model() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[61, "s3prl.problem.common.hear_libricount.HearLibriCount.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[61, "s3prl.problem.common.hear_libricount.HearESC50.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[61, "s3prl.problem.common.hear_libricount.HearLibriCount.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[61, "s3prl.problem.common.hear_libricount.HearESC50.load_task"]], "load_task() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[61, "s3prl.problem.common.hear_libricount.HearLibriCount.load_task"]], "main() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[61, "s3prl.problem.common.hear_libricount.HearESC50.main"]], "main() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[61, "s3prl.problem.common.hear_libricount.HearLibriCount.main"]], "prepare_data() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[61, "s3prl.problem.common.hear_libricount.HearESC50.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[61, "s3prl.problem.common.hear_libricount.HearLibriCount.prepare_data"]], "run() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[61, "s3prl.problem.common.hear_libricount.HearESC50.run"]], "run() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[61, "s3prl.problem.common.hear_libricount.HearLibriCount.run"]], "s3prl.problem.common.hear_libricount": [[61, "module-s3prl.problem.common.hear_libricount"]], "save_model() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[61, "s3prl.problem.common.hear_libricount.HearESC50.save_model"]], "save_model() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[61, "s3prl.problem.common.hear_libricount.HearLibriCount.save_model"]], "save_task() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[61, "s3prl.problem.common.hear_libricount.HearESC50.save_task"]], "save_task() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[61, "s3prl.problem.common.hear_libricount.HearLibriCount.save_task"]], "train() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[61, "s3prl.problem.common.hear_libricount.HearESC50.train"]], "train() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[61, "s3prl.problem.common.hear_libricount.HearLibriCount.train"]], "heardcase2016task2 (class in s3prl.problem.common.hear_maestro)": [[62, "s3prl.problem.common.hear_maestro.HearDcase2016Task2"]], "hearmaestro (class in s3prl.problem.common.hear_maestro)": [[62, "s3prl.problem.common.hear_maestro.HearMaestro"]], "path (class in s3prl.problem.common.hear_maestro)": [[62, "s3prl.problem.common.hear_maestro.Path"]], "absolute() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.absolute"]], "anchor (s3prl.problem.common.hear_maestro.path property)": [[62, "s3prl.problem.common.hear_maestro.Path.anchor"]], "as_posix() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.as_posix"]], "as_uri() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.as_uri"]], "build_batch_sampler() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[62, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[62, "s3prl.problem.common.hear_maestro.HearMaestro.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[62, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[62, "s3prl.problem.common.hear_maestro.HearMaestro.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[62, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[62, "s3prl.problem.common.hear_maestro.HearMaestro.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[62, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[62, "s3prl.problem.common.hear_maestro.HearMaestro.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[62, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[62, "s3prl.problem.common.hear_maestro.HearMaestro.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[62, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[62, "s3prl.problem.common.hear_maestro.HearMaestro.build_featurizer"]], "build_model() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[62, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.build_model"]], "build_model() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[62, "s3prl.problem.common.hear_maestro.HearMaestro.build_model"]], "build_optimizer() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[62, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[62, "s3prl.problem.common.hear_maestro.HearMaestro.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[62, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[62, "s3prl.problem.common.hear_maestro.HearMaestro.build_scheduler"]], "build_task() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[62, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.build_task"]], "build_task() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[62, "s3prl.problem.common.hear_maestro.HearMaestro.build_task"]], "build_upstream() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[62, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[62, "s3prl.problem.common.hear_maestro.HearMaestro.build_upstream"]], "chmod() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.chmod"]], "clear() (s3prl.problem.common.hear_maestro.defaultdict method)": [[62, "s3prl.problem.common.hear_maestro.defaultdict.clear"]], "copy() (s3prl.problem.common.hear_maestro.defaultdict method)": [[62, "s3prl.problem.common.hear_maestro.defaultdict.copy"]], "cwd() (s3prl.problem.common.hear_maestro.path class method)": [[62, "s3prl.problem.common.hear_maestro.Path.cwd"]], "deepcopy() (in module s3prl.problem.common.hear_maestro)": [[62, "s3prl.problem.common.hear_maestro.deepcopy"]], "default_config() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[62, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.default_config"]], "default_config() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[62, "s3prl.problem.common.hear_maestro.HearMaestro.default_config"]], "default_factory (s3prl.problem.common.hear_maestro.defaultdict attribute)": [[62, "s3prl.problem.common.hear_maestro.defaultdict.default_factory"]], "defaultdict (class in s3prl.problem.common.hear_maestro)": [[62, "s3prl.problem.common.hear_maestro.defaultdict"]], "drive (s3prl.problem.common.hear_maestro.path property)": [[62, "s3prl.problem.common.hear_maestro.Path.drive"]], "evaluate() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[62, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.evaluate"]], "evaluate() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[62, "s3prl.problem.common.hear_maestro.HearMaestro.evaluate"]], "exists() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.exists"]], "expanduser() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.expanduser"]], "fromkeys() (s3prl.problem.common.hear_maestro.defaultdict method)": [[62, "s3prl.problem.common.hear_maestro.defaultdict.fromkeys"]], "get() (s3prl.problem.common.hear_maestro.defaultdict method)": [[62, "s3prl.problem.common.hear_maestro.defaultdict.get"]], "get_class_from_name() (s3prl.problem.common.hear_maestro.heardcase2016task2 class method)": [[62, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_maestro.hearmaestro class method)": [[62, "s3prl.problem.common.hear_maestro.HearMaestro.get_class_from_name"]], "glob() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.glob"]], "group() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.group"]], "home() (s3prl.problem.common.hear_maestro.path class method)": [[62, "s3prl.problem.common.hear_maestro.Path.home"]], "is_absolute() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.is_absolute"]], "is_block_device() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.is_block_device"]], "is_char_device() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.is_char_device"]], "is_dir() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.is_dir"]], "is_fifo() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.is_fifo"]], "is_file() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.is_file"]], "is_mount() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.is_mount"]], "is_reserved() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.is_reserved"]], "is_socket() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.is_socket"]], "is_symlink() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.is_symlink"]], "items() (s3prl.problem.common.hear_maestro.defaultdict method)": [[62, "s3prl.problem.common.hear_maestro.defaultdict.items"]], "iterdir() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.iterdir"]], "joinpath() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.joinpath"]], "keys() (s3prl.problem.common.hear_maestro.defaultdict method)": [[62, "s3prl.problem.common.hear_maestro.defaultdict.keys"]], "lchmod() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.lchmod"]], "link_to() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.link_to"]], "load_model() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[62, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.load_model"]], "load_model() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[62, "s3prl.problem.common.hear_maestro.HearMaestro.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[62, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[62, "s3prl.problem.common.hear_maestro.HearMaestro.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[62, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.load_task"]], "load_task() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[62, "s3prl.problem.common.hear_maestro.HearMaestro.load_task"]], "lstat() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.lstat"]], "main() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[62, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.main"]], "main() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[62, "s3prl.problem.common.hear_maestro.HearMaestro.main"]], "match() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.match"]], "mkdir() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.mkdir"]], "name (s3prl.problem.common.hear_maestro.path property)": [[62, "s3prl.problem.common.hear_maestro.Path.name"]], "open() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.open"]], "owner() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.owner"]], "parent (s3prl.problem.common.hear_maestro.path property)": [[62, "s3prl.problem.common.hear_maestro.Path.parent"]], "parents (s3prl.problem.common.hear_maestro.path property)": [[62, "s3prl.problem.common.hear_maestro.Path.parents"]], "parts (s3prl.problem.common.hear_maestro.path property)": [[62, "s3prl.problem.common.hear_maestro.Path.parts"]], "pop() (s3prl.problem.common.hear_maestro.defaultdict method)": [[62, "s3prl.problem.common.hear_maestro.defaultdict.pop"]], "popitem() (s3prl.problem.common.hear_maestro.defaultdict method)": [[62, "s3prl.problem.common.hear_maestro.defaultdict.popitem"]], "prepare_data() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[62, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[62, "s3prl.problem.common.hear_maestro.HearMaestro.prepare_data"]], "prepare_maestro() (in module s3prl.problem.common.hear_maestro)": [[62, "s3prl.problem.common.hear_maestro.prepare_maestro"]], "read_bytes() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.read_bytes"]], "read_text() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.read_text"]], "relative_to() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.relative_to"]], "rename() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.rename"]], "replace() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.replace"]], "resolve() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.resolve"]], "rglob() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.rglob"]], "rmdir() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.rmdir"]], "root (s3prl.problem.common.hear_maestro.path property)": [[62, "s3prl.problem.common.hear_maestro.Path.root"]], "run() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[62, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.run"]], "run() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[62, "s3prl.problem.common.hear_maestro.HearMaestro.run"]], "s3prl.problem.common.hear_maestro": [[62, "module-s3prl.problem.common.hear_maestro"]], "samefile() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.samefile"]], "save_model() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[62, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.save_model"]], "save_model() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[62, "s3prl.problem.common.hear_maestro.HearMaestro.save_model"]], "save_task() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[62, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.save_task"]], "save_task() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[62, "s3prl.problem.common.hear_maestro.HearMaestro.save_task"]], "setdefault() (s3prl.problem.common.hear_maestro.defaultdict method)": [[62, "s3prl.problem.common.hear_maestro.defaultdict.setdefault"]], "stat() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.stat"]], "stem (s3prl.problem.common.hear_maestro.path property)": [[62, "s3prl.problem.common.hear_maestro.Path.stem"]], "suffix (s3prl.problem.common.hear_maestro.path property)": [[62, "s3prl.problem.common.hear_maestro.Path.suffix"]], "suffixes (s3prl.problem.common.hear_maestro.path property)": [[62, "s3prl.problem.common.hear_maestro.Path.suffixes"]], "symlink_to() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.symlink_to"]], "touch() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.touch"]], "train() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[62, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.train"]], "train() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[62, "s3prl.problem.common.hear_maestro.HearMaestro.train"]], "unlink() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.unlink"]], "update() (s3prl.problem.common.hear_maestro.defaultdict method)": [[62, "s3prl.problem.common.hear_maestro.defaultdict.update"]], "values() (s3prl.problem.common.hear_maestro.defaultdict method)": [[62, "s3prl.problem.common.hear_maestro.defaultdict.values"]], "with_name() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.with_name"]], "with_suffix() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.with_suffix"]], "write_bytes() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.write_bytes"]], "write_text() (s3prl.problem.common.hear_maestro.path method)": [[62, "s3prl.problem.common.hear_maestro.Path.write_text"]], "hearfsd (class in s3prl.problem.common.hear_nsynth5hr)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearFSD"]], "hearnsynth5hr (class in s3prl.problem.common.hear_nsynth5hr)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr"]], "build_batch_sampler() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearFSD.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearFSD.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearFSD.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearFSD.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearFSD.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearFSD.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.build_featurizer"]], "build_model() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearFSD.build_model"]], "build_model() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.build_model"]], "build_optimizer() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearFSD.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearFSD.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.build_scheduler"]], "build_task() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearFSD.build_task"]], "build_task() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.build_task"]], "build_upstream() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearFSD.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.build_upstream"]], "default_config() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearFSD.default_config"]], "default_config() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.default_config"]], "evaluate() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearFSD.evaluate"]], "evaluate() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.evaluate"]], "get_class_from_name() (s3prl.problem.common.hear_nsynth5hr.hearfsd class method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearFSD.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr class method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.get_class_from_name"]], "load_model() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearFSD.load_model"]], "load_model() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearFSD.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearFSD.load_task"]], "load_task() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.load_task"]], "main() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearFSD.main"]], "main() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.main"]], "prepare_data() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearFSD.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.prepare_data"]], "run() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearFSD.run"]], "run() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.run"]], "s3prl.problem.common.hear_nsynth5hr": [[63, "module-s3prl.problem.common.hear_nsynth5hr"]], "save_model() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearFSD.save_model"]], "save_model() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.save_model"]], "save_task() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearFSD.save_task"]], "save_task() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.save_task"]], "train() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearFSD.train"]], "train() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[63, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.train"]], "hearesc50 (class in s3prl.problem.common.hear_stroke)": [[64, "s3prl.problem.common.hear_stroke.HearESC50"]], "hearstroke (class in s3prl.problem.common.hear_stroke)": [[64, "s3prl.problem.common.hear_stroke.HearStroke"]], "build_batch_sampler() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[64, "s3prl.problem.common.hear_stroke.HearESC50.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_stroke.hearstroke method)": [[64, "s3prl.problem.common.hear_stroke.HearStroke.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[64, "s3prl.problem.common.hear_stroke.HearESC50.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_stroke.hearstroke method)": [[64, "s3prl.problem.common.hear_stroke.HearStroke.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[64, "s3prl.problem.common.hear_stroke.HearESC50.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_stroke.hearstroke method)": [[64, "s3prl.problem.common.hear_stroke.HearStroke.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[64, "s3prl.problem.common.hear_stroke.HearESC50.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_stroke.hearstroke method)": [[64, "s3prl.problem.common.hear_stroke.HearStroke.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[64, "s3prl.problem.common.hear_stroke.HearESC50.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_stroke.hearstroke method)": [[64, "s3prl.problem.common.hear_stroke.HearStroke.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[64, "s3prl.problem.common.hear_stroke.HearESC50.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_stroke.hearstroke method)": [[64, "s3prl.problem.common.hear_stroke.HearStroke.build_featurizer"]], "build_model() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[64, "s3prl.problem.common.hear_stroke.HearESC50.build_model"]], "build_model() (s3prl.problem.common.hear_stroke.hearstroke method)": [[64, "s3prl.problem.common.hear_stroke.HearStroke.build_model"]], "build_optimizer() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[64, "s3prl.problem.common.hear_stroke.HearESC50.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_stroke.hearstroke method)": [[64, "s3prl.problem.common.hear_stroke.HearStroke.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[64, "s3prl.problem.common.hear_stroke.HearESC50.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_stroke.hearstroke method)": [[64, "s3prl.problem.common.hear_stroke.HearStroke.build_scheduler"]], "build_task() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[64, "s3prl.problem.common.hear_stroke.HearESC50.build_task"]], "build_task() (s3prl.problem.common.hear_stroke.hearstroke method)": [[64, "s3prl.problem.common.hear_stroke.HearStroke.build_task"]], "build_upstream() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[64, "s3prl.problem.common.hear_stroke.HearESC50.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_stroke.hearstroke method)": [[64, "s3prl.problem.common.hear_stroke.HearStroke.build_upstream"]], "default_config() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[64, "s3prl.problem.common.hear_stroke.HearESC50.default_config"]], "default_config() (s3prl.problem.common.hear_stroke.hearstroke method)": [[64, "s3prl.problem.common.hear_stroke.HearStroke.default_config"]], "evaluate() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[64, "s3prl.problem.common.hear_stroke.HearESC50.evaluate"]], "evaluate() (s3prl.problem.common.hear_stroke.hearstroke method)": [[64, "s3prl.problem.common.hear_stroke.HearStroke.evaluate"]], "get_class_from_name() (s3prl.problem.common.hear_stroke.hearesc50 class method)": [[64, "s3prl.problem.common.hear_stroke.HearESC50.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_stroke.hearstroke class method)": [[64, "s3prl.problem.common.hear_stroke.HearStroke.get_class_from_name"]], "load_model() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[64, "s3prl.problem.common.hear_stroke.HearESC50.load_model"]], "load_model() (s3prl.problem.common.hear_stroke.hearstroke method)": [[64, "s3prl.problem.common.hear_stroke.HearStroke.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[64, "s3prl.problem.common.hear_stroke.HearESC50.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_stroke.hearstroke method)": [[64, "s3prl.problem.common.hear_stroke.HearStroke.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[64, "s3prl.problem.common.hear_stroke.HearESC50.load_task"]], "load_task() (s3prl.problem.common.hear_stroke.hearstroke method)": [[64, "s3prl.problem.common.hear_stroke.HearStroke.load_task"]], "main() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[64, "s3prl.problem.common.hear_stroke.HearESC50.main"]], "main() (s3prl.problem.common.hear_stroke.hearstroke method)": [[64, "s3prl.problem.common.hear_stroke.HearStroke.main"]], "prepare_data() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[64, "s3prl.problem.common.hear_stroke.HearESC50.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_stroke.hearstroke method)": [[64, "s3prl.problem.common.hear_stroke.HearStroke.prepare_data"]], "run() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[64, "s3prl.problem.common.hear_stroke.HearESC50.run"]], "run() (s3prl.problem.common.hear_stroke.hearstroke method)": [[64, "s3prl.problem.common.hear_stroke.HearStroke.run"]], "s3prl.problem.common.hear_stroke": [[64, "module-s3prl.problem.common.hear_stroke"]], "save_model() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[64, "s3prl.problem.common.hear_stroke.HearESC50.save_model"]], "save_model() (s3prl.problem.common.hear_stroke.hearstroke method)": [[64, "s3prl.problem.common.hear_stroke.HearStroke.save_model"]], "save_task() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[64, "s3prl.problem.common.hear_stroke.HearESC50.save_task"]], "save_task() (s3prl.problem.common.hear_stroke.hearstroke method)": [[64, "s3prl.problem.common.hear_stroke.HearStroke.save_task"]], "train() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[64, "s3prl.problem.common.hear_stroke.HearESC50.train"]], "train() (s3prl.problem.common.hear_stroke.hearstroke method)": [[64, "s3prl.problem.common.hear_stroke.HearStroke.train"]], "hearesc50 (class in s3prl.problem.common.hear_tonic)": [[65, "s3prl.problem.common.hear_tonic.HearESC50"]], "heartonic (class in s3prl.problem.common.hear_tonic)": [[65, "s3prl.problem.common.hear_tonic.HearTonic"]], "build_batch_sampler() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[65, "s3prl.problem.common.hear_tonic.HearESC50.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_tonic.heartonic method)": [[65, "s3prl.problem.common.hear_tonic.HearTonic.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[65, "s3prl.problem.common.hear_tonic.HearESC50.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_tonic.heartonic method)": [[65, "s3prl.problem.common.hear_tonic.HearTonic.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[65, "s3prl.problem.common.hear_tonic.HearESC50.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_tonic.heartonic method)": [[65, "s3prl.problem.common.hear_tonic.HearTonic.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[65, "s3prl.problem.common.hear_tonic.HearESC50.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_tonic.heartonic method)": [[65, "s3prl.problem.common.hear_tonic.HearTonic.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[65, "s3prl.problem.common.hear_tonic.HearESC50.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_tonic.heartonic method)": [[65, "s3prl.problem.common.hear_tonic.HearTonic.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[65, "s3prl.problem.common.hear_tonic.HearESC50.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_tonic.heartonic method)": [[65, "s3prl.problem.common.hear_tonic.HearTonic.build_featurizer"]], "build_model() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[65, "s3prl.problem.common.hear_tonic.HearESC50.build_model"]], "build_model() (s3prl.problem.common.hear_tonic.heartonic method)": [[65, "s3prl.problem.common.hear_tonic.HearTonic.build_model"]], "build_optimizer() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[65, "s3prl.problem.common.hear_tonic.HearESC50.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_tonic.heartonic method)": [[65, "s3prl.problem.common.hear_tonic.HearTonic.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[65, "s3prl.problem.common.hear_tonic.HearESC50.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_tonic.heartonic method)": [[65, "s3prl.problem.common.hear_tonic.HearTonic.build_scheduler"]], "build_task() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[65, "s3prl.problem.common.hear_tonic.HearESC50.build_task"]], "build_task() (s3prl.problem.common.hear_tonic.heartonic method)": [[65, "s3prl.problem.common.hear_tonic.HearTonic.build_task"]], "build_upstream() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[65, "s3prl.problem.common.hear_tonic.HearESC50.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_tonic.heartonic method)": [[65, "s3prl.problem.common.hear_tonic.HearTonic.build_upstream"]], "default_config() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[65, "s3prl.problem.common.hear_tonic.HearESC50.default_config"]], "default_config() (s3prl.problem.common.hear_tonic.heartonic method)": [[65, "s3prl.problem.common.hear_tonic.HearTonic.default_config"]], "evaluate() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[65, "s3prl.problem.common.hear_tonic.HearESC50.evaluate"]], "evaluate() (s3prl.problem.common.hear_tonic.heartonic method)": [[65, "s3prl.problem.common.hear_tonic.HearTonic.evaluate"]], "get_class_from_name() (s3prl.problem.common.hear_tonic.hearesc50 class method)": [[65, "s3prl.problem.common.hear_tonic.HearESC50.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_tonic.heartonic class method)": [[65, "s3prl.problem.common.hear_tonic.HearTonic.get_class_from_name"]], "load_model() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[65, "s3prl.problem.common.hear_tonic.HearESC50.load_model"]], "load_model() (s3prl.problem.common.hear_tonic.heartonic method)": [[65, "s3prl.problem.common.hear_tonic.HearTonic.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[65, "s3prl.problem.common.hear_tonic.HearESC50.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_tonic.heartonic method)": [[65, "s3prl.problem.common.hear_tonic.HearTonic.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[65, "s3prl.problem.common.hear_tonic.HearESC50.load_task"]], "load_task() (s3prl.problem.common.hear_tonic.heartonic method)": [[65, "s3prl.problem.common.hear_tonic.HearTonic.load_task"]], "main() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[65, "s3prl.problem.common.hear_tonic.HearESC50.main"]], "main() (s3prl.problem.common.hear_tonic.heartonic method)": [[65, "s3prl.problem.common.hear_tonic.HearTonic.main"]], "prepare_data() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[65, "s3prl.problem.common.hear_tonic.HearESC50.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_tonic.heartonic method)": [[65, "s3prl.problem.common.hear_tonic.HearTonic.prepare_data"]], "run() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[65, "s3prl.problem.common.hear_tonic.HearESC50.run"]], "run() (s3prl.problem.common.hear_tonic.heartonic method)": [[65, "s3prl.problem.common.hear_tonic.HearTonic.run"]], "s3prl.problem.common.hear_tonic": [[65, "module-s3prl.problem.common.hear_tonic"]], "save_model() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[65, "s3prl.problem.common.hear_tonic.HearESC50.save_model"]], "save_model() (s3prl.problem.common.hear_tonic.heartonic method)": [[65, "s3prl.problem.common.hear_tonic.HearTonic.save_model"]], "save_task() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[65, "s3prl.problem.common.hear_tonic.HearESC50.save_task"]], "save_task() (s3prl.problem.common.hear_tonic.heartonic method)": [[65, "s3prl.problem.common.hear_tonic.HearTonic.save_task"]], "train() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[65, "s3prl.problem.common.hear_tonic.HearESC50.train"]], "train() (s3prl.problem.common.hear_tonic.heartonic method)": [[65, "s3prl.problem.common.hear_tonic.HearTonic.train"]], "hearesc50 (class in s3prl.problem.common.hear_vocal)": [[66, "s3prl.problem.common.hear_vocal.HearESC50"]], "hearvocal (class in s3prl.problem.common.hear_vocal)": [[66, "s3prl.problem.common.hear_vocal.HearVocal"]], "build_batch_sampler() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[66, "s3prl.problem.common.hear_vocal.HearESC50.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_vocal.hearvocal method)": [[66, "s3prl.problem.common.hear_vocal.HearVocal.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[66, "s3prl.problem.common.hear_vocal.HearESC50.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_vocal.hearvocal method)": [[66, "s3prl.problem.common.hear_vocal.HearVocal.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[66, "s3prl.problem.common.hear_vocal.HearESC50.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_vocal.hearvocal method)": [[66, "s3prl.problem.common.hear_vocal.HearVocal.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[66, "s3prl.problem.common.hear_vocal.HearESC50.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_vocal.hearvocal method)": [[66, "s3prl.problem.common.hear_vocal.HearVocal.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[66, "s3prl.problem.common.hear_vocal.HearESC50.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_vocal.hearvocal method)": [[66, "s3prl.problem.common.hear_vocal.HearVocal.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[66, "s3prl.problem.common.hear_vocal.HearESC50.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_vocal.hearvocal method)": [[66, "s3prl.problem.common.hear_vocal.HearVocal.build_featurizer"]], "build_model() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[66, "s3prl.problem.common.hear_vocal.HearESC50.build_model"]], "build_model() (s3prl.problem.common.hear_vocal.hearvocal method)": [[66, "s3prl.problem.common.hear_vocal.HearVocal.build_model"]], "build_optimizer() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[66, "s3prl.problem.common.hear_vocal.HearESC50.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_vocal.hearvocal method)": [[66, "s3prl.problem.common.hear_vocal.HearVocal.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[66, "s3prl.problem.common.hear_vocal.HearESC50.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_vocal.hearvocal method)": [[66, "s3prl.problem.common.hear_vocal.HearVocal.build_scheduler"]], "build_task() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[66, "s3prl.problem.common.hear_vocal.HearESC50.build_task"]], "build_task() (s3prl.problem.common.hear_vocal.hearvocal method)": [[66, "s3prl.problem.common.hear_vocal.HearVocal.build_task"]], "build_upstream() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[66, "s3prl.problem.common.hear_vocal.HearESC50.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_vocal.hearvocal method)": [[66, "s3prl.problem.common.hear_vocal.HearVocal.build_upstream"]], "default_config() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[66, "s3prl.problem.common.hear_vocal.HearESC50.default_config"]], "default_config() (s3prl.problem.common.hear_vocal.hearvocal method)": [[66, "s3prl.problem.common.hear_vocal.HearVocal.default_config"]], "evaluate() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[66, "s3prl.problem.common.hear_vocal.HearESC50.evaluate"]], "evaluate() (s3prl.problem.common.hear_vocal.hearvocal method)": [[66, "s3prl.problem.common.hear_vocal.HearVocal.evaluate"]], "get_class_from_name() (s3prl.problem.common.hear_vocal.hearesc50 class method)": [[66, "s3prl.problem.common.hear_vocal.HearESC50.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_vocal.hearvocal class method)": [[66, "s3prl.problem.common.hear_vocal.HearVocal.get_class_from_name"]], "load_model() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[66, "s3prl.problem.common.hear_vocal.HearESC50.load_model"]], "load_model() (s3prl.problem.common.hear_vocal.hearvocal method)": [[66, "s3prl.problem.common.hear_vocal.HearVocal.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[66, "s3prl.problem.common.hear_vocal.HearESC50.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_vocal.hearvocal method)": [[66, "s3prl.problem.common.hear_vocal.HearVocal.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[66, "s3prl.problem.common.hear_vocal.HearESC50.load_task"]], "load_task() (s3prl.problem.common.hear_vocal.hearvocal method)": [[66, "s3prl.problem.common.hear_vocal.HearVocal.load_task"]], "main() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[66, "s3prl.problem.common.hear_vocal.HearESC50.main"]], "main() (s3prl.problem.common.hear_vocal.hearvocal method)": [[66, "s3prl.problem.common.hear_vocal.HearVocal.main"]], "prepare_data() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[66, "s3prl.problem.common.hear_vocal.HearESC50.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_vocal.hearvocal method)": [[66, "s3prl.problem.common.hear_vocal.HearVocal.prepare_data"]], "run() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[66, "s3prl.problem.common.hear_vocal.HearESC50.run"]], "run() (s3prl.problem.common.hear_vocal.hearvocal method)": [[66, "s3prl.problem.common.hear_vocal.HearVocal.run"]], "s3prl.problem.common.hear_vocal": [[66, "module-s3prl.problem.common.hear_vocal"]], "save_model() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[66, "s3prl.problem.common.hear_vocal.HearESC50.save_model"]], "save_model() (s3prl.problem.common.hear_vocal.hearvocal method)": [[66, "s3prl.problem.common.hear_vocal.HearVocal.save_model"]], "save_task() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[66, "s3prl.problem.common.hear_vocal.HearESC50.save_task"]], "save_task() (s3prl.problem.common.hear_vocal.hearvocal method)": [[66, "s3prl.problem.common.hear_vocal.HearVocal.save_task"]], "train() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[66, "s3prl.problem.common.hear_vocal.HearESC50.train"]], "train() (s3prl.problem.common.hear_vocal.hearvocal method)": [[66, "s3prl.problem.common.hear_vocal.HearVocal.train"]], "hearesc50 (class in s3prl.problem.common.hear_vox_lingual)": [[67, "s3prl.problem.common.hear_vox_lingual.HearESC50"]], "hearvoxlingual (class in s3prl.problem.common.hear_vox_lingual)": [[67, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual"]], "build_batch_sampler() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearESC50.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearESC50.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearESC50.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearESC50.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearESC50.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearESC50.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.build_featurizer"]], "build_model() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearESC50.build_model"]], "build_model() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.build_model"]], "build_optimizer() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearESC50.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearESC50.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.build_scheduler"]], "build_task() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearESC50.build_task"]], "build_task() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.build_task"]], "build_upstream() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearESC50.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.build_upstream"]], "default_config() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearESC50.default_config"]], "default_config() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.default_config"]], "evaluate() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearESC50.evaluate"]], "evaluate() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.evaluate"]], "get_class_from_name() (s3prl.problem.common.hear_vox_lingual.hearesc50 class method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearESC50.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual class method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.get_class_from_name"]], "load_model() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearESC50.load_model"]], "load_model() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearESC50.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearESC50.load_task"]], "load_task() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.load_task"]], "main() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearESC50.main"]], "main() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.main"]], "prepare_data() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearESC50.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.prepare_data"]], "run() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearESC50.run"]], "run() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.run"]], "s3prl.problem.common.hear_vox_lingual": [[67, "module-s3prl.problem.common.hear_vox_lingual"]], "save_model() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearESC50.save_model"]], "save_model() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.save_model"]], "save_task() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearESC50.save_task"]], "save_task() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.save_task"]], "train() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearESC50.train"]], "train() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[67, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.train"]], "common (class in s3prl.problem.common.run)": [[68, "s3prl.problem.common.run.Common"]], "build_collate_fn() (s3prl.problem.common.run.common method)": [[68, "s3prl.problem.common.run.Common.build_collate_fn"]], "build_featurizer() (s3prl.problem.common.run.common method)": [[68, "s3prl.problem.common.run.Common.build_featurizer"]], "build_model() (s3prl.problem.common.run.common method)": [[68, "s3prl.problem.common.run.Common.build_model"]], "build_optimizer() (s3prl.problem.common.run.common method)": [[68, "s3prl.problem.common.run.Common.build_optimizer"]], "build_scheduler() (s3prl.problem.common.run.common method)": [[68, "s3prl.problem.common.run.Common.build_scheduler"]], "build_task() (s3prl.problem.common.run.common method)": [[68, "s3prl.problem.common.run.Common.build_task"]], "build_upstream() (s3prl.problem.common.run.common method)": [[68, "s3prl.problem.common.run.Common.build_upstream"]], "evaluate() (s3prl.problem.common.run.common method)": [[68, "s3prl.problem.common.run.Common.evaluate"]], "get_class_from_name() (s3prl.problem.common.run.common class method)": [[68, "s3prl.problem.common.run.Common.get_class_from_name"]], "load_model() (s3prl.problem.common.run.common method)": [[68, "s3prl.problem.common.run.Common.load_model"]], "load_model_and_task() (s3prl.problem.common.run.common method)": [[68, "s3prl.problem.common.run.Common.load_model_and_task"]], "load_task() (s3prl.problem.common.run.common method)": [[68, "s3prl.problem.common.run.Common.load_task"]], "main() (s3prl.problem.common.run.common method)": [[68, "s3prl.problem.common.run.Common.main"]], "run() (s3prl.problem.common.run.common method)": [[68, "s3prl.problem.common.run.Common.run"]], "s3prl.problem.common.run": [[68, "module-s3prl.problem.common.run"]], "save_model() (s3prl.problem.common.run.common method)": [[68, "s3prl.problem.common.run.Common.save_model"]], "save_task() (s3prl.problem.common.run.common method)": [[68, "s3prl.problem.common.run.Common.save_task"]], "train() (s3prl.problem.common.run.common method)": [[68, "s3prl.problem.common.run.Common.train"]], "superber (class in s3prl.problem.common.superb_er)": [[69, "s3prl.problem.common.superb_er.SuperbER"]], "build_batch_sampler() (s3prl.problem.common.superb_er.superber method)": [[69, "s3prl.problem.common.superb_er.SuperbER.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.superb_er.superber method)": [[69, "s3prl.problem.common.superb_er.SuperbER.build_collate_fn"]], "build_dataset() (s3prl.problem.common.superb_er.superber method)": [[69, "s3prl.problem.common.superb_er.SuperbER.build_dataset"]], "build_downstream() (s3prl.problem.common.superb_er.superber method)": [[69, "s3prl.problem.common.superb_er.SuperbER.build_downstream"]], "build_encoder() (s3prl.problem.common.superb_er.superber method)": [[69, "s3prl.problem.common.superb_er.SuperbER.build_encoder"]], "build_featurizer() (s3prl.problem.common.superb_er.superber method)": [[69, "s3prl.problem.common.superb_er.SuperbER.build_featurizer"]], "build_model() (s3prl.problem.common.superb_er.superber method)": [[69, "s3prl.problem.common.superb_er.SuperbER.build_model"]], "build_optimizer() (s3prl.problem.common.superb_er.superber method)": [[69, "s3prl.problem.common.superb_er.SuperbER.build_optimizer"]], "build_scheduler() (s3prl.problem.common.superb_er.superber method)": [[69, "s3prl.problem.common.superb_er.SuperbER.build_scheduler"]], "build_task() (s3prl.problem.common.superb_er.superber method)": [[69, "s3prl.problem.common.superb_er.SuperbER.build_task"]], "build_upstream() (s3prl.problem.common.superb_er.superber method)": [[69, "s3prl.problem.common.superb_er.SuperbER.build_upstream"]], "default_config() (s3prl.problem.common.superb_er.superber method)": [[69, "s3prl.problem.common.superb_er.SuperbER.default_config"]], "evaluate() (s3prl.problem.common.superb_er.superber method)": [[69, "s3prl.problem.common.superb_er.SuperbER.evaluate"]], "get_class_from_name() (s3prl.problem.common.superb_er.superber class method)": [[69, "s3prl.problem.common.superb_er.SuperbER.get_class_from_name"]], "iemocap_for_superb() (in module s3prl.problem.common.superb_er)": [[69, "s3prl.problem.common.superb_er.iemocap_for_superb"]], "load_model() (s3prl.problem.common.superb_er.superber method)": [[69, "s3prl.problem.common.superb_er.SuperbER.load_model"]], "load_model_and_task() (s3prl.problem.common.superb_er.superber method)": [[69, "s3prl.problem.common.superb_er.SuperbER.load_model_and_task"]], "load_task() (s3prl.problem.common.superb_er.superber method)": [[69, "s3prl.problem.common.superb_er.SuperbER.load_task"]], "main() (s3prl.problem.common.superb_er.superber method)": [[69, "s3prl.problem.common.superb_er.SuperbER.main"]], "prepare_data() (s3prl.problem.common.superb_er.superber method)": [[69, "s3prl.problem.common.superb_er.SuperbER.prepare_data"]], "run() (s3prl.problem.common.superb_er.superber method)": [[69, "s3prl.problem.common.superb_er.SuperbER.run"]], "s3prl.problem.common.superb_er": [[69, "module-s3prl.problem.common.superb_er"]], "save_model() (s3prl.problem.common.superb_er.superber method)": [[69, "s3prl.problem.common.superb_er.SuperbER.save_model"]], "save_task() (s3prl.problem.common.superb_er.superber method)": [[69, "s3prl.problem.common.superb_er.SuperbER.save_task"]], "train() (s3prl.problem.common.superb_er.superber method)": [[69, "s3prl.problem.common.superb_er.SuperbER.train"]], "superbic (class in s3prl.problem.common.superb_ic)": [[70, "s3prl.problem.common.superb_ic.SuperbIC"]], "build_batch_sampler() (s3prl.problem.common.superb_ic.superbic method)": [[70, "s3prl.problem.common.superb_ic.SuperbIC.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.superb_ic.superbic method)": [[70, "s3prl.problem.common.superb_ic.SuperbIC.build_collate_fn"]], "build_dataset() (s3prl.problem.common.superb_ic.superbic method)": [[70, "s3prl.problem.common.superb_ic.SuperbIC.build_dataset"]], "build_downstream() (s3prl.problem.common.superb_ic.superbic method)": [[70, "s3prl.problem.common.superb_ic.SuperbIC.build_downstream"]], "build_encoder() (s3prl.problem.common.superb_ic.superbic method)": [[70, "s3prl.problem.common.superb_ic.SuperbIC.build_encoder"]], "build_featurizer() (s3prl.problem.common.superb_ic.superbic method)": [[70, "s3prl.problem.common.superb_ic.SuperbIC.build_featurizer"]], "build_model() (s3prl.problem.common.superb_ic.superbic method)": [[70, "s3prl.problem.common.superb_ic.SuperbIC.build_model"]], "build_optimizer() (s3prl.problem.common.superb_ic.superbic method)": [[70, "s3prl.problem.common.superb_ic.SuperbIC.build_optimizer"]], "build_scheduler() (s3prl.problem.common.superb_ic.superbic method)": [[70, "s3prl.problem.common.superb_ic.SuperbIC.build_scheduler"]], "build_task() (s3prl.problem.common.superb_ic.superbic method)": [[70, "s3prl.problem.common.superb_ic.SuperbIC.build_task"]], "build_upstream() (s3prl.problem.common.superb_ic.superbic method)": [[70, "s3prl.problem.common.superb_ic.SuperbIC.build_upstream"]], "default_config() (s3prl.problem.common.superb_ic.superbic method)": [[70, "s3prl.problem.common.superb_ic.SuperbIC.default_config"]], "evaluate() (s3prl.problem.common.superb_ic.superbic method)": [[70, "s3prl.problem.common.superb_ic.SuperbIC.evaluate"]], "fsc_for_multi_classification() (in module s3prl.problem.common.superb_ic)": [[70, "s3prl.problem.common.superb_ic.fsc_for_multi_classification"]], "get_class_from_name() (s3prl.problem.common.superb_ic.superbic class method)": [[70, "s3prl.problem.common.superb_ic.SuperbIC.get_class_from_name"]], "load_model() (s3prl.problem.common.superb_ic.superbic method)": [[70, "s3prl.problem.common.superb_ic.SuperbIC.load_model"]], "load_model_and_task() (s3prl.problem.common.superb_ic.superbic method)": [[70, "s3prl.problem.common.superb_ic.SuperbIC.load_model_and_task"]], "load_task() (s3prl.problem.common.superb_ic.superbic method)": [[70, "s3prl.problem.common.superb_ic.SuperbIC.load_task"]], "main() (s3prl.problem.common.superb_ic.superbic method)": [[70, "s3prl.problem.common.superb_ic.SuperbIC.main"]], "prepare_data() (s3prl.problem.common.superb_ic.superbic method)": [[70, "s3prl.problem.common.superb_ic.SuperbIC.prepare_data"]], "run() (s3prl.problem.common.superb_ic.superbic method)": [[70, "s3prl.problem.common.superb_ic.SuperbIC.run"]], "s3prl.problem.common.superb_ic": [[70, "module-s3prl.problem.common.superb_ic"]], "save_model() (s3prl.problem.common.superb_ic.superbic method)": [[70, "s3prl.problem.common.superb_ic.SuperbIC.save_model"]], "save_task() (s3prl.problem.common.superb_ic.superbic method)": [[70, "s3prl.problem.common.superb_ic.SuperbIC.save_task"]], "train() (s3prl.problem.common.superb_ic.superbic method)": [[70, "s3prl.problem.common.superb_ic.SuperbIC.train"]], "superbks (class in s3prl.problem.common.superb_ks)": [[71, "s3prl.problem.common.superb_ks.SuperbKS"]], "build_batch_sampler() (s3prl.problem.common.superb_ks.superbks method)": [[71, "s3prl.problem.common.superb_ks.SuperbKS.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.superb_ks.superbks method)": [[71, "s3prl.problem.common.superb_ks.SuperbKS.build_collate_fn"]], "build_dataset() (s3prl.problem.common.superb_ks.superbks method)": [[71, "s3prl.problem.common.superb_ks.SuperbKS.build_dataset"]], "build_downstream() (s3prl.problem.common.superb_ks.superbks method)": [[71, "s3prl.problem.common.superb_ks.SuperbKS.build_downstream"]], "build_encoder() (s3prl.problem.common.superb_ks.superbks method)": [[71, "s3prl.problem.common.superb_ks.SuperbKS.build_encoder"]], "build_featurizer() (s3prl.problem.common.superb_ks.superbks method)": [[71, "s3prl.problem.common.superb_ks.SuperbKS.build_featurizer"]], "build_model() (s3prl.problem.common.superb_ks.superbks method)": [[71, "s3prl.problem.common.superb_ks.SuperbKS.build_model"]], "build_optimizer() (s3prl.problem.common.superb_ks.superbks method)": [[71, "s3prl.problem.common.superb_ks.SuperbKS.build_optimizer"]], "build_scheduler() (s3prl.problem.common.superb_ks.superbks method)": [[71, "s3prl.problem.common.superb_ks.SuperbKS.build_scheduler"]], "build_task() (s3prl.problem.common.superb_ks.superbks method)": [[71, "s3prl.problem.common.superb_ks.SuperbKS.build_task"]], "build_upstream() (s3prl.problem.common.superb_ks.superbks method)": [[71, "s3prl.problem.common.superb_ks.SuperbKS.build_upstream"]], "default_config() (s3prl.problem.common.superb_ks.superbks method)": [[71, "s3prl.problem.common.superb_ks.SuperbKS.default_config"]], "evaluate() (s3prl.problem.common.superb_ks.superbks method)": [[71, "s3prl.problem.common.superb_ks.SuperbKS.evaluate"]], "get_class_from_name() (s3prl.problem.common.superb_ks.superbks class method)": [[71, "s3prl.problem.common.superb_ks.SuperbKS.get_class_from_name"]], "gsc1_for_classification() (in module s3prl.problem.common.superb_ks)": [[71, "s3prl.problem.common.superb_ks.gsc1_for_classification"]], "load_model() (s3prl.problem.common.superb_ks.superbks method)": [[71, "s3prl.problem.common.superb_ks.SuperbKS.load_model"]], "load_model_and_task() (s3prl.problem.common.superb_ks.superbks method)": [[71, "s3prl.problem.common.superb_ks.SuperbKS.load_model_and_task"]], "load_task() (s3prl.problem.common.superb_ks.superbks method)": [[71, "s3prl.problem.common.superb_ks.SuperbKS.load_task"]], "main() (s3prl.problem.common.superb_ks.superbks method)": [[71, "s3prl.problem.common.superb_ks.SuperbKS.main"]], "prepare_data() (s3prl.problem.common.superb_ks.superbks method)": [[71, "s3prl.problem.common.superb_ks.SuperbKS.prepare_data"]], "run() (s3prl.problem.common.superb_ks.superbks method)": [[71, "s3prl.problem.common.superb_ks.SuperbKS.run"]], "s3prl.problem.common.superb_ks": [[71, "module-s3prl.problem.common.superb_ks"]], "save_model() (s3prl.problem.common.superb_ks.superbks method)": [[71, "s3prl.problem.common.superb_ks.SuperbKS.save_model"]], "save_task() (s3prl.problem.common.superb_ks.superbks method)": [[71, "s3prl.problem.common.superb_ks.SuperbKS.save_task"]], "train() (s3prl.problem.common.superb_ks.superbks method)": [[71, "s3prl.problem.common.superb_ks.SuperbKS.train"]], "superbsid (class in s3prl.problem.common.superb_sid)": [[72, "s3prl.problem.common.superb_sid.SuperbSID"]], "build_batch_sampler() (s3prl.problem.common.superb_sid.superbsid method)": [[72, "s3prl.problem.common.superb_sid.SuperbSID.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.superb_sid.superbsid method)": [[72, "s3prl.problem.common.superb_sid.SuperbSID.build_collate_fn"]], "build_dataset() (s3prl.problem.common.superb_sid.superbsid method)": [[72, "s3prl.problem.common.superb_sid.SuperbSID.build_dataset"]], "build_downstream() (s3prl.problem.common.superb_sid.superbsid method)": [[72, "s3prl.problem.common.superb_sid.SuperbSID.build_downstream"]], "build_encoder() (s3prl.problem.common.superb_sid.superbsid method)": [[72, "s3prl.problem.common.superb_sid.SuperbSID.build_encoder"]], "build_featurizer() (s3prl.problem.common.superb_sid.superbsid method)": [[72, "s3prl.problem.common.superb_sid.SuperbSID.build_featurizer"]], "build_model() (s3prl.problem.common.superb_sid.superbsid method)": [[72, "s3prl.problem.common.superb_sid.SuperbSID.build_model"]], "build_optimizer() (s3prl.problem.common.superb_sid.superbsid method)": [[72, "s3prl.problem.common.superb_sid.SuperbSID.build_optimizer"]], "build_scheduler() (s3prl.problem.common.superb_sid.superbsid method)": [[72, "s3prl.problem.common.superb_sid.SuperbSID.build_scheduler"]], "build_task() (s3prl.problem.common.superb_sid.superbsid method)": [[72, "s3prl.problem.common.superb_sid.SuperbSID.build_task"]], "build_upstream() (s3prl.problem.common.superb_sid.superbsid method)": [[72, "s3prl.problem.common.superb_sid.SuperbSID.build_upstream"]], "default_config() (s3prl.problem.common.superb_sid.superbsid method)": [[72, "s3prl.problem.common.superb_sid.SuperbSID.default_config"]], "evaluate() (s3prl.problem.common.superb_sid.superbsid method)": [[72, "s3prl.problem.common.superb_sid.SuperbSID.evaluate"]], "get_class_from_name() (s3prl.problem.common.superb_sid.superbsid class method)": [[72, "s3prl.problem.common.superb_sid.SuperbSID.get_class_from_name"]], "load_model() (s3prl.problem.common.superb_sid.superbsid method)": [[72, "s3prl.problem.common.superb_sid.SuperbSID.load_model"]], "load_model_and_task() (s3prl.problem.common.superb_sid.superbsid method)": [[72, "s3prl.problem.common.superb_sid.SuperbSID.load_model_and_task"]], "load_task() (s3prl.problem.common.superb_sid.superbsid method)": [[72, "s3prl.problem.common.superb_sid.SuperbSID.load_task"]], "main() (s3prl.problem.common.superb_sid.superbsid method)": [[72, "s3prl.problem.common.superb_sid.SuperbSID.main"]], "prepare_data() (s3prl.problem.common.superb_sid.superbsid method)": [[72, "s3prl.problem.common.superb_sid.SuperbSID.prepare_data"]], "run() (s3prl.problem.common.superb_sid.superbsid method)": [[72, "s3prl.problem.common.superb_sid.SuperbSID.run"]], "s3prl.problem.common.superb_sid": [[72, "module-s3prl.problem.common.superb_sid"]], "save_model() (s3prl.problem.common.superb_sid.superbsid method)": [[72, "s3prl.problem.common.superb_sid.SuperbSID.save_model"]], "save_task() (s3prl.problem.common.superb_sid.superbsid method)": [[72, "s3prl.problem.common.superb_sid.SuperbSID.save_task"]], "train() (s3prl.problem.common.superb_sid.superbsid method)": [[72, "s3prl.problem.common.superb_sid.SuperbSID.train"]], "voxceleb1_for_sid() (in module s3prl.problem.common.superb_sid)": [[72, "s3prl.problem.common.superb_sid.voxceleb1_for_sid"]], "superbsd (class in s3prl.problem.diarization)": [[73, "s3prl.problem.diarization.SuperbSD"]], "build_batch_sampler() (s3prl.problem.diarization.superbsd method)": [[73, "s3prl.problem.diarization.SuperbSD.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.diarization.superbsd method)": [[73, "s3prl.problem.diarization.SuperbSD.build_collate_fn"]], "build_dataset() (s3prl.problem.diarization.superbsd method)": [[73, "s3prl.problem.diarization.SuperbSD.build_dataset"]], "build_downstream() (s3prl.problem.diarization.superbsd method)": [[73, "s3prl.problem.diarization.SuperbSD.build_downstream"]], "build_featurizer() (s3prl.problem.diarization.superbsd method)": [[73, "s3prl.problem.diarization.SuperbSD.build_featurizer"]], "build_model() (s3prl.problem.diarization.superbsd method)": [[73, "s3prl.problem.diarization.SuperbSD.build_model"]], "build_optimizer() (s3prl.problem.diarization.superbsd method)": [[73, "s3prl.problem.diarization.SuperbSD.build_optimizer"]], "build_scheduler() (s3prl.problem.diarization.superbsd method)": [[73, "s3prl.problem.diarization.SuperbSD.build_scheduler"]], "build_task() (s3prl.problem.diarization.superbsd method)": [[73, "s3prl.problem.diarization.SuperbSD.build_task"]], "build_upstream() (s3prl.problem.diarization.superbsd method)": [[73, "s3prl.problem.diarization.SuperbSD.build_upstream"]], "default_config() (s3prl.problem.diarization.superbsd method)": [[73, "s3prl.problem.diarization.SuperbSD.default_config"]], "evaluate() (s3prl.problem.diarization.superbsd method)": [[73, "s3prl.problem.diarization.SuperbSD.evaluate"]], "get_class_from_name() (s3prl.problem.diarization.superbsd class method)": [[73, "s3prl.problem.diarization.SuperbSD.get_class_from_name"]], "load_model() (s3prl.problem.diarization.superbsd method)": [[73, "s3prl.problem.diarization.SuperbSD.load_model"]], "load_model_and_task() (s3prl.problem.diarization.superbsd method)": [[73, "s3prl.problem.diarization.SuperbSD.load_model_and_task"]], "load_task() (s3prl.problem.diarization.superbsd method)": [[73, "s3prl.problem.diarization.SuperbSD.load_task"]], "main() (s3prl.problem.diarization.superbsd method)": [[73, "s3prl.problem.diarization.SuperbSD.main"]], "prepare_data() (s3prl.problem.diarization.superbsd method)": [[73, "s3prl.problem.diarization.SuperbSD.prepare_data"]], "run() (s3prl.problem.diarization.superbsd method)": [[73, "s3prl.problem.diarization.SuperbSD.run"]], "s3prl.problem.diarization": [[73, "module-s3prl.problem.diarization"]], "save_model() (s3prl.problem.diarization.superbsd method)": [[73, "s3prl.problem.diarization.SuperbSD.save_model"]], "save_task() (s3prl.problem.diarization.superbsd method)": [[73, "s3prl.problem.diarization.SuperbSD.save_task"]], "scoring() (s3prl.problem.diarization.superbsd method)": [[73, "s3prl.problem.diarization.SuperbSD.scoring"]], "train() (s3prl.problem.diarization.superbsd method)": [[73, "s3prl.problem.diarization.SuperbSD.train"]], "diarization (class in s3prl.problem.diarization.run)": [[74, "s3prl.problem.diarization.run.Diarization"]], "build_collate_fn() (s3prl.problem.diarization.run.diarization method)": [[74, "s3prl.problem.diarization.run.Diarization.build_collate_fn"]], "build_featurizer() (s3prl.problem.diarization.run.diarization method)": [[74, "s3prl.problem.diarization.run.Diarization.build_featurizer"]], "build_model() (s3prl.problem.diarization.run.diarization method)": [[74, "s3prl.problem.diarization.run.Diarization.build_model"]], "build_optimizer() (s3prl.problem.diarization.run.diarization method)": [[74, "s3prl.problem.diarization.run.Diarization.build_optimizer"]], "build_scheduler() (s3prl.problem.diarization.run.diarization method)": [[74, "s3prl.problem.diarization.run.Diarization.build_scheduler"]], "build_task() (s3prl.problem.diarization.run.diarization method)": [[74, "s3prl.problem.diarization.run.Diarization.build_task"]], "build_upstream() (s3prl.problem.diarization.run.diarization method)": [[74, "s3prl.problem.diarization.run.Diarization.build_upstream"]], "evaluate() (s3prl.problem.diarization.run.diarization method)": [[74, "s3prl.problem.diarization.run.Diarization.evaluate"]], "get_class_from_name() (s3prl.problem.diarization.run.diarization class method)": [[74, "s3prl.problem.diarization.run.Diarization.get_class_from_name"]], "load_model() (s3prl.problem.diarization.run.diarization method)": [[74, "s3prl.problem.diarization.run.Diarization.load_model"]], "load_model_and_task() (s3prl.problem.diarization.run.diarization method)": [[74, "s3prl.problem.diarization.run.Diarization.load_model_and_task"]], "load_task() (s3prl.problem.diarization.run.diarization method)": [[74, "s3prl.problem.diarization.run.Diarization.load_task"]], "main() (s3prl.problem.diarization.run.diarization method)": [[74, "s3prl.problem.diarization.run.Diarization.main"]], "run() (s3prl.problem.diarization.run.diarization method)": [[74, "s3prl.problem.diarization.run.Diarization.run"]], "s3prl.problem.diarization.run": [[74, "module-s3prl.problem.diarization.run"]], "save_model() (s3prl.problem.diarization.run.diarization method)": [[74, "s3prl.problem.diarization.run.Diarization.save_model"]], "save_task() (s3prl.problem.diarization.run.diarization method)": [[74, "s3prl.problem.diarization.run.Diarization.save_task"]], "scoring() (s3prl.problem.diarization.run.diarization method)": [[74, "s3prl.problem.diarization.run.Diarization.scoring"]], "train() (s3prl.problem.diarization.run.diarization method)": [[74, "s3prl.problem.diarization.run.Diarization.train"]], "superbsd (class in s3prl.problem.diarization.superb_sd)": [[75, "s3prl.problem.diarization.superb_sd.SuperbSD"]], "build_batch_sampler() (s3prl.problem.diarization.superb_sd.superbsd method)": [[75, "s3prl.problem.diarization.superb_sd.SuperbSD.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.diarization.superb_sd.superbsd method)": [[75, "s3prl.problem.diarization.superb_sd.SuperbSD.build_collate_fn"]], "build_dataset() (s3prl.problem.diarization.superb_sd.superbsd method)": [[75, "s3prl.problem.diarization.superb_sd.SuperbSD.build_dataset"]], "build_downstream() (s3prl.problem.diarization.superb_sd.superbsd method)": [[75, "s3prl.problem.diarization.superb_sd.SuperbSD.build_downstream"]], "build_featurizer() (s3prl.problem.diarization.superb_sd.superbsd method)": [[75, "s3prl.problem.diarization.superb_sd.SuperbSD.build_featurizer"]], "build_model() (s3prl.problem.diarization.superb_sd.superbsd method)": [[75, "s3prl.problem.diarization.superb_sd.SuperbSD.build_model"]], "build_optimizer() (s3prl.problem.diarization.superb_sd.superbsd method)": [[75, "s3prl.problem.diarization.superb_sd.SuperbSD.build_optimizer"]], "build_scheduler() (s3prl.problem.diarization.superb_sd.superbsd method)": [[75, "s3prl.problem.diarization.superb_sd.SuperbSD.build_scheduler"]], "build_task() (s3prl.problem.diarization.superb_sd.superbsd method)": [[75, "s3prl.problem.diarization.superb_sd.SuperbSD.build_task"]], "build_upstream() (s3prl.problem.diarization.superb_sd.superbsd method)": [[75, "s3prl.problem.diarization.superb_sd.SuperbSD.build_upstream"]], "default_config() (s3prl.problem.diarization.superb_sd.superbsd method)": [[75, "s3prl.problem.diarization.superb_sd.SuperbSD.default_config"]], "evaluate() (s3prl.problem.diarization.superb_sd.superbsd method)": [[75, "s3prl.problem.diarization.superb_sd.SuperbSD.evaluate"]], "get_class_from_name() (s3prl.problem.diarization.superb_sd.superbsd class method)": [[75, "s3prl.problem.diarization.superb_sd.SuperbSD.get_class_from_name"]], "load_model() (s3prl.problem.diarization.superb_sd.superbsd method)": [[75, "s3prl.problem.diarization.superb_sd.SuperbSD.load_model"]], "load_model_and_task() (s3prl.problem.diarization.superb_sd.superbsd method)": [[75, "s3prl.problem.diarization.superb_sd.SuperbSD.load_model_and_task"]], "load_task() (s3prl.problem.diarization.superb_sd.superbsd method)": [[75, "s3prl.problem.diarization.superb_sd.SuperbSD.load_task"]], "main() (s3prl.problem.diarization.superb_sd.superbsd method)": [[75, "s3prl.problem.diarization.superb_sd.SuperbSD.main"]], "prepare_data() (s3prl.problem.diarization.superb_sd.superbsd method)": [[75, "s3prl.problem.diarization.superb_sd.SuperbSD.prepare_data"]], "run() (s3prl.problem.diarization.superb_sd.superbsd method)": [[75, "s3prl.problem.diarization.superb_sd.SuperbSD.run"]], "s3prl.problem.diarization.superb_sd": [[75, "module-s3prl.problem.diarization.superb_sd"]], "save_model() (s3prl.problem.diarization.superb_sd.superbsd method)": [[75, "s3prl.problem.diarization.superb_sd.SuperbSD.save_model"]], "save_task() (s3prl.problem.diarization.superb_sd.superbsd method)": [[75, "s3prl.problem.diarization.superb_sd.SuperbSD.save_task"]], "scoring() (s3prl.problem.diarization.superb_sd.superbsd method)": [[75, "s3prl.problem.diarization.superb_sd.SuperbSD.scoring"]], "train() (s3prl.problem.diarization.superb_sd.superbsd method)": [[75, "s3prl.problem.diarization.superb_sd.SuperbSD.train"]], "csv_to_kaldi_dir() (in module s3prl.problem.diarization.util)": [[76, "s3prl.problem.diarization.util.csv_to_kaldi_dir"]], "kaldi_dir_to_csv() (in module s3prl.problem.diarization.util)": [[76, "s3prl.problem.diarization.util.kaldi_dir_to_csv"]], "kaldi_dir_to_rttm() (in module s3prl.problem.diarization.util)": [[76, "s3prl.problem.diarization.util.kaldi_dir_to_rttm"]], "s3prl.problem.diarization.util": [[76, "module-s3prl.problem.diarization.util"]], "diarizationpit (class in s3prl.task)": [[77, "s3prl.task.DiarizationPIT"]], "dumpfeature (class in s3prl.task)": [[77, "s3prl.task.DumpFeature"]], "speakerverification (class in s3prl.task)": [[77, "s3prl.task.SpeakerVerification"]], "speech2textctctask (class in s3prl.task)": [[77, "s3prl.task.Speech2TextCTCTask"]], "task (class in s3prl.task)": [[77, "s3prl.task.Task"]], "utteranceclassificationtask (class in s3prl.task)": [[77, "s3prl.task.UtteranceClassificationTask"]], "utterancemulticlassclassificationtask (class in s3prl.task)": [[77, "s3prl.task.UtteranceMultiClassClassificationTask"]], "dump_patches (s3prl.task.diarizationpit attribute)": [[77, "s3prl.task.DiarizationPIT.dump_patches"]], "dump_patches (s3prl.task.dumpfeature attribute)": [[77, "s3prl.task.DumpFeature.dump_patches"]], "dump_patches (s3prl.task.speakerverification attribute)": [[77, "s3prl.task.SpeakerVerification.dump_patches"]], "dump_patches (s3prl.task.speech2textctctask attribute)": [[77, "s3prl.task.Speech2TextCTCTask.dump_patches"]], "dump_patches (s3prl.task.task attribute)": [[77, "s3prl.task.Task.dump_patches"]], "dump_patches (s3prl.task.utteranceclassificationtask attribute)": [[77, "s3prl.task.UtteranceClassificationTask.dump_patches"]], "dump_patches (s3prl.task.utterancemulticlassclassificationtask attribute)": [[77, "s3prl.task.UtteranceMultiClassClassificationTask.dump_patches"]], "forward() (s3prl.task.diarizationpit method)": [[77, "s3prl.task.DiarizationPIT.forward"]], "forward() (s3prl.task.dumpfeature method)": [[77, "s3prl.task.DumpFeature.forward"]], "forward() (s3prl.task.speakerverification method)": [[77, "s3prl.task.SpeakerVerification.forward"]], "forward() (s3prl.task.speech2textctctask method)": [[77, "s3prl.task.Speech2TextCTCTask.forward"]], "forward() (s3prl.task.task method)": [[77, "s3prl.task.Task.forward"]], "forward() (s3prl.task.utteranceclassificationtask method)": [[77, "s3prl.task.UtteranceClassificationTask.forward"]], "forward() (s3prl.task.utterancemulticlassclassificationtask method)": [[77, "s3prl.task.UtteranceMultiClassClassificationTask.forward"]], "get_state() (s3prl.task.diarizationpit method)": [[77, "s3prl.task.DiarizationPIT.get_state"]], "get_state() (s3prl.task.dumpfeature method)": [[77, "s3prl.task.DumpFeature.get_state"]], "get_state() (s3prl.task.speakerverification method)": [[77, "s3prl.task.SpeakerVerification.get_state"]], "get_state() (s3prl.task.speech2textctctask method)": [[77, "s3prl.task.Speech2TextCTCTask.get_state"]], "get_state() (s3prl.task.task method)": [[77, "s3prl.task.Task.get_state"]], "get_state() (s3prl.task.utteranceclassificationtask method)": [[77, "s3prl.task.UtteranceClassificationTask.get_state"]], "get_state() (s3prl.task.utterancemulticlassclassificationtask method)": [[77, "s3prl.task.UtteranceMultiClassClassificationTask.get_state"]], "input_size (s3prl.task.utteranceclassificationtask attribute)": [[77, "s3prl.task.UtteranceClassificationTask.input_size"]], "numpy_object_array_all_close() (s3prl.task.utterancemulticlassclassificationtask static method)": [[77, "s3prl.task.UtteranceMultiClassClassificationTask.numpy_object_array_all_close"]], "output_size (s3prl.task.utteranceclassificationtask attribute)": [[77, "s3prl.task.UtteranceClassificationTask.output_size"]], "parse_cached_results() (s3prl.task.diarizationpit method)": [[77, "s3prl.task.DiarizationPIT.parse_cached_results"]], "parse_cached_results() (s3prl.task.dumpfeature method)": [[77, "s3prl.task.DumpFeature.parse_cached_results"]], "parse_cached_results() (s3prl.task.speakerverification method)": [[77, "s3prl.task.SpeakerVerification.parse_cached_results"]], "parse_cached_results() (s3prl.task.speech2textctctask method)": [[77, "s3prl.task.Speech2TextCTCTask.parse_cached_results"]], "parse_cached_results() (s3prl.task.task method)": [[77, "s3prl.task.Task.parse_cached_results"]], "parse_cached_results() (s3prl.task.utteranceclassificationtask method)": [[77, "s3prl.task.UtteranceClassificationTask.parse_cached_results"]], "parse_cached_results() (s3prl.task.utterancemulticlassclassificationtask method)": [[77, "s3prl.task.UtteranceMultiClassClassificationTask.parse_cached_results"]], "predict() (s3prl.task.diarizationpit method)": [[77, "s3prl.task.DiarizationPIT.predict"]], "predict() (s3prl.task.dumpfeature method)": [[77, "s3prl.task.DumpFeature.predict"]], "predict() (s3prl.task.speakerverification method)": [[77, "s3prl.task.SpeakerVerification.predict"]], "predict() (s3prl.task.speech2textctctask method)": [[77, "s3prl.task.Speech2TextCTCTask.predict"]], "predict() (s3prl.task.task method)": [[77, "s3prl.task.Task.predict"]], "predict() (s3prl.task.utteranceclassificationtask method)": [[77, "s3prl.task.UtteranceClassificationTask.predict"]], "predict() (s3prl.task.utterancemulticlassclassificationtask method)": [[77, "s3prl.task.UtteranceMultiClassClassificationTask.predict"]], "reduction() (s3prl.task.diarizationpit method)": [[77, "s3prl.task.DiarizationPIT.reduction"]], "reduction() (s3prl.task.dumpfeature method)": [[77, "s3prl.task.DumpFeature.reduction"]], "reduction() (s3prl.task.speakerverification method)": [[77, "s3prl.task.SpeakerVerification.reduction"]], "reduction() (s3prl.task.speech2textctctask method)": [[77, "s3prl.task.Speech2TextCTCTask.reduction"]], "reduction() (s3prl.task.task method)": [[77, "s3prl.task.Task.reduction"]], "reduction() (s3prl.task.utteranceclassificationtask method)": [[77, "s3prl.task.UtteranceClassificationTask.reduction"]], "reduction() (s3prl.task.utterancemulticlassclassificationtask method)": [[77, "s3prl.task.UtteranceMultiClassClassificationTask.reduction"]], "s3prl.task": [[77, "module-s3prl.task"]], "set_state() (s3prl.task.diarizationpit method)": [[77, "s3prl.task.DiarizationPIT.set_state"]], "set_state() (s3prl.task.dumpfeature method)": [[77, "s3prl.task.DumpFeature.set_state"]], "set_state() (s3prl.task.speakerverification method)": [[77, "s3prl.task.SpeakerVerification.set_state"]], "set_state() (s3prl.task.speech2textctctask method)": [[77, "s3prl.task.Speech2TextCTCTask.set_state"]], "set_state() (s3prl.task.task method)": [[77, "s3prl.task.Task.set_state"]], "set_state() (s3prl.task.utteranceclassificationtask method)": [[77, "s3prl.task.UtteranceClassificationTask.set_state"]], "set_state() (s3prl.task.utterancemulticlassclassificationtask method)": [[77, "s3prl.task.UtteranceMultiClassClassificationTask.set_state"]], "test_reduction() (s3prl.task.diarizationpit method)": [[77, "s3prl.task.DiarizationPIT.test_reduction"]], "test_reduction() (s3prl.task.dumpfeature method)": [[77, "s3prl.task.DumpFeature.test_reduction"]], "test_reduction() (s3prl.task.speakerverification method)": [[77, "s3prl.task.SpeakerVerification.test_reduction"]], "test_reduction() (s3prl.task.speech2textctctask method)": [[77, "s3prl.task.Speech2TextCTCTask.test_reduction"]], "test_reduction() (s3prl.task.task method)": [[77, "s3prl.task.Task.test_reduction"]], "test_reduction() (s3prl.task.utteranceclassificationtask method)": [[77, "s3prl.task.UtteranceClassificationTask.test_reduction"]], "test_reduction() (s3prl.task.utterancemulticlassclassificationtask method)": [[77, "s3prl.task.UtteranceMultiClassClassificationTask.test_reduction"]], "test_step() (s3prl.task.diarizationpit method)": [[77, "s3prl.task.DiarizationPIT.test_step"]], "test_step() (s3prl.task.dumpfeature method)": [[77, "s3prl.task.DumpFeature.test_step"]], "test_step() (s3prl.task.speakerverification method)": [[77, "s3prl.task.SpeakerVerification.test_step"]], "test_step() (s3prl.task.speech2textctctask method)": [[77, "s3prl.task.Speech2TextCTCTask.test_step"]], "test_step() (s3prl.task.task method)": [[77, "s3prl.task.Task.test_step"]], "test_step() (s3prl.task.utteranceclassificationtask method)": [[77, "s3prl.task.UtteranceClassificationTask.test_step"]], "test_step() (s3prl.task.utterancemulticlassclassificationtask method)": [[77, "s3prl.task.UtteranceMultiClassClassificationTask.test_step"]], "train_reduction() (s3prl.task.diarizationpit method)": [[77, "s3prl.task.DiarizationPIT.train_reduction"]], "train_reduction() (s3prl.task.dumpfeature method)": [[77, "s3prl.task.DumpFeature.train_reduction"]], "train_reduction() (s3prl.task.speakerverification method)": [[77, "s3prl.task.SpeakerVerification.train_reduction"]], "train_reduction() (s3prl.task.speech2textctctask method)": [[77, "s3prl.task.Speech2TextCTCTask.train_reduction"]], "train_reduction() (s3prl.task.task method)": [[77, "s3prl.task.Task.train_reduction"]], "train_reduction() (s3prl.task.utteranceclassificationtask method)": [[77, "s3prl.task.UtteranceClassificationTask.train_reduction"]], "train_reduction() (s3prl.task.utterancemulticlassclassificationtask method)": [[77, "s3prl.task.UtteranceMultiClassClassificationTask.train_reduction"]], "train_step() (s3prl.task.diarizationpit method)": [[77, "s3prl.task.DiarizationPIT.train_step"]], "train_step() (s3prl.task.dumpfeature method)": [[77, "s3prl.task.DumpFeature.train_step"]], "train_step() (s3prl.task.speakerverification method)": [[77, "s3prl.task.SpeakerVerification.train_step"]], "train_step() (s3prl.task.speech2textctctask method)": [[77, "s3prl.task.Speech2TextCTCTask.train_step"]], "train_step() (s3prl.task.task method)": [[77, "s3prl.task.Task.train_step"]], "train_step() (s3prl.task.utteranceclassificationtask method)": [[77, "s3prl.task.UtteranceClassificationTask.train_step"]], "train_step() (s3prl.task.utterancemulticlassclassificationtask method)": [[77, "s3prl.task.UtteranceMultiClassClassificationTask.train_step"]], "training (s3prl.task.diarizationpit attribute)": [[77, "s3prl.task.DiarizationPIT.training"]], "training (s3prl.task.dumpfeature attribute)": [[77, "s3prl.task.DumpFeature.training"]], "training (s3prl.task.speakerverification attribute)": [[77, "s3prl.task.SpeakerVerification.training"]], "training (s3prl.task.speech2textctctask attribute)": [[77, "s3prl.task.Speech2TextCTCTask.training"]], "training (s3prl.task.task attribute)": [[77, "s3prl.task.Task.training"]], "training (s3prl.task.utteranceclassificationtask attribute)": [[77, "s3prl.task.UtteranceClassificationTask.training"]], "training (s3prl.task.utterancemulticlassclassificationtask attribute)": [[77, "s3prl.task.UtteranceMultiClassClassificationTask.training"]], "valid_reduction() (s3prl.task.diarizationpit method)": [[77, "s3prl.task.DiarizationPIT.valid_reduction"]], "valid_reduction() (s3prl.task.dumpfeature method)": [[77, "s3prl.task.DumpFeature.valid_reduction"]], "valid_reduction() (s3prl.task.speakerverification method)": [[77, "s3prl.task.SpeakerVerification.valid_reduction"]], "valid_reduction() (s3prl.task.speech2textctctask method)": [[77, "s3prl.task.Speech2TextCTCTask.valid_reduction"]], "valid_reduction() (s3prl.task.task method)": [[77, "s3prl.task.Task.valid_reduction"]], "valid_reduction() (s3prl.task.utteranceclassificationtask method)": [[77, "s3prl.task.UtteranceClassificationTask.valid_reduction"]], "valid_reduction() (s3prl.task.utterancemulticlassclassificationtask method)": [[77, "s3prl.task.UtteranceMultiClassClassificationTask.valid_reduction"]], "valid_step() (s3prl.task.diarizationpit method)": [[77, "s3prl.task.DiarizationPIT.valid_step"]], "valid_step() (s3prl.task.dumpfeature method)": [[77, "s3prl.task.DumpFeature.valid_step"]], "valid_step() (s3prl.task.speakerverification method)": [[77, "s3prl.task.SpeakerVerification.valid_step"]], "valid_step() (s3prl.task.speech2textctctask method)": [[77, "s3prl.task.Speech2TextCTCTask.valid_step"]], "valid_step() (s3prl.task.task method)": [[77, "s3prl.task.Task.valid_step"]], "valid_step() (s3prl.task.utteranceclassificationtask method)": [[77, "s3prl.task.UtteranceClassificationTask.valid_step"]], "valid_step() (s3prl.task.utterancemulticlassclassificationtask method)": [[77, "s3prl.task.UtteranceMultiClassClassificationTask.valid_step"]], "task (class in s3prl.task.base)": [[78, "s3prl.task.base.Task"]], "dump_patches (s3prl.task.base.task attribute)": [[78, "s3prl.task.base.Task.dump_patches"]], "forward() (s3prl.task.base.task method)": [[78, "s3prl.task.base.Task.forward"]], "get_state() (s3prl.task.base.task method)": [[78, "s3prl.task.base.Task.get_state"]], "parse_cached_results() (s3prl.task.base.task method)": [[78, "s3prl.task.base.Task.parse_cached_results"]], "predict() (s3prl.task.base.task method)": [[78, "s3prl.task.base.Task.predict"]], "reduction() (s3prl.task.base.task method)": [[78, "s3prl.task.base.Task.reduction"]], "s3prl.task.base": [[78, "module-s3prl.task.base"]], "set_state() (s3prl.task.base.task method)": [[78, "s3prl.task.base.Task.set_state"]], "test_reduction() (s3prl.task.base.task method)": [[78, "s3prl.task.base.Task.test_reduction"]], "test_step() (s3prl.task.base.task method)": [[78, "s3prl.task.base.Task.test_step"]], "train_reduction() (s3prl.task.base.task method)": [[78, "s3prl.task.base.Task.train_reduction"]], "train_step() (s3prl.task.base.task method)": [[78, "s3prl.task.base.Task.train_step"]], "training (s3prl.task.base.task attribute)": [[78, "s3prl.task.base.Task.training"]], "valid_reduction() (s3prl.task.base.task method)": [[78, "s3prl.task.base.Task.valid_reduction"]], "valid_step() (s3prl.task.base.task method)": [[78, "s3prl.task.base.Task.valid_step"]], "diarizationpit (class in s3prl.task.diarization)": [[79, "s3prl.task.diarization.DiarizationPIT"]], "dump_patches (s3prl.task.diarization.diarizationpit attribute)": [[79, "s3prl.task.diarization.DiarizationPIT.dump_patches"]], "forward() (s3prl.task.diarization.diarizationpit method)": [[79, "s3prl.task.diarization.DiarizationPIT.forward"]], "get_state() (s3prl.task.diarization.diarizationpit method)": [[79, "s3prl.task.diarization.DiarizationPIT.get_state"]], "parse_cached_results() (s3prl.task.diarization.diarizationpit method)": [[79, "s3prl.task.diarization.DiarizationPIT.parse_cached_results"]], "predict() (s3prl.task.diarization.diarizationpit method)": [[79, "s3prl.task.diarization.DiarizationPIT.predict"]], "reduction() (s3prl.task.diarization.diarizationpit method)": [[79, "s3prl.task.diarization.DiarizationPIT.reduction"]], "s3prl.task.diarization": [[79, "module-s3prl.task.diarization"]], "set_state() (s3prl.task.diarization.diarizationpit method)": [[79, "s3prl.task.diarization.DiarizationPIT.set_state"]], "test_reduction() (s3prl.task.diarization.diarizationpit method)": [[79, "s3prl.task.diarization.DiarizationPIT.test_reduction"]], "test_step() (s3prl.task.diarization.diarizationpit method)": [[79, "s3prl.task.diarization.DiarizationPIT.test_step"]], "train_reduction() (s3prl.task.diarization.diarizationpit method)": [[79, "s3prl.task.diarization.DiarizationPIT.train_reduction"]], "train_step() (s3prl.task.diarization.diarizationpit method)": [[79, "s3prl.task.diarization.DiarizationPIT.train_step"]], "training (s3prl.task.diarization.diarizationpit attribute)": [[79, "s3prl.task.diarization.DiarizationPIT.training"]], "valid_reduction() (s3prl.task.diarization.diarizationpit method)": [[79, "s3prl.task.diarization.DiarizationPIT.valid_reduction"]], "valid_step() (s3prl.task.diarization.diarizationpit method)": [[79, "s3prl.task.diarization.DiarizationPIT.valid_step"]], "dumpfeature (class in s3prl.task.dump_feature)": [[80, "s3prl.task.dump_feature.DumpFeature"]], "dump_patches (s3prl.task.dump_feature.dumpfeature attribute)": [[80, "s3prl.task.dump_feature.DumpFeature.dump_patches"]], "forward() (s3prl.task.dump_feature.dumpfeature method)": [[80, "s3prl.task.dump_feature.DumpFeature.forward"]], "get_state() (s3prl.task.dump_feature.dumpfeature method)": [[80, "s3prl.task.dump_feature.DumpFeature.get_state"]], "parse_cached_results() (s3prl.task.dump_feature.dumpfeature method)": [[80, "s3prl.task.dump_feature.DumpFeature.parse_cached_results"]], "predict() (s3prl.task.dump_feature.dumpfeature method)": [[80, "s3prl.task.dump_feature.DumpFeature.predict"]], "reduction() (s3prl.task.dump_feature.dumpfeature method)": [[80, "s3prl.task.dump_feature.DumpFeature.reduction"]], "s3prl.task.dump_feature": [[80, "module-s3prl.task.dump_feature"]], "set_state() (s3prl.task.dump_feature.dumpfeature method)": [[80, "s3prl.task.dump_feature.DumpFeature.set_state"]], "test_reduction() (s3prl.task.dump_feature.dumpfeature method)": [[80, "s3prl.task.dump_feature.DumpFeature.test_reduction"]], "test_step() (s3prl.task.dump_feature.dumpfeature method)": [[80, "s3prl.task.dump_feature.DumpFeature.test_step"]], "train_reduction() (s3prl.task.dump_feature.dumpfeature method)": [[80, "s3prl.task.dump_feature.DumpFeature.train_reduction"]], "train_step() (s3prl.task.dump_feature.dumpfeature method)": [[80, "s3prl.task.dump_feature.DumpFeature.train_step"]], "training (s3prl.task.dump_feature.dumpfeature attribute)": [[80, "s3prl.task.dump_feature.DumpFeature.training"]], "valid_reduction() (s3prl.task.dump_feature.dumpfeature method)": [[80, "s3prl.task.dump_feature.DumpFeature.valid_reduction"]], "valid_step() (s3prl.task.dump_feature.dumpfeature method)": [[80, "s3prl.task.dump_feature.DumpFeature.valid_step"]], "eventpredictiontask (class in s3prl.task.event_prediction)": [[81, "s3prl.task.event_prediction.EventPredictionTask"]], "activation (s3prl.task.event_prediction.eventpredictiontask attribute)": [[81, "s3prl.task.event_prediction.EventPredictionTask.activation"]], "dump_patches (s3prl.task.event_prediction.eventpredictiontask attribute)": [[81, "s3prl.task.event_prediction.EventPredictionTask.dump_patches"]], "eval_reduction() (s3prl.task.event_prediction.eventpredictiontask method)": [[81, "s3prl.task.event_prediction.EventPredictionTask.eval_reduction"]], "forward() (s3prl.task.event_prediction.eventpredictiontask method)": [[81, "s3prl.task.event_prediction.EventPredictionTask.forward"]], "get_state() (s3prl.task.event_prediction.eventpredictiontask method)": [[81, "s3prl.task.event_prediction.EventPredictionTask.get_state"]], "log_scores() (s3prl.task.event_prediction.eventpredictiontask method)": [[81, "s3prl.task.event_prediction.EventPredictionTask.log_scores"]], "parse_cached_results() (s3prl.task.event_prediction.eventpredictiontask method)": [[81, "s3prl.task.event_prediction.EventPredictionTask.parse_cached_results"]], "predict() (s3prl.task.event_prediction.eventpredictiontask method)": [[81, "s3prl.task.event_prediction.EventPredictionTask.predict"]], "reduction() (s3prl.task.event_prediction.eventpredictiontask method)": [[81, "s3prl.task.event_prediction.EventPredictionTask.reduction"]], "s3prl.task.event_prediction": [[81, "module-s3prl.task.event_prediction"]], "set_state() (s3prl.task.event_prediction.eventpredictiontask method)": [[81, "s3prl.task.event_prediction.EventPredictionTask.set_state"]], "test_reduction() (s3prl.task.event_prediction.eventpredictiontask method)": [[81, "s3prl.task.event_prediction.EventPredictionTask.test_reduction"]], "test_step() (s3prl.task.event_prediction.eventpredictiontask method)": [[81, "s3prl.task.event_prediction.EventPredictionTask.test_step"]], "train_reduction() (s3prl.task.event_prediction.eventpredictiontask method)": [[81, "s3prl.task.event_prediction.EventPredictionTask.train_reduction"]], "train_step() (s3prl.task.event_prediction.eventpredictiontask method)": [[81, "s3prl.task.event_prediction.EventPredictionTask.train_step"]], "training (s3prl.task.event_prediction.eventpredictiontask attribute)": [[81, "s3prl.task.event_prediction.EventPredictionTask.training"]], "valid_reduction() (s3prl.task.event_prediction.eventpredictiontask method)": [[81, "s3prl.task.event_prediction.EventPredictionTask.valid_reduction"]], "valid_step() (s3prl.task.event_prediction.eventpredictiontask method)": [[81, "s3prl.task.event_prediction.EventPredictionTask.valid_step"]], "scenepredictiontask (class in s3prl.task.scene_prediction)": [[82, "s3prl.task.scene_prediction.ScenePredictionTask"]], "activation (s3prl.task.scene_prediction.scenepredictiontask attribute)": [[82, "s3prl.task.scene_prediction.ScenePredictionTask.activation"]], "dump_patches (s3prl.task.scene_prediction.scenepredictiontask attribute)": [[82, "s3prl.task.scene_prediction.ScenePredictionTask.dump_patches"]], "forward() (s3prl.task.scene_prediction.scenepredictiontask method)": [[82, "s3prl.task.scene_prediction.ScenePredictionTask.forward"]], "get_state() (s3prl.task.scene_prediction.scenepredictiontask method)": [[82, "s3prl.task.scene_prediction.ScenePredictionTask.get_state"]], "log_scores() (s3prl.task.scene_prediction.scenepredictiontask method)": [[82, "s3prl.task.scene_prediction.ScenePredictionTask.log_scores"]], "parse_cached_results() (s3prl.task.scene_prediction.scenepredictiontask method)": [[82, "s3prl.task.scene_prediction.ScenePredictionTask.parse_cached_results"]], "predict() (s3prl.task.scene_prediction.scenepredictiontask method)": [[82, "s3prl.task.scene_prediction.ScenePredictionTask.predict"]], "reduction() (s3prl.task.scene_prediction.scenepredictiontask method)": [[82, "s3prl.task.scene_prediction.ScenePredictionTask.reduction"]], "s3prl.task.scene_prediction": [[82, "module-s3prl.task.scene_prediction"]], "set_state() (s3prl.task.scene_prediction.scenepredictiontask method)": [[82, "s3prl.task.scene_prediction.ScenePredictionTask.set_state"]], "test_reduction() (s3prl.task.scene_prediction.scenepredictiontask method)": [[82, "s3prl.task.scene_prediction.ScenePredictionTask.test_reduction"]], "test_step() (s3prl.task.scene_prediction.scenepredictiontask method)": [[82, "s3prl.task.scene_prediction.ScenePredictionTask.test_step"]], "train_reduction() (s3prl.task.scene_prediction.scenepredictiontask method)": [[82, "s3prl.task.scene_prediction.ScenePredictionTask.train_reduction"]], "train_step() (s3prl.task.scene_prediction.scenepredictiontask method)": [[82, "s3prl.task.scene_prediction.ScenePredictionTask.train_step"]], "training (s3prl.task.scene_prediction.scenepredictiontask attribute)": [[82, "s3prl.task.scene_prediction.ScenePredictionTask.training"]], "valid_reduction() (s3prl.task.scene_prediction.scenepredictiontask method)": [[82, "s3prl.task.scene_prediction.ScenePredictionTask.valid_reduction"]], "valid_step() (s3prl.task.scene_prediction.scenepredictiontask method)": [[82, "s3prl.task.scene_prediction.ScenePredictionTask.valid_step"]], "speakerclassifier (class in s3prl.task.speaker_verification_task)": [[83, "s3prl.task.speaker_verification_task.SpeakerClassifier"]], "speakerverification (class in s3prl.task.speaker_verification_task)": [[83, "s3prl.task.speaker_verification_task.SpeakerVerification"]], "dump_patches (s3prl.task.speaker_verification_task.speakerclassifier attribute)": [[83, "s3prl.task.speaker_verification_task.SpeakerClassifier.dump_patches"]], "dump_patches (s3prl.task.speaker_verification_task.speakerverification attribute)": [[83, "s3prl.task.speaker_verification_task.SpeakerVerification.dump_patches"]], "forward() (s3prl.task.speaker_verification_task.speakerclassifier method)": [[83, "s3prl.task.speaker_verification_task.SpeakerClassifier.forward"]], "forward() (s3prl.task.speaker_verification_task.speakerverification method)": [[83, "s3prl.task.speaker_verification_task.SpeakerVerification.forward"]], "get_state() (s3prl.task.speaker_verification_task.speakerverification method)": [[83, "s3prl.task.speaker_verification_task.SpeakerVerification.get_state"]], "input_size (s3prl.task.speaker_verification_task.speakerclassifier attribute)": [[83, "s3prl.task.speaker_verification_task.SpeakerClassifier.input_size"]], "input_size (s3prl.task.speaker_verification_task.speakerclassifier property)": [[83, "id0"]], "loss (s3prl.task.speaker_verification_task.speakerverification attribute)": [[83, "s3prl.task.speaker_verification_task.SpeakerVerification.loss"]], "output_size (s3prl.task.speaker_verification_task.speakerclassifier attribute)": [[83, "s3prl.task.speaker_verification_task.SpeakerClassifier.output_size"]], "output_size (s3prl.task.speaker_verification_task.speakerclassifier property)": [[83, "id1"]], "parse_cached_results() (s3prl.task.speaker_verification_task.speakerverification method)": [[83, "s3prl.task.speaker_verification_task.SpeakerVerification.parse_cached_results"]], "predict() (s3prl.task.speaker_verification_task.speakerverification method)": [[83, "s3prl.task.speaker_verification_task.SpeakerVerification.predict"]], "reduction() (s3prl.task.speaker_verification_task.speakerverification method)": [[83, "s3prl.task.speaker_verification_task.SpeakerVerification.reduction"]], "s3prl.task.speaker_verification_task": [[83, "module-s3prl.task.speaker_verification_task"]], "set_state() (s3prl.task.speaker_verification_task.speakerverification method)": [[83, "s3prl.task.speaker_verification_task.SpeakerVerification.set_state"]], "test_reduction() (s3prl.task.speaker_verification_task.speakerverification method)": [[83, "s3prl.task.speaker_verification_task.SpeakerVerification.test_reduction"]], "test_step() (s3prl.task.speaker_verification_task.speakerverification method)": [[83, "s3prl.task.speaker_verification_task.SpeakerVerification.test_step"]], "train_reduction() (s3prl.task.speaker_verification_task.speakerverification method)": [[83, "s3prl.task.speaker_verification_task.SpeakerVerification.train_reduction"]], "train_step() (s3prl.task.speaker_verification_task.speakerverification method)": [[83, "s3prl.task.speaker_verification_task.SpeakerVerification.train_step"]], "training (s3prl.task.speaker_verification_task.speakerclassifier attribute)": [[83, "s3prl.task.speaker_verification_task.SpeakerClassifier.training"]], "training (s3prl.task.speaker_verification_task.speakerverification attribute)": [[83, "s3prl.task.speaker_verification_task.SpeakerVerification.training"]], "valid_reduction() (s3prl.task.speaker_verification_task.speakerverification method)": [[83, "s3prl.task.speaker_verification_task.SpeakerVerification.valid_reduction"]], "valid_step() (s3prl.task.speaker_verification_task.speakerverification method)": [[83, "s3prl.task.speaker_verification_task.SpeakerVerification.valid_step"]], "speech2textctcexample (class in s3prl.task.speech2text_ctc_task)": [[84, "s3prl.task.speech2text_ctc_task.Speech2TextCTCExample"]], "speech2textctctask (class in s3prl.task.speech2text_ctc_task)": [[84, "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask"]], "dump_patches (s3prl.task.speech2text_ctc_task.speech2textctcexample attribute)": [[84, "s3prl.task.speech2text_ctc_task.Speech2TextCTCExample.dump_patches"]], "dump_patches (s3prl.task.speech2text_ctc_task.speech2textctctask attribute)": [[84, "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask.dump_patches"]], "forward() (s3prl.task.speech2text_ctc_task.speech2textctcexample method)": [[84, "s3prl.task.speech2text_ctc_task.Speech2TextCTCExample.forward"]], "forward() (s3prl.task.speech2text_ctc_task.speech2textctctask method)": [[84, "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask.forward"]], "get_state() (s3prl.task.speech2text_ctc_task.speech2textctctask method)": [[84, "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask.get_state"]], "input_size (s3prl.task.speech2text_ctc_task.speech2textctcexample property)": [[84, "s3prl.task.speech2text_ctc_task.Speech2TextCTCExample.input_size"]], "output_size (s3prl.task.speech2text_ctc_task.speech2textctcexample property)": [[84, "s3prl.task.speech2text_ctc_task.Speech2TextCTCExample.output_size"]], "parse_cached_results() (s3prl.task.speech2text_ctc_task.speech2textctctask method)": [[84, "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask.parse_cached_results"]], "predict() (s3prl.task.speech2text_ctc_task.speech2textctctask method)": [[84, "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask.predict"]], "reduction() (s3prl.task.speech2text_ctc_task.speech2textctctask method)": [[84, "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask.reduction"]], "s3prl.task.speech2text_ctc_task": [[84, "module-s3prl.task.speech2text_ctc_task"]], "set_state() (s3prl.task.speech2text_ctc_task.speech2textctctask method)": [[84, "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask.set_state"]], "test_reduction() (s3prl.task.speech2text_ctc_task.speech2textctctask method)": [[84, "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask.test_reduction"]], "test_step() (s3prl.task.speech2text_ctc_task.speech2textctctask method)": [[84, "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask.test_step"]], "train_reduction() (s3prl.task.speech2text_ctc_task.speech2textctctask method)": [[84, "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask.train_reduction"]], "train_step() (s3prl.task.speech2text_ctc_task.speech2textctctask method)": [[84, "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask.train_step"]], "training (s3prl.task.speech2text_ctc_task.speech2textctcexample attribute)": [[84, "s3prl.task.speech2text_ctc_task.Speech2TextCTCExample.training"]], "training (s3prl.task.speech2text_ctc_task.speech2textctctask attribute)": [[84, "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask.training"]], "valid_reduction() (s3prl.task.speech2text_ctc_task.speech2textctctask method)": [[84, "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask.valid_reduction"]], "valid_step() (s3prl.task.speech2text_ctc_task.speech2textctctask method)": [[84, "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask.valid_step"]], "utteranceclassificationtask (class in s3prl.task.utterance_classification_task)": [[85, "s3prl.task.utterance_classification_task.UtteranceClassificationTask"]], "utteranceclassifierexample (class in s3prl.task.utterance_classification_task)": [[85, "s3prl.task.utterance_classification_task.UtteranceClassifierExample"]], "dump_patches (s3prl.task.utterance_classification_task.utteranceclassificationtask attribute)": [[85, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.dump_patches"]], "dump_patches (s3prl.task.utterance_classification_task.utteranceclassifierexample attribute)": [[85, "s3prl.task.utterance_classification_task.UtteranceClassifierExample.dump_patches"]], "forward() (s3prl.task.utterance_classification_task.utteranceclassificationtask method)": [[85, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.forward"]], "forward() (s3prl.task.utterance_classification_task.utteranceclassifierexample method)": [[85, "s3prl.task.utterance_classification_task.UtteranceClassifierExample.forward"]], "get_state() (s3prl.task.utterance_classification_task.utteranceclassificationtask method)": [[85, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.get_state"]], "input_size (s3prl.task.utterance_classification_task.utteranceclassificationtask attribute)": [[85, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.input_size"]], "input_size (s3prl.task.utterance_classification_task.utteranceclassifierexample attribute)": [[85, "s3prl.task.utterance_classification_task.UtteranceClassifierExample.input_size"]], "input_size (s3prl.task.utterance_classification_task.utteranceclassifierexample property)": [[85, "id0"]], "output_size (s3prl.task.utterance_classification_task.utteranceclassificationtask attribute)": [[85, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.output_size"]], "output_size (s3prl.task.utterance_classification_task.utteranceclassifierexample attribute)": [[85, "s3prl.task.utterance_classification_task.UtteranceClassifierExample.output_size"]], "output_size (s3prl.task.utterance_classification_task.utteranceclassifierexample property)": [[85, "id1"]], "parse_cached_results() (s3prl.task.utterance_classification_task.utteranceclassificationtask method)": [[85, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.parse_cached_results"]], "predict() (s3prl.task.utterance_classification_task.utteranceclassificationtask method)": [[85, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.predict"]], "reduction() (s3prl.task.utterance_classification_task.utteranceclassificationtask method)": [[85, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.reduction"]], "s3prl.task.utterance_classification_task": [[85, "module-s3prl.task.utterance_classification_task"]], "set_state() (s3prl.task.utterance_classification_task.utteranceclassificationtask method)": [[85, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.set_state"]], "test_reduction() (s3prl.task.utterance_classification_task.utteranceclassificationtask method)": [[85, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.test_reduction"]], "test_step() (s3prl.task.utterance_classification_task.utteranceclassificationtask method)": [[85, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.test_step"]], "train_reduction() (s3prl.task.utterance_classification_task.utteranceclassificationtask method)": [[85, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.train_reduction"]], "train_step() (s3prl.task.utterance_classification_task.utteranceclassificationtask method)": [[85, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.train_step"]], "training (s3prl.task.utterance_classification_task.utteranceclassificationtask attribute)": [[85, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.training"]], "training (s3prl.task.utterance_classification_task.utteranceclassifierexample attribute)": [[85, "s3prl.task.utterance_classification_task.UtteranceClassifierExample.training"]], "valid_reduction() (s3prl.task.utterance_classification_task.utteranceclassificationtask method)": [[85, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.valid_reduction"]], "valid_step() (s3prl.task.utterance_classification_task.utteranceclassificationtask method)": [[85, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.valid_step"]], "s3prl.util": [[86, "module-s3prl.util"]], "benchmark (class in s3prl.util.benchmark)": [[87, "s3prl.util.benchmark.benchmark"]], "s3prl.util.benchmark": [[87, "module-s3prl.util.benchmark"]], "download() (in module s3prl.util.download)": [[88, "s3prl.util.download.download"]], "get_dir() (in module s3prl.util.download)": [[88, "s3prl.util.download.get_dir"]], "s3prl.util.download": [[88, "module-s3prl.util.download"]], "set_dir() (in module s3prl.util.download)": [[88, "s3prl.util.download.set_dir"]], "urls_to_filepaths() (in module s3prl.util.download)": [[88, "s3prl.util.download.urls_to_filepaths"]], "parse_overrides() (in module s3prl.util.override)": [[89, "s3prl.util.override.parse_overrides"]], "s3prl.util.override": [[89, "module-s3prl.util.override"]], "get_pseudo_wavs() (in module s3prl.util.pseudo_data)": [[90, "s3prl.util.pseudo_data.get_pseudo_wavs"]], "pseudo_audio (class in s3prl.util.pseudo_data)": [[90, "s3prl.util.pseudo_data.pseudo_audio"]], "s3prl.util.pseudo_data": [[90, "module-s3prl.util.pseudo_data"]], "fix_random_seeds() (in module s3prl.util.seed)": [[91, "s3prl.util.seed.fix_random_seeds"]], "s3prl.util.seed": [[91, "module-s3prl.util.seed"]]}})