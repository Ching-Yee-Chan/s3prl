Search.setIndex({"docnames": ["_autosummary/s3prl.dataio", "_autosummary/s3prl.dataio.corpus", "_autosummary/s3prl.dataio.corpus.base", "_autosummary/s3prl.dataio.corpus.fluent_speech_commands", "_autosummary/s3prl.dataio.corpus.iemocap", "_autosummary/s3prl.dataio.corpus.librilight", "_autosummary/s3prl.dataio.corpus.librispeech", "_autosummary/s3prl.dataio.corpus.quesst14", "_autosummary/s3prl.dataio.corpus.snips", "_autosummary/s3prl.dataio.corpus.speech_commands", "_autosummary/s3prl.dataio.corpus.voxceleb1sid", "_autosummary/s3prl.dataio.corpus.voxceleb1sv", "_autosummary/s3prl.dataio.dataset", "_autosummary/s3prl.dataio.dataset.base", "_autosummary/s3prl.dataio.dataset.diarization", "_autosummary/s3prl.dataio.dataset.encode", "_autosummary/s3prl.dataio.dataset.load_audio", "_autosummary/s3prl.dataio.dataset.util", "_autosummary/s3prl.dataio.encoder", "_autosummary/s3prl.dataio.encoder.category", "_autosummary/s3prl.dataio.encoder.g2p", "_autosummary/s3prl.dataio.encoder.tokenizer", "_autosummary/s3prl.dataio.encoder.vocabulary", "_autosummary/s3prl.dataio.sampler", "_autosummary/s3prl.dataio.sampler.balanced_weighted_sampler", "_autosummary/s3prl.dataio.sampler.distributed_sampler", "_autosummary/s3prl.dataio.sampler.fixed_batch_size_batch_sampler", "_autosummary/s3prl.dataio.sampler.group_same_item_sampler", "_autosummary/s3prl.dataio.sampler.max_timestamp_batch_sampler", "_autosummary/s3prl.dataio.sampler.sorted_sampler", "_autosummary/s3prl.metric", "_autosummary/s3prl.metric.common", "_autosummary/s3prl.metric.diarization", "_autosummary/s3prl.metric.slot_filling", "_autosummary/s3prl.nn", "_autosummary/s3prl.nn.beam_decoder", "_autosummary/s3prl.nn.common", "_autosummary/s3prl.nn.hear", "_autosummary/s3prl.nn.interface", "_autosummary/s3prl.nn.linear", "_autosummary/s3prl.nn.pit", "_autosummary/s3prl.nn.pooling", "_autosummary/s3prl.nn.rnn", "_autosummary/s3prl.nn.speaker_loss", "_autosummary/s3prl.nn.speaker_model", "_autosummary/s3prl.nn.specaug", "_autosummary/s3prl.nn.upstream", "_autosummary/s3prl.problem", "_autosummary/s3prl.problem.asr", "_autosummary/s3prl.problem.asr.run", "_autosummary/s3prl.problem.asr.superb_asr", "_autosummary/s3prl.problem.asr.superb_pr", "_autosummary/s3prl.problem.asr.superb_sf", "_autosummary/s3prl.problem.asv", "_autosummary/s3prl.problem.asv.run", "_autosummary/s3prl.problem.asv.superb_asv", "_autosummary/s3prl.problem.base", "_autosummary/s3prl.problem.common", "_autosummary/s3prl.problem.common.hear_beijing_opera", "_autosummary/s3prl.problem.common.hear_cremad", "_autosummary/s3prl.problem.common.hear_dcase_2016_task2", "_autosummary/s3prl.problem.common.hear_esc50", "_autosummary/s3prl.problem.common.hear_fsd", "_autosummary/s3prl.problem.common.hear_gsc5hr", "_autosummary/s3prl.problem.common.hear_gtzan", "_autosummary/s3prl.problem.common.hear_gtzan_music_speech", "_autosummary/s3prl.problem.common.hear_gunshot", "_autosummary/s3prl.problem.common.hear_libricount", "_autosummary/s3prl.problem.common.hear_maestro", "_autosummary/s3prl.problem.common.hear_nsynth5hr", "_autosummary/s3prl.problem.common.hear_stroke", "_autosummary/s3prl.problem.common.hear_tonic", "_autosummary/s3prl.problem.common.hear_vocal", "_autosummary/s3prl.problem.common.hear_vox_lingual", "_autosummary/s3prl.problem.common.run", "_autosummary/s3prl.problem.common.superb_er", "_autosummary/s3prl.problem.common.superb_ic", "_autosummary/s3prl.problem.common.superb_ks", "_autosummary/s3prl.problem.common.superb_sid", "_autosummary/s3prl.problem.diarization", "_autosummary/s3prl.problem.diarization.run", "_autosummary/s3prl.problem.diarization.superb_sd", "_autosummary/s3prl.problem.diarization.util", "_autosummary/s3prl.task", "_autosummary/s3prl.task.base", "_autosummary/s3prl.task.diarization", "_autosummary/s3prl.task.dump_feature", "_autosummary/s3prl.task.event_prediction", "_autosummary/s3prl.task.scene_prediction", "_autosummary/s3prl.task.speaker_verification_task", "_autosummary/s3prl.task.speech2text_ctc_task", "_autosummary/s3prl.task.utterance_classification_task", "_autosummary/s3prl.util", "_autosummary/s3prl.util.benchmark", "_autosummary/s3prl.util.download", "_autosummary/s3prl.util.override", "_autosummary/s3prl.util.pseudo_data", "_autosummary/s3prl.util.seed", "contribute/private", "contribute/public", "index", "tutorial/installation", "tutorial/problem", "tutorial/upstream_collection"], "filenames": ["_autosummary/s3prl.dataio.rst", "_autosummary/s3prl.dataio.corpus.rst", "_autosummary/s3prl.dataio.corpus.base.rst", "_autosummary/s3prl.dataio.corpus.fluent_speech_commands.rst", "_autosummary/s3prl.dataio.corpus.iemocap.rst", "_autosummary/s3prl.dataio.corpus.librilight.rst", "_autosummary/s3prl.dataio.corpus.librispeech.rst", "_autosummary/s3prl.dataio.corpus.quesst14.rst", "_autosummary/s3prl.dataio.corpus.snips.rst", "_autosummary/s3prl.dataio.corpus.speech_commands.rst", "_autosummary/s3prl.dataio.corpus.voxceleb1sid.rst", "_autosummary/s3prl.dataio.corpus.voxceleb1sv.rst", "_autosummary/s3prl.dataio.dataset.rst", "_autosummary/s3prl.dataio.dataset.base.rst", "_autosummary/s3prl.dataio.dataset.diarization.rst", "_autosummary/s3prl.dataio.dataset.encode.rst", "_autosummary/s3prl.dataio.dataset.load_audio.rst", "_autosummary/s3prl.dataio.dataset.util.rst", "_autosummary/s3prl.dataio.encoder.rst", "_autosummary/s3prl.dataio.encoder.category.rst", "_autosummary/s3prl.dataio.encoder.g2p.rst", "_autosummary/s3prl.dataio.encoder.tokenizer.rst", "_autosummary/s3prl.dataio.encoder.vocabulary.rst", "_autosummary/s3prl.dataio.sampler.rst", "_autosummary/s3prl.dataio.sampler.balanced_weighted_sampler.rst", "_autosummary/s3prl.dataio.sampler.distributed_sampler.rst", "_autosummary/s3prl.dataio.sampler.fixed_batch_size_batch_sampler.rst", "_autosummary/s3prl.dataio.sampler.group_same_item_sampler.rst", "_autosummary/s3prl.dataio.sampler.max_timestamp_batch_sampler.rst", "_autosummary/s3prl.dataio.sampler.sorted_sampler.rst", "_autosummary/s3prl.metric.rst", "_autosummary/s3prl.metric.common.rst", "_autosummary/s3prl.metric.diarization.rst", "_autosummary/s3prl.metric.slot_filling.rst", "_autosummary/s3prl.nn.rst", "_autosummary/s3prl.nn.beam_decoder.rst", "_autosummary/s3prl.nn.common.rst", "_autosummary/s3prl.nn.hear.rst", "_autosummary/s3prl.nn.interface.rst", "_autosummary/s3prl.nn.linear.rst", "_autosummary/s3prl.nn.pit.rst", "_autosummary/s3prl.nn.pooling.rst", "_autosummary/s3prl.nn.rnn.rst", "_autosummary/s3prl.nn.speaker_loss.rst", "_autosummary/s3prl.nn.speaker_model.rst", "_autosummary/s3prl.nn.specaug.rst", "_autosummary/s3prl.nn.upstream.rst", "_autosummary/s3prl.problem.rst", "_autosummary/s3prl.problem.asr.rst", "_autosummary/s3prl.problem.asr.run.rst", "_autosummary/s3prl.problem.asr.superb_asr.rst", "_autosummary/s3prl.problem.asr.superb_pr.rst", "_autosummary/s3prl.problem.asr.superb_sf.rst", "_autosummary/s3prl.problem.asv.rst", "_autosummary/s3prl.problem.asv.run.rst", "_autosummary/s3prl.problem.asv.superb_asv.rst", "_autosummary/s3prl.problem.base.rst", "_autosummary/s3prl.problem.common.rst", "_autosummary/s3prl.problem.common.hear_beijing_opera.rst", "_autosummary/s3prl.problem.common.hear_cremad.rst", "_autosummary/s3prl.problem.common.hear_dcase_2016_task2.rst", "_autosummary/s3prl.problem.common.hear_esc50.rst", "_autosummary/s3prl.problem.common.hear_fsd.rst", "_autosummary/s3prl.problem.common.hear_gsc5hr.rst", "_autosummary/s3prl.problem.common.hear_gtzan.rst", "_autosummary/s3prl.problem.common.hear_gtzan_music_speech.rst", "_autosummary/s3prl.problem.common.hear_gunshot.rst", "_autosummary/s3prl.problem.common.hear_libricount.rst", "_autosummary/s3prl.problem.common.hear_maestro.rst", "_autosummary/s3prl.problem.common.hear_nsynth5hr.rst", "_autosummary/s3prl.problem.common.hear_stroke.rst", "_autosummary/s3prl.problem.common.hear_tonic.rst", "_autosummary/s3prl.problem.common.hear_vocal.rst", "_autosummary/s3prl.problem.common.hear_vox_lingual.rst", "_autosummary/s3prl.problem.common.run.rst", "_autosummary/s3prl.problem.common.superb_er.rst", "_autosummary/s3prl.problem.common.superb_ic.rst", "_autosummary/s3prl.problem.common.superb_ks.rst", "_autosummary/s3prl.problem.common.superb_sid.rst", "_autosummary/s3prl.problem.diarization.rst", "_autosummary/s3prl.problem.diarization.run.rst", "_autosummary/s3prl.problem.diarization.superb_sd.rst", "_autosummary/s3prl.problem.diarization.util.rst", "_autosummary/s3prl.task.rst", "_autosummary/s3prl.task.base.rst", "_autosummary/s3prl.task.diarization.rst", "_autosummary/s3prl.task.dump_feature.rst", "_autosummary/s3prl.task.event_prediction.rst", "_autosummary/s3prl.task.scene_prediction.rst", "_autosummary/s3prl.task.speaker_verification_task.rst", "_autosummary/s3prl.task.speech2text_ctc_task.rst", "_autosummary/s3prl.task.utterance_classification_task.rst", "_autosummary/s3prl.util.rst", "_autosummary/s3prl.util.benchmark.rst", "_autosummary/s3prl.util.download.rst", "_autosummary/s3prl.util.override.rst", "_autosummary/s3prl.util.pseudo_data.rst", "_autosummary/s3prl.util.seed.rst", "contribute/private.rst", "contribute/public.rst", "index.rst", "tutorial/installation.rst", "tutorial/problem.rst", "tutorial/upstream_collection.rst"], "titles": ["dataio", "corpus", "base", "fluent_speech_commands", "iemocap", "librilight", "librispeech", "quesst14", "snips", "speech_commands", "voxceleb1sid", "voxceleb1sv", "dataset", "base", "diarization", "encode", "load_audio", "util", "encoder", "category", "g2p", "tokenizer", "vocabulary", "sampler", "balanced_weighted_sampler", "distributed_sampler", "fixed_batch_size_batch_sampler", "group_same_item_sampler", "max_timestamp_batch_sampler", "sorted_sampler", "metric", "common", "diarization", "slot_filling", "nn", "beam_decoder", "common", "hear", "interface", "linear", "pit", "pooling", "rnn", "speaker_loss", "speaker_model", "specaug", "upstream", "problem", "asr", "run", "superb_asr", "superb_pr", "superb_sf", "asv", "run", "superb_asv", "base", "common", "hear_beijing_opera", "hear_cremad", "hear_dcase_2016_task2", "hear_esc50", "hear_fsd", "hear_gsc5hr", "hear_gtzan", "hear_gtzan_music_speech", "hear_gunshot", "hear_libricount", "hear_maestro", "hear_nsynth5hr", "hear_stroke", "hear_tonic", "hear_vocal", "hear_vox_lingual", "run", "superb_er", "superb_ic", "superb_ks", "superb_sid", "diarization", "run", "superb_sd", "util", "task", "base", "diarization", "dump_feature", "event_prediction", "scene_prediction", "speaker_verification_task", "speech2text_ctc_task", "utterance_classification_task", "util", "benchmark", "download", "override", "pseudo_data", "seed", "Internal S3PRL Development", "Contribute to S3PRL", "S3PRL", "Install S3PRL", "Use Problem module to run customizable recipes", "S3PRL Upstream Collection"], "terms": {"s3prl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "thi": [0, 1, 6, 14, 17, 18, 20, 23, 24, 29, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 98, 99, 100, 101, 102, 103], "packag": [0, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 98, 101], "handl": [0, 17, 34, 35], "data": [0, 1, 3, 4, 6, 14, 17, 18, 22, 27, 29, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 96, 103], "relat": [0, 34, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "sub": [0, 1, 9, 17], "task": [0, 17, 33, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 87, 88, 89, 90, 91, 99, 100, 103], "dataio": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78], "pars": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 95], "commonli": [1, 26, 29, 31], "us": [1, 3, 12, 16, 17, 18, 21, 23, 24, 26, 29, 31, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 98, 100, 101, 103], "standard": [1, 17, 34, 38, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 98], "dictionari": [1, 17, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 103], "structur": 1, "class": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 96, 101, 102], "dataset_root": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 78, 102], "str": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 33, 34, 35, 36, 37, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 96, 102, 103], "n_job": [1, 3, 4, 5, 6, 9, 10, 12, 17, 50, 76, 78], "int": [1, 3, 4, 5, 6, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 89, 90, 91, 93, 96, 97, 102], "4": [1, 3, 4, 5, 6, 9, 10, 17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 89, 90, 91], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 101, 103], "base": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 93, 96], "fluent": [1, 3, 55, 76], "speech": [1, 3, 9, 48, 55, 76, 77, 83, 90, 100, 103], "command": [1, 3, 9, 55, 76, 77, 95, 102], "dataset": [1, 3, 4, 9, 17, 21, 23, 24, 29, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "paramet": [1, 3, 4, 6, 9, 12, 16, 17, 18, 20, 21, 22, 23, 26, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 97], "The": [1, 3, 4, 6, 17, 23, 26, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 100, 102, 103], "root": [1, 3, 4, 9, 17, 55, 60, 61, 62, 68, 75, 76, 77, 78], "properti": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 17, 18, 21, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 60, 61, 62, 68, 89, 90, 91], "all_data": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11], "return": [1, 3, 4, 6, 9, 17, 18, 20, 21, 22, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 102], "all": [1, 3, 4, 6, 17, 29, 34, 36, 37, 38, 40, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 94, 97, 98, 99, 101, 102, 103], "point": [1, 3, 4, 6, 17, 27, 29, 47, 48, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78], "dict": [1, 2, 3, 4, 6, 17, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102], "format": [1, 3, 4, 6, 17, 18, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 98, 103], "data_id1": [1, 3, 4, 6], "path": [1, 3, 4, 6, 9, 11, 18, 21, 22, 34, 35, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "waveform": [1, 3, 4, 6, 34, 38, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 90, 103], "speakerid": [1, 3], "speaker": [1, 3, 4, 6, 30, 31, 34, 41, 42, 43, 44, 47, 53, 54, 55, 79, 80, 81, 82, 83, 89, 103], "name": [1, 3, 4, 6, 12, 17, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 100, 103], "transcript": [1, 3, 6, 34, 35, 47, 48, 50, 51, 52, 83, 90], "action": [1, 3, 76], "object": [1, 2, 3, 7, 14, 15, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 34, 35, 46, 56, 60, 61, 62, 68, 76, 83, 90, 96], "": [1, 3, 6, 17, 18, 21, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 100], "target": [1, 3, 17, 30, 31, 60, 61, 62, 68, 100, 103], "locat": [1, 3, 76], "where": [1, 3, 17, 47, 48, 52], "happen": [1, 3, 17], "data_id2": [1, 3, 4, 6], "data_split": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11], "list": [1, 3, 6, 8, 9, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 42, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 98], "train_data": [1, 3], "valid_data": [1, 3], "test_data": [1, 3], "each": [1, 3, 17, 23, 26, 28, 29, 34, 38, 40, 41, 42, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 83, 87, 88, 89, 90, 103], "i": [1, 3, 12, 14, 17, 18, 21, 22, 23, 24, 26, 29, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 98, 99, 100, 101, 102, 103], "follow": [1, 3, 17, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 98, 99, 100, 101, 102, 103], "specifi": [1, 3, 17, 18, 22, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 98, 103], "data_split_id": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11], "train_id": [1, 3], "valid_id": [1, 3], "test_id": [1, 3], "contain": [1, 3, 4, 9, 17, 23, 29, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 99], "data_id": [1, 3], "can": [1, 3, 17, 18, 20, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 98, 99, 100, 102, 103], "kei": [1, 3, 17, 27, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91], "access": [1, 3, 17, 60, 61, 62, 68, 98], "classmethod": [1, 3, 4, 5, 6, 7, 9, 10, 11, 15, 17, 18, 21, 34, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "download_dataset": [1, 3, 4, 5, 6, 7, 9, 10], "tgt_dir": [1, 3, 4, 7, 9], "none": [1, 3, 4, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 34, 36, 37, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 87, 88, 89, 90, 91, 97, 102, 103], "download": [1, 3, 34, 46, 55], "unzip": [1, 3], "fluent_speech_commands_dataset": [1, 3], "directori": [1, 3, 6, 14, 17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "mani": [1, 3, 17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 103], "differ": [1, 3, 17, 34, 36, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 103], "static": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 17, 83], "dataframe_to_datapoint": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11], "df": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 17, 102], "datafram": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 17, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "unique_name_fn": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11], "callabl": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 23, 28, 29, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 89], "wav_path": [1, 4, 6, 9, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81], "act": [1, 4, 17], "improvis": [1, 4], "script": [1, 4, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 102], "emot": [1, 4, 75], "label": [1, 4, 12, 15, 18, 19, 23, 24, 30, 31, 32, 34, 40, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 85, 88, 89, 90, 91, 103], "session_id": [1, 4], "session": [1, 4, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "get_whole_sess": [1, 4], "index": [1, 4, 12, 13, 14, 15, 16, 18, 19, 34, 46, 47, 62, 79, 81, 100, 102], "select": [1, 4, 17, 34, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "from": [1, 4, 12, 16, 17, 18, 21, 22, 23, 29, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 99, 100, 103], "1": [1, 4, 12, 14, 17, 18, 22, 23, 24, 30, 31, 34, 35, 37, 38, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 95, 96, 100, 103], "2": [1, 4, 17, 34, 35, 37, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 96, 100], "3": [1, 4, 9, 17, 30, 31, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 89, 90, 91, 95, 96, 100, 103], "5": [1, 4, 17, 34, 35, 44, 45, 47, 53, 55, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 79, 81], "singl": [1, 4, 17, 34, 36, 38, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "record": [1, 4, 47, 79, 81], "same": [1, 4, 7, 17, 27, 34, 36, 40, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 102], "get_session_with_act": [1, 4], "specif": [1, 4, 17, 34, 37, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 103], "either": [1, 4, 17, 47, 53, 54, 55, 60, 61, 62, 68], "abstract": [1, 2, 4, 5, 15, 18, 62, 83, 84, 85, 86, 88, 89, 90, 91], "train_split": [1, 5, 6], "train": [1, 6, 9, 18, 22, 23, 25, 29, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 100, 102, 103], "clean": [1, 6, 47, 48, 50, 51], "100": [1, 6, 17, 45, 47, 48, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 81, 102], "valid_split": [1, 6], "dev": [1, 6, 9, 10, 17, 47, 48, 50, 51, 95, 98, 101], "test_split": [1, 6], "test": [1, 6, 7, 9, 10, 23, 24, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 90, 95, 100, 101], "link": [1, 6, 17, 34, 41, 60, 61, 62, 68, 103], "http": [1, 6, 17, 18, 21, 34, 37, 41, 44, 62, 98, 101, 103], "www": [1, 6, 21, 34, 41, 44], "openslr": [1, 6], "org": [1, 6, 17, 21, 41, 44, 103], "12": [1, 6, 17, 103], "option": [1, 6, 12, 15, 16, 17, 18, 20, 21, 22, 23, 25, 28, 34, 35, 36, 37, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 87, 88, 89, 90, 91, 95, 97, 103], "number": [1, 6, 17, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 98, 103], "job": [1, 6, 17], "default": [1, 6, 17, 18, 20, 21, 22, 23, 26, 29, 34, 35, 36, 37, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 90, 97, 99, 103], "split": [1, 6, 9, 10, 83, 86], "valid": [1, 6, 7, 9, 34, 40, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 90, 103], "get_corpus_split": [1, 6], "gender": [1, 6], "corpus_split": [1, 6], "sampl": [1, 6, 34, 41, 83, 90], "belong": [1, 6], "target_dir": [1, 6, 10, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 102], "10m": [1, 5], "fold0": [1, 5], "valid_queri": [1, 7], "test_queri": [1, 7], "doc": [1, 7, 17, 98], "share": [1, 7, 17, 40, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 103], "document": [1, 7, 17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 101, 103], "databas": [1, 7], "train_speak": [1, 8, 47, 48, 52], "valid_speak": [1, 8, 47, 48, 52], "test_speak": [1, 8, 47, 48, 52], "gsc1": [1, 9, 47, 57, 77], "gsc1_test": [1, 9, 47, 57, 77], "should": [1, 9, 17, 23, 26, 28, 29, 38, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 98, 99], "folder": [1, 9, 17], "set": [1, 9, 17, 34, 36, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 102], "split_dataset": [1, 9], "root_dir": [1, 9], "union": [1, 9, 18, 22, 30, 31, 83, 90], "max_uttr_per_class": [1, 9], "134217727": [1, 9], "tupl": [1, 9, 12, 16, 17, 34, 36, 37, 38, 39, 40, 42, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 89], "dir": [1, 9], "predefin": [1, 9], "valu": [1, 9, 17, 34, 43, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 87, 88, 102], "origin": [1, 9, 17, 47, 79, 81, 98, 103], "paper": [1, 9, 34, 41, 103], "class_nam": [1, 9], "audio_path": [1, 9], "valid_list": [1, 9], "abov": [1, 9, 17, 47, 79, 81, 102], "type": [1, 9, 17, 18, 20, 21, 22, 30, 31, 34, 35, 37, 38, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 89, 90, 91], "train_list": [1, 9], "parse_train_valid_data_list": [1, 9], "data_list": [1, 9], "train_dataset_root": [1, 9], "parse_test_data_list": [1, 9], "test_dataset_root": [1, 9], "path_to_unique_nam": [1, 9], "list_to_dict": [1, 9], "id": [1, 9, 34, 35, 40, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 103], "cache_root": [1, 10], "posixpath": [1, 10, 17, 60, 61, 62, 68], "home": [1, 10, 17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "runner": [1, 10, 95], "cach": [1, 10, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "download_dir": [1, 11], "force_download": [1, 11, 55], "bool": [1, 11, 15, 17, 18, 20, 21, 22, 23, 25, 26, 28, 29, 30, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 96], "true": [1, 11, 12, 14, 17, 18, 22, 34, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 94], "path2uid": [1, 11], "path2data": [1, 11], "speakerid2label": [1, 11], "format_path": [1, 11], "format_test_tri": [1, 11], "corpu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 102], "author": [3, 4, 5, 6, 7, 8, 9, 10, 11, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 54, 55, 56, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 89, 90, 91, 93, 94, 95, 96, 97, 103], "leo": [3, 4, 7, 9, 10, 19, 24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 39, 41, 42, 45, 46, 49, 50, 51, 52, 54, 55, 56, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 91, 93, 94, 95, 96], "2022": [3, 4, 5, 6, 7, 8, 9, 10, 11, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 54, 55, 56, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 89, 90, 91, 93, 94, 95, 96, 97, 103], "cheng": [3, 4, 7, 9, 10, 76, 103], "liang": [3, 4, 7, 9, 10], "heng": [5, 6, 8, 20, 21, 22, 31, 33, 35, 42, 50, 51, 52, 90, 97, 103], "jui": [5, 6, 8, 20, 21, 22, 31, 33, 35, 42, 50, 51, 52, 90, 97, 103], "chang": [5, 6, 8, 17, 20, 21, 22, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 98, 99, 102, 103], "audio": [8, 34, 46, 100], "googl": [9, 77], "v1": [9, 77], "voxceleb1": [10, 11, 55, 78], "classif": [10, 91, 103], "verif": [11, 41, 43, 44, 53, 55, 89], "haibin": [11, 31, 41, 43, 44, 54, 55, 89], "wu": [11, 31, 41, 43, 44, 54, 55, 89, 103], "arg": [12, 13, 14, 15, 16, 17, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 87, 89, 94], "kwd": [12, 13, 14, 15, 16, 47, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 83, 87, 89], "getinfo": [12, 13, 14, 15, 16], "mode": [12, 14, 17, 18, 21, 22, 23, 29, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 87, 89, 90, 101], "data_dir": [12, 14, 47, 79, 81, 82], "chunk_siz": [12, 14, 17, 47, 79, 81], "2000": [12, 14, 47, 48, 50, 51, 52, 57, 62, 76, 77, 78, 79, 81], "frame_shift": [12, 14, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81], "256": [12, 14, 34, 36, 39, 47, 48, 51, 57, 62, 75, 76, 77, 78], "subsampl": [12, 14, 47, 79, 81], "rate": [12, 14, 17, 30, 31, 34, 38, 42, 44, 46, 47, 79, 81], "16000": [12, 14, 16, 34, 46, 47, 60, 62, 79, 81, 96, 103], "use_last_sampl": [12, 14, 47, 79, 81], "label_delai": [12, 14, 47, 79, 81], "0": [12, 14, 17, 18, 22, 30, 31, 34, 35, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 96, 100], "num_speak": [12, 14, 47, 79, 80, 81], "encod": [12, 17, 19, 20, 21, 22, 34, 42, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 83, 89, 103], "categoryencod": [12, 47, 53, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 83, 87, 88, 89, 91], "text": [12, 15, 17, 18, 20, 21, 22, 41, 47, 48, 50, 51, 52, 60, 61, 62, 68, 83, 90], "token": [12, 22, 30, 31, 34, 35, 47, 48, 49, 50, 51, 52, 57, 76, 77, 83, 90, 103], "iob": [12, 15, 18, 21, 47, 48, 52], "filepath": [12, 16, 18, 21, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 94], "start_sec": [12, 16, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 81], "float": [12, 16, 17, 18, 22, 30, 31, 33, 34, 35, 37, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 87, 94, 96], "end_sec": [12, 16, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 81], "sox_effect": [12, 16], "individual_sox_effect": [12, 16], "max_sec": [12, 16, 47, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 96], "gener": [12, 16, 17, 18, 22, 47, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 103], "random": [12, 16, 17, 23, 24, 29, 97], "sample_r": [12, 16, 34, 42, 47, 48, 50, 52, 60, 96], "load": [12, 14, 16, 21, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 100], "start": [12, 14, 16, 17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "end": [12, 14, 16, 17, 34, 46, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 81], "6": [12, 17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "cache_dir": [12, 17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 102], "hold": 14, "kaldi": [14, 47, 79, 80, 81], "style": [14, 34, 42, 47, 79, 80, 81, 100], "load_wav": 14, "recid": 14, "wavfil": 14, "given": [14, 17, 18, 22, 34, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "time": [14, 17, 34, 41, 46, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 93, 94, 99, 103], "categori": [15, 18, 60, 62, 83, 87, 88, 89, 91, 103], "decod": [15, 18, 19, 21, 34, 35, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 90], "indic": [15, 17, 18, 19, 23, 26, 28, 47, 60, 62, 79, 81], "idx": [15, 18, 21, 34, 35], "ignore_repeat": [15, 18, 21], "fals": [15, 17, 18, 20, 21, 23, 25, 26, 28, 29, 30, 31, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 96, 102], "vocab_s": [15, 18, 21, 22], "token_typ": [15, 18, 21], "load_from_fil": [15, 18, 21], "vocab_fil": [15, 18, 21, 50], "pad_idx": [15, 18, 21], "eos_idx": [15, 18, 21], "unk_idx": [15, 18, 21], "backend": [17, 97], "verbos": 17, "timeout": 17, "pre_dispatch": 17, "batch_siz": [17, 23, 24, 26, 29, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 83, 89, 90, 91, 103], "auto": [17, 34, 46], "temp_fold": 17, "max_nbyt": 17, "1m": [17, 103], "mmap_mod": 17, "r": [17, 60, 61, 62, 68, 100], "prefer": 17, "requir": [17, 34, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 102, 103], "logger": 17, "helper": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 102], "readabl": 17, "map": [17, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73], "read": [17, 18, 22, 60, 61, 62, 68], "more": [17, 60, 68], "user": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "guid": 17, "maximum": [17, 18, 22, 28], "concurr": 17, "run": [17, 38, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 91, 98, 100], "python": [17, 21, 47, 48, 50, 52, 60, 68, 102], "worker": 17, "process": [17, 34, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 100, 103], "when": [17, 18, 20, 34, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 98, 101], "multiprocess": [17, 34, 46], "size": [17, 18, 22, 23, 29, 34, 35, 36, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 90, 103], "thread": [17, 94], "pool": [17, 34, 36, 37, 38, 44, 62], "If": [17, 18, 20, 21, 22, 23, 26, 28, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 98, 99, 102, 103], "cpu": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 96], "ar": [17, 23, 26, 28, 29, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 98, 100, 101, 103], "comput": [17, 30, 31, 34, 38, 41, 46, 60, 62, 83, 84, 85, 86, 87, 88, 89, 91], "code": [17, 44, 93, 100, 101, 103], "which": [17, 29, 34, 38, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 98, 99, 100, 102, 103], "debug": 17, "For": [17, 24, 44, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 102, 103], "below": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 102, 103], "n_cpu": 17, "thu": [17, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 60, 62, 83, 84, 85, 86, 87, 88, 89, 90, 91], "one": [17, 38, 46, 47, 60, 61, 62, 68, 79, 81, 83, 84, 85, 86, 87, 88, 89, 91, 100], "marker": 17, "unset": 17, "interpret": [17, 60, 61, 62, 68], "sequenti": 17, "execut": 17, "unless": [17, 99], "call": [17, 38, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 102], "perform": [17, 38, 46, 60, 62, 83, 84, 85, 86, 87, 88, 89, 91], "under": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 98], "parallel_backend": 17, "context": [17, 44], "manag": 17, "anoth": [17, 60, 61, 62, 68], "parallelbackendbas": 17, "instanc": [17, 23, 29, 38, 40, 46, 60, 61, 62, 68, 83, 84, 85, 86, 87, 88, 89, 91], "loki": 17, "implement": [17, 21, 23, 26, 60, 62, 99, 100], "support": [17, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 99, 100, 102, 103], "induc": 17, "some": [17, 34, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 103], "commun": 17, "memori": 17, "overhead": 17, "exchang": 17, "input": [17, 34, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 90, 103], "output": [17, 34, 35, 36, 38, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 89, 90, 91, 103], "On": 17, "rare": 17, "system": [17, 60, 61, 62, 68, 103], "pyiodid": 17, "mai": [17, 60, 61, 62, 68, 103], "avail": [17, 34, 37, 46, 62, 103], "previou": 17, "less": 17, "robust": [17, 34, 41, 103], "than": [17, 23, 29, 34, 46, 47, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 94], "veri": [17, 34, 46], "low": 17, "suffer": 17, "global": [17, 47, 79, 81], "lock": 17, "function": [17, 23, 29, 30, 31, 38, 46, 60, 61, 62, 68, 83, 84, 85, 86, 87, 88, 89, 91, 94, 98, 99, 101, 102], "reli": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "lot": [17, 99, 100, 101], "mostli": 17, "bottleneck": 17, "compil": 17, "extens": 17, "explicitli": 17, "releas": [17, 103], "gil": 17, "cython": 17, "loop": [17, 83, 90], "wrap": [17, 25, 47, 48, 50, 52], "nogil": 17, "block": [17, 60, 61, 62, 68, 93, 103], "an": [17, 34, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 90, 99, 102, 103], "expens": 17, "librari": 17, "numpi": 17, "final": [17, 34, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 89], "you": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 98, 99, 100, 101, 102, 103], "regist": [17, 34, 38, 46, 60, 62, 83, 84, 85, 86, 87, 88, 89, 91, 100], "register_parallel_backend": 17, "allow": [17, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 60, 62, 83, 84, 85, 86, 87, 88, 89, 90, 91], "your": [17, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 98, 99, 100, 101], "like": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 98, 103], "It": [17, 100], "recommend": 17, "hard": [17, 47, 60, 61, 62, 68, 79, 80, 81, 99], "instead": [17, 34, 38, 46, 47, 60, 61, 62, 68, 79, 81, 83, 84, 85, 86, 87, 88, 89, 91, 99, 103], "soft": [17, 47, 79, 80, 81], "hint": 17, "constraint": 17, "so": [17, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 101, 103], "make": [17, 60, 61, 62, 68, 98], "possibl": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "outsid": [17, 99], "choos": 17, "wa": [17, 50, 60, 62], "ignor": [17, 34, 38, 46, 60, 62, 83, 84, 85, 86, 87, 88, 89, 91, 98], "sharedmem": 17, "host": 17, "even": [17, 60, 61, 62, 68], "ask": 17, "non": [17, 34, 35, 103], "level": [17, 34, 38, 39], "zero": 17, "progress": 17, "messag": 17, "print": [17, 102], "50": [17, 47, 48, 50, 52, 57, 68], "sent": [17, 18, 21], "stdout": 17, "frequenc": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "increas": 17, "10": [17, 47, 53, 55, 57, 60, 61, 62, 63, 64, 69, 103], "iter": [17, 34, 35, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "report": [17, 47, 53, 54, 55], "limit": [17, 28, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 98], "complet": 17, "ani": [17, 25, 60, 61, 62, 68, 87, 94, 103], "take": [17, 34, 38, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 102, 103], "longer": [17, 23, 29, 47, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78], "timeouterror": 17, "rais": [17, 18, 20, 21, 22, 60, 61, 62, 68], "onli": [17, 23, 29, 34, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 98, 99, 101, 102, 103], "appli": [17, 34, 46, 98], "integ": 17, "express": 17, "batch": [17, 23, 24, 25, 26, 27, 28, 29, 34, 41, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 103], "pre": [17, 47, 50, 98, 100, 103], "dispatch": 17, "reason": 17, "never": 17, "starv": 17, "note": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 102], "basic": [17, 18, 20, 22, 34, 46], "arithmet": 17, "here": [17, 50, 103], "modul": [17, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 98, 100], "atom": 17, "onc": [17, 34, 46, 98], "individu": 17, "evalu": [17, 30, 31, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 100], "fast": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "slower": 17, "becaus": [17, 60, 61, 62, 68], "togeth": [17, 29, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "mitig": 17, "strategi": 17, "keep": [17, 99, 101], "track": 17, "dynam": [17, 28], "adjust": 17, "order": [17, 47, 60, 61, 62, 68, 79, 81], "half": [17, 23, 29], "second": [17, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 81], "heurist": 17, "initi": [17, 34, 36, 37, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 103], "ha": [17, 47, 48, 50, 52, 60, 61, 62, 68, 99, 103], "littl": 17, "larger": 17, "prove": 17, "bring": 17, "gain": 17, "case": [17, 34, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 99], "memmap": 17, "larg": [17, 34, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 99, 103], "arrai": [17, 83], "try": [17, 47, 79, 80, 81], "joblib_temp_fold": 17, "environ": 17, "variabl": 17, "shm": 17, "exist": [17, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 99, 100, 103], "writabl": 17, "ram": 17, "disk": 17, "filesystem": [17, 60, 61, 62, 68], "modern": 17, "linux": 17, "distribut": [17, 25, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "temporari": [17, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 98], "overridden": [17, 38, 46, 47, 60, 62, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91], "tmp": 17, "tmpdir": 17, "temp": 17, "typic": 17, "unix": 17, "oper": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "activ": [17, 34, 36, 37, 62, 87, 88], "threshold": [17, 34, 35, 47, 79, 80, 81], "pass": [17, 38, 46, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 91, 98], "trigger": 17, "autom": 17, "byte": [17, 60, 61, 62, 68], "human": 17, "string": [17, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 83, 90, 91], "e": [17, 34, 42, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 98, 101, 103], "g": [17, 34, 42, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "megabyt": 17, "disabl": [17, 34, 36, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "w": 17, "c": [17, 44, 103], "other": [17, 34, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 103], "defin": [17, 38, 44, 46, 47, 50, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 102], "stabl": 17, "refer": [17, 21, 30, 31, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 103], "html": [17, 98], "also": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 103], "see": [17, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 103], "detail": [17, 103], "applic": [17, 60, 61, 62, 68], "argument": [17, 18, 22, 34, 36, 37, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 95, 103], "main": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 100, 103], "addit": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "raw": [17, 18, 103], "futur": 17, "api": [17, 103], "exampl": [17, 34, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 90, 95, 102, 103], "particular": 17, "sinc": [17, 38, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 98], "avoid": 17, "construct": [17, 60, 61, 62, 68, 103], "easier": 17, "inform": [17, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 60, 61, 62, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 103], "traceback": 17, "error": [17, 18, 20, 30, 31, 60, 61, 62, 68], "client": 17, "side": [17, 99], "enabl": [17, 101], "turn": [17, 34, 46, 60, 61, 62, 68], "off": [17, 34, 46], "without": [17, 34, 46, 60, 61, 62, 68, 100], "codepath": 17, "earli": 17, "captur": 17, "pickl": [17, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91], "meter": 17, "interrupt": 17, "ctrl": 17, "flexibl": 17, "control": [17, 23, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 98], "abil": 17, "effici": [17, 47, 79, 81], "datastructur": 17, "A": [17, 18, 22, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 100], "simpl": [17, 19, 57, 102], "math": [17, 34, 35, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78], "import": [17, 34, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 100, 101, 103], "sqrt": 17, "joblib": 17, "rang": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "7": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "8": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 103], "9": [17, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 98], "reshap": 17, "sever": [17, 47, 60, 61, 62, 68, 79, 81, 103], "modf": 17, "re": [17, 34, 46, 55, 94, 98, 100], "zip": [17, 34, 46, 103], "higher": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "sleep": 17, "_": 17, "done": [17, 60, 61, 62, 68], "elaps": 17, "out": [17, 47, 60, 61, 62, 68, 79, 80, 81, 98], "finish": 17, "how": [17, 23, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 99, 102, 103], "line": [17, 18, 22, 47, 48, 50, 51, 52, 95, 100, 102], "well": [17, 103], "except": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "though": 17, "child": 17, "heapq": 17, "nlargest": 17, "n": [17, 96], "abcd": 17, "typeerror": 17, "mon": 17, "nov": 17, "11": [17, 47, 79, 81], "37": 17, "46": 17, "2012": [17, 103], "pid": 17, "12934": 17, "usr": 17, "bin": 17, "lib": 17, "python2": 17, "pyc": 17, "419": 17, "420": 17, "sort": [17, 18, 22, 23, 29], "revers": [17, 60, 61, 62, 68], "421": 17, "422": 17, "simpler": 17, "decor": 17, "423": 17, "424": 17, "izip": 17, "count": 17, "425": 17, "result": [17, 34, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 98, 102], "_nlargest": 17, "426": 17, "itemgett": 17, "undecor": 17, "427": 17, "428": 17, "slowest": 17, "method": [17, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 100, 102], "must": [17, 60, 61, 62, 68], "___________________________________________________________________________": 17, "produc": [17, 60, 61, 62, 68], "consum": [17, 34, 46], "situat": 17, "fly": [17, 47, 48, 52], "first": [17, 23, 26, 28, 47, 48, 50, 51, 52, 53, 55, 60, 61, 62, 68, 99, 102], "befor": [17, 23, 26, 28, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 99, 103], "new": [17, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 98, 99, 102], "def": [17, 102], "yield": [17, 60, 61, 62, 68], "remain": [17, 60, 61, 62, 68, 75], "dispatch_next": 17, "meant": 17, "callback": 17, "we": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 98, 99, 102, 103], "safeti": 17, "dispatch_one_batch": 17, "protect": 17, "against": 17, "consumpt": 17, "unprotect": 17, "prefetch": 17, "next": 17, "them": [17, 34, 38, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 102, 103], "effect": 17, "els": [17, 60, 61, 62, 68], "safe": [17, 94], "msg": 17, "obj": 17, "indent": 17, "represent": [17, 34, 38, 46, 60, 61, 62, 68, 103], "print_progress": 17, "displai": 17, "fraction": 17, "self": [17, 34, 35, 41, 100, 102, 103], "warn": 17, "retriev": [17, 103], "kwarg": [17, 30, 33, 44, 46, 60, 61, 62, 68, 83, 84, 87, 89], "purepath": [17, 60, 61, 62, 68], "subclass": [17, 38, 46, 60, 61, 62, 68, 83, 84, 85, 86, 87, 88, 89, 91, 102], "repres": [17, 60, 61, 62, 68], "unlik": [17, 60, 61, 62, 68], "offer": [17, 60, 61, 62, 68], "do": [17, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 60, 61, 62, 68, 75, 83, 84, 85, 86, 87, 88, 89, 90, 91, 98, 99], "depend": [17, 34, 60, 61, 62, 68, 98, 100, 101, 103], "instanti": [17, 60, 61, 62, 68], "windowspath": [17, 60, 61, 62, 68], "directli": [17, 34, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 99, 102], "cannot": [17, 23, 24, 60, 61, 62, 68], "posix": [17, 60, 61, 62, 68], "vice": [17, 60, 61, 62, 68], "versa": [17, 60, 61, 62, 68], "cwd": [17, 60, 61, 62, 68], "current": [17, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81], "work": [17, 60, 61, 62, 68, 99, 102], "o": [17, 47, 48, 52, 60, 61, 62, 68, 100, 103], "getcwd": [17, 60, 61, 62, 68], "expandus": [17, 60, 61, 62, 68], "samefil": [17, 60, 61, 62, 68], "other_path": [17, 60, 61, 62, 68], "whether": [17, 23, 29, 34, 37, 42, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 99], "file": [17, 18, 20, 22, 34, 35, 41, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 94, 98, 102], "iterdir": [17, 60, 61, 62, 68], "over": [17, 34, 41, 60, 61, 62, 68], "doe": [17, 47, 53, 55, 60, 61, 62, 68, 103], "special": [17, 50, 60, 61, 62, 68], "glob": [17, 60, 61, 62, 68], "pattern": [17, 60, 61, 62, 68], "subtre": [17, 60, 61, 62, 68], "kind": [17, 44, 60, 61, 62, 68, 99], "includ": [17, 18, 21, 22, 60, 61, 62, 68, 97, 101, 103], "match": [17, 60, 61, 62, 68, 83, 89], "rel": [17, 60, 61, 62, 68, 103], "rglob": [17, 60, 61, 62, 68], "recurs": [17, 60, 61, 62, 68], "anywher": [17, 60, 61, 62, 68], "absolut": [17, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81], "version": [17, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 60, 61, 62, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 98, 103], "doesn": [17, 60, 61, 62, 68], "t": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 103], "anyth": [17, 60, 61, 62, 68], "No": [17, 60, 61, 62, 68], "normal": [17, 34, 35, 37, 42, 46, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81], "kept": [17, 34, 46, 60, 61, 62, 68], "along": [17, 60, 61, 62, 68], "resolv": [17, 60, 61, 62, 68], "get": [17, 23, 29, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 103], "canon": [17, 60, 61, 62, 68], "strict": [17, 60, 61, 62, 68], "symlink": [17, 60, 61, 62, 68], "wai": [17, 60, 61, 62, 68], "slash": [17, 60, 61, 62, 68], "backslash": [17, 60, 61, 62, 68], "window": [17, 60, 61, 62, 68], "stat": [17, 60, 61, 62, 68], "owner": [17, 60, 61, 62, 68], "login": [17, 60, 61, 62, 68], "group": [17, 23, 27, 29, 60, 61, 62, 68], "gid": [17, 60, 61, 62, 68], "open": [17, 60, 61, 62, 68], "buffer": [17, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 60, 61, 62, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91], "newlin": [17, 60, 61, 62, 68], "built": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "read_byt": [17, 60, 61, 62, 68], "close": [17, 60, 61, 62, 68, 99], "read_text": [17, 60, 61, 62, 68], "write_byt": [17, 60, 61, 62, 68], "write": [17, 60, 61, 62, 68, 100, 102], "write_text": [17, 60, 61, 62, 68], "touch": [17, 60, 61, 62, 68], "438": [17, 60, 61, 62, 68], "exist_ok": [17, 60, 61, 62, 68], "creat": [17, 22, 60, 61, 62, 68, 96, 102], "mkdir": [17, 60, 61, 62, 68], "511": [17, 60, 61, 62, 68], "parent": [17, 60, 61, 62, 68], "chmod": [17, 60, 61, 62, 68], "permiss": [17, 60, 61, 62, 68], "lchmod": [17, 60, 61, 62, 68], "rather": [17, 60, 61, 62, 68], "its": [17, 60, 61, 62, 68, 103], "unlink": [17, 60, 61, 62, 68], "missing_ok": [17, 60, 61, 62, 68], "remov": [17, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 98], "rmdir": [17, 60, 61, 62, 68], "empti": [17, 34, 36, 37, 60, 61, 62, 68], "lstat": [17, 60, 61, 62, 68], "statu": [17, 60, 61, 62, 68], "renam": [17, 60, 61, 62, 68], "replac": [17, 60, 61, 62, 68], "overwrit": [17, 60, 61, 62, 68], "symlink_to": [17, 60, 61, 62, 68], "target_is_directori": [17, 60, 61, 62, 68], "link_to": [17, 60, 61, 62, 68], "despit": [17, 60, 61, 62, 68], "implic": [17, 60, 61, 62, 68], "is_dir": [17, 60, 61, 62, 68], "is_fil": [17, 60, 61, 62, 68], "regular": [17, 60, 61, 62, 68, 98], "is_mount": [17, 60, 61, 62, 68], "check": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 100], "mount": [17, 60, 61, 62, 68], "is_symlink": [17, 60, 61, 62, 68], "symbol": [17, 60, 61, 62, 68], "is_block_devic": [17, 60, 61, 62, 68], "devic": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 96], "is_char_devic": [17, 60, 61, 62, 68], "charact": [17, 18, 21, 22, 30, 31, 47, 48, 50, 51, 52, 60, 61, 62, 68], "anchor": [17, 60, 61, 62, 68], "concaten": [17, 60, 61, 62, 68], "drive": [17, 60, 61, 62, 68], "as_posix": [17, 60, 61, 62, 68], "forward": [17, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102], "as_uri": [17, 60, 61, 62, 68], "uri": [17, 60, 61, 62, 68], "prefix": [17, 47, 57, 60, 61, 62, 68, 76], "letter": [17, 60, 61, 62, 68], "unc": [17, 60, 61, 62, 68], "is_absolut": [17, 60, 61, 62, 68], "both": [17, 47, 53, 55, 60, 61, 62, 68], "is_fifo": [17, 60, 61, 62, 68], "fifo": [17, 60, 61, 62, 68], "is_reserv": [17, 60, 61, 62, 68], "reserv": [17, 60, 61, 62, 68], "joinpath": [17, 60, 61, 62, 68], "combin": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "subpath": [17, 60, 61, 62, 68], "total": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 103], "path_pattern": [17, 60, 61, 62, 68], "compon": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "logic": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "sequenc": [17, 34, 35, 42, 60, 61, 62, 68, 103], "part": [17, 60, 61, 62, 68], "provid": [17, 60, 61, 62, 68, 102], "relative_to": [17, 60, 61, 62, 68], "identifi": [17, 60, 61, 62, 68], "valueerror": [17, 60, 61, 62, 68], "stem": [17, 60, 61, 62, 68], "minu": [17, 60, 61, 62, 68], "last": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "suffix": [17, 60, 61, 62, 68], "lead": [17, 60, 61, 62, 68], "period": [17, 60, 61, 62, 68], "txt": [17, 60, 61, 62, 68, 98, 103], "These": [17, 34, 46, 47, 48, 50, 51, 52, 60, 61, 62, 68], "tar": [17, 60, 61, 62, 68], "gz": [17, 60, 61, 62, 68], "with_nam": [17, 60, 61, 62, 68], "with_suffix": [17, 60, 61, 62, 68], "add": [17, 34, 46, 60, 61, 62, 68, 98, 99], "is_socket": [17, 60, 61, 62, 68], "socket": [17, 60, 61, 62, 68], "expand": [17, 60, 61, 62, 68], "default_factori": [17, 60, 61, 62, 68], "factori": [17, 60, 61, 62, 68], "present": [17, 34, 46, 47, 50, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 103], "__getitem__": [17, 60, 61, 62, 68], "compar": [17, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 60, 61, 62, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91], "equal": [17, 30, 31, 60, 61, 62, 68], "item": [17, 23, 27, 29, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "treat": [17, 60, 61, 62, 68], "thei": [17, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 98], "were": [17, 60, 61, 62, 68], "constructor": [17, 60, 61, 62, 68], "keyword": [17, 60, 61, 62, 68], "clear": [17, 60, 61, 62, 68], "d": [17, 60, 61, 62, 68, 94, 98], "copi": [17, 60, 61, 62, 68], "shallow": [17, 60, 61, 62, 68], "__missing__": [17, 60, 61, 62, 68], "fromkei": [17, 60, 61, 62, 68], "view": [17, 60, 61, 62, 68], "pop": [17, 60, 61, 62, 68], "k": [17, 60, 61, 62, 68, 77, 103], "v": [17, 60, 61, 62, 68], "correspond": [17, 34, 35, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 83, 89], "found": [17, 60, 61, 62, 68], "otherwis": [17, 60, 61, 62, 68], "keyerror": [17, 60, 61, 62, 68], "popitem": [17, 60, 61, 62, 68], "pair": [17, 60, 61, 62, 68], "lifo": [17, 60, 61, 62, 68], "setdefault": [17, 60, 61, 62, 68], "insert": [17, 45, 60, 61, 62, 68], "updat": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "f": [17, 60, 61, 62, 68, 103], "lack": [17, 60, 61, 62, 68], "In": [17, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 99], "__": 17, "exactli": [17, 102], "progressbar": 17, "everi": [17, 34, 35, 38, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 98, 102], "request": [17, 99, 100], "monitor_interv": 17, "monitor": 17, "format_sizeof": 17, "num": 17, "divisor": 17, "1000": [17, 18, 22, 47, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75], "greater": 17, "uniti": 17, "si": 17, "magnitud": 17, "post": 17, "postfix": 17, "between": 17, "unit": [17, 100, 101, 103], "format_interv": 17, "clock": 17, "h": [17, 34, 38, 46, 103], "mm": 17, "ss": 17, "format_num": 17, "intellig": [17, 103], "scientif": 17, "notat": 17, "3g": 17, "numer": [17, 18, 83, 89], "status_print": 17, "place": [17, 103], "refresh": [17, 34, 46, 94], "format_met": 17, "ncol": 17, "ascii": 17, "unit_scal": 17, "bar_format": 17, "unit_divisor": 17, "colour": 17, "extra_kwarg": 17, "bar": 17, "expect": [17, 34, 46, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 99], "meaningless": 17, "statist": [17, 34, 41], "eta": 17, "width": 17, "entir": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 99], "resiz": 17, "stai": 17, "within": [17, 38, 46, 60, 62, 83, 84, 85, 86, 87, 88, 89, 91], "bound": 17, "fallback": 17, "desc": 17, "unicod": 17, "smooth": [17, 47, 79, 80, 81], "fill": [17, 33, 102], "123456789": 17, "appropri": [17, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 60, 62, 83, 84, 85, 86, 87, 88, 89, 90, 91], "metric": [17, 31, 32, 33, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 87, 88, 90], "m": [17, 98, 102], "etc": [17, 34, 35, 102], "scale": [17, 34, 35, 43, 47, 53, 55, 103], "manual": 17, "overrid": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 102], "custom": [17, 100], "impact": 17, "l_bar": 17, "r_bar": 17, "percentag": 17, "0f": 17, "n_fmt": 17, "total_fmt": 17, "rate_fmt": 17, "var": 17, "elapsed_": 17, "nrow": 17, "rate_noinv": 17, "rate_noinv_fmt": 17, "rate_inv": 17, "rate_inv_fmt": 17, "remaining_": 17, "trail": 17, "automat": [17, 103], "after": [17, 34, 35, 37, 38, 47, 53, 54, 55, 60, 62, 79, 80, 81, 94, 98, 102, 103], "latter": [17, 38, 46, 60, 62, 83, 84, 85, 86, 87, 88, 89, 91], "similar": [17, 29], "usual": [17, 34, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 99, 101], "howev": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 101, 102], "382": 17, "counter": 17, "green": 17, "00ff00": 17, "readi": [17, 98, 102], "nolock": 17, "via": 17, "overlap": [17, 47, 79, 81], "external_write_mod": 17, "exit": 17, "stream": 17, "set_lock": 17, "get_lock": 17, "panda": [17, 102], "tqdm_kwarg": 17, "core": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 99, 102], "frame": [17, 34, 35, 36, 38, 39, 41, 44, 47, 79, 81], "seri": 17, "groupbi": 17, "dataframegroupbi": 17, "seriesgroupbi": 17, "progress_appli": 17, "upon": 17, "pd": [17, 47, 57, 76, 102], "np": [17, 83, 90], "gui": 17, "tqdm_gui": 17, "randint": 17, "100000": 17, "now": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 98, 102], "lambda": 17, "x": [17, 30, 31, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 83, 85, 86, 87, 88, 89, 90, 91, 102], "stackoverflow": 17, "com": [17, 18, 34, 37, 41, 44, 62, 101, 103], "question": 17, "18603270": 17, "dure": [17, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "files": 17, "initialis": 17, "current_buff": 17, "len": [17, 83, 89, 91], "highli": [17, 24, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "possibli": 17, "necessari": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "reach": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "increment": 17, "intern": [17, 100, 103], "consid": [17, 99, 103], "3f": 17, "cleanup": 17, "leav": 17, "lock_arg": 17, "forc": [17, 34, 46], "acquir": 17, "unpaus": 17, "restart": 17, "timer": 17, "reset": 17, "repeat": 17, "set_descript": 17, "modifi": [17, 21, 37, 62, 98, 100, 101], "descript": [17, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 103], "set_description_str": 17, "append": 17, "set_postfix": 17, "ordered_dict": 17, "datatyp": 17, "ordereddict": 17, "set_postfix_str": 17, "expans": 17, "moveto": 17, "format_dict": 17, "public": 17, "member": 17, "po": [17, 55, 78, 89, 103], "sp": 17, "overload": 17, "inherit": 17, "some_frontend": 17, "what": 17, "repr": [17, 60, 62], "posit": [17, 30, 31, 47, 79, 81, 103], "ab": [17, 44], "wrapattr": 17, "have": [17, 34, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 98], "file_obj": 17, "fobj": 17, "while": [17, 38, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 99, 102], "chunk": [17, 47, 79, 81], "break": 17, "file_list": [18, 20], "allow_unk": [18, 20], "graphem": [18, 20], "phonem": [18, 20, 21, 30, 31, 47, 48, 50, 51], "lexicon": [18, 20, 34, 35], "word": [18, 20, 21, 22, 30, 31, 34, 35, 47, 48, 50, 52], "recogn": [18, 20], "convert": [18, 20, 47, 79, 81, 95], "sentenc": [18, 20, 47, 48, 50, 51, 52], "bert": [18, 21, 100], "github": [18, 37, 44, 62, 98, 99, 101], "huggingfac": 18, "pytorch": 18, "transform": [18, 103], "blob": [18, 37, 62], "master": [18, 103], "pytorch_transform": 18, "tokenization_bert": 18, "py": [18, 37, 62, 102], "vocab_list": [18, 21], "idx_to_vocab": [18, 21], "vocab_to_idx": [18, 21], "vocab": [18, 21, 22], "slot": [18, 21, 33, 50], "slots_fil": [18, 21, 50], "spm": [18, 21], "subword": [18, 21, 22, 50], "sentencepiec": [18, 21, 22], "text_list": [18, 22], "coverag": [18, 22], "sort_vocab": [18, 22], "vocabulari": [18, 21, 50], "would": [18, 22], "actual": [18, 22, 83, 89, 98, 99], "alphabet": [18, 22], "text_fil": [18, 22], "output_fil": [18, 22], "character_coverag": [18, 22], "save": [18, 22, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91], "8000": [18, 22, 98], "importerror": [18, 22], "instal": [18, 22, 98, 100, 103], "model": [18, 22, 34, 35, 36, 37, 38, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 100, 102, 103], "read_lin": [18, 22], "10000000": [18, 22], "vocab_arg": [18, 22, 50], "categor": 19, "tensorflow_dataset": 21, "featur": [21, 38, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 86, 90, 99, 100, 102, 103], "tensorflow": 21, "api_doc": 21, "tfd": 21, "text_lib": 21, "notimplementederror": 21, "librispeech": [21, 50, 102, 103], "71": 21, "torch": [23, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 87, 88, 89, 90, 91, 100, 102, 103], "dataload": [23, 26, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "duplic": [23, 24, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "seed": [23, 24, 26, 28, 29, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 96], "12345678": [23, 24, 26, 28, 29, 60, 62], "alwai": [23, 24, 29, 47, 55, 79, 81, 99], "henc": [23, 24, 29, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 98, 99, 102, 103], "set_epoch": [23, 24, 25, 26, 27, 28, 29, 60, 62], "epoch": [23, 24, 25, 26, 27, 28, 29, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "batch_sampl": [23, 25, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "batchsampl": [23, 25], "num_replica": [23, 25], "rank": [23, 25, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "allow_dupl": [23, 25], "allow_uneven": [23, 25], "data_sourc": [23, 26, 60, 62], "shuffl": [23, 26, 28, 29, 47, 48, 50, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 81], "reduc": [23, 26, 28, 34, 38, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "timestamp": [23, 26, 28, 60, 62, 83, 89, 90, 91], "exce": [23, 26, 28, 60, 62], "max_timestamp": [23, 26, 28, 60, 62], "aggreg": [23, 26, 28, 60, 62], "__len__": [23, 26, 60, 62], "length": [23, 28, 29, 30, 32, 34, 38, 40, 41, 46, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 83, 90, 103], "max_length": [23, 28, 29, 47, 48, 50, 51, 52], "reduce_func": [23, 28], "300000": [23, 29, 47, 48, 51, 52], "in_batch_shuffl": [23, 29], "least": [23, 29], "utt": [23, 29], "get_length_func": [23, 29], "long": [23, 29, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 99, 103], "short": [23, 29], "sampler": [24, 25, 26, 27, 28, 29, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81], "unbalanc": 24, "most": [26, 29, 57, 100], "recov": 26, "realiz": 28, "legaci": 29, "codebas": 29, "y": [30, 31, 34, 36, 37, 39, 42, 45, 60, 62, 77, 83, 86, 87, 88, 90], "item_same_fn": [30, 31], "hyp": [30, 31], "ref": [30, 31], "calcul": [30, 31], "hypothes": [30, 31, 34, 35], "averag": [30, 31, 34, 41], "overal": [30, 31], "utter": [30, 31, 34, 38, 39, 47, 53, 55, 79, 80, 81, 91, 102], "score": [30, 31, 34, 35, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 79, 80, 81, 87, 88], "treshold": [30, 31], "accept": [30, 31, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 99], "trial": [30, 31], "eer": [30, 31], "p_target": [30, 31], "01": [30, 31, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "c_miss": [30, 31], "c_fa": [30, 31], "mindcf": [30, 31], "minimum": [30, 31, 40], "detect": [30, 31], "cost": [30, 31], "comment": [30, 31], "equat": [30, 31], "section": [30, 31, 34, 46], "nist": [30, 31], "2016": [30, 31], "recognit": [30, 31, 34, 41, 103], "plan": [30, 31, 99], "p": [30, 31, 100], "prior": [30, 31], "probabl": [30, 31, 34, 35], "miss": [30, 31], "alarm": [30, 31], "min_dcf": [30, 31], "min_c_det_threshold": [30, 31], "pred": [30, 32], "hypothesi": [30, 33], "groundtruth": [30, 33], "loop_over_all_slot": [30, 33], "jiatong": [32, 40, 81, 82, 85], "shi": [32, 40, 81, 82, 85], "2021": [32, 33, 37, 40, 45, 52, 55, 75, 76, 77, 78, 81, 82, 86, 89, 103], "slu": 33, "yung": [33, 52], "sung": [33, 52], "chuang": [33, 52], "common": [34, 39, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81], "loss": [34, 40, 43, 83, 89, 90], "pure": [34, 36, 102], "path_or_url": [34, 46], "extra_conf": [34, 46, 47, 48, 50, 51, 79, 81, 103], "easi": [34, 46, 102, 103], "interfac": [34, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 100, 103], "apc": [34, 46, 100], "hubert": [34, 46, 100], "wav2vec2": [34, 46], "available_nam": [34, 46], "checkpoint": [34, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 103], "might": [34, 46], "local": [34, 46, 94, 98, 103], "url": [34, 46, 50, 94, 103], "downlaod": [34, 46], "yet": [34, 46], "extra": [34, 46, 101, 103], "upstream": [34, 38, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 100, 101, 102], "shown": [34, 46], "ddp": [34, 46], "simpli": [34, 46, 98], "newli": [34, 46, 98, 101], "bandwidth": [34, 46], "eval": [34, 37, 46, 62, 103], "no_grad": [34, 46, 103], "wav": [34, 38, 46, 103], "randn": [34, 46, 103], "wavs_len": [34, 38, 46, 103], "longtensor": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 57, 62, 76, 79, 81, 83, 89, 90, 91, 103], "all_h": [34, 38, 46, 103], "all_hs_len": [34, 38, 46, 103], "hs_len": [34, 38, 46, 103], "assert": [34, 46, 103], "isinst": [34, 46, 103], "floattensor": [34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 103], "max_seq_len": [34, 46, 103], "hidden_s": [34, 36, 37, 38, 39, 42, 44, 46, 47, 48, 50, 51, 52, 57, 62, 75, 76, 77, 78, 79, 81, 103], "shape": [34, 40, 46, 47, 57, 76, 79, 81, 103], "dim": [34, 46, 103], "only_registered_ckpt": [34, 46], "entri": [34, 46, 102, 103], "give": [34, 46], "That": [34, 46, 99], "_local": [34, 46], "_url": [34, 46], "_custom": [34, 46], "determin": [34, 44, 46, 60, 62], "num_lay": [34, 38, 46], "hidden": [34, 36, 37, 38, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 103], "determinist": [34, 46], "layer": [34, 36, 37, 42, 44, 46, 62, 103], "drop": [34, 42, 46], "downsample_r": [34, 38, 46], "downsampl": [34, 38, 42, 46, 47, 79, 81], "hz": [34, 46], "advanc": [34, 46, 103], "seqlen": [34, 46], "state": [34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91], "dump_patch": [34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 60, 62, 83, 84, 85, 86, 87, 88, 89, 90, 91], "better": [34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91], "bc": [34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 60, 62, 83, 84, 85, 86, 87, 88, 89, 90, 91], "load_state_dict": [34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 60, 62, 83, 84, 85, 86, 87, 88, 89, 90, 91], "state_dict": [34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91], "attribut": [34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 60, 62, 83, 84, 85, 86, 87, 88, 89, 90, 91], "_metadata": [34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 60, 62, 83, 84, 85, 86, 87, 88, 89, 90, 91], "convent": [34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 60, 62, 83, 84, 85, 86, 87, 88, 89, 90, 91], "_load_from_state_dict": [34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 60, 62, 83, 84, 85, 86, 87, 88, 89, 90, 91], "ad": [34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 60, 62, 83, 84, 85, 86, 87, 88, 89, 90, 91, 98, 99, 103], "shall": [34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 60, 62, 83, 84, 85, 86, 87, 88, 89, 90, 91], "bump": [34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 60, 62, 83, 84, 85, 86, 87, 88, 89, 90, 91], "layer_select": [34, 46, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81], "multipl": [34, 38, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "hidden_st": [34, 46, 103], "connect": [34, 46], "downstream": [34, 38, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 100, 101, 102], "stride": [34, 46, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81], "trainabl": [34, 46], "weight": [34, 35, 46, 100], "sum": [34, 46], "top": [34, 46], "those": [34, 46], "extract": [34, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 103], "To": [34, 46, 101, 103], "subset": [34, 46, 103], "norm": [34, 37, 42, 44, 46, 62], "help": [34, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "converg": [34, 46], "superb": [34, 39, 42, 44, 46, 50, 51, 52, 55, 62, 77, 78, 81, 100], "ensur": [34, 46], "fidel": [34, 46], "output_s": [34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 62, 83, 89, 90, 91, 102], "16k": [34, 46], "all_len": [34, 46], "seq_len": [34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81], "input_s": [34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 62, 83, 89, 90, 91, 102], "activation_typ": [34, 36], "activation_conf": [34, 36], "probe": [34, 36, 37, 39], "project": [34, 36, 42, 100], "dimens": [34, 36, 38, 44], "vanilla": [34, 36], "linear": [34, 36, 102, 103], "x_len": [34, 36, 37, 38, 39, 42, 44, 45, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 83, 85, 86, 87, 88, 89, 90, 91, 102], "ys_len": [34, 36, 39, 42], "pooling_typ": [34, 36, 37, 44, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73], "pooling_conf": [34, 36, 37, 62], "benchmark": [34, 37, 39, 42, 44, 62, 100, 101], "tempor": [34, 38, 41], "tensor": [34, 35, 37, 41, 42, 43, 44, 62, 83, 89, 90, 91], "xs_len": [34, 41, 42], "alia": [34, 41, 103], "vector": [34, 41, 44, 103], "dnn": [34, 41], "embed": [34, 41, 44, 83, 89], "danielpovei": [34, 41, 44], "2018_icassp_xvector": [34, 41], "pdf": [34, 41, 44], "lstm": [34, 42, 47, 48, 50, 52], "proj_siz": [34, 42, 47, 48, 50, 52], "1024": [34, 37, 42, 44, 47, 48, 50, 52, 62], "dropout": [34, 37, 42, 44, 47, 48, 50, 52, 62, 103], "layer_norm": [34, 42, 47, 48, 50, 52], "proj": [34, 42, 47, 48, 50, 52], "sample_styl": [34, 42, 47, 48, 50, 52], "bidirect": [34, 42, 47, 48, 50, 52, 103], "absframemodel": [34, 42, 47, 48, 50, 51, 52, 79, 81], "rnn": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "asr": [34, 42, 47, 50, 51, 52, 102], "concat": [34, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "rnn_layer": [34, 42, 47, 79, 81], "exact": [34, 42, 44, 45], "diariz": [34, 42, 47, 81, 82], "across": [34, 37, 42, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 103], "margin": [34, 43, 47, 53, 55], "30": [34, 43, 47, 53, 55], "hyperparamet": [34, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "denot": [34, 43], "decis": [34, 43], "boundri": [34, 43], "cosin": [34, 43], "logit": [34, 43, 83, 90, 91], "unifi": [34, 43, 100, 103], "512": [34, 44, 47, 79, 81], "aggregation_s": [34, 44], "1500": [34, 44], "dropout_p": [34, 44], "batch_norm": [34, 44], "xvector": [34, 44], "major": [34, 44, 100], "network": [34, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 103], "tdnn": 34, "2018_odyssey_xvector_lid": [34, 44], "lm": [34, 35], "nbest": [34, 35], "beam": [34, 35, 83, 90], "beam_size_token": [34, 35], "beam_threshold": [34, 35], "25": [34, 35], "lm_weight": [34, 35], "word_scor": [34, 35], "unk_scor": [34, 35], "inf": [34, 35], "sil_scor": [34, 35], "power": [34, 35], "flashlight": [34, 35], "kenlm": [34, 35], "search": [34, 35, 100], "log": [34, 35, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 87, 88, 90, 103], "prob": [34, 35], "languag": [34, 35, 103], "appear": [34, 35], "unknown": [34, 35], "silenc": [34, 35], "get_token": [34, 35], "ctc": [34, 35, 83, 90], "blank": [34, 35], "asg": [34, 35], "replabel": [34, 35], "get_timestep": [34, 35], "token_idx": [34, 35], "emiss": [34, 35], "nn": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 87, 88, 89, 102, 103], "meanpool": [36, 37, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73], "team": 37, "hidden_lay": [37, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], "norm_after_activ": [37, 62], "xavier_uniform_": [37, 62], "hidden_norm": [37, 62], "batchnorm1d": [37, 62], "predict": [37, 40, 47, 60, 62, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 103], "head": [37, 62], "hearbenchmark": [37, 62], "kit": [37, 62], "855964977238e89dfc76394aa11c37010edb6f20": [37, 62], "hearev": [37, 62], "task_predict": [37, 62], "l142": [37, 62], "ratio": [37, 62], "init": [37, 60, 62], "y_len": [37, 45, 60, 62, 87, 90], "pleas": [38, 98, 99, 103], "16": [38, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81], "khz": [38, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81], "mission": 38, "reduct": [38, 60, 62, 83, 84, 85, 86, 87, 88, 89, 90, 91], "although": [38, 44, 46, 60, 62, 83, 84, 85, 86, 87, 88, 89, 91], "recip": [38, 46, 47, 48, 53, 57, 60, 62, 79, 83, 84, 85, 86, 87, 88, 89, 91, 100], "need": [38, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 98, 101, 102], "afterward": [38, 46, 60, 62, 83, 84, 85, 86, 87, 88, 89, 91], "former": [38, 46, 60, 62, 83, 84, 85, 86, 87, 88, 89, 91], "care": [38, 46, 60, 62, 83, 84, 85, 86, 87, 88, 89, 91], "hook": [38, 46, 60, 62, 83, 84, 85, 86, 87, 88, 89, 91], "silent": [38, 46, 60, 62, 83, 84, 85, 86, 87, 88, 89, 91], "framelevel": 39, "utterancelevel": 39, "permut": [40, 85], "invari": 40, "num_class": [40, 47, 57, 76], "min_idx": 40, "attent": 41, "independ": 41, "2018_interspeech_xvector_attent": 41, "deep": [41, 60, 68, 103], "arxiv": [41, 44, 103], "1803": 41, "10963": 41, "gru": 42, "context_s": 44, "dilat": 44, "2015_interspeech_multisplic": 44, "realli": [44, 99], "tradit": 44, "sens": 44, "equival": 44, "80": [44, 103], "1536": 44, "ecapa": 44, "2005": 44, "07143": 44, "taoruiji": 44, "channel": 44, "backbon": [44, 49, 54, 56, 74, 80], "temporalaveragepool": 44, "extractor": 44, "tap": 44, "xlen": 44, "xuankai": 45, "shampoowang": 45, "cornliu": 45, "specaug_conf": [45, 47, 48, 50, 52], "front": 45, "augment": [45, 103], "feed": [45, 103], "apply_time_warp": 45, "time_warp_window": 45, "time_warp_mod": 45, "bicub": 45, "apply_freq_mask": 45, "freq_mask_width_rang": [45, 47, 48, 50, 52], "20": [45, 47, 53, 55, 93], "num_freq_mask": [45, 47, 48, 50, 52], "apply_time_mask": 45, "time_mask_width_rang": [45, 47, 48, 50, 52], "num_time_mask": [45, 47, 48, 50, 52], "adaptive_number_ratio": 45, "04": 45, "adaptive_size_ratio": 45, "max_n_time_mask": 45, "adapt": [45, 103], "apply_specaug": 45, "x_length": 45, "collect": [46, 100, 101], "util": [46, 93, 94, 95, 96, 97, 100], "upstream_train": [46, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81], "wav_len": 46, "customiz": [47, 100], "default_config": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 102], "yaml": [47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81], "field": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 102], "inner": [47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81], "build_model": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "outer": [47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81], "find": [47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 103], "furthermor": [47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81], "insid": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 101], "affect": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "behavior": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "mean": [47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 100, 101, 102, 103], "config": [47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 83, 89, 90, 102], "prepare_data": [47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 102], "prepare_tokenizer_data": [47, 48, 49, 50, 51, 52], "build_token": [47, 48, 49, 50, 51, 52], "build_dataset": [47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "build_batch_sampl": [47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "build_upstream": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "build_featur": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "build_downstream": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 102], "build_task": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "build_optim": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "build_schedul": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "save_model": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "save_task": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "stop": [47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "null": [47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81], "remove_all_cach": [47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "train_set": [47, 48, 50, 51], "valid_set": [47, 48, 50, 51], "test_set": [47, 48, 50, 51], "vocab_typ": [47, 48, 50, 51, 52], "32": [47, 48, 50, 57, 58, 59, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 76, 77, 79, 81, 103], "fbank": [47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 103], "model_conf": [47, 48, 50, 52], "40": [47, 48, 50, 52], "log_metr": [47, 48, 50, 51, 52, 83, 90], "cer": [47, 48, 50, 52, 83, 90], "wer": [47, 48, 50, 52, 83, 90], "adam": [47, 48, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81], "conf": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "lr": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 95], "0001": [47, 48, 50, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81], "exponentiallr": [47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81], "gamma": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "build_downstream_conf": [47, 48, 50, 51, 79, 81], "total_step": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "200000": [47, 48, 50, 51, 52, 53, 55, 57, 62, 76, 77, 78, 79, 81], "log_step": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "eval_step": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "save_step": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "500": [47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81], "gradient_clip": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "gradient_accumul": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "valid_metr": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "valid_higher_bett": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "auto_resum": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "resume_ckpt_dir": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "get_path_onli": [47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 102], "prepar": [47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81], "metadata": [47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81], "By": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 102], "prepare_librispeech": [47, 48, 51], "csv": [47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82], "preprocess": [47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 94], "too": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 99], "hyper": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "matter": [47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81], "train_path": [47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 102], "valid_path": [47, 48, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 98, 102], "test_path": [47, 48, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 102], "column": [47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 103], "uniqu": [47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 83, 90], "train_csv": [47, 48, 50, 51, 52, 53, 55], "valid_csv": [47, 48, 50, 51, 52], "test_csv": [47, 48, 50, 51, 52, 53, 55], "build": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 98], "tokenizer_data_path": [47, 48, 50, 51, 52], "prepare_common_token": [47, 48, 51, 52], "experin": [47, 48, 50, 51, 52], "data_csv": [47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81], "tokenizer_path": [47, 48, 50, 51, 52, 57, 76, 77], "experi": [47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 98, 99], "class_id": [47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 83, 89, 90, 91], "unique_nam": [47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 83, 86, 88, 89, 90, 91], "datapoint": [47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78], "sortedbucketingsampl": [47, 48, 50], "fixedbatchsizebatchsampl": [47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81], "downstream_input_s": [47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 102], "downstream_output_s": [47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 102], "downstream_input_strid": [47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 102], "rnnencod": [47, 48, 50, 52], "modelwithspecaug": [47, 48, 50, 52], "two": [47, 48, 50, 52, 53, 55, 102], "build_collate_fn": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "default_collate_fn": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "collate_fn": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "absupstream": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "absfeatur": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "easlii": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "fed": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 103], "model_output_s": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "upstreamdownstreammodel": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "direct": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "featuiz": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "optim": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 95, 102, 103], "0e": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 95], "param": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "usag": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 100], "schedul": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 102], "lr_schedul": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "steplr": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "s3prlupstream": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 103], "whose": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "eval_batch": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "dump_dir": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "num_work": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "routin": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "phase": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "meaning": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "want": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 99, 102], "skip": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "get_class_from_nam": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "__name__": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 102], "load_model": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "model_ckpt_dir": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "restor": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "load_model_and_task": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "ckpts_dir": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "task_overrid": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "load_task": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "assum": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "task_ckpt_dir": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "separ": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "cuda": [47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "world_siz": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "test_ckpt_dir": [47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "stage": [47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 98], "test_ckpt_step": [47, 48, 49, 50, 51, 52, 53, 54, 55], "store": [47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "stope": [47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "datalod": [47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "develop": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 100], "everyth": [47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "won": [47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "crash": [47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "simultan": [47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "parallel": [47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "just": [47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "runnig": [47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "gpu": [47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "rune": [47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "know": [47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "among": [47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "test_ckpts_step": [47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81], "build_model_all_arg": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "configur": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 100, 103], "omegaconf": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "simplifi": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "easili": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 99, 100, 102, 103], "reconstruct": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "build_task_all_args_except_model": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "get_stat": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91], "sapart": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "train_dir": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "train_dataset": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "train_batch_sampl": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "train_collate_fn": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "valid_dataset": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "valid_batch_sampl": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "valid_collate_fn": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "global_config": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "step": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 90, 98, 103], "speed": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "up": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "clip": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "gradient": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "accumul": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "simul": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "best": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "lower": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "alreadi": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "resum": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "delet": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "fix": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 97, 99], "keep_num_ckpt": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "prevent": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "latest": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "old": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "ones": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "use_schedul": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "per": [47, 48, 51, 79, 80, 81, 98], "sortedslicesampl": [47, 48, 51, 52], "framelevellinear": [47, 48, 51], "ivi": [47, 48, 52], "joanna": [47, 48, 52], "joei": [47, 48, 52], "justin": [47, 48, 52], "kendra": [47, 48, 52], "kimberli": [47, 48, 52], "matthew": [47, 48, 52], "salli": [47, 48, 52], "aditi": [47, 48, 52], "ami": [47, 48, 52], "geraint": [47, 48, 52], "nicol": [47, 48, 52], "brian": [47, 48, 52], "emma": [47, 48, 52], "raveena": [47, 48, 52], "russel": [47, 48, 52], "slot_type_f1": [47, 48, 52], "slot_value_c": [47, 48, 52], "slot_value_w": [47, 48, 52], "slot_edit_f1_ful": [47, 48, 52], "slot_edit_f1_part": [47, 48, 52], "audio_snips_for_slot_fil": [47, 48], "separt": [47, 48, 52], "space": [47, 48, 52], "eg": [47, 48, 52], "taipei": [47, 48, 52], "york": [47, 48, 52], "tag": [47, 48, 52], "from_loc": [47, 48, 52], "to_loc": [47, 48, 52], "asv": [47, 55], "loss_typ": [47, 53, 55, 83, 89], "amsoftmax": [47, 53, 55, 83, 89], "loss_cfg": [47, 53, 55, 83, 89], "adamw": [47, 53, 55, 95, 103], "20000": [47, 53, 55], "prepare_voxceleb1_for_sv": [47, 53], "test_trial_path": [47, 53, 55], "spk": [47, 53, 55], "id1": [47, 53, 55], "id2": [47, 53, 55], "wav_path1": [47, 53, 55], "wav_path2": [47, 53, 55], "build_encod": [47, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "train_csv_path": [47, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78], "valid_csv_path": [47, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78], "test_csv_path": [47, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78], "encoder_path": [47, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78], "randomli": [47, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78], "crop": [47, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78], "superbxvector": [47, 53, 55], "absutterancemodel": [47, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78], "test_trial": [47, 53, 54, 55, 83, 89], "speakerverif": [47, 53, 54, 55], "consist": [47, 53, 54, 55, 83, 89], "enroll_utt_id": [47, 53, 54, 55], "test_utt_id": [47, 53, 54, 55], "iemocap": [47, 57, 75], "test_fold": [47, 57, 58, 59, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75], "30000": [47, 57, 75], "accuraci": [47, 57, 62, 75, 76, 77, 78], "iemocap_for_superb": [47, 57], "nan": [47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78], "begin": [47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78], "meanpoolinglinear": [47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78], "valid_df": [47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "test_df": [47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "utteranceclassificationtask": [47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78], "fsc_for_multi_classif": [47, 57], "arbitrari": [47, 57, 60, 68, 76], "superb_sid_batch_sampl": [47, 57, 76], "utterancemulticlassclassificationtask": [47, 57, 76], "gsc1_for_classif": [47, 57], "balancedweightedsampl": [47, 57, 77], "downstream_downsample_r": [47, 57, 77], "sid": [47, 57, 62, 78], "voxceleb1_for_sid": [47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], "der": [47, 79, 81], "median_filt": [47, 79, 80, 81], "record_id": [47, 57, 60, 68, 79, 81, 83, 85, 87], "durat": [47, 79, 81], "utt_id": [47, 79, 81], "segment": [47, 79, 81], "row": [47, 79, 81], "diarizationdataset": [47, 79, 81], "shift": [47, 79, 81], "binari": [47, 79, 81], "upstream_len": [47, 79, 81], "label_len": [47, 79, 81, 83, 85], "seq": [47, 79, 81], "chunk_id": [47, 60, 79, 81, 83, 85, 87], "groupsameitemsampl": [47, 79, 81], "superbdiarizationmodel": [47, 79, 81], "diarizationpit": [47, 79, 80, 81], "infer": [47, 79, 80, 81], "stage_id": [47, 79, 80, 81], "test_dir": [47, 79, 80, 81], "test_rttm": [47, 79, 80, 81], "decid": [47, 79, 80, 81], "median": [47, 79, 80, 81], "filter": [47, 79, 80, 81], "design": [47, 79, 80, 81], "prediction_typ": [47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 87, 88], "multilabel": [47, 57, 60, 61, 62, 63, 68, 69], "top1_acc": [47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73], "d_prime": [47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73], "aucroc": [47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73], "40000": [47, 57, 60, 61, 62, 63, 69], "num_fold": [47, 57, 58, 59, 61, 64, 65, 66, 67, 70, 71, 72, 73], "multiclass": [47, 57, 58, 59, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73], "4000": [47, 57, 58, 59, 61, 64, 65, 66, 67, 70, 71, 72, 73], "150000": [47, 57, 58, 59, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73], "pitch_acc": [47, 57, 69], "chroma_acc": [47, 57, 69], "event_onset_200ms_fm": [47, 57, 60, 68], "segment_1s_": [47, 57, 60, 68], "postprocessing_grid": [47, 57, 60, 68, 87], "median_filter_m": [47, 57, 60, 68], "250": [47, 57, 60, 68], "min_dur": [47, 57, 60, 68], "125": [47, 57, 60, 68], "15000": [47, 57, 60, 68], "event_onset_50ms_fm": [47, 57, 68], "event_onset_offset_50ms_20perc_fm": [47, 57, 68], "150": [47, 57, 68], "problem": [48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 100], "procedur": [49, 54, 56, 74, 76, 78, 80], "tokenizer_nam": 50, "filenam": 50, "generate_basic_vocab": 50, "whe": 50, "generate_subword_vocab": 50, "pr": 51, "superbasr": [51, 52, 102], "sf": 52, "han": [55, 78, 89, 103], "chi": [55, 78, 89, 103], "ml": 56, "hearfsd": [58, 59, 64, 65, 66, 67, 68, 70, 71, 72, 73], "valid_target_ev": [60, 87], "test_target_ev": [60, 87], "set_stat": [60, 62, 83, 84, 85, 86, 87, 88, 89, 90, 91], "train_step": [60, 62, 83, 84, 85, 86, 87, 88, 89, 90, 91], "_dump_dir": [60, 62, 83, 85, 86, 87, 88, 89, 90, 91], "train_reduct": [60, 62, 83, 84, 85, 86, 87, 88, 89, 90, 91], "batch_result": [60, 83, 86, 87], "valid_step": [60, 62, 83, 84, 85, 86, 87, 88, 89, 90, 91], "test_step": [60, 62, 83, 84, 85, 86, 87, 88, 89, 90, 91], "log_scor": [60, 62, 87, 88], "score_arg": [60, 62, 87, 88], "valid_reduct": [60, 62, 83, 84, 85, 86, 87, 88, 89, 90, 91], "cached_result": [60, 62, 83, 84, 85, 86, 87, 88, 89, 90, 91], "parse_cached_result": [60, 62, 83, 84, 85, 86, 87, 88, 89, 90, 91], "test_reduct": [60, 62, 83, 84, 85, 86, 87, 88, 89, 90, 91], "eval_reduct": [60, 87], "_mode": [60, 62, 83, 85, 87, 88, 90, 91], "superbsid": [60, 61, 63, 69, 75, 77], "feat_frame_shift": 60, "160": 60, "sequentialdatapip": [60, 62], "augmenteddynamicitemdataset": [60, 62], "rememb": [60, 62], "od": [60, 62], "move_to_end": [60, 62], "move": [60, 62], "element": [60, 62], "cl": [60, 62, 103], "eq": [60, 62], "unsafe_hash": [60, 62], "frozen": [60, 62], "dunder": [60, 62], "examin": [60, 62], "pep": [60, 62], "526": [60, 62], "__annotations__": [60, 62], "__init__": [60, 62, 102], "__repr__": [60, 62], "rich": [60, 62], "comparison": [60, 62], "__hash__": [60, 62], "assign": [60, 62], "creation": [60, 62], "memo": [60, 68], "_nil": [60, 68], "__doc__": [60, 68], "info": [60, 68], "hear": 62, "output_kei": 62, "audio_sample_r": 62, "audio_channel_reduct": 62, "er": 75, "tzu": 75, "hsien": 75, "huang": [75, 103], "valid_ratio": 75, "classfic": [75, 76, 77], "protocol": 75, "fold": 75, "cross": [75, 103], "happi": 75, "angri": 75, "neutral": 75, "sad": 75, "balanc": 75, "excit": 75, "merg": [75, 98], "ic": 76, "wei": [76, 103], "tseng": 76, "multi": [76, 94, 103], "three": [76, 100], "jointli": 76, "yist": [77, 86], "lin": [77, 86], "fo": 81, "sd": 81, "convers": 82, "rttm_path": 82, "dump_feat_dir": [83, 86], "feat": [83, 86], "speakerclassifi": 83, "content": [83, 89], "enroll_utt": [83, 89], "test_utt": [83, 89], "softmax": [83, 89, 103], "beamdecod": [83, 90], "speech2textctcexampl": 83, "valid_length": [83, 90], "ndarrai": [83, 90], "beam_decod": [83, 90], "acoust": [83, 90, 103], "ground": [83, 90], "truth": [83, 90], "utteranceclassifierexampl": 83, "sub_output_s": 83, "num_categori": 83, "numpy_object_array_all_clos": 83, "invar": 85, "dump": 86, "timestemp": [89, 90, 91], "speech2text": 90, "handi": 92, "tool": 92, "freq": [93, 103], "contextdecor": 93, "new_enough_sec": 94, "modfieid": 94, "enough": 94, "older": 94, "usga": 95, "eval_dataload": 95, "pseudo": 96, "sec": 96, "min_sec": 96, "pad": 96, "1337": 97, "cudnn": 97, "sure": 98, "privat": 98, "clone": [98, 101], "repositori": [98, 101], "s3prl_root": 98, "git": [98, 101], "cd": [98, 101], "pip": [98, 101, 103], "full": [98, 100, 103], "own": [98, 100], "verifi": 98, "pytest": [98, 101], "docstr": 98, "look": 98, "correct": 98, "rebuild_doc": 98, "sh": 98, "launch": [98, 102], "server": 98, "python3": [98, 102], "browser": 98, "webpag": 98, "your_ip_or_localhost": 98, "ok": 98, "your_changed_or_added_files_onli": 98, "gitignor": 98, "mess": 98, "our": [98, 99, 102], "show": 98, "your_commit_messag": 98, "your_branch": 98, "branch": 98, "caus": 98, "ci": 98, "runnabl": 98, "month": [98, 103], "fail": 98, "thank": 99, "appreci": 99, "discuss": 99, "u": 99, "issu": 99, "page": [99, 100, 103], "about": 99, "submit": 99, "pull": [99, 100], "thing": 99, "ye": 99, "achiev": 99, "collabor": 99, "proce": 99, "did": 99, "go": 99, "through": [99, 100], "dealt": 99, "grown": 99, "becom": 99, "maintain": 99, "principl": 99, "few": 99, "essenti": 99, "guarante": 99, "continu": 99, "peopl": 99, "term": 99, "welcom": 99, "bug": 99, "slight": [99, 102], "improv": [99, 103], "feel": 99, "wish": [99, 103], "understand": 99, "toolkit": 100, "supervis": [100, 103], "learn": [100, 103], "Its": 100, "elf": 100, "upervis": 100, "peech": 100, "epresent": 100, "l": 100, "earn": 100, "scratch": 100, "mockingjai": 100, "albert": 100, "tera": 100, "vq": 100, "npc": 100, "distilhubert": 100, "pretrain": [100, 103], "hub": 100, "plug": 100, "plai": 100, "offici": [100, 103], "minim": 100, "edit": 100, "ssl": [100, 102], "pase": 100, "cpc": 100, "decoar": 100, "wav2vec": 100, "discret": 100, "xl": 100, "mgr": 100, "unispeech": 100, "sat": 100, "wavlm": 100, "data2vec": 100, "ast": 100, "ssast": 100, "mae": 100, "byol": 100, "vggish": 100, "colab": 100, "cli": 100, "commit": 100, "push": 100, "send": 100, "right": 101, "reflect": 101, "modif": [101, 102], "sphinx": 101, "variant": [101, 103], "almost": [102, 103], "ran": 102, "asr_exp": 102, "Then": 102, "field_nam": 102, "outer_field_nam": 102, "inner_field_nam": 102, "still": 102, "freeli": 102, "demonstr": 102, "new_asr": 102, "lowresourcelinearsuperbasr": 102, "super": 102, "read_csv": 102, "iloc": 102, "to_csv": 102, "__main__": 102, "introduc": 102, "new_asr_exp": 102, "amount": 103, "unlabel": 103, "variou": 103, "further": 103, "date": 103, "citat": 103, "architectur": 103, "criterion": 103, "titl": 103, "articl": 103, "year": 103, "2020": 103, "unsupervis": 103, "isbn": 103, "9781509066315": 103, "dx": 103, "doi": 103, "1109": 103, "icassp40776": 103, "9054458": 103, "journal": 103, "icassp": 103, "ieee": 103, "confer": 103, "signal": 103, "publish": 103, "liu": 103, "andi": 103, "yang": 103, "shu": 103, "wen": 103, "hsu": 103, "chun": 103, "lee": 103, "hung": 103, "yi": 103, "spectrogram": 103, "mel": 103, "alter": 103, "200k": 103, "unlabl": 103, "100hr": 103, "201": 103, "500k": 103, "360hr": 103, "960hr": 103, "3k": 103, "5k": 103, "misc": 103, "shang": 103, "li": 103, "eprint": 103, "2007": 103, "06028": 103, "archiveprefix": 103, "primaryclass": 103, "eess": 103, "AS": 103, "mag": 103, "240": 103, "lite": 103, "inproceed": 103, "chi2021audio": 103, "chung": 103, "pei": 103, "tsung": 103, "hsieh": 103, "chen": 103, "yen": 103, "hao": 103, "booktitl": 103, "spoken": 103, "technologi": 103, "workshop": 103, "slt": 103, "344": 103, "350": 103, "organ": 103, "autoregress": 103, "chung2019unsupervis": 103, "yu": 103, "ning": 103, "tang": 103, "glass": 103, "jame": 103, "interspeech": 103, "2019": 103, "quantiz": 103, "chung2020vqapc": 103, "autohor": 103, "liu2020nonautoregress": 103, "alexand": 103, "preprint": 103, "2011": 103, "00406": 103, "ravanelli2020multi": 103, "ravanelli": 103, "mirco": 103, "zhong": 103, "jianyuan": 103, "pascual": 103, "santiago": 103, "swietojanski": 103, "pawel": 103, "monteiro": 103, "joao": 103, "trmal": 103, "jan": 103, "bengio": 103, "yoshua": 103, "6989": 103, "6993": 103, "instruct": 103, "githubusercont": 103, "50hr": 103, "transfer": 103, "riviere2020unsupervis": 103, "rivier": 103, "morgan": 103, "joulin": 103, "armand": 103, "mazar": 103, "pierr": 103, "emmanuel": 103, "dupoux": 103, "7414": 103, "7418": 103, "slightli": 103, "deepmind": 103, "cite": 103, "oord2018represent": 103, "contrast": 103, "oord": 103, "aaron": 103, "van": 103, "den": 103, "yazh": 103, "vinyal": 103, "oriol": 103, "1807": 103, "03748": 103, "2018": 103, "librilight": 103, "60k": 103, "hour": 103, "contextu": 103, "semi": 103, "ling2020deep": 103, "ling": 103, "shaoshi": 103, "yuzong": 103, "salazar": 103, "julian": 103, "kirchhoff": 103, "katrin": 103, "6429": 103, "6433": 103, "ling2020decoar": 103, "06659": 103, "schneider2019wav2vec": 103, "schneider": 103, "steffen": 103, "baevski": 103, "alexei": 103, "collobert": 103, "ronan": 103, "auli": 103, "michael": 103, "proc": 103, "3465": 103, "3469": 103, "fairseq": 103, "baevski2019vq": 103, "conv": 103, "th": 103, "gumbel": 103, "techniqu": 103, "nlp": 103, "roberta": 103, "exclud": 103, "frontend": 103, "framework": 103, "baevski2020wav2vec": 103, "zhou": 103, "yuhao": 103, "moham": 103, "abdelrahman": 103, "neural": 103, "volum": 103, "33": 103, "12449": 103, "12460": 103, "feature_select": 103, "fairseq_lay": 103, "fairseq_layers_before_residu": 103, "feedforward": 103, "residu": 103, "24": 103, "ll60k": 103, "libri": 103, "light": 103, "commonvoic": 103, "switchboard": 103, "fisher": 103, "conform": 103, "rope": 103, "multilingu": 103, "lingual": 103, "conneau2020unsupervis": 103, "conneau": 103, "alexi": 103, "2006": 103, "13979": 103, "babu2021xl": 103, "babu": 103, "arun": 103, "wang": 103, "changhan": 103, "tjandra": 103, "andro": 103, "lakhotia": 103, "kushal": 103, "xu": 103, "qiantong": 103, "goyal": 103, "naman": 103, "singh": 103, "kritika": 103, "von": 103, "platen": 103, "patrick": 103, "saraf": 103, "yatharth": 103, "pino": 103, "juan": 103, "2111": 103, "09296": 103, "128": 103, "436k": 103, "mask": 103, "hsu2021hubert": 103, "bolt": 103, "benjamin": 103, "tsai": 103, "yao": 103, "salakhutdinov": 103, "ruslan": 103, "acm": 103, "transact": 103, "29": 103, "3451": 103, "3460": 103, "wise": 103, "distil": 103, "chang2022distilhubert": 103, "7087": 103, "7091": 103, "teacher": 103, "distort": 103, "domain": 103, "huang2022improv": 103, "kuan": 103, "fu": 103, "zhang": 103, "2203": 103, "16104": 103, "musan": 103, "gaussian": 103, "reverber": 103, "univers": 103, "awar": 103, "chen2022unispeech": 103, "sanyuan": 103, "chengyi": 103, "zhengyang": 103, "zhuo": 103, "shuji": 103, "jian": 103, "qian": 103, "furu": 103, "jinyu": 103, "6152": 103, "6156": 103, "960": 103, "gigaspeech": 103, "10k": 103, "voxpopuli": 103, "24k": 103, "94k": 103, "stack": 103, "chen2021wavlm": 103, "naoyuki": 103, "kanda": 103, "takuya": 103, "yoshioka": 103, "xiong": 103, "xiao": 103, "shuo": 103, "ren": 103, "yanmin": 103, "zeng": 103, "2110": 103, "13900": 103, "vision": 103, "baevski2022data2vec": 103, "gu": 103, "jiatao": 103, "2202": 103, "03555": 103, "gong2021ast": 103, "gong": 103, "yuan": 103, "2104": 103, "01778": 103, "audioset": 103, "gong2022ssast": 103, "lai": 103, "proceed": 103, "aaai": 103, "artifici": 103, "36": 103, "10699": 103, "10709": 103, "autoencod": 103, "baade2022ma": 103, "baad": 103, "alan": 103, "peng": 103, "puyuan": 103, "harwath": 103, "david": 103, "16691": 103, "purpos": 103, "niizumi2021byol": 103, "niizumi": 103, "daisuk": 103, "takeuchi": 103, "daiki": 103, "ohishi": 103, "yasunori": 103, "harada": 103, "noboru": 103, "kashino": 103, "kunio": 103, "joint": 103, "ijcnn": 103, "bootstrap": 103, "elbanna2022byol": 103, "elbanna": 103, "gasser": 103, "scheidwass": 103, "clow": 103, "neil": 103, "kegler": 103, "mikolaj": 103, "beckmann": 103, "hajal": 103, "karl": 103, "el": 103, "cernak": 103, "milo": 103, "2206": 103, "12038": 103, "cnn": 103, "hershey2017cnn": 103, "hershei": 103, "shawn": 103, "chaudhuri": 103, "sourish": 103, "elli": 103, "daniel": 103, "pw": 103, "gemmek": 103, "jort": 103, "jansen": 103, "aren": 103, "moor": 103, "chan": 103, "plakal": 103, "manoj": 103, "platt": 103, "devin": 103, "saurou": 103, "rif": 103, "seybold": 103, "bryan": 103, "2017": 103, "131": 103, "135": 103, "labal": 103}, "objects": {"s3prl": [[0, 0, 0, "-", "dataio"], [30, 0, 0, "-", "metric"], [34, 0, 0, "-", "nn"], [47, 0, 0, "-", "problem"], [83, 0, 0, "-", "task"], [92, 0, 0, "-", "util"]], "s3prl.dataio": [[1, 0, 0, "-", "corpus"], [12, 0, 0, "-", "dataset"], [18, 0, 0, "-", "encoder"], [23, 0, 0, "-", "sampler"]], "s3prl.dataio.corpus": [[1, 1, 1, "", "FluentSpeechCommands"], [1, 1, 1, "", "IEMOCAP"], [1, 1, 1, "", "LibriLight"], [1, 1, 1, "", "LibriSpeech"], [1, 1, 1, "", "Quesst14"], [1, 1, 1, "", "SNIPS"], [1, 1, 1, "", "SpeechCommandsV1"], [1, 1, 1, "", "VoxCeleb1SID"], [1, 1, 1, "", "VoxCeleb1SV"], [2, 0, 0, "-", "base"], [3, 0, 0, "-", "fluent_speech_commands"], [4, 0, 0, "-", "iemocap"], [5, 0, 0, "-", "librilight"], [6, 0, 0, "-", "librispeech"], [7, 0, 0, "-", "quesst14"], [8, 0, 0, "-", "snips"], [9, 0, 0, "-", "speech_commands"], [10, 0, 0, "-", "voxceleb1sid"], [11, 0, 0, "-", "voxceleb1sv"]], "s3prl.dataio.corpus.FluentSpeechCommands": [[1, 2, 1, "", "all_data"], [1, 2, 1, "", "data_split"], [1, 2, 1, "", "data_split_ids"], [1, 3, 1, "", "dataframe_to_datapoints"], [1, 3, 1, "", "download_dataset"]], "s3prl.dataio.corpus.IEMOCAP": [[1, 2, 1, "", "all_data"], [1, 2, 1, "", "data_split"], [1, 2, 1, "", "data_split_ids"], [1, 3, 1, "", "dataframe_to_datapoints"], [1, 3, 1, "", "download_dataset"], [1, 3, 1, "", "get_session_with_act"], [1, 3, 1, "", "get_whole_session"]], "s3prl.dataio.corpus.LibriLight": [[1, 2, 1, "", "all_data"], [1, 2, 1, "", "data_split"], [1, 2, 1, "", "data_split_ids"], [1, 3, 1, "", "dataframe_to_datapoints"], [1, 3, 1, "", "download_dataset"]], "s3prl.dataio.corpus.LibriSpeech": [[1, 2, 1, "", "all_data"], [1, 2, 1, "", "data_split"], [1, 2, 1, "", "data_split_ids"], [1, 3, 1, "", "dataframe_to_datapoints"], [1, 3, 1, "", "download_dataset"], [1, 3, 1, "", "get_corpus_splits"]], "s3prl.dataio.corpus.Quesst14": [[1, 2, 1, "", "docs"], [1, 3, 1, "", "download_dataset"], [1, 2, 1, "", "test_queries"], [1, 2, 1, "", "valid_queries"]], "s3prl.dataio.corpus.SNIPS": [[1, 2, 1, "", "all_data"], [1, 2, 1, "", "data_split"], [1, 2, 1, "", "data_split_ids"], [1, 3, 1, "", "dataframe_to_datapoints"]], "s3prl.dataio.corpus.SpeechCommandsV1": [[1, 2, 1, "", "all_data"], [1, 2, 1, "", "data_split"], [1, 2, 1, "", "data_split_ids"], [1, 3, 1, "", "dataframe_to_datapoints"], [1, 3, 1, "", "download_dataset"], [1, 3, 1, "", "list_to_dict"], [1, 3, 1, "", "parse_test_data_list"], [1, 3, 1, "", "parse_train_valid_data_list"], [1, 3, 1, "", "path_to_unique_name"], [1, 3, 1, "", "split_dataset"]], "s3prl.dataio.corpus.VoxCeleb1SID": [[1, 2, 1, "", "all_data"], [1, 2, 1, "", "data_split"], [1, 2, 1, "", "data_split_ids"], [1, 3, 1, "", "dataframe_to_datapoints"], [1, 3, 1, "", "download_dataset"]], "s3prl.dataio.corpus.VoxCeleb1SV": [[1, 2, 1, "", "all_data"], [1, 2, 1, "", "data_split"], [1, 2, 1, "", "data_split_ids"], [1, 3, 1, "", "dataframe_to_datapoints"], [1, 3, 1, "", "format_path"], [1, 3, 1, "", "format_test_trials"], [1, 3, 1, "", "path2data"], [1, 3, 1, "", "path2uid"]], "s3prl.dataio.corpus.base": [[2, 1, 1, "", "Corpus"]], "s3prl.dataio.corpus.base.Corpus": [[2, 2, 1, "", "all_data"], [2, 2, 1, "", "data_split"], [2, 2, 1, "", "data_split_ids"], [2, 3, 1, "", "dataframe_to_datapoints"]], "s3prl.dataio.corpus.fluent_speech_commands": [[3, 1, 1, "", "FluentSpeechCommands"]], "s3prl.dataio.corpus.fluent_speech_commands.FluentSpeechCommands": [[3, 2, 1, "", "all_data"], [3, 2, 1, "", "data_split"], [3, 2, 1, "", "data_split_ids"], [3, 3, 1, "", "dataframe_to_datapoints"], [3, 3, 1, "", "download_dataset"]], "s3prl.dataio.corpus.iemocap": [[4, 1, 1, "", "IEMOCAP"]], "s3prl.dataio.corpus.iemocap.IEMOCAP": [[4, 2, 1, "", "all_data"], [4, 2, 1, "", "data_split"], [4, 2, 1, "", "data_split_ids"], [4, 3, 1, "", "dataframe_to_datapoints"], [4, 3, 1, "", "download_dataset"], [4, 3, 1, "", "get_session_with_act"], [4, 3, 1, "", "get_whole_session"]], "s3prl.dataio.corpus.librilight": [[5, 1, 1, "", "LibriLight"]], "s3prl.dataio.corpus.librilight.LibriLight": [[5, 2, 1, "", "all_data"], [5, 2, 1, "", "data_split"], [5, 2, 1, "", "data_split_ids"], [5, 3, 1, "", "dataframe_to_datapoints"], [5, 3, 1, "", "download_dataset"]], "s3prl.dataio.corpus.librispeech": [[6, 1, 1, "", "LibriSpeech"]], "s3prl.dataio.corpus.librispeech.LibriSpeech": [[6, 2, 1, "", "all_data"], [6, 2, 1, "", "data_split"], [6, 2, 1, "", "data_split_ids"], [6, 3, 1, "", "dataframe_to_datapoints"], [6, 3, 1, "", "download_dataset"], [6, 3, 1, "", "get_corpus_splits"]], "s3prl.dataio.corpus.quesst14": [[7, 1, 1, "", "Quesst14"]], "s3prl.dataio.corpus.quesst14.Quesst14": [[7, 2, 1, "", "docs"], [7, 3, 1, "", "download_dataset"], [7, 2, 1, "", "test_queries"], [7, 2, 1, "", "valid_queries"]], "s3prl.dataio.corpus.snips": [[8, 1, 1, "", "SNIPS"]], "s3prl.dataio.corpus.snips.SNIPS": [[8, 2, 1, "", "all_data"], [8, 2, 1, "", "data_split"], [8, 2, 1, "", "data_split_ids"], [8, 3, 1, "", "dataframe_to_datapoints"]], "s3prl.dataio.corpus.speech_commands": [[9, 1, 1, "", "SpeechCommandsV1"]], "s3prl.dataio.corpus.speech_commands.SpeechCommandsV1": [[9, 2, 1, "", "all_data"], [9, 2, 1, "", "data_split"], [9, 2, 1, "", "data_split_ids"], [9, 3, 1, "", "dataframe_to_datapoints"], [9, 3, 1, "", "download_dataset"], [9, 3, 1, "", "list_to_dict"], [9, 3, 1, "", "parse_test_data_list"], [9, 3, 1, "", "parse_train_valid_data_list"], [9, 3, 1, "", "path_to_unique_name"], [9, 3, 1, "", "split_dataset"]], "s3prl.dataio.corpus.voxceleb1sid": [[10, 1, 1, "", "VoxCeleb1SID"]], "s3prl.dataio.corpus.voxceleb1sid.VoxCeleb1SID": [[10, 2, 1, "", "all_data"], [10, 2, 1, "", "data_split"], [10, 2, 1, "", "data_split_ids"], [10, 3, 1, "", "dataframe_to_datapoints"], [10, 3, 1, "", "download_dataset"]], "s3prl.dataio.corpus.voxceleb1sv": [[11, 1, 1, "", "VoxCeleb1SV"]], "s3prl.dataio.corpus.voxceleb1sv.VoxCeleb1SV": [[11, 2, 1, "", "all_data"], [11, 2, 1, "", "data_split"], [11, 2, 1, "", "data_split_ids"], [11, 3, 1, "", "dataframe_to_datapoints"], [11, 3, 1, "", "format_path"], [11, 3, 1, "", "format_test_trials"], [11, 3, 1, "", "path2data"], [11, 3, 1, "", "path2uid"]], "s3prl.dataio.dataset": [[12, 1, 1, "", "Dataset"], [12, 1, 1, "", "DiarizationDataset"], [12, 1, 1, "", "EncodeCategories"], [12, 1, 1, "", "EncodeCategory"], [12, 1, 1, "", "EncodeText"], [12, 1, 1, "", "LoadAudio"], [13, 0, 0, "-", "base"], [14, 0, 0, "-", "diarization"], [15, 0, 0, "-", "encode"], [12, 4, 1, "", "get_info"], [16, 0, 0, "-", "load_audio"], [17, 0, 0, "-", "util"]], "s3prl.dataio.dataset.Dataset": [[12, 3, 1, "", "getinfo"]], "s3prl.dataio.dataset.DiarizationDataset": [[12, 3, 1, "", "getinfo"]], "s3prl.dataio.dataset.EncodeCategories": [[12, 3, 1, "", "getinfo"]], "s3prl.dataio.dataset.EncodeCategory": [[12, 3, 1, "", "getinfo"]], "s3prl.dataio.dataset.EncodeText": [[12, 3, 1, "", "getinfo"]], "s3prl.dataio.dataset.LoadAudio": [[12, 3, 1, "", "getinfo"]], "s3prl.dataio.dataset.base": [[13, 1, 1, "", "Dataset"]], "s3prl.dataio.dataset.base.Dataset": [[13, 3, 1, "", "getinfo"]], "s3prl.dataio.dataset.diarization": [[14, 1, 1, "", "Dataset"], [14, 1, 1, "", "DiarizationDataset"], [14, 1, 1, "", "KaldiData"]], "s3prl.dataio.dataset.diarization.Dataset": [[14, 3, 1, "", "getinfo"]], "s3prl.dataio.dataset.diarization.DiarizationDataset": [[14, 3, 1, "", "getinfo"]], "s3prl.dataio.dataset.diarization.KaldiData": [[14, 3, 1, "", "load_wav"]], "s3prl.dataio.dataset.encode": [[15, 1, 1, "", "CategoryEncoder"], [15, 1, 1, "", "CategoryEncoders"], [15, 1, 1, "", "Dataset"], [15, 1, 1, "", "EncodeCategories"], [15, 1, 1, "", "EncodeCategory"], [15, 1, 1, "", "EncodeText"], [15, 1, 1, "", "Tokenizer"]], "s3prl.dataio.dataset.encode.CategoryEncoder": [[15, 3, 1, "", "decode"], [15, 3, 1, "", "encode"]], "s3prl.dataio.dataset.encode.CategoryEncoders": [[15, 3, 1, "", "decode"], [15, 3, 1, "", "encode"]], "s3prl.dataio.dataset.encode.Dataset": [[15, 3, 1, "", "getinfo"]], "s3prl.dataio.dataset.encode.EncodeCategories": [[15, 3, 1, "", "getinfo"]], "s3prl.dataio.dataset.encode.EncodeCategory": [[15, 3, 1, "", "getinfo"]], "s3prl.dataio.dataset.encode.EncodeText": [[15, 3, 1, "", "getinfo"]], "s3prl.dataio.dataset.encode.Tokenizer": [[15, 3, 1, "", "decode"], [15, 3, 1, "", "encode"], [15, 2, 1, "", "eos_idx"], [15, 3, 1, "", "load_from_file"], [15, 2, 1, "", "pad_idx"], [15, 2, 1, "", "token_type"], [15, 2, 1, "", "unk_idx"], [15, 2, 1, "", "vocab_size"]], "s3prl.dataio.dataset.load_audio": [[16, 1, 1, "", "Dataset"], [16, 1, 1, "", "LoadAudio"]], "s3prl.dataio.dataset.load_audio.Dataset": [[16, 3, 1, "", "getinfo"]], "s3prl.dataio.dataset.load_audio.LoadAudio": [[16, 3, 1, "", "getinfo"]], "s3prl.dataio.dataset.util": [[17, 1, 1, "", "Parallel"], [17, 1, 1, "", "Path"], [17, 1, 1, "", "defaultdict"], [17, 4, 1, "", "delayed"], [17, 4, 1, "", "get_info"], [17, 1, 1, "", "tqdm"]], "s3prl.dataio.dataset.util.Parallel": [[17, 3, 1, "", "debug"], [17, 3, 1, "", "dispatch_next"], [17, 3, 1, "", "dispatch_one_batch"], [17, 3, 1, "", "format"], [17, 3, 1, "", "print_progress"], [17, 3, 1, "", "retrieve"], [17, 3, 1, "", "warn"]], "s3prl.dataio.dataset.util.Path": [[17, 3, 1, "", "absolute"], [17, 2, 1, "", "anchor"], [17, 3, 1, "", "as_posix"], [17, 3, 1, "", "as_uri"], [17, 3, 1, "", "chmod"], [17, 3, 1, "", "cwd"], [17, 2, 1, "", "drive"], [17, 3, 1, "", "exists"], [17, 3, 1, "", "expanduser"], [17, 3, 1, "", "glob"], [17, 3, 1, "", "group"], [17, 3, 1, "", "home"], [17, 3, 1, "", "is_absolute"], [17, 3, 1, "", "is_block_device"], [17, 3, 1, "", "is_char_device"], [17, 3, 1, "", "is_dir"], [17, 3, 1, "", "is_fifo"], [17, 3, 1, "", "is_file"], [17, 3, 1, "", "is_mount"], [17, 3, 1, "", "is_reserved"], [17, 3, 1, "", "is_socket"], [17, 3, 1, "", "is_symlink"], [17, 3, 1, "", "iterdir"], [17, 3, 1, "", "joinpath"], [17, 3, 1, "", "lchmod"], [17, 3, 1, "", "link_to"], [17, 3, 1, "", "lstat"], [17, 3, 1, "", "match"], [17, 3, 1, "", "mkdir"], [17, 2, 1, "", "name"], [17, 3, 1, "", "open"], [17, 3, 1, "", "owner"], [17, 2, 1, "", "parent"], [17, 2, 1, "", "parents"], [17, 2, 1, "", "parts"], [17, 3, 1, "", "read_bytes"], [17, 3, 1, "", "read_text"], [17, 3, 1, "", "relative_to"], [17, 3, 1, "", "rename"], [17, 3, 1, "", "replace"], [17, 3, 1, "", "resolve"], [17, 3, 1, "", "rglob"], [17, 3, 1, "", "rmdir"], [17, 2, 1, "", "root"], [17, 3, 1, "", "samefile"], [17, 3, 1, "", "stat"], [17, 2, 1, "", "stem"], [17, 2, 1, "", "suffix"], [17, 2, 1, "", "suffixes"], [17, 3, 1, "", "symlink_to"], [17, 3, 1, "", "touch"], [17, 3, 1, "", "unlink"], [17, 3, 1, "", "with_name"], [17, 3, 1, "", "with_suffix"], [17, 3, 1, "", "write_bytes"], [17, 3, 1, "", "write_text"]], "s3prl.dataio.dataset.util.defaultdict": [[17, 3, 1, "", "clear"], [17, 3, 1, "", "copy"], [17, 5, 1, "", "default_factory"], [17, 3, 1, "", "fromkeys"], [17, 3, 1, "", "get"], [17, 3, 1, "", "items"], [17, 3, 1, "", "keys"], [17, 3, 1, "", "pop"], [17, 3, 1, "", "popitem"], [17, 3, 1, "", "setdefault"], [17, 3, 1, "", "update"], [17, 3, 1, "", "values"]], "s3prl.dataio.dataset.util.tqdm": [[17, 3, 1, "", "clear"], [17, 3, 1, "", "close"], [17, 3, 1, "", "display"], [17, 3, 1, "", "external_write_mode"], [17, 2, 1, "", "format_dict"], [17, 3, 1, "", "format_interval"], [17, 3, 1, "", "format_meter"], [17, 3, 1, "", "format_num"], [17, 3, 1, "", "format_sizeof"], [17, 3, 1, "", "get_lock"], [17, 5, 1, "", "monitor"], [17, 5, 1, "", "monitor_interval"], [17, 3, 1, "", "moveto"], [17, 3, 1, "", "pandas"], [17, 3, 1, "", "refresh"], [17, 3, 1, "", "reset"], [17, 3, 1, "", "set_description"], [17, 3, 1, "", "set_description_str"], [17, 3, 1, "", "set_lock"], [17, 3, 1, "", "set_postfix"], [17, 3, 1, "", "set_postfix_str"], [17, 3, 1, "", "status_printer"], [17, 3, 1, "", "unpause"], [17, 3, 1, "", "update"], [17, 3, 1, "", "wrapattr"], [17, 3, 1, "", "write"]], "s3prl.dataio.encoder": [[18, 1, 1, "", "BertTokenizer"], [18, 1, 1, "", "CategoryEncoder"], [18, 1, 1, "", "CategoryEncoders"], [18, 1, 1, "", "CharacterSlotTokenizer"], [18, 1, 1, "", "CharacterTokenizer"], [18, 1, 1, "", "G2P"], [18, 1, 1, "", "SubwordSlotTokenizer"], [18, 1, 1, "", "SubwordTokenizer"], [18, 1, 1, "", "Tokenizer"], [18, 1, 1, "", "WordTokenizer"], [19, 0, 0, "-", "category"], [20, 0, 0, "-", "g2p"], [18, 4, 1, "", "generate_basic_vocab"], [18, 4, 1, "", "generate_subword_vocab"], [18, 4, 1, "", "generate_vocab"], [21, 0, 0, "-", "tokenizer"], [22, 0, 0, "-", "vocabulary"]], "s3prl.dataio.encoder.BertTokenizer": [[18, 3, 1, "", "decode"], [18, 3, 1, "", "encode"], [18, 2, 1, "", "eos_idx"], [18, 3, 1, "", "load_from_file"], [18, 2, 1, "", "pad_idx"], [18, 2, 1, "", "token_type"], [18, 2, 1, "", "unk_idx"], [18, 2, 1, "", "vocab_size"]], "s3prl.dataio.encoder.CategoryEncoder": [[18, 3, 1, "", "decode"], [18, 3, 1, "", "encode"]], "s3prl.dataio.encoder.CategoryEncoders": [[18, 3, 1, "", "decode"], [18, 3, 1, "", "encode"]], "s3prl.dataio.encoder.CharacterSlotTokenizer": [[18, 3, 1, "", "decode"], [18, 3, 1, "", "encode"], [18, 2, 1, "", "eos_idx"], [18, 3, 1, "", "idx_to_vocab"], [18, 3, 1, "", "load_from_file"], [18, 2, 1, "", "pad_idx"], [18, 2, 1, "", "token_type"], [18, 2, 1, "", "unk_idx"], [18, 2, 1, "", "vocab_size"], [18, 3, 1, "", "vocab_to_idx"]], "s3prl.dataio.encoder.CharacterTokenizer": [[18, 3, 1, "", "decode"], [18, 3, 1, "", "encode"], [18, 2, 1, "", "eos_idx"], [18, 3, 1, "", "idx_to_vocab"], [18, 3, 1, "", "load_from_file"], [18, 2, 1, "", "pad_idx"], [18, 2, 1, "", "token_type"], [18, 2, 1, "", "unk_idx"], [18, 2, 1, "", "vocab_size"], [18, 3, 1, "", "vocab_to_idx"]], "s3prl.dataio.encoder.G2P": [[18, 3, 1, "", "encode"]], "s3prl.dataio.encoder.SubwordSlotTokenizer": [[18, 3, 1, "", "decode"], [18, 3, 1, "", "encode"], [18, 2, 1, "", "eos_idx"], [18, 3, 1, "", "load_from_file"], [18, 2, 1, "", "pad_idx"], [18, 2, 1, "", "token_type"], [18, 2, 1, "", "unk_idx"], [18, 2, 1, "", "vocab_size"]], "s3prl.dataio.encoder.SubwordTokenizer": [[18, 3, 1, "", "decode"], [18, 3, 1, "", "encode"], [18, 2, 1, "", "eos_idx"], [18, 3, 1, "", "load_from_file"], [18, 2, 1, "", "pad_idx"], [18, 2, 1, "", "token_type"], [18, 2, 1, "", "unk_idx"], [18, 2, 1, "", "vocab_size"]], "s3prl.dataio.encoder.Tokenizer": [[18, 3, 1, "", "decode"], [18, 3, 1, "", "encode"], [18, 2, 1, "", "eos_idx"], [18, 3, 1, "", "load_from_file"], [18, 2, 1, "", "pad_idx"], [18, 2, 1, "", "token_type"], [18, 2, 1, "", "unk_idx"], [18, 2, 1, "", "vocab_size"]], "s3prl.dataio.encoder.WordTokenizer": [[18, 3, 1, "", "decode"], [18, 3, 1, "", "encode"], [18, 2, 1, "", "eos_idx"], [18, 3, 1, "", "idx_to_vocab"], [18, 3, 1, "", "load_from_file"], [18, 2, 1, "", "pad_idx"], [18, 2, 1, "", "token_type"], [18, 2, 1, "", "unk_idx"], [18, 2, 1, "", "vocab_size"], [18, 3, 1, "", "vocab_to_idx"]], "s3prl.dataio.encoder.category": [[19, 1, 1, "", "CategoryEncoder"], [19, 1, 1, "", "CategoryEncoders"]], "s3prl.dataio.encoder.category.CategoryEncoder": [[19, 3, 1, "", "decode"], [19, 3, 1, "", "encode"]], "s3prl.dataio.encoder.category.CategoryEncoders": [[19, 3, 1, "", "decode"], [19, 3, 1, "", "encode"]], "s3prl.dataio.encoder.g2p": [[20, 1, 1, "", "G2P"]], "s3prl.dataio.encoder.g2p.G2P": [[20, 3, 1, "", "encode"]], "s3prl.dataio.encoder.tokenizer": [[21, 1, 1, "", "CharacterSlotTokenizer"], [21, 1, 1, "", "CharacterTokenizer"], [21, 1, 1, "", "PhonemeTokenizer"], [21, 1, 1, "", "SubwordSlotTokenizer"], [21, 1, 1, "", "SubwordTokenizer"], [21, 1, 1, "", "WordTokenizer"], [21, 4, 1, "", "default_phoneme_tokenizer"], [21, 4, 1, "", "load_tokenizer"]], "s3prl.dataio.encoder.tokenizer.CharacterSlotTokenizer": [[21, 3, 1, "", "decode"], [21, 3, 1, "", "encode"], [21, 2, 1, "", "eos_idx"], [21, 3, 1, "", "idx_to_vocab"], [21, 3, 1, "", "load_from_file"], [21, 2, 1, "", "pad_idx"], [21, 2, 1, "", "token_type"], [21, 2, 1, "", "unk_idx"], [21, 2, 1, "", "vocab_size"], [21, 3, 1, "", "vocab_to_idx"]], "s3prl.dataio.encoder.tokenizer.CharacterTokenizer": [[21, 3, 1, "", "decode"], [21, 3, 1, "", "encode"], [21, 2, 1, "", "eos_idx"], [21, 3, 1, "", "idx_to_vocab"], [21, 3, 1, "", "load_from_file"], [21, 2, 1, "", "pad_idx"], [21, 2, 1, "", "token_type"], [21, 2, 1, "", "unk_idx"], [21, 2, 1, "", "vocab_size"], [21, 3, 1, "", "vocab_to_idx"]], "s3prl.dataio.encoder.tokenizer.PhonemeTokenizer": [[21, 3, 1, "", "decode"], [21, 3, 1, "", "encode"], [21, 2, 1, "", "eos_idx"], [21, 3, 1, "", "idx_to_vocab"], [21, 3, 1, "", "load_from_file"], [21, 2, 1, "", "pad_idx"], [21, 2, 1, "", "token_type"], [21, 2, 1, "", "unk_idx"], [21, 2, 1, "", "vocab_size"], [21, 3, 1, "", "vocab_to_idx"]], "s3prl.dataio.encoder.tokenizer.SubwordSlotTokenizer": [[21, 3, 1, "", "decode"], [21, 3, 1, "", "encode"], [21, 2, 1, "", "eos_idx"], [21, 3, 1, "", "load_from_file"], [21, 2, 1, "", "pad_idx"], [21, 2, 1, "", "token_type"], [21, 2, 1, "", "unk_idx"], [21, 2, 1, "", "vocab_size"]], "s3prl.dataio.encoder.tokenizer.SubwordTokenizer": [[21, 3, 1, "", "decode"], [21, 3, 1, "", "encode"], [21, 2, 1, "", "eos_idx"], [21, 3, 1, "", "load_from_file"], [21, 2, 1, "", "pad_idx"], [21, 2, 1, "", "token_type"], [21, 2, 1, "", "unk_idx"], [21, 2, 1, "", "vocab_size"]], "s3prl.dataio.encoder.tokenizer.WordTokenizer": [[21, 3, 1, "", "decode"], [21, 3, 1, "", "encode"], [21, 2, 1, "", "eos_idx"], [21, 3, 1, "", "idx_to_vocab"], [21, 3, 1, "", "load_from_file"], [21, 2, 1, "", "pad_idx"], [21, 2, 1, "", "token_type"], [21, 2, 1, "", "unk_idx"], [21, 2, 1, "", "vocab_size"], [21, 3, 1, "", "vocab_to_idx"]], "s3prl.dataio.encoder.vocabulary": [[22, 4, 1, "", "generate_basic_vocab"], [22, 4, 1, "", "generate_subword_vocab"], [22, 4, 1, "", "generate_vocab"]], "s3prl.dataio.sampler": [[23, 1, 1, "", "BalancedWeightedSampler"], [23, 1, 1, "", "DistributedBatchSamplerWrapper"], [23, 1, 1, "", "FixedBatchSizeBatchSampler"], [23, 1, 1, "", "GroupSameItemSampler"], [23, 1, 1, "", "MaxTimestampBatchSampler"], [23, 1, 1, "", "SortedBucketingSampler"], [23, 1, 1, "", "SortedSliceSampler"], [24, 0, 0, "-", "balanced_weighted_sampler"], [25, 0, 0, "-", "distributed_sampler"], [26, 0, 0, "-", "fixed_batch_size_batch_sampler"], [27, 0, 0, "-", "group_same_item_sampler"], [28, 0, 0, "-", "max_timestamp_batch_sampler"], [29, 0, 0, "-", "sorted_sampler"]], "s3prl.dataio.sampler.BalancedWeightedSampler": [[23, 3, 1, "", "set_epoch"]], "s3prl.dataio.sampler.DistributedBatchSamplerWrapper": [[23, 3, 1, "", "set_epoch"]], "s3prl.dataio.sampler.FixedBatchSizeBatchSampler": [[23, 3, 1, "", "set_epoch"]], "s3prl.dataio.sampler.GroupSameItemSampler": [[23, 3, 1, "", "set_epoch"]], "s3prl.dataio.sampler.MaxTimestampBatchSampler": [[23, 3, 1, "", "set_epoch"]], "s3prl.dataio.sampler.SortedBucketingSampler": [[23, 3, 1, "", "set_epoch"]], "s3prl.dataio.sampler.SortedSliceSampler": [[23, 3, 1, "", "set_epoch"]], "s3prl.dataio.sampler.balanced_weighted_sampler": [[24, 1, 1, "", "BalancedWeightedSampler"]], "s3prl.dataio.sampler.balanced_weighted_sampler.BalancedWeightedSampler": [[24, 3, 1, "", "set_epoch"]], "s3prl.dataio.sampler.distributed_sampler": [[25, 1, 1, "", "DistributedBatchSamplerWrapper"]], "s3prl.dataio.sampler.distributed_sampler.DistributedBatchSamplerWrapper": [[25, 3, 1, "", "set_epoch"]], "s3prl.dataio.sampler.fixed_batch_size_batch_sampler": [[26, 1, 1, "", "FixedBatchSizeBatchSampler"]], "s3prl.dataio.sampler.fixed_batch_size_batch_sampler.FixedBatchSizeBatchSampler": [[26, 3, 1, "", "set_epoch"]], "s3prl.dataio.sampler.group_same_item_sampler": [[27, 1, 1, "", "GroupSameItemSampler"]], "s3prl.dataio.sampler.group_same_item_sampler.GroupSameItemSampler": [[27, 3, 1, "", "set_epoch"]], "s3prl.dataio.sampler.max_timestamp_batch_sampler": [[28, 1, 1, "", "MaxTimestampBatchSampler"]], "s3prl.dataio.sampler.max_timestamp_batch_sampler.MaxTimestampBatchSampler": [[28, 3, 1, "", "set_epoch"]], "s3prl.dataio.sampler.sorted_sampler": [[29, 1, 1, "", "SortedBucketingSampler"], [29, 1, 1, "", "SortedSliceSampler"]], "s3prl.dataio.sampler.sorted_sampler.SortedBucketingSampler": [[29, 3, 1, "", "set_epoch"]], "s3prl.dataio.sampler.sorted_sampler.SortedSliceSampler": [[29, 3, 1, "", "set_epoch"]], "s3prl.metric": [[30, 4, 1, "", "accuracy"], [30, 4, 1, "", "calc_diarization_error"], [30, 4, 1, "", "cer"], [31, 0, 0, "-", "common"], [30, 4, 1, "", "compute_eer"], [30, 4, 1, "", "compute_minDCF"], [32, 0, 0, "-", "diarization"], [30, 4, 1, "", "per"], [30, 4, 1, "", "slot_edit_f1"], [33, 0, 0, "-", "slot_filling"], [30, 4, 1, "", "slot_type_f1"], [30, 4, 1, "", "slot_value_cer"], [30, 4, 1, "", "slot_value_wer"], [30, 4, 1, "", "ter"], [30, 4, 1, "", "wer"]], "s3prl.metric.common": [[31, 4, 1, "", "accuracy"], [31, 4, 1, "", "cer"], [31, 4, 1, "", "compute_eer"], [31, 4, 1, "", "compute_minDCF"], [31, 4, 1, "", "per"], [31, 4, 1, "", "ter"], [31, 4, 1, "", "wer"]], "s3prl.metric.diarization": [[32, 4, 1, "", "calc_diarization_error"]], "s3prl.metric.slot_filling": [[33, 4, 1, "", "slot_edit_f1"], [33, 4, 1, "", "slot_type_f1"], [33, 4, 1, "", "slot_value_cer"], [33, 4, 1, "", "slot_value_wer"]], "s3prl.nn": [[34, 1, 1, "", "BeamDecoder"], [34, 1, 1, "", "Featurizer"], [34, 1, 1, "", "FrameLevel"], [34, 1, 1, "", "FrameLevelLinear"], [34, 1, 1, "", "MeanPooling"], [34, 1, 1, "", "MeanPoolingLinear"], [34, 1, 1, "", "RNNEncoder"], [34, 1, 1, "", "S3PRLUpstream"], [34, 1, 1, "", "SuperbDiarizationModel"], [34, 1, 1, "", "SuperbXvector"], [34, 5, 1, "", "TemporalAveragePooling"], [34, 1, 1, "", "TemporalStatisticsPooling"], [34, 1, 1, "", "UtteranceLevel"], [34, 1, 1, "", "XVectorBackbone"], [34, 1, 1, "", "amsoftmax"], [35, 0, 0, "-", "beam_decoder"], [36, 0, 0, "-", "common"], [37, 0, 0, "-", "hear"], [38, 0, 0, "-", "interface"], [39, 0, 0, "-", "linear"], [40, 0, 0, "-", "pit"], [41, 0, 0, "-", "pooling"], [42, 0, 0, "-", "rnn"], [34, 1, 1, "", "softmax"], [43, 0, 0, "-", "speaker_loss"], [44, 0, 0, "-", "speaker_model"], [45, 0, 0, "-", "specaug"], [46, 0, 0, "-", "upstream"]], "s3prl.nn.BeamDecoder": [[34, 3, 1, "", "decode"], [34, 3, 1, "", "get_timesteps"], [34, 3, 1, "", "get_tokens"]], "s3prl.nn.Featurizer": [[34, 2, 1, "", "downsample_rate"], [34, 5, 1, "", "dump_patches"], [34, 3, 1, "", "forward"], [34, 2, 1, "", "output_size"], [34, 5, 1, "", "training"]], "s3prl.nn.FrameLevel": [[34, 5, 1, "", "dump_patches"], [34, 3, 1, "", "forward"], [34, 2, 1, "", "input_size"], [34, 2, 1, "", "output_size"], [34, 5, 1, "", "training"]], "s3prl.nn.FrameLevelLinear": [[34, 5, 1, "", "dump_patches"], [34, 3, 1, "", "forward"], [34, 2, 1, "", "input_size"], [34, 2, 1, "", "output_size"], [34, 5, 1, "", "training"]], "s3prl.nn.MeanPooling": [[34, 5, 1, "", "dump_patches"], [34, 3, 1, "", "forward"], [34, 2, 1, "", "input_size"], [34, 2, 1, "", "output_size"], [34, 5, 1, "", "training"]], "s3prl.nn.MeanPoolingLinear": [[34, 5, 1, "", "dump_patches"], [34, 3, 1, "", "forward"], [34, 2, 1, "", "input_size"], [34, 2, 1, "", "output_size"], [34, 5, 1, "", "training"]], "s3prl.nn.RNNEncoder": [[34, 5, 1, "", "dump_patches"], [34, 3, 1, "", "forward"], [34, 2, 1, "", "input_size"], [34, 2, 1, "", "output_size"], [34, 5, 1, "", "training"]], "s3prl.nn.S3PRLUpstream": [[34, 3, 1, "", "available_names"], [34, 2, 1, "", "downsample_rates"], [34, 5, 1, "", "dump_patches"], [34, 3, 1, "", "forward"], [34, 2, 1, "", "hidden_sizes"], [34, 2, 1, "", "num_layers"], [34, 5, 1, "", "training"]], "s3prl.nn.SuperbDiarizationModel": [[34, 5, 1, "", "dump_patches"], [34, 3, 1, "", "forward"], [34, 2, 1, "", "input_size"], [34, 2, 1, "", "output_size"], [34, 5, 1, "", "training"]], "s3prl.nn.SuperbXvector": [[34, 5, 1, "", "dump_patches"], [34, 3, 1, "", "forward"], [34, 2, 1, "", "input_size"], [34, 2, 1, "", "output_size"], [34, 5, 1, "", "training"]], "s3prl.nn.TemporalStatisticsPooling": [[34, 5, 1, "", "dump_patches"], [34, 3, 1, "", "forward"], [34, 2, 1, "", "input_size"], [34, 2, 1, "", "output_size"], [34, 5, 1, "", "training"]], "s3prl.nn.UtteranceLevel": [[34, 5, 1, "", "dump_patches"], [34, 3, 1, "", "forward"], [34, 2, 1, "", "input_size"], [34, 2, 1, "", "output_size"], [34, 5, 1, "", "training"]], "s3prl.nn.XVectorBackbone": [[34, 5, 1, "", "dump_patches"], [34, 3, 1, "", "forward"], [34, 2, 1, "", "input_size"], [34, 2, 1, "", "output_size"], [34, 5, 1, "", "training"]], "s3prl.nn.amsoftmax": [[34, 5, 1, "", "dump_patches"], [34, 3, 1, "", "forward"], [34, 2, 1, "", "input_size"], [34, 2, 1, "", "output_size"], [34, 5, 1, "", "training"]], "s3prl.nn.beam_decoder": [[35, 1, 1, "", "BeamDecoder"]], "s3prl.nn.beam_decoder.BeamDecoder": [[35, 3, 1, "", "decode"], [35, 3, 1, "", "get_timesteps"], [35, 3, 1, "", "get_tokens"]], "s3prl.nn.common": [[36, 1, 1, "", "FrameLevel"], [36, 1, 1, "", "UtteranceLevel"]], "s3prl.nn.common.FrameLevel": [[36, 5, 1, "", "dump_patches"], [36, 3, 1, "", "forward"], [36, 2, 1, "", "input_size"], [36, 2, 1, "", "output_size"], [36, 5, 1, "", "training"]], "s3prl.nn.common.UtteranceLevel": [[36, 5, 1, "", "dump_patches"], [36, 3, 1, "", "forward"], [36, 2, 1, "", "input_size"], [36, 2, 1, "", "output_size"], [36, 5, 1, "", "training"]], "s3prl.nn.hear": [[37, 1, 1, "", "HearFullyConnectedPrediction"]], "s3prl.nn.hear.HearFullyConnectedPrediction": [[37, 5, 1, "", "dump_patches"], [37, 3, 1, "", "forward"], [37, 2, 1, "", "input_size"], [37, 2, 1, "", "output_size"], [37, 5, 1, "", "training"]], "s3prl.nn.interface": [[38, 1, 1, "", "AbsFeaturizer"], [38, 1, 1, "", "AbsFrameModel"], [38, 1, 1, "", "AbsUpstream"], [38, 1, 1, "", "AbsUtteranceModel"]], "s3prl.nn.interface.AbsFeaturizer": [[38, 2, 1, "", "downsample_rate"], [38, 5, 1, "", "dump_patches"], [38, 3, 1, "", "forward"], [38, 2, 1, "", "output_size"], [38, 5, 1, "", "training"]], "s3prl.nn.interface.AbsFrameModel": [[38, 5, 1, "", "dump_patches"], [38, 3, 1, "", "forward"], [38, 2, 1, "", "input_size"], [38, 2, 1, "", "output_size"], [38, 5, 1, "", "training"]], "s3prl.nn.interface.AbsUpstream": [[38, 2, 1, "", "downsample_rates"], [38, 5, 1, "", "dump_patches"], [38, 3, 1, "", "forward"], [38, 2, 1, "", "hidden_sizes"], [38, 2, 1, "", "num_layer"], [38, 5, 1, "", "training"]], "s3prl.nn.interface.AbsUtteranceModel": [[38, 5, 1, "", "dump_patches"], [38, 3, 1, "", "forward"], [38, 2, 1, "", "input_size"], [38, 2, 1, "", "output_size"], [38, 5, 1, "", "training"]], "s3prl.nn.linear": [[39, 1, 1, "", "FrameLevelLinear"], [39, 1, 1, "", "MeanPoolingLinear"]], "s3prl.nn.linear.FrameLevelLinear": [[39, 5, 1, "", "dump_patches"], [39, 3, 1, "", "forward"], [39, 2, 1, "", "input_size"], [39, 2, 1, "", "output_size"], [39, 5, 1, "", "training"]], "s3prl.nn.linear.MeanPoolingLinear": [[39, 5, 1, "", "dump_patches"], [39, 3, 1, "", "forward"], [39, 2, 1, "", "input_size"], [39, 2, 1, "", "output_size"], [39, 5, 1, "", "training"]], "s3prl.nn.pit": [[40, 4, 1, "", "pit_loss"]], "s3prl.nn.pooling": [[41, 1, 1, "", "AttentiveStatisticsPooling"], [41, 1, 1, "", "MeanPooling"], [41, 1, 1, "", "SelfAttentivePooling"], [41, 5, 1, "", "TemporalAveragePooling"], [41, 1, 1, "", "TemporalStatisticsPooling"]], "s3prl.nn.pooling.AttentiveStatisticsPooling": [[41, 5, 1, "", "dump_patches"], [41, 3, 1, "", "forward"], [41, 2, 1, "", "input_size"], [41, 2, 1, "", "output_size"], [41, 5, 1, "", "training"]], "s3prl.nn.pooling.MeanPooling": [[41, 5, 1, "", "dump_patches"], [41, 3, 1, "", "forward"], [41, 2, 1, "", "input_size"], [41, 2, 1, "", "output_size"], [41, 5, 1, "", "training"]], "s3prl.nn.pooling.SelfAttentivePooling": [[41, 5, 1, "", "dump_patches"], [41, 3, 1, "", "forward"], [41, 2, 1, "", "input_size"], [41, 2, 1, "", "output_size"], [41, 5, 1, "", "training"]], "s3prl.nn.pooling.TemporalStatisticsPooling": [[41, 5, 1, "", "dump_patches"], [41, 3, 1, "", "forward"], [41, 2, 1, "", "input_size"], [41, 2, 1, "", "output_size"], [41, 5, 1, "", "training"]], "s3prl.nn.rnn": [[42, 1, 1, "", "RNNEncoder"], [42, 1, 1, "", "RNNLayer"], [42, 1, 1, "", "SuperbDiarizationModel"]], "s3prl.nn.rnn.RNNEncoder": [[42, 5, 1, "", "dump_patches"], [42, 3, 1, "", "forward"], [42, 2, 1, "", "input_size"], [42, 2, 1, "", "output_size"], [42, 5, 1, "", "training"]], "s3prl.nn.rnn.RNNLayer": [[42, 5, 1, "", "dump_patches"], [42, 3, 1, "", "forward"], [42, 2, 1, "", "input_size"], [42, 2, 1, "", "output_size"], [42, 5, 1, "", "training"]], "s3prl.nn.rnn.SuperbDiarizationModel": [[42, 5, 1, "", "dump_patches"], [42, 3, 1, "", "forward"], [42, 2, 1, "", "input_size"], [42, 2, 1, "", "output_size"], [42, 5, 1, "", "training"]], "s3prl.nn.softmax": [[34, 5, 1, "", "dump_patches"], [34, 3, 1, "", "forward"], [34, 2, 1, "", "input_size"], [34, 2, 1, "", "output_size"], [34, 5, 1, "", "training"]], "s3prl.nn.speaker_loss": [[43, 1, 1, "", "amsoftmax"], [43, 1, 1, "", "softmax"]], "s3prl.nn.speaker_loss.amsoftmax": [[43, 5, 1, "", "dump_patches"], [43, 3, 1, "", "forward"], [43, 2, 1, "", "input_size"], [43, 2, 1, "", "output_size"], [43, 5, 1, "", "training"]], "s3prl.nn.speaker_loss.softmax": [[43, 5, 1, "", "dump_patches"], [43, 3, 1, "", "forward"], [43, 2, 1, "", "input_size"], [43, 2, 1, "", "output_size"], [43, 5, 1, "", "training"]], "s3prl.nn.speaker_model": [[44, 1, 1, "", "ECAPA_TDNN"], [44, 1, 1, "", "SpeakerEmbeddingExtractor"], [44, 1, 1, "", "SuperbXvector"], [44, 1, 1, "", "TDNN"], [44, 1, 1, "", "XVectorBackbone"]], "s3prl.nn.speaker_model.ECAPA_TDNN": [[44, 5, 1, "", "dump_patches"], [44, 3, 1, "", "forward"], [44, 2, 1, "", "input_size"], [44, 2, 1, "", "output_size"], [44, 5, 1, "", "training"]], "s3prl.nn.speaker_model.SpeakerEmbeddingExtractor": [[44, 5, 1, "", "dump_patches"], [44, 3, 1, "", "forward"], [44, 2, 1, "", "input_size"], [44, 2, 1, "", "output_size"], [44, 5, 1, "", "training"]], "s3prl.nn.speaker_model.SuperbXvector": [[44, 5, 1, "", "dump_patches"], [44, 3, 1, "", "forward"], [44, 2, 1, "", "input_size"], [44, 2, 1, "", "output_size"], [44, 5, 1, "", "training"]], "s3prl.nn.speaker_model.TDNN": [[44, 5, 1, "", "dump_patches"], [44, 3, 1, "", "forward"], [44, 2, 1, "", "input_size"], [44, 2, 1, "", "output_size"], [44, 5, 1, "", "training"]], "s3prl.nn.speaker_model.XVectorBackbone": [[44, 5, 1, "", "dump_patches"], [44, 3, 1, "", "forward"], [44, 2, 1, "", "input_size"], [44, 2, 1, "", "output_size"], [44, 5, 1, "", "training"]], "s3prl.nn.specaug": [[45, 1, 1, "", "ModelWithSpecaug"], [45, 1, 1, "", "SpecAug"]], "s3prl.nn.specaug.ModelWithSpecaug": [[45, 5, 1, "", "dump_patches"], [45, 3, 1, "", "forward"], [45, 2, 1, "", "input_size"], [45, 2, 1, "", "output_size"], [45, 5, 1, "", "training"]], "s3prl.nn.specaug.SpecAug": [[45, 3, 1, "", "apply_specaug"], [45, 5, 1, "", "dump_patches"], [45, 3, 1, "", "forward"], [45, 5, 1, "", "training"]], "s3prl.nn.upstream": [[46, 1, 1, "", "Featurizer"], [46, 1, 1, "", "S3PRLUpstream"], [46, 1, 1, "", "UpstreamDownstreamModel"]], "s3prl.nn.upstream.Featurizer": [[46, 2, 1, "", "downsample_rate"], [46, 5, 1, "", "dump_patches"], [46, 3, 1, "", "forward"], [46, 2, 1, "", "output_size"], [46, 5, 1, "", "training"]], "s3prl.nn.upstream.S3PRLUpstream": [[46, 3, 1, "", "available_names"], [46, 2, 1, "", "downsample_rates"], [46, 5, 1, "", "dump_patches"], [46, 3, 1, "", "forward"], [46, 2, 1, "", "hidden_sizes"], [46, 2, 1, "", "num_layers"], [46, 5, 1, "", "training"]], "s3prl.nn.upstream.UpstreamDownstreamModel": [[46, 2, 1, "", "downsample_rate"], [46, 5, 1, "", "dump_patches"], [46, 3, 1, "", "forward"], [46, 2, 1, "", "input_size"], [46, 2, 1, "", "output_size"], [46, 5, 1, "", "training"]], "s3prl.problem": [[47, 1, 1, "", "HearBeijingOpera"], [47, 1, 1, "", "HearCremaD"], [47, 1, 1, "", "HearDcase2016Task2"], [47, 1, 1, "", "HearESC50"], [47, 1, 1, "", "HearFSD"], [47, 1, 1, "", "HearGSC5hr"], [47, 1, 1, "", "HearGtzan"], [47, 1, 1, "", "HearGtzanMusicSpeech"], [47, 1, 1, "", "HearGunshot"], [47, 1, 1, "", "HearLibriCount"], [47, 1, 1, "", "HearMaestro"], [47, 1, 1, "", "HearNsynth5hr"], [47, 1, 1, "", "HearStroke"], [47, 1, 1, "", "HearTonic"], [47, 1, 1, "", "HearVocal"], [47, 1, 1, "", "HearVoxLingual"], [47, 1, 1, "", "SuperbASR"], [47, 1, 1, "", "SuperbASV"], [47, 1, 1, "", "SuperbER"], [47, 1, 1, "", "SuperbIC"], [47, 1, 1, "", "SuperbKS"], [47, 1, 1, "", "SuperbPR"], [47, 1, 1, "", "SuperbSD"], [47, 1, 1, "", "SuperbSF"], [47, 1, 1, "", "SuperbSID"], [48, 0, 0, "-", "asr"], [53, 0, 0, "-", "asv"], [56, 0, 0, "-", "base"], [57, 0, 0, "-", "common"], [79, 0, 0, "-", "diarization"]], "s3prl.problem.HearBeijingOpera": [[47, 3, 1, "", "build_batch_sampler"], [47, 3, 1, "", "build_collate_fn"], [47, 3, 1, "", "build_dataset"], [47, 3, 1, "", "build_downstream"], [47, 3, 1, "", "build_encoder"], [47, 3, 1, "", "build_featurizer"], [47, 3, 1, "", "build_model"], [47, 3, 1, "", "build_optimizer"], [47, 3, 1, "", "build_scheduler"], [47, 3, 1, "", "build_task"], [47, 3, 1, "", "build_upstream"], [47, 3, 1, "", "default_config"], [47, 3, 1, "", "evaluate"], [47, 3, 1, "", "get_class_from_name"], [47, 3, 1, "", "load_model"], [47, 3, 1, "", "load_model_and_task"], [47, 3, 1, "", "load_task"], [47, 3, 1, "", "main"], [47, 3, 1, "", "prepare_data"], [47, 3, 1, "", "run"], [47, 3, 1, "", "save_model"], [47, 3, 1, "", "save_task"], [47, 3, 1, "", "train"]], "s3prl.problem.HearCremaD": [[47, 3, 1, "", "build_batch_sampler"], [47, 3, 1, "", "build_collate_fn"], [47, 3, 1, "", "build_dataset"], [47, 3, 1, "", "build_downstream"], [47, 3, 1, "", "build_encoder"], [47, 3, 1, "", "build_featurizer"], [47, 3, 1, "", "build_model"], [47, 3, 1, "", "build_optimizer"], [47, 3, 1, "", "build_scheduler"], [47, 3, 1, "", "build_task"], [47, 3, 1, "", "build_upstream"], [47, 3, 1, "", "default_config"], [47, 3, 1, "", "evaluate"], [47, 3, 1, "", "get_class_from_name"], [47, 3, 1, "", "load_model"], [47, 3, 1, "", "load_model_and_task"], [47, 3, 1, "", "load_task"], [47, 3, 1, "", "main"], [47, 3, 1, "", "prepare_data"], [47, 3, 1, "", "run"], [47, 3, 1, "", "save_model"], [47, 3, 1, "", "save_task"], [47, 3, 1, "", "train"]], "s3prl.problem.HearDcase2016Task2": [[47, 3, 1, "", "build_batch_sampler"], [47, 3, 1, "", "build_collate_fn"], [47, 3, 1, "", "build_dataset"], [47, 3, 1, "", "build_downstream"], [47, 3, 1, "", "build_encoder"], [47, 3, 1, "", "build_featurizer"], [47, 3, 1, "", "build_model"], [47, 3, 1, "", "build_optimizer"], [47, 3, 1, "", "build_scheduler"], [47, 3, 1, "", "build_task"], [47, 3, 1, "", "build_upstream"], [47, 3, 1, "", "default_config"], [47, 3, 1, "", "evaluate"], [47, 3, 1, "", "get_class_from_name"], [47, 3, 1, "", "load_model"], [47, 3, 1, "", "load_model_and_task"], [47, 3, 1, "", "load_task"], [47, 3, 1, "", "main"], [47, 3, 1, "", "prepare_data"], [47, 3, 1, "", "run"], [47, 3, 1, "", "save_model"], [47, 3, 1, "", "save_task"], [47, 3, 1, "", "train"]], "s3prl.problem.HearESC50": [[47, 3, 1, "", "build_batch_sampler"], [47, 3, 1, "", "build_collate_fn"], [47, 3, 1, "", "build_dataset"], [47, 3, 1, "", "build_downstream"], [47, 3, 1, "", "build_encoder"], [47, 3, 1, "", "build_featurizer"], [47, 3, 1, "", "build_model"], [47, 3, 1, "", "build_optimizer"], [47, 3, 1, "", "build_scheduler"], [47, 3, 1, "", "build_task"], [47, 3, 1, "", "build_upstream"], [47, 3, 1, "", "default_config"], [47, 3, 1, "", "evaluate"], [47, 3, 1, "", "get_class_from_name"], [47, 3, 1, "", "load_model"], [47, 3, 1, "", "load_model_and_task"], [47, 3, 1, "", "load_task"], [47, 3, 1, "", "main"], [47, 3, 1, "", "prepare_data"], [47, 3, 1, "", "run"], [47, 3, 1, "", "save_model"], [47, 3, 1, "", "save_task"], [47, 3, 1, "", "train"]], "s3prl.problem.HearFSD": [[47, 3, 1, "", "build_batch_sampler"], [47, 3, 1, "", "build_collate_fn"], [47, 3, 1, "", "build_dataset"], [47, 3, 1, "", "build_downstream"], [47, 3, 1, "", "build_encoder"], [47, 3, 1, "", "build_featurizer"], [47, 3, 1, "", "build_model"], [47, 3, 1, "", "build_optimizer"], [47, 3, 1, "", "build_scheduler"], [47, 3, 1, "", "build_task"], [47, 3, 1, "", "build_upstream"], [47, 3, 1, "", "default_config"], [47, 3, 1, "", "evaluate"], [47, 3, 1, "", "get_class_from_name"], [47, 3, 1, "", "load_model"], [47, 3, 1, "", "load_model_and_task"], [47, 3, 1, "", "load_task"], [47, 3, 1, "", "main"], [47, 3, 1, "", "prepare_data"], [47, 3, 1, "", "run"], [47, 3, 1, "", "save_model"], [47, 3, 1, "", "save_task"], [47, 3, 1, "", "train"]], "s3prl.problem.HearGSC5hr": [[47, 3, 1, "", "build_batch_sampler"], [47, 3, 1, "", "build_collate_fn"], [47, 3, 1, "", "build_dataset"], [47, 3, 1, "", "build_downstream"], [47, 3, 1, "", "build_encoder"], [47, 3, 1, "", "build_featurizer"], [47, 3, 1, "", "build_model"], [47, 3, 1, "", "build_optimizer"], [47, 3, 1, "", "build_scheduler"], [47, 3, 1, "", "build_task"], [47, 3, 1, "", "build_upstream"], [47, 3, 1, "", "default_config"], [47, 3, 1, "", "evaluate"], [47, 3, 1, "", "get_class_from_name"], [47, 3, 1, "", "load_model"], [47, 3, 1, "", "load_model_and_task"], [47, 3, 1, "", "load_task"], [47, 3, 1, "", "main"], [47, 3, 1, "", "prepare_data"], [47, 3, 1, "", "run"], [47, 3, 1, "", "save_model"], [47, 3, 1, "", "save_task"], [47, 3, 1, "", "train"]], "s3prl.problem.HearGtzan": [[47, 3, 1, "", "build_batch_sampler"], [47, 3, 1, "", "build_collate_fn"], [47, 3, 1, "", "build_dataset"], [47, 3, 1, "", "build_downstream"], [47, 3, 1, "", "build_encoder"], [47, 3, 1, "", "build_featurizer"], [47, 3, 1, "", "build_model"], [47, 3, 1, "", "build_optimizer"], [47, 3, 1, "", "build_scheduler"], [47, 3, 1, "", "build_task"], [47, 3, 1, "", "build_upstream"], [47, 3, 1, "", "default_config"], [47, 3, 1, "", "evaluate"], [47, 3, 1, "", "get_class_from_name"], [47, 3, 1, "", "load_model"], [47, 3, 1, "", "load_model_and_task"], [47, 3, 1, "", "load_task"], [47, 3, 1, "", "main"], [47, 3, 1, "", "prepare_data"], [47, 3, 1, "", "run"], [47, 3, 1, "", "save_model"], [47, 3, 1, "", "save_task"], [47, 3, 1, "", "train"]], "s3prl.problem.HearGtzanMusicSpeech": [[47, 3, 1, "", "build_batch_sampler"], [47, 3, 1, "", "build_collate_fn"], [47, 3, 1, "", "build_dataset"], [47, 3, 1, "", "build_downstream"], [47, 3, 1, "", "build_encoder"], [47, 3, 1, "", "build_featurizer"], [47, 3, 1, "", "build_model"], [47, 3, 1, "", "build_optimizer"], [47, 3, 1, "", "build_scheduler"], [47, 3, 1, "", "build_task"], [47, 3, 1, "", "build_upstream"], [47, 3, 1, "", "default_config"], [47, 3, 1, "", "evaluate"], [47, 3, 1, "", "get_class_from_name"], [47, 3, 1, "", "load_model"], [47, 3, 1, "", "load_model_and_task"], [47, 3, 1, "", "load_task"], [47, 3, 1, "", "main"], [47, 3, 1, "", "prepare_data"], [47, 3, 1, "", "run"], [47, 3, 1, "", "save_model"], [47, 3, 1, "", "save_task"], [47, 3, 1, "", "train"]], "s3prl.problem.HearGunshot": [[47, 3, 1, "", "build_batch_sampler"], [47, 3, 1, "", "build_collate_fn"], [47, 3, 1, "", "build_dataset"], [47, 3, 1, "", "build_downstream"], [47, 3, 1, "", "build_encoder"], [47, 3, 1, "", "build_featurizer"], [47, 3, 1, "", "build_model"], [47, 3, 1, "", "build_optimizer"], [47, 3, 1, "", "build_scheduler"], [47, 3, 1, "", "build_task"], [47, 3, 1, "", "build_upstream"], [47, 3, 1, "", "default_config"], [47, 3, 1, "", "evaluate"], [47, 3, 1, "", "get_class_from_name"], [47, 3, 1, "", "load_model"], [47, 3, 1, "", "load_model_and_task"], [47, 3, 1, "", "load_task"], [47, 3, 1, "", "main"], [47, 3, 1, "", "prepare_data"], [47, 3, 1, "", "run"], [47, 3, 1, "", "save_model"], [47, 3, 1, "", "save_task"], [47, 3, 1, "", "train"]], "s3prl.problem.HearLibriCount": [[47, 3, 1, "", "build_batch_sampler"], [47, 3, 1, "", "build_collate_fn"], [47, 3, 1, "", "build_dataset"], [47, 3, 1, "", "build_downstream"], [47, 3, 1, "", "build_encoder"], [47, 3, 1, "", "build_featurizer"], [47, 3, 1, "", "build_model"], [47, 3, 1, "", "build_optimizer"], [47, 3, 1, "", "build_scheduler"], [47, 3, 1, "", "build_task"], [47, 3, 1, "", "build_upstream"], [47, 3, 1, "", "default_config"], [47, 3, 1, "", "evaluate"], [47, 3, 1, "", "get_class_from_name"], [47, 3, 1, "", "load_model"], [47, 3, 1, "", "load_model_and_task"], [47, 3, 1, "", "load_task"], [47, 3, 1, "", "main"], [47, 3, 1, "", "prepare_data"], [47, 3, 1, "", "run"], [47, 3, 1, "", "save_model"], [47, 3, 1, "", "save_task"], [47, 3, 1, "", "train"]], "s3prl.problem.HearMaestro": [[47, 3, 1, "", "build_batch_sampler"], [47, 3, 1, "", "build_collate_fn"], [47, 3, 1, "", "build_dataset"], [47, 3, 1, "", "build_downstream"], [47, 3, 1, "", "build_encoder"], [47, 3, 1, "", "build_featurizer"], [47, 3, 1, "", "build_model"], [47, 3, 1, "", "build_optimizer"], [47, 3, 1, "", "build_scheduler"], [47, 3, 1, "", "build_task"], [47, 3, 1, "", "build_upstream"], [47, 3, 1, "", "default_config"], [47, 3, 1, "", "evaluate"], [47, 3, 1, "", "get_class_from_name"], [47, 3, 1, "", "load_model"], [47, 3, 1, "", "load_model_and_task"], [47, 3, 1, "", "load_task"], [47, 3, 1, "", "main"], [47, 3, 1, "", "prepare_data"], [47, 3, 1, "", "run"], [47, 3, 1, "", "save_model"], [47, 3, 1, "", "save_task"], [47, 3, 1, "", "train"]], "s3prl.problem.HearNsynth5hr": [[47, 3, 1, "", "build_batch_sampler"], [47, 3, 1, "", "build_collate_fn"], [47, 3, 1, "", "build_dataset"], [47, 3, 1, "", "build_downstream"], [47, 3, 1, "", "build_encoder"], [47, 3, 1, "", "build_featurizer"], [47, 3, 1, "", "build_model"], [47, 3, 1, "", "build_optimizer"], [47, 3, 1, "", "build_scheduler"], [47, 3, 1, "", "build_task"], [47, 3, 1, "", "build_upstream"], [47, 3, 1, "", "default_config"], [47, 3, 1, "", "evaluate"], [47, 3, 1, "", "get_class_from_name"], [47, 3, 1, "", "load_model"], [47, 3, 1, "", "load_model_and_task"], [47, 3, 1, "", "load_task"], [47, 3, 1, "", "main"], [47, 3, 1, "", "prepare_data"], [47, 3, 1, "", "run"], [47, 3, 1, "", "save_model"], [47, 3, 1, "", "save_task"], [47, 3, 1, "", "train"]], "s3prl.problem.HearStroke": [[47, 3, 1, "", "build_batch_sampler"], [47, 3, 1, "", "build_collate_fn"], [47, 3, 1, "", "build_dataset"], [47, 3, 1, "", "build_downstream"], [47, 3, 1, "", "build_encoder"], [47, 3, 1, "", "build_featurizer"], [47, 3, 1, "", "build_model"], [47, 3, 1, "", "build_optimizer"], [47, 3, 1, "", "build_scheduler"], [47, 3, 1, "", "build_task"], [47, 3, 1, "", "build_upstream"], [47, 3, 1, "", "default_config"], [47, 3, 1, "", "evaluate"], [47, 3, 1, "", "get_class_from_name"], [47, 3, 1, "", "load_model"], [47, 3, 1, "", "load_model_and_task"], [47, 3, 1, "", "load_task"], [47, 3, 1, "", "main"], [47, 3, 1, "", "prepare_data"], [47, 3, 1, "", "run"], [47, 3, 1, "", "save_model"], [47, 3, 1, "", "save_task"], [47, 3, 1, "", "train"]], "s3prl.problem.HearTonic": [[47, 3, 1, "", "build_batch_sampler"], [47, 3, 1, "", "build_collate_fn"], [47, 3, 1, "", "build_dataset"], [47, 3, 1, "", "build_downstream"], [47, 3, 1, "", "build_encoder"], [47, 3, 1, "", "build_featurizer"], [47, 3, 1, "", "build_model"], [47, 3, 1, "", "build_optimizer"], [47, 3, 1, "", "build_scheduler"], [47, 3, 1, "", "build_task"], [47, 3, 1, "", "build_upstream"], [47, 3, 1, "", "default_config"], [47, 3, 1, "", "evaluate"], [47, 3, 1, "", "get_class_from_name"], [47, 3, 1, "", "load_model"], [47, 3, 1, "", "load_model_and_task"], [47, 3, 1, "", "load_task"], [47, 3, 1, "", "main"], [47, 3, 1, "", "prepare_data"], [47, 3, 1, "", "run"], [47, 3, 1, "", "save_model"], [47, 3, 1, "", "save_task"], [47, 3, 1, "", "train"]], "s3prl.problem.HearVocal": [[47, 3, 1, "", "build_batch_sampler"], [47, 3, 1, "", "build_collate_fn"], [47, 3, 1, "", "build_dataset"], [47, 3, 1, "", "build_downstream"], [47, 3, 1, "", "build_encoder"], [47, 3, 1, "", "build_featurizer"], [47, 3, 1, "", "build_model"], [47, 3, 1, "", "build_optimizer"], [47, 3, 1, "", "build_scheduler"], [47, 3, 1, "", "build_task"], [47, 3, 1, "", "build_upstream"], [47, 3, 1, "", "default_config"], [47, 3, 1, "", "evaluate"], [47, 3, 1, "", "get_class_from_name"], [47, 3, 1, "", "load_model"], [47, 3, 1, "", "load_model_and_task"], [47, 3, 1, "", "load_task"], [47, 3, 1, "", "main"], [47, 3, 1, "", "prepare_data"], [47, 3, 1, "", "run"], [47, 3, 1, "", "save_model"], [47, 3, 1, "", "save_task"], [47, 3, 1, "", "train"]], "s3prl.problem.HearVoxLingual": [[47, 3, 1, "", "build_batch_sampler"], [47, 3, 1, "", "build_collate_fn"], [47, 3, 1, "", "build_dataset"], [47, 3, 1, "", "build_downstream"], [47, 3, 1, "", "build_encoder"], [47, 3, 1, "", "build_featurizer"], [47, 3, 1, "", "build_model"], [47, 3, 1, "", "build_optimizer"], [47, 3, 1, "", "build_scheduler"], [47, 3, 1, "", "build_task"], [47, 3, 1, "", "build_upstream"], [47, 3, 1, "", "default_config"], [47, 3, 1, "", "evaluate"], [47, 3, 1, "", "get_class_from_name"], [47, 3, 1, "", "load_model"], [47, 3, 1, "", "load_model_and_task"], [47, 3, 1, "", "load_task"], [47, 3, 1, "", "main"], [47, 3, 1, "", "prepare_data"], [47, 3, 1, "", "run"], [47, 3, 1, "", "save_model"], [47, 3, 1, "", "save_task"], [47, 3, 1, "", "train"]], "s3prl.problem.SuperbASR": [[47, 3, 1, "", "build_batch_sampler"], [47, 3, 1, "", "build_collate_fn"], [47, 3, 1, "", "build_dataset"], [47, 3, 1, "", "build_downstream"], [47, 3, 1, "", "build_featurizer"], [47, 3, 1, "", "build_model"], [47, 3, 1, "", "build_optimizer"], [47, 3, 1, "", "build_scheduler"], [47, 3, 1, "", "build_task"], [47, 3, 1, "", "build_tokenizer"], [47, 3, 1, "", "build_upstream"], [47, 3, 1, "", "default_config"], [47, 3, 1, "", "evaluate"], [47, 3, 1, "", "get_class_from_name"], [47, 3, 1, "", "load_model"], [47, 3, 1, "", "load_model_and_task"], [47, 3, 1, "", "load_task"], [47, 3, 1, "", "main"], [47, 3, 1, "", "prepare_data"], [47, 3, 1, "", "prepare_tokenizer_data"], [47, 3, 1, "", "run"], [47, 3, 1, "", "save_model"], [47, 3, 1, "", "save_task"], [47, 3, 1, "", "train"]], "s3prl.problem.SuperbASV": [[47, 3, 1, "", "build_batch_sampler"], [47, 3, 1, "", "build_collate_fn"], [47, 3, 1, "", "build_dataset"], [47, 3, 1, "", "build_downstream"], [47, 3, 1, "", "build_encoder"], [47, 3, 1, "", "build_featurizer"], [47, 3, 1, "", "build_model"], [47, 3, 1, "", "build_optimizer"], [47, 3, 1, "", "build_scheduler"], [47, 3, 1, "", "build_task"], [47, 3, 1, "", "build_upstream"], [47, 3, 1, "", "default_config"], [47, 3, 1, "", "evaluate"], [47, 3, 1, "", "get_class_from_name"], [47, 3, 1, "", "load_model"], [47, 3, 1, "", "load_model_and_task"], [47, 3, 1, "", "load_task"], [47, 3, 1, "", "main"], [47, 3, 1, "", "prepare_data"], [47, 3, 1, "", "run"], [47, 3, 1, "", "save_model"], [47, 3, 1, "", "save_task"], [47, 3, 1, "", "train"]], "s3prl.problem.SuperbER": [[47, 3, 1, "", "build_batch_sampler"], [47, 3, 1, "", "build_collate_fn"], [47, 3, 1, "", "build_dataset"], [47, 3, 1, "", "build_downstream"], [47, 3, 1, "", "build_encoder"], [47, 3, 1, "", "build_featurizer"], [47, 3, 1, "", "build_model"], [47, 3, 1, "", "build_optimizer"], [47, 3, 1, "", "build_scheduler"], [47, 3, 1, "", "build_task"], [47, 3, 1, "", "build_upstream"], [47, 3, 1, "", "default_config"], [47, 3, 1, "", "evaluate"], [47, 3, 1, "", "get_class_from_name"], [47, 3, 1, "", "load_model"], [47, 3, 1, "", "load_model_and_task"], [47, 3, 1, "", "load_task"], [47, 3, 1, "", "main"], [47, 3, 1, "", "prepare_data"], [47, 3, 1, "", "run"], [47, 3, 1, "", "save_model"], [47, 3, 1, "", "save_task"], [47, 3, 1, "", "train"]], "s3prl.problem.SuperbIC": [[47, 3, 1, "", "build_batch_sampler"], [47, 3, 1, "", "build_collate_fn"], [47, 3, 1, "", "build_dataset"], [47, 3, 1, "", "build_downstream"], [47, 3, 1, "", "build_encoder"], [47, 3, 1, "", "build_featurizer"], [47, 3, 1, "", "build_model"], [47, 3, 1, "", "build_optimizer"], [47, 3, 1, "", "build_scheduler"], [47, 3, 1, "", "build_task"], [47, 3, 1, "", "build_upstream"], [47, 3, 1, "", "default_config"], [47, 3, 1, "", "evaluate"], [47, 3, 1, "", "get_class_from_name"], [47, 3, 1, "", "load_model"], [47, 3, 1, "", "load_model_and_task"], [47, 3, 1, "", "load_task"], [47, 3, 1, "", "main"], [47, 3, 1, "", "prepare_data"], [47, 3, 1, "", "run"], [47, 3, 1, "", "save_model"], [47, 3, 1, "", "save_task"], [47, 3, 1, "", "train"]], "s3prl.problem.SuperbKS": [[47, 3, 1, "", "build_batch_sampler"], [47, 3, 1, "", "build_collate_fn"], [47, 3, 1, "", "build_dataset"], [47, 3, 1, "", "build_downstream"], [47, 3, 1, "", "build_encoder"], [47, 3, 1, "", "build_featurizer"], [47, 3, 1, "", "build_model"], [47, 3, 1, "", "build_optimizer"], [47, 3, 1, "", "build_scheduler"], [47, 3, 1, "", "build_task"], [47, 3, 1, "", "build_upstream"], [47, 3, 1, "", "default_config"], [47, 3, 1, "", "evaluate"], [47, 3, 1, "", "get_class_from_name"], [47, 3, 1, "", "load_model"], [47, 3, 1, "", "load_model_and_task"], [47, 3, 1, "", "load_task"], [47, 3, 1, "", "main"], [47, 3, 1, "", "prepare_data"], [47, 3, 1, "", "run"], [47, 3, 1, "", "save_model"], [47, 3, 1, "", "save_task"], [47, 3, 1, "", "train"]], "s3prl.problem.SuperbPR": [[47, 3, 1, "", "build_batch_sampler"], [47, 3, 1, "", "build_collate_fn"], [47, 3, 1, "", "build_dataset"], [47, 3, 1, "", "build_downstream"], [47, 3, 1, "", "build_featurizer"], [47, 3, 1, "", "build_model"], [47, 3, 1, "", "build_optimizer"], [47, 3, 1, "", "build_scheduler"], [47, 3, 1, "", "build_task"], [47, 3, 1, "", "build_tokenizer"], [47, 3, 1, "", "build_upstream"], [47, 3, 1, "", "default_config"], [47, 3, 1, "", "evaluate"], [47, 3, 1, "", "get_class_from_name"], [47, 3, 1, "", "load_model"], [47, 3, 1, "", "load_model_and_task"], [47, 3, 1, "", "load_task"], [47, 3, 1, "", "main"], [47, 3, 1, "", "prepare_data"], [47, 3, 1, "", "prepare_tokenizer_data"], [47, 3, 1, "", "run"], [47, 3, 1, "", "save_model"], [47, 3, 1, "", "save_task"], [47, 3, 1, "", "train"]], "s3prl.problem.SuperbSD": [[47, 3, 1, "", "build_batch_sampler"], [47, 3, 1, "", "build_collate_fn"], [47, 3, 1, "", "build_dataset"], [47, 3, 1, "", "build_downstream"], [47, 3, 1, "", "build_featurizer"], [47, 3, 1, "", "build_model"], [47, 3, 1, "", "build_optimizer"], [47, 3, 1, "", "build_scheduler"], [47, 3, 1, "", "build_task"], [47, 3, 1, "", "build_upstream"], [47, 3, 1, "", "default_config"], [47, 3, 1, "", "evaluate"], [47, 3, 1, "", "get_class_from_name"], [47, 3, 1, "", "load_model"], [47, 3, 1, "", "load_model_and_task"], [47, 3, 1, "", "load_task"], [47, 3, 1, "", "main"], [47, 3, 1, "", "prepare_data"], [47, 3, 1, "", "run"], [47, 3, 1, "", "save_model"], [47, 3, 1, "", "save_task"], [47, 3, 1, "", "scoring"], [47, 3, 1, "", "train"]], "s3prl.problem.SuperbSF": [[47, 3, 1, "", "build_batch_sampler"], [47, 3, 1, "", "build_collate_fn"], [47, 3, 1, "", "build_dataset"], [47, 3, 1, "", "build_downstream"], [47, 3, 1, "", "build_featurizer"], [47, 3, 1, "", "build_model"], [47, 3, 1, "", "build_optimizer"], [47, 3, 1, "", "build_scheduler"], [47, 3, 1, "", "build_task"], [47, 3, 1, "", "build_tokenizer"], [47, 3, 1, "", "build_upstream"], [47, 3, 1, "", "default_config"], [47, 3, 1, "", "evaluate"], [47, 3, 1, "", "get_class_from_name"], [47, 3, 1, "", "load_model"], [47, 3, 1, "", "load_model_and_task"], [47, 3, 1, "", "load_task"], [47, 3, 1, "", "main"], [47, 3, 1, "", "prepare_data"], [47, 3, 1, "", "prepare_tokenizer_data"], [47, 3, 1, "", "run"], [47, 3, 1, "", "save_model"], [47, 3, 1, "", "save_task"], [47, 3, 1, "", "train"]], "s3prl.problem.SuperbSID": [[47, 3, 1, "", "build_batch_sampler"], [47, 3, 1, "", "build_collate_fn"], [47, 3, 1, "", "build_dataset"], [47, 3, 1, "", "build_downstream"], [47, 3, 1, "", "build_encoder"], [47, 3, 1, "", "build_featurizer"], [47, 3, 1, "", "build_model"], [47, 3, 1, "", "build_optimizer"], [47, 3, 1, "", "build_scheduler"], [47, 3, 1, "", "build_task"], [47, 3, 1, "", "build_upstream"], [47, 3, 1, "", "default_config"], [47, 3, 1, "", "evaluate"], [47, 3, 1, "", "get_class_from_name"], [47, 3, 1, "", "load_model"], [47, 3, 1, "", "load_model_and_task"], [47, 3, 1, "", "load_task"], [47, 3, 1, "", "main"], [47, 3, 1, "", "prepare_data"], [47, 3, 1, "", "run"], [47, 3, 1, "", "save_model"], [47, 3, 1, "", "save_task"], [47, 3, 1, "", "train"]], "s3prl.problem.asr": [[48, 1, 1, "", "SuperbASR"], [48, 1, 1, "", "SuperbPR"], [48, 1, 1, "", "SuperbSF"], [49, 0, 0, "-", "run"], [50, 0, 0, "-", "superb_asr"], [51, 0, 0, "-", "superb_pr"], [52, 0, 0, "-", "superb_sf"]], "s3prl.problem.asr.SuperbASR": [[48, 3, 1, "", "build_batch_sampler"], [48, 3, 1, "", "build_collate_fn"], [48, 3, 1, "", "build_dataset"], [48, 3, 1, "", "build_downstream"], [48, 3, 1, "", "build_featurizer"], [48, 3, 1, "", "build_model"], [48, 3, 1, "", "build_optimizer"], [48, 3, 1, "", "build_scheduler"], [48, 3, 1, "", "build_task"], [48, 3, 1, "", "build_tokenizer"], [48, 3, 1, "", "build_upstream"], [48, 3, 1, "", "default_config"], [48, 3, 1, "", "evaluate"], [48, 3, 1, "", "get_class_from_name"], [48, 3, 1, "", "load_model"], [48, 3, 1, "", "load_model_and_task"], [48, 3, 1, "", "load_task"], [48, 3, 1, "", "main"], [48, 3, 1, "", "prepare_data"], [48, 3, 1, "", "prepare_tokenizer_data"], [48, 3, 1, "", "run"], [48, 3, 1, "", "save_model"], [48, 3, 1, "", "save_task"], [48, 3, 1, "", "train"]], "s3prl.problem.asr.SuperbPR": [[48, 3, 1, "", "build_batch_sampler"], [48, 3, 1, "", "build_collate_fn"], [48, 3, 1, "", "build_dataset"], [48, 3, 1, "", "build_downstream"], [48, 3, 1, "", "build_featurizer"], [48, 3, 1, "", "build_model"], [48, 3, 1, "", "build_optimizer"], [48, 3, 1, "", "build_scheduler"], [48, 3, 1, "", "build_task"], [48, 3, 1, "", "build_tokenizer"], [48, 3, 1, "", "build_upstream"], [48, 3, 1, "", "default_config"], [48, 3, 1, "", "evaluate"], [48, 3, 1, "", "get_class_from_name"], [48, 3, 1, "", "load_model"], [48, 3, 1, "", "load_model_and_task"], [48, 3, 1, "", "load_task"], [48, 3, 1, "", "main"], [48, 3, 1, "", "prepare_data"], [48, 3, 1, "", "prepare_tokenizer_data"], [48, 3, 1, "", "run"], [48, 3, 1, "", "save_model"], [48, 3, 1, "", "save_task"], [48, 3, 1, "", "train"]], "s3prl.problem.asr.SuperbSF": [[48, 3, 1, "", "build_batch_sampler"], [48, 3, 1, "", "build_collate_fn"], [48, 3, 1, "", "build_dataset"], [48, 3, 1, "", "build_downstream"], [48, 3, 1, "", "build_featurizer"], [48, 3, 1, "", "build_model"], [48, 3, 1, "", "build_optimizer"], [48, 3, 1, "", "build_scheduler"], [48, 3, 1, "", "build_task"], [48, 3, 1, "", "build_tokenizer"], [48, 3, 1, "", "build_upstream"], [48, 3, 1, "", "default_config"], [48, 3, 1, "", "evaluate"], [48, 3, 1, "", "get_class_from_name"], [48, 3, 1, "", "load_model"], [48, 3, 1, "", "load_model_and_task"], [48, 3, 1, "", "load_task"], [48, 3, 1, "", "main"], [48, 3, 1, "", "prepare_data"], [48, 3, 1, "", "prepare_tokenizer_data"], [48, 3, 1, "", "run"], [48, 3, 1, "", "save_model"], [48, 3, 1, "", "save_task"], [48, 3, 1, "", "train"]], "s3prl.problem.asr.run": [[49, 1, 1, "", "ASR"]], "s3prl.problem.asr.run.ASR": [[49, 3, 1, "", "build_collate_fn"], [49, 3, 1, "", "build_featurizer"], [49, 3, 1, "", "build_model"], [49, 3, 1, "", "build_optimizer"], [49, 3, 1, "", "build_scheduler"], [49, 3, 1, "", "build_task"], [49, 3, 1, "", "build_upstream"], [49, 3, 1, "", "evaluate"], [49, 3, 1, "", "get_class_from_name"], [49, 3, 1, "", "load_model"], [49, 3, 1, "", "load_model_and_task"], [49, 3, 1, "", "load_task"], [49, 3, 1, "", "main"], [49, 3, 1, "", "run"], [49, 3, 1, "", "save_model"], [49, 3, 1, "", "save_task"], [49, 3, 1, "", "train"]], "s3prl.problem.asr.superb_asr": [[50, 1, 1, "", "SuperbASR"], [50, 4, 1, "", "prepare_common_tokenizer"], [50, 4, 1, "", "prepare_librispeech"]], "s3prl.problem.asr.superb_asr.SuperbASR": [[50, 3, 1, "", "build_batch_sampler"], [50, 3, 1, "", "build_collate_fn"], [50, 3, 1, "", "build_dataset"], [50, 3, 1, "", "build_downstream"], [50, 3, 1, "", "build_featurizer"], [50, 3, 1, "", "build_model"], [50, 3, 1, "", "build_optimizer"], [50, 3, 1, "", "build_scheduler"], [50, 3, 1, "", "build_task"], [50, 3, 1, "", "build_tokenizer"], [50, 3, 1, "", "build_upstream"], [50, 3, 1, "", "default_config"], [50, 3, 1, "", "evaluate"], [50, 3, 1, "", "get_class_from_name"], [50, 3, 1, "", "load_model"], [50, 3, 1, "", "load_model_and_task"], [50, 3, 1, "", "load_task"], [50, 3, 1, "", "main"], [50, 3, 1, "", "prepare_data"], [50, 3, 1, "", "prepare_tokenizer_data"], [50, 3, 1, "", "run"], [50, 3, 1, "", "save_model"], [50, 3, 1, "", "save_task"], [50, 3, 1, "", "train"]], "s3prl.problem.asr.superb_pr": [[51, 1, 1, "", "SuperbPR"]], "s3prl.problem.asr.superb_pr.SuperbPR": [[51, 3, 1, "", "build_batch_sampler"], [51, 3, 1, "", "build_collate_fn"], [51, 3, 1, "", "build_dataset"], [51, 3, 1, "", "build_downstream"], [51, 3, 1, "", "build_featurizer"], [51, 3, 1, "", "build_model"], [51, 3, 1, "", "build_optimizer"], [51, 3, 1, "", "build_scheduler"], [51, 3, 1, "", "build_task"], [51, 3, 1, "", "build_tokenizer"], [51, 3, 1, "", "build_upstream"], [51, 3, 1, "", "default_config"], [51, 3, 1, "", "evaluate"], [51, 3, 1, "", "get_class_from_name"], [51, 3, 1, "", "load_model"], [51, 3, 1, "", "load_model_and_task"], [51, 3, 1, "", "load_task"], [51, 3, 1, "", "main"], [51, 3, 1, "", "prepare_data"], [51, 3, 1, "", "prepare_tokenizer_data"], [51, 3, 1, "", "run"], [51, 3, 1, "", "save_model"], [51, 3, 1, "", "save_task"], [51, 3, 1, "", "train"]], "s3prl.problem.asr.superb_sf": [[52, 1, 1, "", "SuperbSF"], [52, 4, 1, "", "audio_snips_for_slot_filling"]], "s3prl.problem.asr.superb_sf.SuperbSF": [[52, 3, 1, "", "build_batch_sampler"], [52, 3, 1, "", "build_collate_fn"], [52, 3, 1, "", "build_dataset"], [52, 3, 1, "", "build_downstream"], [52, 3, 1, "", "build_featurizer"], [52, 3, 1, "", "build_model"], [52, 3, 1, "", "build_optimizer"], [52, 3, 1, "", "build_scheduler"], [52, 3, 1, "", "build_task"], [52, 3, 1, "", "build_tokenizer"], [52, 3, 1, "", "build_upstream"], [52, 3, 1, "", "default_config"], [52, 3, 1, "", "evaluate"], [52, 3, 1, "", "get_class_from_name"], [52, 3, 1, "", "load_model"], [52, 3, 1, "", "load_model_and_task"], [52, 3, 1, "", "load_task"], [52, 3, 1, "", "main"], [52, 3, 1, "", "prepare_data"], [52, 3, 1, "", "prepare_tokenizer_data"], [52, 3, 1, "", "run"], [52, 3, 1, "", "save_model"], [52, 3, 1, "", "save_task"], [52, 3, 1, "", "train"]], "s3prl.problem.asv": [[53, 1, 1, "", "SuperbASV"], [54, 0, 0, "-", "run"], [55, 0, 0, "-", "superb_asv"]], "s3prl.problem.asv.SuperbASV": [[53, 3, 1, "", "build_batch_sampler"], [53, 3, 1, "", "build_collate_fn"], [53, 3, 1, "", "build_dataset"], [53, 3, 1, "", "build_downstream"], [53, 3, 1, "", "build_encoder"], [53, 3, 1, "", "build_featurizer"], [53, 3, 1, "", "build_model"], [53, 3, 1, "", "build_optimizer"], [53, 3, 1, "", "build_scheduler"], [53, 3, 1, "", "build_task"], [53, 3, 1, "", "build_upstream"], [53, 3, 1, "", "default_config"], [53, 3, 1, "", "evaluate"], [53, 3, 1, "", "get_class_from_name"], [53, 3, 1, "", "load_model"], [53, 3, 1, "", "load_model_and_task"], [53, 3, 1, "", "load_task"], [53, 3, 1, "", "main"], [53, 3, 1, "", "prepare_data"], [53, 3, 1, "", "run"], [53, 3, 1, "", "save_model"], [53, 3, 1, "", "save_task"], [53, 3, 1, "", "train"]], "s3prl.problem.asv.run": [[54, 1, 1, "", "ASV"]], "s3prl.problem.asv.run.ASV": [[54, 3, 1, "", "build_collate_fn"], [54, 3, 1, "", "build_featurizer"], [54, 3, 1, "", "build_model"], [54, 3, 1, "", "build_optimizer"], [54, 3, 1, "", "build_scheduler"], [54, 3, 1, "", "build_task"], [54, 3, 1, "", "build_upstream"], [54, 3, 1, "", "evaluate"], [54, 3, 1, "", "get_class_from_name"], [54, 3, 1, "", "load_model"], [54, 3, 1, "", "load_model_and_task"], [54, 3, 1, "", "load_task"], [54, 3, 1, "", "main"], [54, 3, 1, "", "run"], [54, 3, 1, "", "save_model"], [54, 3, 1, "", "save_task"], [54, 3, 1, "", "train"]], "s3prl.problem.asv.superb_asv": [[55, 1, 1, "", "SuperbASV"], [55, 4, 1, "", "prepare_voxceleb1_for_sv"]], "s3prl.problem.asv.superb_asv.SuperbASV": [[55, 3, 1, "", "build_batch_sampler"], [55, 3, 1, "", "build_collate_fn"], [55, 3, 1, "", "build_dataset"], [55, 3, 1, "", "build_downstream"], [55, 3, 1, "", "build_encoder"], [55, 3, 1, "", "build_featurizer"], [55, 3, 1, "", "build_model"], [55, 3, 1, "", "build_optimizer"], [55, 3, 1, "", "build_scheduler"], [55, 3, 1, "", "build_task"], [55, 3, 1, "", "build_upstream"], [55, 3, 1, "", "default_config"], [55, 3, 1, "", "evaluate"], [55, 3, 1, "", "get_class_from_name"], [55, 3, 1, "", "load_model"], [55, 3, 1, "", "load_model_and_task"], [55, 3, 1, "", "load_task"], [55, 3, 1, "", "main"], [55, 3, 1, "", "prepare_data"], [55, 3, 1, "", "run"], [55, 3, 1, "", "save_model"], [55, 3, 1, "", "save_task"], [55, 3, 1, "", "train"]], "s3prl.problem.base": [[56, 1, 1, "", "Problem"]], "s3prl.problem.base.Problem": [[56, 3, 1, "", "build_collate_fn"], [56, 3, 1, "", "build_featurizer"], [56, 3, 1, "", "build_model"], [56, 3, 1, "", "build_optimizer"], [56, 3, 1, "", "build_scheduler"], [56, 3, 1, "", "build_upstream"], [56, 3, 1, "", "evaluate"], [56, 3, 1, "", "get_class_from_name"], [56, 3, 1, "", "load_model"], [56, 3, 1, "", "load_model_and_task"], [56, 3, 1, "", "load_task"], [56, 3, 1, "", "main"], [56, 3, 1, "", "save_model"], [56, 3, 1, "", "save_task"], [56, 3, 1, "", "train"]], "s3prl.problem.common": [[57, 1, 1, "", "HearBeijingOpera"], [57, 1, 1, "", "HearCremaD"], [57, 1, 1, "", "HearDcase2016Task2"], [57, 1, 1, "", "HearESC50"], [57, 1, 1, "", "HearFSD"], [57, 1, 1, "", "HearGSC5hr"], [57, 1, 1, "", "HearGtzan"], [57, 1, 1, "", "HearGtzanMusicSpeech"], [57, 1, 1, "", "HearGunshot"], [57, 1, 1, "", "HearLibriCount"], [57, 1, 1, "", "HearMaestro"], [57, 1, 1, "", "HearNsynth5hr"], [57, 1, 1, "", "HearStroke"], [57, 1, 1, "", "HearTonic"], [57, 1, 1, "", "HearVocal"], [57, 1, 1, "", "HearVoxLingual"], [57, 1, 1, "", "SuperbER"], [57, 1, 1, "", "SuperbIC"], [57, 1, 1, "", "SuperbKS"], [57, 1, 1, "", "SuperbSID"], [58, 0, 0, "-", "hear_beijing_opera"], [59, 0, 0, "-", "hear_cremad"], [60, 0, 0, "-", "hear_dcase_2016_task2"], [61, 0, 0, "-", "hear_esc50"], [62, 0, 0, "-", "hear_fsd"], [63, 0, 0, "-", "hear_gsc5hr"], [64, 0, 0, "-", "hear_gtzan"], [65, 0, 0, "-", "hear_gtzan_music_speech"], [66, 0, 0, "-", "hear_gunshot"], [67, 0, 0, "-", "hear_libricount"], [68, 0, 0, "-", "hear_maestro"], [69, 0, 0, "-", "hear_nsynth5hr"], [70, 0, 0, "-", "hear_stroke"], [71, 0, 0, "-", "hear_tonic"], [72, 0, 0, "-", "hear_vocal"], [73, 0, 0, "-", "hear_vox_lingual"], [74, 0, 0, "-", "run"], [75, 0, 0, "-", "superb_er"], [76, 0, 0, "-", "superb_ic"], [77, 0, 0, "-", "superb_ks"], [78, 0, 0, "-", "superb_sid"]], "s3prl.problem.common.HearBeijingOpera": [[57, 3, 1, "", "build_batch_sampler"], [57, 3, 1, "", "build_collate_fn"], [57, 3, 1, "", "build_dataset"], [57, 3, 1, "", "build_downstream"], [57, 3, 1, "", "build_encoder"], [57, 3, 1, "", "build_featurizer"], [57, 3, 1, "", "build_model"], [57, 3, 1, "", "build_optimizer"], [57, 3, 1, "", "build_scheduler"], [57, 3, 1, "", "build_task"], [57, 3, 1, "", "build_upstream"], [57, 3, 1, "", "default_config"], [57, 3, 1, "", "evaluate"], [57, 3, 1, "", "get_class_from_name"], [57, 3, 1, "", "load_model"], [57, 3, 1, "", "load_model_and_task"], [57, 3, 1, "", "load_task"], [57, 3, 1, "", "main"], [57, 3, 1, "", "prepare_data"], [57, 3, 1, "", "run"], [57, 3, 1, "", "save_model"], [57, 3, 1, "", "save_task"], [57, 3, 1, "", "train"]], "s3prl.problem.common.HearCremaD": [[57, 3, 1, "", "build_batch_sampler"], [57, 3, 1, "", "build_collate_fn"], [57, 3, 1, "", "build_dataset"], [57, 3, 1, "", "build_downstream"], [57, 3, 1, "", "build_encoder"], [57, 3, 1, "", "build_featurizer"], [57, 3, 1, "", "build_model"], [57, 3, 1, "", "build_optimizer"], [57, 3, 1, "", "build_scheduler"], [57, 3, 1, "", "build_task"], [57, 3, 1, "", "build_upstream"], [57, 3, 1, "", "default_config"], [57, 3, 1, "", "evaluate"], [57, 3, 1, "", "get_class_from_name"], [57, 3, 1, "", "load_model"], [57, 3, 1, "", "load_model_and_task"], [57, 3, 1, "", "load_task"], [57, 3, 1, "", "main"], [57, 3, 1, "", "prepare_data"], [57, 3, 1, "", "run"], [57, 3, 1, "", "save_model"], [57, 3, 1, "", "save_task"], [57, 3, 1, "", "train"]], "s3prl.problem.common.HearDcase2016Task2": [[57, 3, 1, "", "build_batch_sampler"], [57, 3, 1, "", "build_collate_fn"], [57, 3, 1, "", "build_dataset"], [57, 3, 1, "", "build_downstream"], [57, 3, 1, "", "build_encoder"], [57, 3, 1, "", "build_featurizer"], [57, 3, 1, "", "build_model"], [57, 3, 1, "", "build_optimizer"], [57, 3, 1, "", "build_scheduler"], [57, 3, 1, "", "build_task"], [57, 3, 1, "", "build_upstream"], [57, 3, 1, "", "default_config"], [57, 3, 1, "", "evaluate"], [57, 3, 1, "", "get_class_from_name"], [57, 3, 1, "", "load_model"], [57, 3, 1, "", "load_model_and_task"], [57, 3, 1, "", "load_task"], [57, 3, 1, "", "main"], [57, 3, 1, "", "prepare_data"], [57, 3, 1, "", "run"], [57, 3, 1, "", "save_model"], [57, 3, 1, "", "save_task"], [57, 3, 1, "", "train"]], "s3prl.problem.common.HearESC50": [[57, 3, 1, "", "build_batch_sampler"], [57, 3, 1, "", "build_collate_fn"], [57, 3, 1, "", "build_dataset"], [57, 3, 1, "", "build_downstream"], [57, 3, 1, "", "build_encoder"], [57, 3, 1, "", "build_featurizer"], [57, 3, 1, "", "build_model"], [57, 3, 1, "", "build_optimizer"], [57, 3, 1, "", "build_scheduler"], [57, 3, 1, "", "build_task"], [57, 3, 1, "", "build_upstream"], [57, 3, 1, "", "default_config"], [57, 3, 1, "", "evaluate"], [57, 3, 1, "", "get_class_from_name"], [57, 3, 1, "", "load_model"], [57, 3, 1, "", "load_model_and_task"], [57, 3, 1, "", "load_task"], [57, 3, 1, "", "main"], [57, 3, 1, "", "prepare_data"], [57, 3, 1, "", "run"], [57, 3, 1, "", "save_model"], [57, 3, 1, "", "save_task"], [57, 3, 1, "", "train"]], "s3prl.problem.common.HearFSD": [[57, 3, 1, "", "build_batch_sampler"], [57, 3, 1, "", "build_collate_fn"], [57, 3, 1, "", "build_dataset"], [57, 3, 1, "", "build_downstream"], [57, 3, 1, "", "build_encoder"], [57, 3, 1, "", "build_featurizer"], [57, 3, 1, "", "build_model"], [57, 3, 1, "", "build_optimizer"], [57, 3, 1, "", "build_scheduler"], [57, 3, 1, "", "build_task"], [57, 3, 1, "", "build_upstream"], [57, 3, 1, "", "default_config"], [57, 3, 1, "", "evaluate"], [57, 3, 1, "", "get_class_from_name"], [57, 3, 1, "", "load_model"], [57, 3, 1, "", "load_model_and_task"], [57, 3, 1, "", "load_task"], [57, 3, 1, "", "main"], [57, 3, 1, "", "prepare_data"], [57, 3, 1, "", "run"], [57, 3, 1, "", "save_model"], [57, 3, 1, "", "save_task"], [57, 3, 1, "", "train"]], "s3prl.problem.common.HearGSC5hr": [[57, 3, 1, "", "build_batch_sampler"], [57, 3, 1, "", "build_collate_fn"], [57, 3, 1, "", "build_dataset"], [57, 3, 1, "", "build_downstream"], [57, 3, 1, "", "build_encoder"], [57, 3, 1, "", "build_featurizer"], [57, 3, 1, "", "build_model"], [57, 3, 1, "", "build_optimizer"], [57, 3, 1, "", "build_scheduler"], [57, 3, 1, "", "build_task"], [57, 3, 1, "", "build_upstream"], [57, 3, 1, "", "default_config"], [57, 3, 1, "", "evaluate"], [57, 3, 1, "", "get_class_from_name"], [57, 3, 1, "", "load_model"], [57, 3, 1, "", "load_model_and_task"], [57, 3, 1, "", "load_task"], [57, 3, 1, "", "main"], [57, 3, 1, "", "prepare_data"], [57, 3, 1, "", "run"], [57, 3, 1, "", "save_model"], [57, 3, 1, "", "save_task"], [57, 3, 1, "", "train"]], "s3prl.problem.common.HearGtzan": [[57, 3, 1, "", "build_batch_sampler"], [57, 3, 1, "", "build_collate_fn"], [57, 3, 1, "", "build_dataset"], [57, 3, 1, "", "build_downstream"], [57, 3, 1, "", "build_encoder"], [57, 3, 1, "", "build_featurizer"], [57, 3, 1, "", "build_model"], [57, 3, 1, "", "build_optimizer"], [57, 3, 1, "", "build_scheduler"], [57, 3, 1, "", "build_task"], [57, 3, 1, "", "build_upstream"], [57, 3, 1, "", "default_config"], [57, 3, 1, "", "evaluate"], [57, 3, 1, "", "get_class_from_name"], [57, 3, 1, "", "load_model"], [57, 3, 1, "", "load_model_and_task"], [57, 3, 1, "", "load_task"], [57, 3, 1, "", "main"], [57, 3, 1, "", "prepare_data"], [57, 3, 1, "", "run"], [57, 3, 1, "", "save_model"], [57, 3, 1, "", "save_task"], [57, 3, 1, "", "train"]], "s3prl.problem.common.HearGtzanMusicSpeech": [[57, 3, 1, "", "build_batch_sampler"], [57, 3, 1, "", "build_collate_fn"], [57, 3, 1, "", "build_dataset"], [57, 3, 1, "", "build_downstream"], [57, 3, 1, "", "build_encoder"], [57, 3, 1, "", "build_featurizer"], [57, 3, 1, "", "build_model"], [57, 3, 1, "", "build_optimizer"], [57, 3, 1, "", "build_scheduler"], [57, 3, 1, "", "build_task"], [57, 3, 1, "", "build_upstream"], [57, 3, 1, "", "default_config"], [57, 3, 1, "", "evaluate"], [57, 3, 1, "", "get_class_from_name"], [57, 3, 1, "", "load_model"], [57, 3, 1, "", "load_model_and_task"], [57, 3, 1, "", "load_task"], [57, 3, 1, "", "main"], [57, 3, 1, "", "prepare_data"], [57, 3, 1, "", "run"], [57, 3, 1, "", "save_model"], [57, 3, 1, "", "save_task"], [57, 3, 1, "", "train"]], "s3prl.problem.common.HearGunshot": [[57, 3, 1, "", "build_batch_sampler"], [57, 3, 1, "", "build_collate_fn"], [57, 3, 1, "", "build_dataset"], [57, 3, 1, "", "build_downstream"], [57, 3, 1, "", "build_encoder"], [57, 3, 1, "", "build_featurizer"], [57, 3, 1, "", "build_model"], [57, 3, 1, "", "build_optimizer"], [57, 3, 1, "", "build_scheduler"], [57, 3, 1, "", "build_task"], [57, 3, 1, "", "build_upstream"], [57, 3, 1, "", "default_config"], [57, 3, 1, "", "evaluate"], [57, 3, 1, "", "get_class_from_name"], [57, 3, 1, "", "load_model"], [57, 3, 1, "", "load_model_and_task"], [57, 3, 1, "", "load_task"], [57, 3, 1, "", "main"], [57, 3, 1, "", "prepare_data"], [57, 3, 1, "", "run"], [57, 3, 1, "", "save_model"], [57, 3, 1, "", "save_task"], [57, 3, 1, "", "train"]], "s3prl.problem.common.HearLibriCount": [[57, 3, 1, "", "build_batch_sampler"], [57, 3, 1, "", "build_collate_fn"], [57, 3, 1, "", "build_dataset"], [57, 3, 1, "", "build_downstream"], [57, 3, 1, "", "build_encoder"], [57, 3, 1, "", "build_featurizer"], [57, 3, 1, "", "build_model"], [57, 3, 1, "", "build_optimizer"], [57, 3, 1, "", "build_scheduler"], [57, 3, 1, "", "build_task"], [57, 3, 1, "", "build_upstream"], [57, 3, 1, "", "default_config"], [57, 3, 1, "", "evaluate"], [57, 3, 1, "", "get_class_from_name"], [57, 3, 1, "", "load_model"], [57, 3, 1, "", "load_model_and_task"], [57, 3, 1, "", "load_task"], [57, 3, 1, "", "main"], [57, 3, 1, "", "prepare_data"], [57, 3, 1, "", "run"], [57, 3, 1, "", "save_model"], [57, 3, 1, "", "save_task"], [57, 3, 1, "", "train"]], "s3prl.problem.common.HearMaestro": [[57, 3, 1, "", "build_batch_sampler"], [57, 3, 1, "", "build_collate_fn"], [57, 3, 1, "", "build_dataset"], [57, 3, 1, "", "build_downstream"], [57, 3, 1, "", "build_encoder"], [57, 3, 1, "", "build_featurizer"], [57, 3, 1, "", "build_model"], [57, 3, 1, "", "build_optimizer"], [57, 3, 1, "", "build_scheduler"], [57, 3, 1, "", "build_task"], [57, 3, 1, "", "build_upstream"], [57, 3, 1, "", "default_config"], [57, 3, 1, "", "evaluate"], [57, 3, 1, "", "get_class_from_name"], [57, 3, 1, "", "load_model"], [57, 3, 1, "", "load_model_and_task"], [57, 3, 1, "", "load_task"], [57, 3, 1, "", "main"], [57, 3, 1, "", "prepare_data"], [57, 3, 1, "", "run"], [57, 3, 1, "", "save_model"], [57, 3, 1, "", "save_task"], [57, 3, 1, "", "train"]], "s3prl.problem.common.HearNsynth5hr": [[57, 3, 1, "", "build_batch_sampler"], [57, 3, 1, "", "build_collate_fn"], [57, 3, 1, "", "build_dataset"], [57, 3, 1, "", "build_downstream"], [57, 3, 1, "", "build_encoder"], [57, 3, 1, "", "build_featurizer"], [57, 3, 1, "", "build_model"], [57, 3, 1, "", "build_optimizer"], [57, 3, 1, "", "build_scheduler"], [57, 3, 1, "", "build_task"], [57, 3, 1, "", "build_upstream"], [57, 3, 1, "", "default_config"], [57, 3, 1, "", "evaluate"], [57, 3, 1, "", "get_class_from_name"], [57, 3, 1, "", "load_model"], [57, 3, 1, "", "load_model_and_task"], [57, 3, 1, "", "load_task"], [57, 3, 1, "", "main"], [57, 3, 1, "", "prepare_data"], [57, 3, 1, "", "run"], [57, 3, 1, "", "save_model"], [57, 3, 1, "", "save_task"], [57, 3, 1, "", "train"]], "s3prl.problem.common.HearStroke": [[57, 3, 1, "", "build_batch_sampler"], [57, 3, 1, "", "build_collate_fn"], [57, 3, 1, "", "build_dataset"], [57, 3, 1, "", "build_downstream"], [57, 3, 1, "", "build_encoder"], [57, 3, 1, "", "build_featurizer"], [57, 3, 1, "", "build_model"], [57, 3, 1, "", "build_optimizer"], [57, 3, 1, "", "build_scheduler"], [57, 3, 1, "", "build_task"], [57, 3, 1, "", "build_upstream"], [57, 3, 1, "", "default_config"], [57, 3, 1, "", "evaluate"], [57, 3, 1, "", "get_class_from_name"], [57, 3, 1, "", "load_model"], [57, 3, 1, "", "load_model_and_task"], [57, 3, 1, "", "load_task"], [57, 3, 1, "", "main"], [57, 3, 1, "", "prepare_data"], [57, 3, 1, "", "run"], [57, 3, 1, "", "save_model"], [57, 3, 1, "", "save_task"], [57, 3, 1, "", "train"]], "s3prl.problem.common.HearTonic": [[57, 3, 1, "", "build_batch_sampler"], [57, 3, 1, "", "build_collate_fn"], [57, 3, 1, "", "build_dataset"], [57, 3, 1, "", "build_downstream"], [57, 3, 1, "", "build_encoder"], [57, 3, 1, "", "build_featurizer"], [57, 3, 1, "", "build_model"], [57, 3, 1, "", "build_optimizer"], [57, 3, 1, "", "build_scheduler"], [57, 3, 1, "", "build_task"], [57, 3, 1, "", "build_upstream"], [57, 3, 1, "", "default_config"], [57, 3, 1, "", "evaluate"], [57, 3, 1, "", "get_class_from_name"], [57, 3, 1, "", "load_model"], [57, 3, 1, "", "load_model_and_task"], [57, 3, 1, "", "load_task"], [57, 3, 1, "", "main"], [57, 3, 1, "", "prepare_data"], [57, 3, 1, "", "run"], [57, 3, 1, "", "save_model"], [57, 3, 1, "", "save_task"], [57, 3, 1, "", "train"]], "s3prl.problem.common.HearVocal": [[57, 3, 1, "", "build_batch_sampler"], [57, 3, 1, "", "build_collate_fn"], [57, 3, 1, "", "build_dataset"], [57, 3, 1, "", "build_downstream"], [57, 3, 1, "", "build_encoder"], [57, 3, 1, "", "build_featurizer"], [57, 3, 1, "", "build_model"], [57, 3, 1, "", "build_optimizer"], [57, 3, 1, "", "build_scheduler"], [57, 3, 1, "", "build_task"], [57, 3, 1, "", "build_upstream"], [57, 3, 1, "", "default_config"], [57, 3, 1, "", "evaluate"], [57, 3, 1, "", "get_class_from_name"], [57, 3, 1, "", "load_model"], [57, 3, 1, "", "load_model_and_task"], [57, 3, 1, "", "load_task"], [57, 3, 1, "", "main"], [57, 3, 1, "", "prepare_data"], [57, 3, 1, "", "run"], [57, 3, 1, "", "save_model"], [57, 3, 1, "", "save_task"], [57, 3, 1, "", "train"]], "s3prl.problem.common.HearVoxLingual": [[57, 3, 1, "", "build_batch_sampler"], [57, 3, 1, "", "build_collate_fn"], [57, 3, 1, "", "build_dataset"], [57, 3, 1, "", "build_downstream"], [57, 3, 1, "", "build_encoder"], [57, 3, 1, "", "build_featurizer"], [57, 3, 1, "", "build_model"], [57, 3, 1, "", "build_optimizer"], [57, 3, 1, "", "build_scheduler"], [57, 3, 1, "", "build_task"], [57, 3, 1, "", "build_upstream"], [57, 3, 1, "", "default_config"], [57, 3, 1, "", "evaluate"], [57, 3, 1, "", "get_class_from_name"], [57, 3, 1, "", "load_model"], [57, 3, 1, "", "load_model_and_task"], [57, 3, 1, "", "load_task"], [57, 3, 1, "", "main"], [57, 3, 1, "", "prepare_data"], [57, 3, 1, "", "run"], [57, 3, 1, "", "save_model"], [57, 3, 1, "", "save_task"], [57, 3, 1, "", "train"]], "s3prl.problem.common.SuperbER": [[57, 3, 1, "", "build_batch_sampler"], [57, 3, 1, "", "build_collate_fn"], [57, 3, 1, "", "build_dataset"], [57, 3, 1, "", "build_downstream"], [57, 3, 1, "", "build_encoder"], [57, 3, 1, "", "build_featurizer"], [57, 3, 1, "", "build_model"], [57, 3, 1, "", "build_optimizer"], [57, 3, 1, "", "build_scheduler"], [57, 3, 1, "", "build_task"], [57, 3, 1, "", "build_upstream"], [57, 3, 1, "", "default_config"], [57, 3, 1, "", "evaluate"], [57, 3, 1, "", "get_class_from_name"], [57, 3, 1, "", "load_model"], [57, 3, 1, "", "load_model_and_task"], [57, 3, 1, "", "load_task"], [57, 3, 1, "", "main"], [57, 3, 1, "", "prepare_data"], [57, 3, 1, "", "run"], [57, 3, 1, "", "save_model"], [57, 3, 1, "", "save_task"], [57, 3, 1, "", "train"]], "s3prl.problem.common.SuperbIC": [[57, 3, 1, "", "build_batch_sampler"], [57, 3, 1, "", "build_collate_fn"], [57, 3, 1, "", "build_dataset"], [57, 3, 1, "", "build_downstream"], [57, 3, 1, "", "build_encoder"], [57, 3, 1, "", "build_featurizer"], [57, 3, 1, "", "build_model"], [57, 3, 1, "", "build_optimizer"], [57, 3, 1, "", "build_scheduler"], [57, 3, 1, "", "build_task"], [57, 3, 1, "", "build_upstream"], [57, 3, 1, "", "default_config"], [57, 3, 1, "", "evaluate"], [57, 3, 1, "", "get_class_from_name"], [57, 3, 1, "", "load_model"], [57, 3, 1, "", "load_model_and_task"], [57, 3, 1, "", "load_task"], [57, 3, 1, "", "main"], [57, 3, 1, "", "prepare_data"], [57, 3, 1, "", "run"], [57, 3, 1, "", "save_model"], [57, 3, 1, "", "save_task"], [57, 3, 1, "", "train"]], "s3prl.problem.common.SuperbKS": [[57, 3, 1, "", "build_batch_sampler"], [57, 3, 1, "", "build_collate_fn"], [57, 3, 1, "", "build_dataset"], [57, 3, 1, "", "build_downstream"], [57, 3, 1, "", "build_encoder"], [57, 3, 1, "", "build_featurizer"], [57, 3, 1, "", "build_model"], [57, 3, 1, "", "build_optimizer"], [57, 3, 1, "", "build_scheduler"], [57, 3, 1, "", "build_task"], [57, 3, 1, "", "build_upstream"], [57, 3, 1, "", "default_config"], [57, 3, 1, "", "evaluate"], [57, 3, 1, "", "get_class_from_name"], [57, 3, 1, "", "load_model"], [57, 3, 1, "", "load_model_and_task"], [57, 3, 1, "", "load_task"], [57, 3, 1, "", "main"], [57, 3, 1, "", "prepare_data"], [57, 3, 1, "", "run"], [57, 3, 1, "", "save_model"], [57, 3, 1, "", "save_task"], [57, 3, 1, "", "train"]], "s3prl.problem.common.SuperbSID": [[57, 3, 1, "", "build_batch_sampler"], [57, 3, 1, "", "build_collate_fn"], [57, 3, 1, "", "build_dataset"], [57, 3, 1, "", "build_downstream"], [57, 3, 1, "", "build_encoder"], [57, 3, 1, "", "build_featurizer"], [57, 3, 1, "", "build_model"], [57, 3, 1, "", "build_optimizer"], [57, 3, 1, "", "build_scheduler"], [57, 3, 1, "", "build_task"], [57, 3, 1, "", "build_upstream"], [57, 3, 1, "", "default_config"], [57, 3, 1, "", "evaluate"], [57, 3, 1, "", "get_class_from_name"], [57, 3, 1, "", "load_model"], [57, 3, 1, "", "load_model_and_task"], [57, 3, 1, "", "load_task"], [57, 3, 1, "", "main"], [57, 3, 1, "", "prepare_data"], [57, 3, 1, "", "run"], [57, 3, 1, "", "save_model"], [57, 3, 1, "", "save_task"], [57, 3, 1, "", "train"]], "s3prl.problem.common.hear_beijing_opera": [[58, 1, 1, "", "HearBeijingOpera"], [58, 1, 1, "", "HearESC50"]], "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera": [[58, 3, 1, "", "build_batch_sampler"], [58, 3, 1, "", "build_collate_fn"], [58, 3, 1, "", "build_dataset"], [58, 3, 1, "", "build_downstream"], [58, 3, 1, "", "build_encoder"], [58, 3, 1, "", "build_featurizer"], [58, 3, 1, "", "build_model"], [58, 3, 1, "", "build_optimizer"], [58, 3, 1, "", "build_scheduler"], [58, 3, 1, "", "build_task"], [58, 3, 1, "", "build_upstream"], [58, 3, 1, "", "default_config"], [58, 3, 1, "", "evaluate"], [58, 3, 1, "", "get_class_from_name"], [58, 3, 1, "", "load_model"], [58, 3, 1, "", "load_model_and_task"], [58, 3, 1, "", "load_task"], [58, 3, 1, "", "main"], [58, 3, 1, "", "prepare_data"], [58, 3, 1, "", "run"], [58, 3, 1, "", "save_model"], [58, 3, 1, "", "save_task"], [58, 3, 1, "", "train"]], "s3prl.problem.common.hear_beijing_opera.HearESC50": [[58, 3, 1, "", "build_batch_sampler"], [58, 3, 1, "", "build_collate_fn"], [58, 3, 1, "", "build_dataset"], [58, 3, 1, "", "build_downstream"], [58, 3, 1, "", "build_encoder"], [58, 3, 1, "", "build_featurizer"], [58, 3, 1, "", "build_model"], [58, 3, 1, "", "build_optimizer"], [58, 3, 1, "", "build_scheduler"], [58, 3, 1, "", "build_task"], [58, 3, 1, "", "build_upstream"], [58, 3, 1, "", "default_config"], [58, 3, 1, "", "evaluate"], [58, 3, 1, "", "get_class_from_name"], [58, 3, 1, "", "load_model"], [58, 3, 1, "", "load_model_and_task"], [58, 3, 1, "", "load_task"], [58, 3, 1, "", "main"], [58, 3, 1, "", "prepare_data"], [58, 3, 1, "", "run"], [58, 3, 1, "", "save_model"], [58, 3, 1, "", "save_task"], [58, 3, 1, "", "train"]], "s3prl.problem.common.hear_cremad": [[59, 1, 1, "", "HearCremaD"], [59, 1, 1, "", "HearESC50"]], "s3prl.problem.common.hear_cremad.HearCremaD": [[59, 3, 1, "", "build_batch_sampler"], [59, 3, 1, "", "build_collate_fn"], [59, 3, 1, "", "build_dataset"], [59, 3, 1, "", "build_downstream"], [59, 3, 1, "", "build_encoder"], [59, 3, 1, "", "build_featurizer"], [59, 3, 1, "", "build_model"], [59, 3, 1, "", "build_optimizer"], [59, 3, 1, "", "build_scheduler"], [59, 3, 1, "", "build_task"], [59, 3, 1, "", "build_upstream"], [59, 3, 1, "", "default_config"], [59, 3, 1, "", "evaluate"], [59, 3, 1, "", "get_class_from_name"], [59, 3, 1, "", "load_model"], [59, 3, 1, "", "load_model_and_task"], [59, 3, 1, "", "load_task"], [59, 3, 1, "", "main"], [59, 3, 1, "", "prepare_data"], [59, 3, 1, "", "run"], [59, 3, 1, "", "save_model"], [59, 3, 1, "", "save_task"], [59, 3, 1, "", "train"]], "s3prl.problem.common.hear_cremad.HearESC50": [[59, 3, 1, "", "build_batch_sampler"], [59, 3, 1, "", "build_collate_fn"], [59, 3, 1, "", "build_dataset"], [59, 3, 1, "", "build_downstream"], [59, 3, 1, "", "build_encoder"], [59, 3, 1, "", "build_featurizer"], [59, 3, 1, "", "build_model"], [59, 3, 1, "", "build_optimizer"], [59, 3, 1, "", "build_scheduler"], [59, 3, 1, "", "build_task"], [59, 3, 1, "", "build_upstream"], [59, 3, 1, "", "default_config"], [59, 3, 1, "", "evaluate"], [59, 3, 1, "", "get_class_from_name"], [59, 3, 1, "", "load_model"], [59, 3, 1, "", "load_model_and_task"], [59, 3, 1, "", "load_task"], [59, 3, 1, "", "main"], [59, 3, 1, "", "prepare_data"], [59, 3, 1, "", "run"], [59, 3, 1, "", "save_model"], [59, 3, 1, "", "save_task"], [59, 3, 1, "", "train"]], "s3prl.problem.common.hear_dcase_2016_task2": [[60, 1, 1, "", "EventPredictionTask"], [60, 1, 1, "", "FixedBatchSizeBatchSampler"], [60, 1, 1, "", "GroupSameItemSampler"], [60, 1, 1, "", "HearDcase2016Task2"], [60, 1, 1, "", "HearFSD"], [60, 1, 1, "", "HearTimestampDatapipe"], [60, 1, 1, "", "OrderedDict"], [60, 1, 1, "", "Path"], [60, 4, 1, "", "dataclass"], [60, 4, 1, "", "dcase_2016_task2"], [60, 4, 1, "", "deepcopy"], [60, 1, 1, "", "defaultdict"]], "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask": [[60, 5, 1, "", "dump_patches"], [60, 3, 1, "", "eval_reduction"], [60, 3, 1, "", "forward"], [60, 3, 1, "", "get_state"], [60, 3, 1, "", "log_scores"], [60, 3, 1, "", "parse_cached_results"], [60, 3, 1, "", "predict"], [60, 3, 1, "", "reduction"], [60, 3, 1, "", "set_state"], [60, 3, 1, "", "test_reduction"], [60, 3, 1, "", "test_step"], [60, 3, 1, "", "train_reduction"], [60, 3, 1, "", "train_step"], [60, 5, 1, "", "training"], [60, 3, 1, "", "valid_reduction"], [60, 3, 1, "", "valid_step"]], "s3prl.problem.common.hear_dcase_2016_task2.FixedBatchSizeBatchSampler": [[60, 3, 1, "", "set_epoch"]], "s3prl.problem.common.hear_dcase_2016_task2.GroupSameItemSampler": [[60, 3, 1, "", "set_epoch"]], "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2": [[60, 3, 1, "", "build_batch_sampler"], [60, 3, 1, "", "build_collate_fn"], [60, 3, 1, "", "build_dataset"], [60, 3, 1, "", "build_downstream"], [60, 3, 1, "", "build_encoder"], [60, 3, 1, "", "build_featurizer"], [60, 3, 1, "", "build_model"], [60, 3, 1, "", "build_optimizer"], [60, 3, 1, "", "build_scheduler"], [60, 3, 1, "", "build_task"], [60, 3, 1, "", "build_upstream"], [60, 3, 1, "", "default_config"], [60, 3, 1, "", "evaluate"], [60, 3, 1, "", "get_class_from_name"], [60, 3, 1, "", "load_model"], [60, 3, 1, "", "load_model_and_task"], [60, 3, 1, "", "load_task"], [60, 3, 1, "", "main"], [60, 3, 1, "", "prepare_data"], [60, 3, 1, "", "run"], [60, 3, 1, "", "save_model"], [60, 3, 1, "", "save_task"], [60, 3, 1, "", "train"]], "s3prl.problem.common.hear_dcase_2016_task2.HearFSD": [[60, 3, 1, "", "build_batch_sampler"], [60, 3, 1, "", "build_collate_fn"], [60, 3, 1, "", "build_dataset"], [60, 3, 1, "", "build_downstream"], [60, 3, 1, "", "build_encoder"], [60, 3, 1, "", "build_featurizer"], [60, 3, 1, "", "build_model"], [60, 3, 1, "", "build_optimizer"], [60, 3, 1, "", "build_scheduler"], [60, 3, 1, "", "build_task"], [60, 3, 1, "", "build_upstream"], [60, 3, 1, "", "default_config"], [60, 3, 1, "", "evaluate"], [60, 3, 1, "", "get_class_from_name"], [60, 3, 1, "", "load_model"], [60, 3, 1, "", "load_model_and_task"], [60, 3, 1, "", "load_task"], [60, 3, 1, "", "main"], [60, 3, 1, "", "prepare_data"], [60, 3, 1, "", "run"], [60, 3, 1, "", "save_model"], [60, 3, 1, "", "save_task"], [60, 3, 1, "", "train"]], "s3prl.problem.common.hear_dcase_2016_task2.HearTimestampDatapipe": [[60, 3, 1, "", "forward"]], "s3prl.problem.common.hear_dcase_2016_task2.OrderedDict": [[60, 3, 1, "", "clear"], [60, 3, 1, "", "copy"], [60, 3, 1, "", "fromkeys"], [60, 3, 1, "", "get"], [60, 3, 1, "", "items"], [60, 3, 1, "", "keys"], [60, 3, 1, "", "move_to_end"], [60, 3, 1, "", "pop"], [60, 3, 1, "", "popitem"], [60, 3, 1, "", "setdefault"], [60, 3, 1, "", "update"], [60, 3, 1, "", "values"]], "s3prl.problem.common.hear_dcase_2016_task2.Path": [[60, 3, 1, "", "absolute"], [60, 2, 1, "", "anchor"], [60, 3, 1, "", "as_posix"], [60, 3, 1, "", "as_uri"], [60, 3, 1, "", "chmod"], [60, 3, 1, "", "cwd"], [60, 2, 1, "", "drive"], [60, 3, 1, "", "exists"], [60, 3, 1, "", "expanduser"], [60, 3, 1, "", "glob"], [60, 3, 1, "", "group"], [60, 3, 1, "", "home"], [60, 3, 1, "", "is_absolute"], [60, 3, 1, "", "is_block_device"], [60, 3, 1, "", "is_char_device"], [60, 3, 1, "", "is_dir"], [60, 3, 1, "", "is_fifo"], [60, 3, 1, "", "is_file"], [60, 3, 1, "", "is_mount"], [60, 3, 1, "", "is_reserved"], [60, 3, 1, "", "is_socket"], [60, 3, 1, "", "is_symlink"], [60, 3, 1, "", "iterdir"], [60, 3, 1, "", "joinpath"], [60, 3, 1, "", "lchmod"], [60, 3, 1, "", "link_to"], [60, 3, 1, "", "lstat"], [60, 3, 1, "", "match"], [60, 3, 1, "", "mkdir"], [60, 2, 1, "", "name"], [60, 3, 1, "", "open"], [60, 3, 1, "", "owner"], [60, 2, 1, "", "parent"], [60, 2, 1, "", "parents"], [60, 2, 1, "", "parts"], [60, 3, 1, "", "read_bytes"], [60, 3, 1, "", "read_text"], [60, 3, 1, "", "relative_to"], [60, 3, 1, "", "rename"], [60, 3, 1, "", "replace"], [60, 3, 1, "", "resolve"], [60, 3, 1, "", "rglob"], [60, 3, 1, "", "rmdir"], [60, 2, 1, "", "root"], [60, 3, 1, "", "samefile"], [60, 3, 1, "", "stat"], [60, 2, 1, "", "stem"], [60, 2, 1, "", "suffix"], [60, 2, 1, "", "suffixes"], [60, 3, 1, "", "symlink_to"], [60, 3, 1, "", "touch"], [60, 3, 1, "", "unlink"], [60, 3, 1, "", "with_name"], [60, 3, 1, "", "with_suffix"], [60, 3, 1, "", "write_bytes"], [60, 3, 1, "", "write_text"]], "s3prl.problem.common.hear_dcase_2016_task2.defaultdict": [[60, 3, 1, "", "clear"], [60, 3, 1, "", "copy"], [60, 5, 1, "", "default_factory"], [60, 3, 1, "", "fromkeys"], [60, 3, 1, "", "get"], [60, 3, 1, "", "items"], [60, 3, 1, "", "keys"], [60, 3, 1, "", "pop"], [60, 3, 1, "", "popitem"], [60, 3, 1, "", "setdefault"], [60, 3, 1, "", "update"], [60, 3, 1, "", "values"]], "s3prl.problem.common.hear_esc50": [[61, 1, 1, "", "HearESC50"], [61, 1, 1, "", "HearFSD"], [61, 1, 1, "", "Path"], [61, 1, 1, "", "defaultdict"], [61, 4, 1, "", "hear_scene_kfolds"]], "s3prl.problem.common.hear_esc50.HearESC50": [[61, 3, 1, "", "build_batch_sampler"], [61, 3, 1, "", "build_collate_fn"], [61, 3, 1, "", "build_dataset"], [61, 3, 1, "", "build_downstream"], [61, 3, 1, "", "build_encoder"], [61, 3, 1, "", "build_featurizer"], [61, 3, 1, "", "build_model"], [61, 3, 1, "", "build_optimizer"], [61, 3, 1, "", "build_scheduler"], [61, 3, 1, "", "build_task"], [61, 3, 1, "", "build_upstream"], [61, 3, 1, "", "default_config"], [61, 3, 1, "", "evaluate"], [61, 3, 1, "", "get_class_from_name"], [61, 3, 1, "", "load_model"], [61, 3, 1, "", "load_model_and_task"], [61, 3, 1, "", "load_task"], [61, 3, 1, "", "main"], [61, 3, 1, "", "prepare_data"], [61, 3, 1, "", "run"], [61, 3, 1, "", "save_model"], [61, 3, 1, "", "save_task"], [61, 3, 1, "", "train"]], "s3prl.problem.common.hear_esc50.HearFSD": [[61, 3, 1, "", "build_batch_sampler"], [61, 3, 1, "", "build_collate_fn"], [61, 3, 1, "", "build_dataset"], [61, 3, 1, "", "build_downstream"], [61, 3, 1, "", "build_encoder"], [61, 3, 1, "", "build_featurizer"], [61, 3, 1, "", "build_model"], [61, 3, 1, "", "build_optimizer"], [61, 3, 1, "", "build_scheduler"], [61, 3, 1, "", "build_task"], [61, 3, 1, "", "build_upstream"], [61, 3, 1, "", "default_config"], [61, 3, 1, "", "evaluate"], [61, 3, 1, "", "get_class_from_name"], [61, 3, 1, "", "load_model"], [61, 3, 1, "", "load_model_and_task"], [61, 3, 1, "", "load_task"], [61, 3, 1, "", "main"], [61, 3, 1, "", "prepare_data"], [61, 3, 1, "", "run"], [61, 3, 1, "", "save_model"], [61, 3, 1, "", "save_task"], [61, 3, 1, "", "train"]], "s3prl.problem.common.hear_esc50.Path": [[61, 3, 1, "", "absolute"], [61, 2, 1, "", "anchor"], [61, 3, 1, "", "as_posix"], [61, 3, 1, "", "as_uri"], [61, 3, 1, "", "chmod"], [61, 3, 1, "", "cwd"], [61, 2, 1, "", "drive"], [61, 3, 1, "", "exists"], [61, 3, 1, "", "expanduser"], [61, 3, 1, "", "glob"], [61, 3, 1, "", "group"], [61, 3, 1, "", "home"], [61, 3, 1, "", "is_absolute"], [61, 3, 1, "", "is_block_device"], [61, 3, 1, "", "is_char_device"], [61, 3, 1, "", "is_dir"], [61, 3, 1, "", "is_fifo"], [61, 3, 1, "", "is_file"], [61, 3, 1, "", "is_mount"], [61, 3, 1, "", "is_reserved"], [61, 3, 1, "", "is_socket"], [61, 3, 1, "", "is_symlink"], [61, 3, 1, "", "iterdir"], [61, 3, 1, "", "joinpath"], [61, 3, 1, "", "lchmod"], [61, 3, 1, "", "link_to"], [61, 3, 1, "", "lstat"], [61, 3, 1, "", "match"], [61, 3, 1, "", "mkdir"], [61, 2, 1, "", "name"], [61, 3, 1, "", "open"], [61, 3, 1, "", "owner"], [61, 2, 1, "", "parent"], [61, 2, 1, "", "parents"], [61, 2, 1, "", "parts"], [61, 3, 1, "", "read_bytes"], [61, 3, 1, "", "read_text"], [61, 3, 1, "", "relative_to"], [61, 3, 1, "", "rename"], [61, 3, 1, "", "replace"], [61, 3, 1, "", "resolve"], [61, 3, 1, "", "rglob"], [61, 3, 1, "", "rmdir"], [61, 2, 1, "", "root"], [61, 3, 1, "", "samefile"], [61, 3, 1, "", "stat"], [61, 2, 1, "", "stem"], [61, 2, 1, "", "suffix"], [61, 2, 1, "", "suffixes"], [61, 3, 1, "", "symlink_to"], [61, 3, 1, "", "touch"], [61, 3, 1, "", "unlink"], [61, 3, 1, "", "with_name"], [61, 3, 1, "", "with_suffix"], [61, 3, 1, "", "write_bytes"], [61, 3, 1, "", "write_text"]], "s3prl.problem.common.hear_esc50.defaultdict": [[61, 3, 1, "", "clear"], [61, 3, 1, "", "copy"], [61, 5, 1, "", "default_factory"], [61, 3, 1, "", "fromkeys"], [61, 3, 1, "", "get"], [61, 3, 1, "", "items"], [61, 3, 1, "", "keys"], [61, 3, 1, "", "pop"], [61, 3, 1, "", "popitem"], [61, 3, 1, "", "setdefault"], [61, 3, 1, "", "update"], [61, 3, 1, "", "values"]], "s3prl.problem.common.hear_fsd": [[62, 1, 1, "", "CategoryEncoder"], [62, 1, 1, "", "FixedBatchSizeBatchSampler"], [62, 1, 1, "", "HearFSD"], [62, 1, 1, "", "HearFullyConnectedPrediction"], [62, 1, 1, "", "HearScenePipe"], [62, 1, 1, "", "OrderedDict"], [62, 1, 1, "", "Path"], [62, 1, 1, "", "ScenePredictionTask"], [62, 1, 1, "", "SuperbSID"], [62, 4, 1, "", "dataclass"], [62, 1, 1, "", "defaultdict"], [62, 4, 1, "", "hear_scene_trainvaltest"]], "s3prl.problem.common.hear_fsd.CategoryEncoder": [[62, 3, 1, "", "decode"], [62, 3, 1, "", "encode"]], "s3prl.problem.common.hear_fsd.FixedBatchSizeBatchSampler": [[62, 3, 1, "", "set_epoch"]], "s3prl.problem.common.hear_fsd.HearFSD": [[62, 3, 1, "", "build_batch_sampler"], [62, 3, 1, "", "build_collate_fn"], [62, 3, 1, "", "build_dataset"], [62, 3, 1, "", "build_downstream"], [62, 3, 1, "", "build_encoder"], [62, 3, 1, "", "build_featurizer"], [62, 3, 1, "", "build_model"], [62, 3, 1, "", "build_optimizer"], [62, 3, 1, "", "build_scheduler"], [62, 3, 1, "", "build_task"], [62, 3, 1, "", "build_upstream"], [62, 3, 1, "", "default_config"], [62, 3, 1, "", "evaluate"], [62, 3, 1, "", "get_class_from_name"], [62, 3, 1, "", "load_model"], [62, 3, 1, "", "load_model_and_task"], [62, 3, 1, "", "load_task"], [62, 3, 1, "", "main"], [62, 3, 1, "", "prepare_data"], [62, 3, 1, "", "run"], [62, 3, 1, "", "save_model"], [62, 3, 1, "", "save_task"], [62, 3, 1, "", "train"]], "s3prl.problem.common.hear_fsd.HearFullyConnectedPrediction": [[62, 5, 1, "", "dump_patches"], [62, 3, 1, "", "forward"], [62, 2, 1, "", "input_size"], [62, 2, 1, "", "output_size"], [62, 5, 1, "", "training"]], "s3prl.problem.common.hear_fsd.HearScenePipe": [[62, 3, 1, "", "forward"]], "s3prl.problem.common.hear_fsd.OrderedDict": [[62, 3, 1, "", "clear"], [62, 3, 1, "", "copy"], [62, 3, 1, "", "fromkeys"], [62, 3, 1, "", "get"], [62, 3, 1, "", "items"], [62, 3, 1, "", "keys"], [62, 3, 1, "", "move_to_end"], [62, 3, 1, "", "pop"], [62, 3, 1, "", "popitem"], [62, 3, 1, "", "setdefault"], [62, 3, 1, "", "update"], [62, 3, 1, "", "values"]], "s3prl.problem.common.hear_fsd.Path": [[62, 3, 1, "", "absolute"], [62, 2, 1, "", "anchor"], [62, 3, 1, "", "as_posix"], [62, 3, 1, "", "as_uri"], [62, 3, 1, "", "chmod"], [62, 3, 1, "", "cwd"], [62, 2, 1, "", "drive"], [62, 3, 1, "", "exists"], [62, 3, 1, "", "expanduser"], [62, 3, 1, "", "glob"], [62, 3, 1, "", "group"], [62, 3, 1, "", "home"], [62, 3, 1, "", "is_absolute"], [62, 3, 1, "", "is_block_device"], [62, 3, 1, "", "is_char_device"], [62, 3, 1, "", "is_dir"], [62, 3, 1, "", "is_fifo"], [62, 3, 1, "", "is_file"], [62, 3, 1, "", "is_mount"], [62, 3, 1, "", "is_reserved"], [62, 3, 1, "", "is_socket"], [62, 3, 1, "", "is_symlink"], [62, 3, 1, "", "iterdir"], [62, 3, 1, "", "joinpath"], [62, 3, 1, "", "lchmod"], [62, 3, 1, "", "link_to"], [62, 3, 1, "", "lstat"], [62, 3, 1, "", "match"], [62, 3, 1, "", "mkdir"], [62, 2, 1, "", "name"], [62, 3, 1, "", "open"], [62, 3, 1, "", "owner"], [62, 2, 1, "", "parent"], [62, 2, 1, "", "parents"], [62, 2, 1, "", "parts"], [62, 3, 1, "", "read_bytes"], [62, 3, 1, "", "read_text"], [62, 3, 1, "", "relative_to"], [62, 3, 1, "", "rename"], [62, 3, 1, "", "replace"], [62, 3, 1, "", "resolve"], [62, 3, 1, "", "rglob"], [62, 3, 1, "", "rmdir"], [62, 2, 1, "", "root"], [62, 3, 1, "", "samefile"], [62, 3, 1, "", "stat"], [62, 2, 1, "", "stem"], [62, 2, 1, "", "suffix"], [62, 2, 1, "", "suffixes"], [62, 3, 1, "", "symlink_to"], [62, 3, 1, "", "touch"], [62, 3, 1, "", "unlink"], [62, 3, 1, "", "with_name"], [62, 3, 1, "", "with_suffix"], [62, 3, 1, "", "write_bytes"], [62, 3, 1, "", "write_text"]], "s3prl.problem.common.hear_fsd.ScenePredictionTask": [[62, 5, 1, "", "dump_patches"], [62, 3, 1, "", "forward"], [62, 3, 1, "", "get_state"], [62, 3, 1, "", "log_scores"], [62, 3, 1, "", "parse_cached_results"], [62, 3, 1, "", "predict"], [62, 3, 1, "", "reduction"], [62, 3, 1, "", "set_state"], [62, 3, 1, "", "test_reduction"], [62, 3, 1, "", "test_step"], [62, 3, 1, "", "train_reduction"], [62, 3, 1, "", "train_step"], [62, 5, 1, "", "training"], [62, 3, 1, "", "valid_reduction"], [62, 3, 1, "", "valid_step"]], "s3prl.problem.common.hear_fsd.SuperbSID": [[62, 3, 1, "", "build_batch_sampler"], [62, 3, 1, "", "build_collate_fn"], [62, 3, 1, "", "build_dataset"], [62, 3, 1, "", "build_downstream"], [62, 3, 1, "", "build_encoder"], [62, 3, 1, "", "build_featurizer"], [62, 3, 1, "", "build_model"], [62, 3, 1, "", "build_optimizer"], [62, 3, 1, "", "build_scheduler"], [62, 3, 1, "", "build_task"], [62, 3, 1, "", "build_upstream"], [62, 3, 1, "", "default_config"], [62, 3, 1, "", "evaluate"], [62, 3, 1, "", "get_class_from_name"], [62, 3, 1, "", "load_model"], [62, 3, 1, "", "load_model_and_task"], [62, 3, 1, "", "load_task"], [62, 3, 1, "", "main"], [62, 3, 1, "", "prepare_data"], [62, 3, 1, "", "run"], [62, 3, 1, "", "save_model"], [62, 3, 1, "", "save_task"], [62, 3, 1, "", "train"]], "s3prl.problem.common.hear_fsd.defaultdict": [[62, 3, 1, "", "clear"], [62, 3, 1, "", "copy"], [62, 5, 1, "", "default_factory"], [62, 3, 1, "", "fromkeys"], [62, 3, 1, "", "get"], [62, 3, 1, "", "items"], [62, 3, 1, "", "keys"], [62, 3, 1, "", "pop"], [62, 3, 1, "", "popitem"], [62, 3, 1, "", "setdefault"], [62, 3, 1, "", "update"], [62, 3, 1, "", "values"]], "s3prl.problem.common.hear_gsc5hr": [[63, 1, 1, "", "HearFSD"], [63, 1, 1, "", "HearGSC5hr"]], "s3prl.problem.common.hear_gsc5hr.HearFSD": [[63, 3, 1, "", "build_batch_sampler"], [63, 3, 1, "", "build_collate_fn"], [63, 3, 1, "", "build_dataset"], [63, 3, 1, "", "build_downstream"], [63, 3, 1, "", "build_encoder"], [63, 3, 1, "", "build_featurizer"], [63, 3, 1, "", "build_model"], [63, 3, 1, "", "build_optimizer"], [63, 3, 1, "", "build_scheduler"], [63, 3, 1, "", "build_task"], [63, 3, 1, "", "build_upstream"], [63, 3, 1, "", "default_config"], [63, 3, 1, "", "evaluate"], [63, 3, 1, "", "get_class_from_name"], [63, 3, 1, "", "load_model"], [63, 3, 1, "", "load_model_and_task"], [63, 3, 1, "", "load_task"], [63, 3, 1, "", "main"], [63, 3, 1, "", "prepare_data"], [63, 3, 1, "", "run"], [63, 3, 1, "", "save_model"], [63, 3, 1, "", "save_task"], [63, 3, 1, "", "train"]], "s3prl.problem.common.hear_gsc5hr.HearGSC5hr": [[63, 3, 1, "", "build_batch_sampler"], [63, 3, 1, "", "build_collate_fn"], [63, 3, 1, "", "build_dataset"], [63, 3, 1, "", "build_downstream"], [63, 3, 1, "", "build_encoder"], [63, 3, 1, "", "build_featurizer"], [63, 3, 1, "", "build_model"], [63, 3, 1, "", "build_optimizer"], [63, 3, 1, "", "build_scheduler"], [63, 3, 1, "", "build_task"], [63, 3, 1, "", "build_upstream"], [63, 3, 1, "", "default_config"], [63, 3, 1, "", "evaluate"], [63, 3, 1, "", "get_class_from_name"], [63, 3, 1, "", "load_model"], [63, 3, 1, "", "load_model_and_task"], [63, 3, 1, "", "load_task"], [63, 3, 1, "", "main"], [63, 3, 1, "", "prepare_data"], [63, 3, 1, "", "run"], [63, 3, 1, "", "save_model"], [63, 3, 1, "", "save_task"], [63, 3, 1, "", "train"]], "s3prl.problem.common.hear_gtzan": [[64, 1, 1, "", "HearESC50"], [64, 1, 1, "", "HearGtzan"]], "s3prl.problem.common.hear_gtzan.HearESC50": [[64, 3, 1, "", "build_batch_sampler"], [64, 3, 1, "", "build_collate_fn"], [64, 3, 1, "", "build_dataset"], [64, 3, 1, "", "build_downstream"], [64, 3, 1, "", "build_encoder"], [64, 3, 1, "", "build_featurizer"], [64, 3, 1, "", "build_model"], [64, 3, 1, "", "build_optimizer"], [64, 3, 1, "", "build_scheduler"], [64, 3, 1, "", "build_task"], [64, 3, 1, "", "build_upstream"], [64, 3, 1, "", "default_config"], [64, 3, 1, "", "evaluate"], [64, 3, 1, "", "get_class_from_name"], [64, 3, 1, "", "load_model"], [64, 3, 1, "", "load_model_and_task"], [64, 3, 1, "", "load_task"], [64, 3, 1, "", "main"], [64, 3, 1, "", "prepare_data"], [64, 3, 1, "", "run"], [64, 3, 1, "", "save_model"], [64, 3, 1, "", "save_task"], [64, 3, 1, "", "train"]], "s3prl.problem.common.hear_gtzan.HearGtzan": [[64, 3, 1, "", "build_batch_sampler"], [64, 3, 1, "", "build_collate_fn"], [64, 3, 1, "", "build_dataset"], [64, 3, 1, "", "build_downstream"], [64, 3, 1, "", "build_encoder"], [64, 3, 1, "", "build_featurizer"], [64, 3, 1, "", "build_model"], [64, 3, 1, "", "build_optimizer"], [64, 3, 1, "", "build_scheduler"], [64, 3, 1, "", "build_task"], [64, 3, 1, "", "build_upstream"], [64, 3, 1, "", "default_config"], [64, 3, 1, "", "evaluate"], [64, 3, 1, "", "get_class_from_name"], [64, 3, 1, "", "load_model"], [64, 3, 1, "", "load_model_and_task"], [64, 3, 1, "", "load_task"], [64, 3, 1, "", "main"], [64, 3, 1, "", "prepare_data"], [64, 3, 1, "", "run"], [64, 3, 1, "", "save_model"], [64, 3, 1, "", "save_task"], [64, 3, 1, "", "train"]], "s3prl.problem.common.hear_gtzan_music_speech": [[65, 1, 1, "", "HearESC50"], [65, 1, 1, "", "HearGtzanMusicSpeech"]], "s3prl.problem.common.hear_gtzan_music_speech.HearESC50": [[65, 3, 1, "", "build_batch_sampler"], [65, 3, 1, "", "build_collate_fn"], [65, 3, 1, "", "build_dataset"], [65, 3, 1, "", "build_downstream"], [65, 3, 1, "", "build_encoder"], [65, 3, 1, "", "build_featurizer"], [65, 3, 1, "", "build_model"], [65, 3, 1, "", "build_optimizer"], [65, 3, 1, "", "build_scheduler"], [65, 3, 1, "", "build_task"], [65, 3, 1, "", "build_upstream"], [65, 3, 1, "", "default_config"], [65, 3, 1, "", "evaluate"], [65, 3, 1, "", "get_class_from_name"], [65, 3, 1, "", "load_model"], [65, 3, 1, "", "load_model_and_task"], [65, 3, 1, "", "load_task"], [65, 3, 1, "", "main"], [65, 3, 1, "", "prepare_data"], [65, 3, 1, "", "run"], [65, 3, 1, "", "save_model"], [65, 3, 1, "", "save_task"], [65, 3, 1, "", "train"]], "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech": [[65, 3, 1, "", "build_batch_sampler"], [65, 3, 1, "", "build_collate_fn"], [65, 3, 1, "", "build_dataset"], [65, 3, 1, "", "build_downstream"], [65, 3, 1, "", "build_encoder"], [65, 3, 1, "", "build_featurizer"], [65, 3, 1, "", "build_model"], [65, 3, 1, "", "build_optimizer"], [65, 3, 1, "", "build_scheduler"], [65, 3, 1, "", "build_task"], [65, 3, 1, "", "build_upstream"], [65, 3, 1, "", "default_config"], [65, 3, 1, "", "evaluate"], [65, 3, 1, "", "get_class_from_name"], [65, 3, 1, "", "load_model"], [65, 3, 1, "", "load_model_and_task"], [65, 3, 1, "", "load_task"], [65, 3, 1, "", "main"], [65, 3, 1, "", "prepare_data"], [65, 3, 1, "", "run"], [65, 3, 1, "", "save_model"], [65, 3, 1, "", "save_task"], [65, 3, 1, "", "train"]], "s3prl.problem.common.hear_gunshot": [[66, 1, 1, "", "HearESC50"], [66, 1, 1, "", "HearGunshot"]], "s3prl.problem.common.hear_gunshot.HearESC50": [[66, 3, 1, "", "build_batch_sampler"], [66, 3, 1, "", "build_collate_fn"], [66, 3, 1, "", "build_dataset"], [66, 3, 1, "", "build_downstream"], [66, 3, 1, "", "build_encoder"], [66, 3, 1, "", "build_featurizer"], [66, 3, 1, "", "build_model"], [66, 3, 1, "", "build_optimizer"], [66, 3, 1, "", "build_scheduler"], [66, 3, 1, "", "build_task"], [66, 3, 1, "", "build_upstream"], [66, 3, 1, "", "default_config"], [66, 3, 1, "", "evaluate"], [66, 3, 1, "", "get_class_from_name"], [66, 3, 1, "", "load_model"], [66, 3, 1, "", "load_model_and_task"], [66, 3, 1, "", "load_task"], [66, 3, 1, "", "main"], [66, 3, 1, "", "prepare_data"], [66, 3, 1, "", "run"], [66, 3, 1, "", "save_model"], [66, 3, 1, "", "save_task"], [66, 3, 1, "", "train"]], "s3prl.problem.common.hear_gunshot.HearGunshot": [[66, 3, 1, "", "build_batch_sampler"], [66, 3, 1, "", "build_collate_fn"], [66, 3, 1, "", "build_dataset"], [66, 3, 1, "", "build_downstream"], [66, 3, 1, "", "build_encoder"], [66, 3, 1, "", "build_featurizer"], [66, 3, 1, "", "build_model"], [66, 3, 1, "", "build_optimizer"], [66, 3, 1, "", "build_scheduler"], [66, 3, 1, "", "build_task"], [66, 3, 1, "", "build_upstream"], [66, 3, 1, "", "default_config"], [66, 3, 1, "", "evaluate"], [66, 3, 1, "", "get_class_from_name"], [66, 3, 1, "", "load_model"], [66, 3, 1, "", "load_model_and_task"], [66, 3, 1, "", "load_task"], [66, 3, 1, "", "main"], [66, 3, 1, "", "prepare_data"], [66, 3, 1, "", "run"], [66, 3, 1, "", "save_model"], [66, 3, 1, "", "save_task"], [66, 3, 1, "", "train"]], "s3prl.problem.common.hear_libricount": [[67, 1, 1, "", "HearESC50"], [67, 1, 1, "", "HearLibriCount"]], "s3prl.problem.common.hear_libricount.HearESC50": [[67, 3, 1, "", "build_batch_sampler"], [67, 3, 1, "", "build_collate_fn"], [67, 3, 1, "", "build_dataset"], [67, 3, 1, "", "build_downstream"], [67, 3, 1, "", "build_encoder"], [67, 3, 1, "", "build_featurizer"], [67, 3, 1, "", "build_model"], [67, 3, 1, "", "build_optimizer"], [67, 3, 1, "", "build_scheduler"], [67, 3, 1, "", "build_task"], [67, 3, 1, "", "build_upstream"], [67, 3, 1, "", "default_config"], [67, 3, 1, "", "evaluate"], [67, 3, 1, "", "get_class_from_name"], [67, 3, 1, "", "load_model"], [67, 3, 1, "", "load_model_and_task"], [67, 3, 1, "", "load_task"], [67, 3, 1, "", "main"], [67, 3, 1, "", "prepare_data"], [67, 3, 1, "", "run"], [67, 3, 1, "", "save_model"], [67, 3, 1, "", "save_task"], [67, 3, 1, "", "train"]], "s3prl.problem.common.hear_libricount.HearLibriCount": [[67, 3, 1, "", "build_batch_sampler"], [67, 3, 1, "", "build_collate_fn"], [67, 3, 1, "", "build_dataset"], [67, 3, 1, "", "build_downstream"], [67, 3, 1, "", "build_encoder"], [67, 3, 1, "", "build_featurizer"], [67, 3, 1, "", "build_model"], [67, 3, 1, "", "build_optimizer"], [67, 3, 1, "", "build_scheduler"], [67, 3, 1, "", "build_task"], [67, 3, 1, "", "build_upstream"], [67, 3, 1, "", "default_config"], [67, 3, 1, "", "evaluate"], [67, 3, 1, "", "get_class_from_name"], [67, 3, 1, "", "load_model"], [67, 3, 1, "", "load_model_and_task"], [67, 3, 1, "", "load_task"], [67, 3, 1, "", "main"], [67, 3, 1, "", "prepare_data"], [67, 3, 1, "", "run"], [67, 3, 1, "", "save_model"], [67, 3, 1, "", "save_task"], [67, 3, 1, "", "train"]], "s3prl.problem.common.hear_maestro": [[68, 1, 1, "", "HearDcase2016Task2"], [68, 1, 1, "", "HearMaestro"], [68, 1, 1, "", "Path"], [68, 4, 1, "", "deepcopy"], [68, 1, 1, "", "defaultdict"], [68, 4, 1, "", "prepare_maestro"]], "s3prl.problem.common.hear_maestro.HearDcase2016Task2": [[68, 3, 1, "", "build_batch_sampler"], [68, 3, 1, "", "build_collate_fn"], [68, 3, 1, "", "build_dataset"], [68, 3, 1, "", "build_downstream"], [68, 3, 1, "", "build_encoder"], [68, 3, 1, "", "build_featurizer"], [68, 3, 1, "", "build_model"], [68, 3, 1, "", "build_optimizer"], [68, 3, 1, "", "build_scheduler"], [68, 3, 1, "", "build_task"], [68, 3, 1, "", "build_upstream"], [68, 3, 1, "", "default_config"], [68, 3, 1, "", "evaluate"], [68, 3, 1, "", "get_class_from_name"], [68, 3, 1, "", "load_model"], [68, 3, 1, "", "load_model_and_task"], [68, 3, 1, "", "load_task"], [68, 3, 1, "", "main"], [68, 3, 1, "", "prepare_data"], [68, 3, 1, "", "run"], [68, 3, 1, "", "save_model"], [68, 3, 1, "", "save_task"], [68, 3, 1, "", "train"]], "s3prl.problem.common.hear_maestro.HearMaestro": [[68, 3, 1, "", "build_batch_sampler"], [68, 3, 1, "", "build_collate_fn"], [68, 3, 1, "", "build_dataset"], [68, 3, 1, "", "build_downstream"], [68, 3, 1, "", "build_encoder"], [68, 3, 1, "", "build_featurizer"], [68, 3, 1, "", "build_model"], [68, 3, 1, "", "build_optimizer"], [68, 3, 1, "", "build_scheduler"], [68, 3, 1, "", "build_task"], [68, 3, 1, "", "build_upstream"], [68, 3, 1, "", "default_config"], [68, 3, 1, "", "evaluate"], [68, 3, 1, "", "get_class_from_name"], [68, 3, 1, "", "load_model"], [68, 3, 1, "", "load_model_and_task"], [68, 3, 1, "", "load_task"], [68, 3, 1, "", "main"], [68, 3, 1, "", "prepare_data"], [68, 3, 1, "", "run"], [68, 3, 1, "", "save_model"], [68, 3, 1, "", "save_task"], [68, 3, 1, "", "train"]], "s3prl.problem.common.hear_maestro.Path": [[68, 3, 1, "", "absolute"], [68, 2, 1, "", "anchor"], [68, 3, 1, "", "as_posix"], [68, 3, 1, "", "as_uri"], [68, 3, 1, "", "chmod"], [68, 3, 1, "", "cwd"], [68, 2, 1, "", "drive"], [68, 3, 1, "", "exists"], [68, 3, 1, "", "expanduser"], [68, 3, 1, "", "glob"], [68, 3, 1, "", "group"], [68, 3, 1, "", "home"], [68, 3, 1, "", "is_absolute"], [68, 3, 1, "", "is_block_device"], [68, 3, 1, "", "is_char_device"], [68, 3, 1, "", "is_dir"], [68, 3, 1, "", "is_fifo"], [68, 3, 1, "", "is_file"], [68, 3, 1, "", "is_mount"], [68, 3, 1, "", "is_reserved"], [68, 3, 1, "", "is_socket"], [68, 3, 1, "", "is_symlink"], [68, 3, 1, "", "iterdir"], [68, 3, 1, "", "joinpath"], [68, 3, 1, "", "lchmod"], [68, 3, 1, "", "link_to"], [68, 3, 1, "", "lstat"], [68, 3, 1, "", "match"], [68, 3, 1, "", "mkdir"], [68, 2, 1, "", "name"], [68, 3, 1, "", "open"], [68, 3, 1, "", "owner"], [68, 2, 1, "", "parent"], [68, 2, 1, "", "parents"], [68, 2, 1, "", "parts"], [68, 3, 1, "", "read_bytes"], [68, 3, 1, "", "read_text"], [68, 3, 1, "", "relative_to"], [68, 3, 1, "", "rename"], [68, 3, 1, "", "replace"], [68, 3, 1, "", "resolve"], [68, 3, 1, "", "rglob"], [68, 3, 1, "", "rmdir"], [68, 2, 1, "", "root"], [68, 3, 1, "", "samefile"], [68, 3, 1, "", "stat"], [68, 2, 1, "", "stem"], [68, 2, 1, "", "suffix"], [68, 2, 1, "", "suffixes"], [68, 3, 1, "", "symlink_to"], [68, 3, 1, "", "touch"], [68, 3, 1, "", "unlink"], [68, 3, 1, "", "with_name"], [68, 3, 1, "", "with_suffix"], [68, 3, 1, "", "write_bytes"], [68, 3, 1, "", "write_text"]], "s3prl.problem.common.hear_maestro.defaultdict": [[68, 3, 1, "", "clear"], [68, 3, 1, "", "copy"], [68, 5, 1, "", "default_factory"], [68, 3, 1, "", "fromkeys"], [68, 3, 1, "", "get"], [68, 3, 1, "", "items"], [68, 3, 1, "", "keys"], [68, 3, 1, "", "pop"], [68, 3, 1, "", "popitem"], [68, 3, 1, "", "setdefault"], [68, 3, 1, "", "update"], [68, 3, 1, "", "values"]], "s3prl.problem.common.hear_nsynth5hr": [[69, 1, 1, "", "HearFSD"], [69, 1, 1, "", "HearNsynth5hr"]], "s3prl.problem.common.hear_nsynth5hr.HearFSD": [[69, 3, 1, "", "build_batch_sampler"], [69, 3, 1, "", "build_collate_fn"], [69, 3, 1, "", "build_dataset"], [69, 3, 1, "", "build_downstream"], [69, 3, 1, "", "build_encoder"], [69, 3, 1, "", "build_featurizer"], [69, 3, 1, "", "build_model"], [69, 3, 1, "", "build_optimizer"], [69, 3, 1, "", "build_scheduler"], [69, 3, 1, "", "build_task"], [69, 3, 1, "", "build_upstream"], [69, 3, 1, "", "default_config"], [69, 3, 1, "", "evaluate"], [69, 3, 1, "", "get_class_from_name"], [69, 3, 1, "", "load_model"], [69, 3, 1, "", "load_model_and_task"], [69, 3, 1, "", "load_task"], [69, 3, 1, "", "main"], [69, 3, 1, "", "prepare_data"], [69, 3, 1, "", "run"], [69, 3, 1, "", "save_model"], [69, 3, 1, "", "save_task"], [69, 3, 1, "", "train"]], "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr": [[69, 3, 1, "", "build_batch_sampler"], [69, 3, 1, "", "build_collate_fn"], [69, 3, 1, "", "build_dataset"], [69, 3, 1, "", "build_downstream"], [69, 3, 1, "", "build_encoder"], [69, 3, 1, "", "build_featurizer"], [69, 3, 1, "", "build_model"], [69, 3, 1, "", "build_optimizer"], [69, 3, 1, "", "build_scheduler"], [69, 3, 1, "", "build_task"], [69, 3, 1, "", "build_upstream"], [69, 3, 1, "", "default_config"], [69, 3, 1, "", "evaluate"], [69, 3, 1, "", "get_class_from_name"], [69, 3, 1, "", "load_model"], [69, 3, 1, "", "load_model_and_task"], [69, 3, 1, "", "load_task"], [69, 3, 1, "", "main"], [69, 3, 1, "", "prepare_data"], [69, 3, 1, "", "run"], [69, 3, 1, "", "save_model"], [69, 3, 1, "", "save_task"], [69, 3, 1, "", "train"]], "s3prl.problem.common.hear_stroke": [[70, 1, 1, "", "HearESC50"], [70, 1, 1, "", "HearStroke"]], "s3prl.problem.common.hear_stroke.HearESC50": [[70, 3, 1, "", "build_batch_sampler"], [70, 3, 1, "", "build_collate_fn"], [70, 3, 1, "", "build_dataset"], [70, 3, 1, "", "build_downstream"], [70, 3, 1, "", "build_encoder"], [70, 3, 1, "", "build_featurizer"], [70, 3, 1, "", "build_model"], [70, 3, 1, "", "build_optimizer"], [70, 3, 1, "", "build_scheduler"], [70, 3, 1, "", "build_task"], [70, 3, 1, "", "build_upstream"], [70, 3, 1, "", "default_config"], [70, 3, 1, "", "evaluate"], [70, 3, 1, "", "get_class_from_name"], [70, 3, 1, "", "load_model"], [70, 3, 1, "", "load_model_and_task"], [70, 3, 1, "", "load_task"], [70, 3, 1, "", "main"], [70, 3, 1, "", "prepare_data"], [70, 3, 1, "", "run"], [70, 3, 1, "", "save_model"], [70, 3, 1, "", "save_task"], [70, 3, 1, "", "train"]], "s3prl.problem.common.hear_stroke.HearStroke": [[70, 3, 1, "", "build_batch_sampler"], [70, 3, 1, "", "build_collate_fn"], [70, 3, 1, "", "build_dataset"], [70, 3, 1, "", "build_downstream"], [70, 3, 1, "", "build_encoder"], [70, 3, 1, "", "build_featurizer"], [70, 3, 1, "", "build_model"], [70, 3, 1, "", "build_optimizer"], [70, 3, 1, "", "build_scheduler"], [70, 3, 1, "", "build_task"], [70, 3, 1, "", "build_upstream"], [70, 3, 1, "", "default_config"], [70, 3, 1, "", "evaluate"], [70, 3, 1, "", "get_class_from_name"], [70, 3, 1, "", "load_model"], [70, 3, 1, "", "load_model_and_task"], [70, 3, 1, "", "load_task"], [70, 3, 1, "", "main"], [70, 3, 1, "", "prepare_data"], [70, 3, 1, "", "run"], [70, 3, 1, "", "save_model"], [70, 3, 1, "", "save_task"], [70, 3, 1, "", "train"]], "s3prl.problem.common.hear_tonic": [[71, 1, 1, "", "HearESC50"], [71, 1, 1, "", "HearTonic"]], "s3prl.problem.common.hear_tonic.HearESC50": [[71, 3, 1, "", "build_batch_sampler"], [71, 3, 1, "", "build_collate_fn"], [71, 3, 1, "", "build_dataset"], [71, 3, 1, "", "build_downstream"], [71, 3, 1, "", "build_encoder"], [71, 3, 1, "", "build_featurizer"], [71, 3, 1, "", "build_model"], [71, 3, 1, "", "build_optimizer"], [71, 3, 1, "", "build_scheduler"], [71, 3, 1, "", "build_task"], [71, 3, 1, "", "build_upstream"], [71, 3, 1, "", "default_config"], [71, 3, 1, "", "evaluate"], [71, 3, 1, "", "get_class_from_name"], [71, 3, 1, "", "load_model"], [71, 3, 1, "", "load_model_and_task"], [71, 3, 1, "", "load_task"], [71, 3, 1, "", "main"], [71, 3, 1, "", "prepare_data"], [71, 3, 1, "", "run"], [71, 3, 1, "", "save_model"], [71, 3, 1, "", "save_task"], [71, 3, 1, "", "train"]], "s3prl.problem.common.hear_tonic.HearTonic": [[71, 3, 1, "", "build_batch_sampler"], [71, 3, 1, "", "build_collate_fn"], [71, 3, 1, "", "build_dataset"], [71, 3, 1, "", "build_downstream"], [71, 3, 1, "", "build_encoder"], [71, 3, 1, "", "build_featurizer"], [71, 3, 1, "", "build_model"], [71, 3, 1, "", "build_optimizer"], [71, 3, 1, "", "build_scheduler"], [71, 3, 1, "", "build_task"], [71, 3, 1, "", "build_upstream"], [71, 3, 1, "", "default_config"], [71, 3, 1, "", "evaluate"], [71, 3, 1, "", "get_class_from_name"], [71, 3, 1, "", "load_model"], [71, 3, 1, "", "load_model_and_task"], [71, 3, 1, "", "load_task"], [71, 3, 1, "", "main"], [71, 3, 1, "", "prepare_data"], [71, 3, 1, "", "run"], [71, 3, 1, "", "save_model"], [71, 3, 1, "", "save_task"], [71, 3, 1, "", "train"]], "s3prl.problem.common.hear_vocal": [[72, 1, 1, "", "HearESC50"], [72, 1, 1, "", "HearVocal"]], "s3prl.problem.common.hear_vocal.HearESC50": [[72, 3, 1, "", "build_batch_sampler"], [72, 3, 1, "", "build_collate_fn"], [72, 3, 1, "", "build_dataset"], [72, 3, 1, "", "build_downstream"], [72, 3, 1, "", "build_encoder"], [72, 3, 1, "", "build_featurizer"], [72, 3, 1, "", "build_model"], [72, 3, 1, "", "build_optimizer"], [72, 3, 1, "", "build_scheduler"], [72, 3, 1, "", "build_task"], [72, 3, 1, "", "build_upstream"], [72, 3, 1, "", "default_config"], [72, 3, 1, "", "evaluate"], [72, 3, 1, "", "get_class_from_name"], [72, 3, 1, "", "load_model"], [72, 3, 1, "", "load_model_and_task"], [72, 3, 1, "", "load_task"], [72, 3, 1, "", "main"], [72, 3, 1, "", "prepare_data"], [72, 3, 1, "", "run"], [72, 3, 1, "", "save_model"], [72, 3, 1, "", "save_task"], [72, 3, 1, "", "train"]], "s3prl.problem.common.hear_vocal.HearVocal": [[72, 3, 1, "", "build_batch_sampler"], [72, 3, 1, "", "build_collate_fn"], [72, 3, 1, "", "build_dataset"], [72, 3, 1, "", "build_downstream"], [72, 3, 1, "", "build_encoder"], [72, 3, 1, "", "build_featurizer"], [72, 3, 1, "", "build_model"], [72, 3, 1, "", "build_optimizer"], [72, 3, 1, "", "build_scheduler"], [72, 3, 1, "", "build_task"], [72, 3, 1, "", "build_upstream"], [72, 3, 1, "", "default_config"], [72, 3, 1, "", "evaluate"], [72, 3, 1, "", "get_class_from_name"], [72, 3, 1, "", "load_model"], [72, 3, 1, "", "load_model_and_task"], [72, 3, 1, "", "load_task"], [72, 3, 1, "", "main"], [72, 3, 1, "", "prepare_data"], [72, 3, 1, "", "run"], [72, 3, 1, "", "save_model"], [72, 3, 1, "", "save_task"], [72, 3, 1, "", "train"]], "s3prl.problem.common.hear_vox_lingual": [[73, 1, 1, "", "HearESC50"], [73, 1, 1, "", "HearVoxLingual"]], "s3prl.problem.common.hear_vox_lingual.HearESC50": [[73, 3, 1, "", "build_batch_sampler"], [73, 3, 1, "", "build_collate_fn"], [73, 3, 1, "", "build_dataset"], [73, 3, 1, "", "build_downstream"], [73, 3, 1, "", "build_encoder"], [73, 3, 1, "", "build_featurizer"], [73, 3, 1, "", "build_model"], [73, 3, 1, "", "build_optimizer"], [73, 3, 1, "", "build_scheduler"], [73, 3, 1, "", "build_task"], [73, 3, 1, "", "build_upstream"], [73, 3, 1, "", "default_config"], [73, 3, 1, "", "evaluate"], [73, 3, 1, "", "get_class_from_name"], [73, 3, 1, "", "load_model"], [73, 3, 1, "", "load_model_and_task"], [73, 3, 1, "", "load_task"], [73, 3, 1, "", "main"], [73, 3, 1, "", "prepare_data"], [73, 3, 1, "", "run"], [73, 3, 1, "", "save_model"], [73, 3, 1, "", "save_task"], [73, 3, 1, "", "train"]], "s3prl.problem.common.hear_vox_lingual.HearVoxLingual": [[73, 3, 1, "", "build_batch_sampler"], [73, 3, 1, "", "build_collate_fn"], [73, 3, 1, "", "build_dataset"], [73, 3, 1, "", "build_downstream"], [73, 3, 1, "", "build_encoder"], [73, 3, 1, "", "build_featurizer"], [73, 3, 1, "", "build_model"], [73, 3, 1, "", "build_optimizer"], [73, 3, 1, "", "build_scheduler"], [73, 3, 1, "", "build_task"], [73, 3, 1, "", "build_upstream"], [73, 3, 1, "", "default_config"], [73, 3, 1, "", "evaluate"], [73, 3, 1, "", "get_class_from_name"], [73, 3, 1, "", "load_model"], [73, 3, 1, "", "load_model_and_task"], [73, 3, 1, "", "load_task"], [73, 3, 1, "", "main"], [73, 3, 1, "", "prepare_data"], [73, 3, 1, "", "run"], [73, 3, 1, "", "save_model"], [73, 3, 1, "", "save_task"], [73, 3, 1, "", "train"]], "s3prl.problem.common.run": [[74, 1, 1, "", "Common"]], "s3prl.problem.common.run.Common": [[74, 3, 1, "", "build_collate_fn"], [74, 3, 1, "", "build_featurizer"], [74, 3, 1, "", "build_model"], [74, 3, 1, "", "build_optimizer"], [74, 3, 1, "", "build_scheduler"], [74, 3, 1, "", "build_task"], [74, 3, 1, "", "build_upstream"], [74, 3, 1, "", "evaluate"], [74, 3, 1, "", "get_class_from_name"], [74, 3, 1, "", "load_model"], [74, 3, 1, "", "load_model_and_task"], [74, 3, 1, "", "load_task"], [74, 3, 1, "", "main"], [74, 3, 1, "", "run"], [74, 3, 1, "", "save_model"], [74, 3, 1, "", "save_task"], [74, 3, 1, "", "train"]], "s3prl.problem.common.superb_er": [[75, 1, 1, "", "SuperbER"], [75, 4, 1, "", "iemocap_for_superb"]], "s3prl.problem.common.superb_er.SuperbER": [[75, 3, 1, "", "build_batch_sampler"], [75, 3, 1, "", "build_collate_fn"], [75, 3, 1, "", "build_dataset"], [75, 3, 1, "", "build_downstream"], [75, 3, 1, "", "build_encoder"], [75, 3, 1, "", "build_featurizer"], [75, 3, 1, "", "build_model"], [75, 3, 1, "", "build_optimizer"], [75, 3, 1, "", "build_scheduler"], [75, 3, 1, "", "build_task"], [75, 3, 1, "", "build_upstream"], [75, 3, 1, "", "default_config"], [75, 3, 1, "", "evaluate"], [75, 3, 1, "", "get_class_from_name"], [75, 3, 1, "", "load_model"], [75, 3, 1, "", "load_model_and_task"], [75, 3, 1, "", "load_task"], [75, 3, 1, "", "main"], [75, 3, 1, "", "prepare_data"], [75, 3, 1, "", "run"], [75, 3, 1, "", "save_model"], [75, 3, 1, "", "save_task"], [75, 3, 1, "", "train"]], "s3prl.problem.common.superb_ic": [[76, 1, 1, "", "SuperbIC"], [76, 4, 1, "", "fsc_for_multi_classification"]], "s3prl.problem.common.superb_ic.SuperbIC": [[76, 3, 1, "", "build_batch_sampler"], [76, 3, 1, "", "build_collate_fn"], [76, 3, 1, "", "build_dataset"], [76, 3, 1, "", "build_downstream"], [76, 3, 1, "", "build_encoder"], [76, 3, 1, "", "build_featurizer"], [76, 3, 1, "", "build_model"], [76, 3, 1, "", "build_optimizer"], [76, 3, 1, "", "build_scheduler"], [76, 3, 1, "", "build_task"], [76, 3, 1, "", "build_upstream"], [76, 3, 1, "", "default_config"], [76, 3, 1, "", "evaluate"], [76, 3, 1, "", "get_class_from_name"], [76, 3, 1, "", "load_model"], [76, 3, 1, "", "load_model_and_task"], [76, 3, 1, "", "load_task"], [76, 3, 1, "", "main"], [76, 3, 1, "", "prepare_data"], [76, 3, 1, "", "run"], [76, 3, 1, "", "save_model"], [76, 3, 1, "", "save_task"], [76, 3, 1, "", "train"]], "s3prl.problem.common.superb_ks": [[77, 1, 1, "", "SuperbKS"], [77, 4, 1, "", "gsc1_for_classification"]], "s3prl.problem.common.superb_ks.SuperbKS": [[77, 3, 1, "", "build_batch_sampler"], [77, 3, 1, "", "build_collate_fn"], [77, 3, 1, "", "build_dataset"], [77, 3, 1, "", "build_downstream"], [77, 3, 1, "", "build_encoder"], [77, 3, 1, "", "build_featurizer"], [77, 3, 1, "", "build_model"], [77, 3, 1, "", "build_optimizer"], [77, 3, 1, "", "build_scheduler"], [77, 3, 1, "", "build_task"], [77, 3, 1, "", "build_upstream"], [77, 3, 1, "", "default_config"], [77, 3, 1, "", "evaluate"], [77, 3, 1, "", "get_class_from_name"], [77, 3, 1, "", "load_model"], [77, 3, 1, "", "load_model_and_task"], [77, 3, 1, "", "load_task"], [77, 3, 1, "", "main"], [77, 3, 1, "", "prepare_data"], [77, 3, 1, "", "run"], [77, 3, 1, "", "save_model"], [77, 3, 1, "", "save_task"], [77, 3, 1, "", "train"]], "s3prl.problem.common.superb_sid": [[78, 1, 1, "", "SuperbSID"], [78, 4, 1, "", "voxceleb1_for_sid"]], "s3prl.problem.common.superb_sid.SuperbSID": [[78, 3, 1, "", "build_batch_sampler"], [78, 3, 1, "", "build_collate_fn"], [78, 3, 1, "", "build_dataset"], [78, 3, 1, "", "build_downstream"], [78, 3, 1, "", "build_encoder"], [78, 3, 1, "", "build_featurizer"], [78, 3, 1, "", "build_model"], [78, 3, 1, "", "build_optimizer"], [78, 3, 1, "", "build_scheduler"], [78, 3, 1, "", "build_task"], [78, 3, 1, "", "build_upstream"], [78, 3, 1, "", "default_config"], [78, 3, 1, "", "evaluate"], [78, 3, 1, "", "get_class_from_name"], [78, 3, 1, "", "load_model"], [78, 3, 1, "", "load_model_and_task"], [78, 3, 1, "", "load_task"], [78, 3, 1, "", "main"], [78, 3, 1, "", "prepare_data"], [78, 3, 1, "", "run"], [78, 3, 1, "", "save_model"], [78, 3, 1, "", "save_task"], [78, 3, 1, "", "train"]], "s3prl.problem.diarization": [[79, 1, 1, "", "SuperbSD"], [80, 0, 0, "-", "run"], [81, 0, 0, "-", "superb_sd"], [82, 0, 0, "-", "util"]], "s3prl.problem.diarization.SuperbSD": [[79, 3, 1, "", "build_batch_sampler"], [79, 3, 1, "", "build_collate_fn"], [79, 3, 1, "", "build_dataset"], [79, 3, 1, "", "build_downstream"], [79, 3, 1, "", "build_featurizer"], [79, 3, 1, "", "build_model"], [79, 3, 1, "", "build_optimizer"], [79, 3, 1, "", "build_scheduler"], [79, 3, 1, "", "build_task"], [79, 3, 1, "", "build_upstream"], [79, 3, 1, "", "default_config"], [79, 3, 1, "", "evaluate"], [79, 3, 1, "", "get_class_from_name"], [79, 3, 1, "", "load_model"], [79, 3, 1, "", "load_model_and_task"], [79, 3, 1, "", "load_task"], [79, 3, 1, "", "main"], [79, 3, 1, "", "prepare_data"], [79, 3, 1, "", "run"], [79, 3, 1, "", "save_model"], [79, 3, 1, "", "save_task"], [79, 3, 1, "", "scoring"], [79, 3, 1, "", "train"]], "s3prl.problem.diarization.run": [[80, 1, 1, "", "Diarization"]], "s3prl.problem.diarization.run.Diarization": [[80, 3, 1, "", "build_collate_fn"], [80, 3, 1, "", "build_featurizer"], [80, 3, 1, "", "build_model"], [80, 3, 1, "", "build_optimizer"], [80, 3, 1, "", "build_scheduler"], [80, 3, 1, "", "build_task"], [80, 3, 1, "", "build_upstream"], [80, 3, 1, "", "evaluate"], [80, 3, 1, "", "get_class_from_name"], [80, 3, 1, "", "load_model"], [80, 3, 1, "", "load_model_and_task"], [80, 3, 1, "", "load_task"], [80, 3, 1, "", "main"], [80, 3, 1, "", "run"], [80, 3, 1, "", "save_model"], [80, 3, 1, "", "save_task"], [80, 3, 1, "", "scoring"], [80, 3, 1, "", "train"]], "s3prl.problem.diarization.superb_sd": [[81, 1, 1, "", "SuperbSD"]], "s3prl.problem.diarization.superb_sd.SuperbSD": [[81, 3, 1, "", "build_batch_sampler"], [81, 3, 1, "", "build_collate_fn"], [81, 3, 1, "", "build_dataset"], [81, 3, 1, "", "build_downstream"], [81, 3, 1, "", "build_featurizer"], [81, 3, 1, "", "build_model"], [81, 3, 1, "", "build_optimizer"], [81, 3, 1, "", "build_scheduler"], [81, 3, 1, "", "build_task"], [81, 3, 1, "", "build_upstream"], [81, 3, 1, "", "default_config"], [81, 3, 1, "", "evaluate"], [81, 3, 1, "", "get_class_from_name"], [81, 3, 1, "", "load_model"], [81, 3, 1, "", "load_model_and_task"], [81, 3, 1, "", "load_task"], [81, 3, 1, "", "main"], [81, 3, 1, "", "prepare_data"], [81, 3, 1, "", "run"], [81, 3, 1, "", "save_model"], [81, 3, 1, "", "save_task"], [81, 3, 1, "", "scoring"], [81, 3, 1, "", "train"]], "s3prl.problem.diarization.util": [[82, 4, 1, "", "csv_to_kaldi_dir"], [82, 4, 1, "", "kaldi_dir_to_csv"], [82, 4, 1, "", "kaldi_dir_to_rttm"]], "s3prl.task": [[83, 1, 1, "", "DiarizationPIT"], [83, 1, 1, "", "DumpFeature"], [83, 1, 1, "", "SpeakerVerification"], [83, 1, 1, "", "Speech2TextCTCTask"], [83, 1, 1, "", "Task"], [83, 1, 1, "", "UtteranceClassificationTask"], [83, 1, 1, "", "UtteranceMultiClassClassificationTask"], [84, 0, 0, "-", "base"], [85, 0, 0, "-", "diarization"], [86, 0, 0, "-", "dump_feature"], [87, 0, 0, "-", "event_prediction"], [88, 0, 0, "-", "scene_prediction"], [89, 0, 0, "-", "speaker_verification_task"], [90, 0, 0, "-", "speech2text_ctc_task"], [91, 0, 0, "-", "utterance_classification_task"]], "s3prl.task.DiarizationPIT": [[83, 5, 1, "", "dump_patches"], [83, 3, 1, "", "forward"], [83, 3, 1, "", "get_state"], [83, 3, 1, "", "parse_cached_results"], [83, 3, 1, "", "predict"], [83, 3, 1, "", "reduction"], [83, 3, 1, "", "set_state"], [83, 3, 1, "", "test_reduction"], [83, 3, 1, "", "test_step"], [83, 3, 1, "", "train_reduction"], [83, 3, 1, "", "train_step"], [83, 5, 1, "", "training"], [83, 3, 1, "", "valid_reduction"], [83, 3, 1, "", "valid_step"]], "s3prl.task.DumpFeature": [[83, 5, 1, "", "dump_patches"], [83, 3, 1, "", "forward"], [83, 3, 1, "", "get_state"], [83, 3, 1, "", "parse_cached_results"], [83, 3, 1, "", "predict"], [83, 3, 1, "", "reduction"], [83, 3, 1, "", "set_state"], [83, 3, 1, "", "test_reduction"], [83, 3, 1, "", "test_step"], [83, 3, 1, "", "train_reduction"], [83, 3, 1, "", "train_step"], [83, 5, 1, "", "training"], [83, 3, 1, "", "valid_reduction"], [83, 3, 1, "", "valid_step"]], "s3prl.task.SpeakerVerification": [[83, 5, 1, "", "dump_patches"], [83, 3, 1, "", "forward"], [83, 3, 1, "", "get_state"], [83, 3, 1, "", "parse_cached_results"], [83, 3, 1, "", "predict"], [83, 3, 1, "", "reduction"], [83, 3, 1, "", "set_state"], [83, 3, 1, "", "test_reduction"], [83, 3, 1, "", "test_step"], [83, 3, 1, "", "train_reduction"], [83, 3, 1, "", "train_step"], [83, 5, 1, "", "training"], [83, 3, 1, "", "valid_reduction"], [83, 3, 1, "", "valid_step"]], "s3prl.task.Speech2TextCTCTask": [[83, 5, 1, "", "dump_patches"], [83, 3, 1, "", "forward"], [83, 3, 1, "", "get_state"], [83, 3, 1, "", "parse_cached_results"], [83, 3, 1, "", "predict"], [83, 3, 1, "", "reduction"], [83, 3, 1, "", "set_state"], [83, 3, 1, "", "test_reduction"], [83, 3, 1, "", "test_step"], [83, 3, 1, "", "train_reduction"], [83, 3, 1, "", "train_step"], [83, 5, 1, "", "training"], [83, 3, 1, "", "valid_reduction"], [83, 3, 1, "", "valid_step"]], "s3prl.task.Task": [[83, 5, 1, "", "dump_patches"], [83, 3, 1, "", "forward"], [83, 3, 1, "", "get_state"], [83, 3, 1, "", "parse_cached_results"], [83, 3, 1, "", "predict"], [83, 3, 1, "", "reduction"], [83, 3, 1, "", "set_state"], [83, 3, 1, "", "test_reduction"], [83, 3, 1, "", "test_step"], [83, 3, 1, "", "train_reduction"], [83, 3, 1, "", "train_step"], [83, 5, 1, "", "training"], [83, 3, 1, "", "valid_reduction"], [83, 3, 1, "", "valid_step"]], "s3prl.task.UtteranceClassificationTask": [[83, 5, 1, "", "dump_patches"], [83, 3, 1, "", "forward"], [83, 3, 1, "", "get_state"], [83, 5, 1, "", "input_size"], [83, 5, 1, "", "output_size"], [83, 3, 1, "", "parse_cached_results"], [83, 3, 1, "", "predict"], [83, 3, 1, "", "reduction"], [83, 3, 1, "", "set_state"], [83, 3, 1, "", "test_reduction"], [83, 3, 1, "", "test_step"], [83, 3, 1, "", "train_reduction"], [83, 3, 1, "", "train_step"], [83, 5, 1, "", "training"], [83, 3, 1, "", "valid_reduction"], [83, 3, 1, "", "valid_step"]], "s3prl.task.UtteranceMultiClassClassificationTask": [[83, 5, 1, "", "dump_patches"], [83, 3, 1, "", "forward"], [83, 3, 1, "", "get_state"], [83, 3, 1, "", "numpy_object_array_all_close"], [83, 3, 1, "", "parse_cached_results"], [83, 3, 1, "", "predict"], [83, 3, 1, "", "reduction"], [83, 3, 1, "", "set_state"], [83, 3, 1, "", "test_reduction"], [83, 3, 1, "", "test_step"], [83, 3, 1, "", "train_reduction"], [83, 3, 1, "", "train_step"], [83, 5, 1, "", "training"], [83, 3, 1, "", "valid_reduction"], [83, 3, 1, "", "valid_step"]], "s3prl.task.base": [[84, 1, 1, "", "Task"]], "s3prl.task.base.Task": [[84, 5, 1, "", "dump_patches"], [84, 3, 1, "", "forward"], [84, 3, 1, "", "get_state"], [84, 3, 1, "", "parse_cached_results"], [84, 3, 1, "", "predict"], [84, 3, 1, "", "reduction"], [84, 3, 1, "", "set_state"], [84, 3, 1, "", "test_reduction"], [84, 3, 1, "", "test_step"], [84, 3, 1, "", "train_reduction"], [84, 3, 1, "", "train_step"], [84, 5, 1, "", "training"], [84, 3, 1, "", "valid_reduction"], [84, 3, 1, "", "valid_step"]], "s3prl.task.diarization": [[85, 1, 1, "", "DiarizationPIT"]], "s3prl.task.diarization.DiarizationPIT": [[85, 5, 1, "", "dump_patches"], [85, 3, 1, "", "forward"], [85, 3, 1, "", "get_state"], [85, 3, 1, "", "parse_cached_results"], [85, 3, 1, "", "predict"], [85, 3, 1, "", "reduction"], [85, 3, 1, "", "set_state"], [85, 3, 1, "", "test_reduction"], [85, 3, 1, "", "test_step"], [85, 3, 1, "", "train_reduction"], [85, 3, 1, "", "train_step"], [85, 5, 1, "", "training"], [85, 3, 1, "", "valid_reduction"], [85, 3, 1, "", "valid_step"]], "s3prl.task.dump_feature": [[86, 1, 1, "", "DumpFeature"]], "s3prl.task.dump_feature.DumpFeature": [[86, 5, 1, "", "dump_patches"], [86, 3, 1, "", "forward"], [86, 3, 1, "", "get_state"], [86, 3, 1, "", "parse_cached_results"], [86, 3, 1, "", "predict"], [86, 3, 1, "", "reduction"], [86, 3, 1, "", "set_state"], [86, 3, 1, "", "test_reduction"], [86, 3, 1, "", "test_step"], [86, 3, 1, "", "train_reduction"], [86, 3, 1, "", "train_step"], [86, 5, 1, "", "training"], [86, 3, 1, "", "valid_reduction"], [86, 3, 1, "", "valid_step"]], "s3prl.task.event_prediction": [[87, 1, 1, "", "EventPredictionTask"]], "s3prl.task.event_prediction.EventPredictionTask": [[87, 5, 1, "", "activation"], [87, 5, 1, "", "dump_patches"], [87, 3, 1, "", "eval_reduction"], [87, 3, 1, "", "forward"], [87, 3, 1, "", "get_state"], [87, 3, 1, "", "log_scores"], [87, 3, 1, "", "parse_cached_results"], [87, 3, 1, "", "predict"], [87, 3, 1, "", "reduction"], [87, 3, 1, "", "set_state"], [87, 3, 1, "", "test_reduction"], [87, 3, 1, "", "test_step"], [87, 3, 1, "", "train_reduction"], [87, 3, 1, "", "train_step"], [87, 5, 1, "", "training"], [87, 3, 1, "", "valid_reduction"], [87, 3, 1, "", "valid_step"]], "s3prl.task.scene_prediction": [[88, 1, 1, "", "ScenePredictionTask"]], "s3prl.task.scene_prediction.ScenePredictionTask": [[88, 5, 1, "", "activation"], [88, 5, 1, "", "dump_patches"], [88, 3, 1, "", "forward"], [88, 3, 1, "", "get_state"], [88, 3, 1, "", "log_scores"], [88, 3, 1, "", "parse_cached_results"], [88, 3, 1, "", "predict"], [88, 3, 1, "", "reduction"], [88, 3, 1, "", "set_state"], [88, 3, 1, "", "test_reduction"], [88, 3, 1, "", "test_step"], [88, 3, 1, "", "train_reduction"], [88, 3, 1, "", "train_step"], [88, 5, 1, "", "training"], [88, 3, 1, "", "valid_reduction"], [88, 3, 1, "", "valid_step"]], "s3prl.task.speaker_verification_task": [[89, 1, 1, "", "SpeakerClassifier"], [89, 1, 1, "", "SpeakerVerification"]], "s3prl.task.speaker_verification_task.SpeakerClassifier": [[89, 5, 1, "", "dump_patches"], [89, 3, 1, "", "forward"], [89, 2, 1, "id0", "input_size"], [89, 2, 1, "id1", "output_size"], [89, 5, 1, "", "training"]], "s3prl.task.speaker_verification_task.SpeakerVerification": [[89, 5, 1, "", "dump_patches"], [89, 3, 1, "", "forward"], [89, 3, 1, "", "get_state"], [89, 5, 1, "", "loss"], [89, 3, 1, "", "parse_cached_results"], [89, 3, 1, "", "predict"], [89, 3, 1, "", "reduction"], [89, 3, 1, "", "set_state"], [89, 3, 1, "", "test_reduction"], [89, 3, 1, "", "test_step"], [89, 3, 1, "", "train_reduction"], [89, 3, 1, "", "train_step"], [89, 5, 1, "", "training"], [89, 3, 1, "", "valid_reduction"], [89, 3, 1, "", "valid_step"]], "s3prl.task.speech2text_ctc_task": [[90, 1, 1, "", "Speech2TextCTCExample"], [90, 1, 1, "", "Speech2TextCTCTask"]], "s3prl.task.speech2text_ctc_task.Speech2TextCTCExample": [[90, 5, 1, "", "dump_patches"], [90, 3, 1, "", "forward"], [90, 2, 1, "", "input_size"], [90, 2, 1, "", "output_size"], [90, 5, 1, "", "training"]], "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask": [[90, 5, 1, "", "dump_patches"], [90, 3, 1, "", "forward"], [90, 3, 1, "", "get_state"], [90, 3, 1, "", "parse_cached_results"], [90, 3, 1, "", "predict"], [90, 3, 1, "", "reduction"], [90, 3, 1, "", "set_state"], [90, 3, 1, "", "test_reduction"], [90, 3, 1, "", "test_step"], [90, 3, 1, "", "train_reduction"], [90, 3, 1, "", "train_step"], [90, 5, 1, "", "training"], [90, 3, 1, "", "valid_reduction"], [90, 3, 1, "", "valid_step"]], "s3prl.task.utterance_classification_task": [[91, 1, 1, "", "UtteranceClassificationTask"], [91, 1, 1, "", "UtteranceClassifierExample"]], "s3prl.task.utterance_classification_task.UtteranceClassificationTask": [[91, 5, 1, "", "dump_patches"], [91, 3, 1, "", "forward"], [91, 3, 1, "", "get_state"], [91, 5, 1, "", "input_size"], [91, 5, 1, "", "output_size"], [91, 3, 1, "", "parse_cached_results"], [91, 3, 1, "", "predict"], [91, 3, 1, "", "reduction"], [91, 3, 1, "", "set_state"], [91, 3, 1, "", "test_reduction"], [91, 3, 1, "", "test_step"], [91, 3, 1, "", "train_reduction"], [91, 3, 1, "", "train_step"], [91, 5, 1, "", "training"], [91, 3, 1, "", "valid_reduction"], [91, 3, 1, "", "valid_step"]], "s3prl.task.utterance_classification_task.UtteranceClassifierExample": [[91, 5, 1, "", "dump_patches"], [91, 3, 1, "", "forward"], [91, 2, 1, "id0", "input_size"], [91, 2, 1, "id1", "output_size"], [91, 5, 1, "", "training"]], "s3prl.util": [[93, 0, 0, "-", "benchmark"], [94, 0, 0, "-", "download"], [95, 0, 0, "-", "override"], [96, 0, 0, "-", "pseudo_data"], [97, 0, 0, "-", "seed"]], "s3prl.util.benchmark": [[93, 1, 1, "", "benchmark"]], "s3prl.util.download": [[94, 4, 1, "", "download"], [94, 4, 1, "", "get_dir"], [94, 4, 1, "", "set_dir"], [94, 4, 1, "", "urls_to_filepaths"]], "s3prl.util.override": [[95, 4, 1, "", "parse_overrides"]], "s3prl.util.pseudo_data": [[96, 4, 1, "", "get_pseudo_wavs"], [96, 1, 1, "", "pseudo_audio"]], "s3prl.util.seed": [[97, 4, 1, "", "fix_random_seeds"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:function", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"dataio": 0, "corpu": [1, 2], "fluentspeechcommand": [1, 3], "iemocap": [1, 4], "librispeech": [1, 6], "librilight": [1, 5], "quesst14": [1, 7], "snip": [1, 8], "speechcommandsv1": [1, 9], "voxceleb1sid": [1, 10], "voxceleb1sv": [1, 11], "base": [2, 13, 56, 84], "fluent_speech_command": 3, "speech_command": 9, "dataset": [12, 13, 14, 15, 16], "diarizationdataset": [12, 14], "encodecategori": [12, 15], "encodetext": [12, 15], "loadaudio": [12, 16], "get_info": [12, 17], "diariz": [14, 32, 79, 80, 85], "kaldidata": 14, "encod": [15, 18], "categoryencod": [15, 18, 19, 62], "token": [15, 18, 21], "load_audio": 16, "util": [17, 82, 92], "parallel": 17, "path": [17, 60, 61, 62, 68], "defaultdict": [17, 60, 61, 62, 68], "tqdm": 17, "delai": 17, "g2p": [18, 20], "berttoken": 18, "wordtoken": [18, 21], "charactertoken": [18, 21], "characterslottoken": [18, 21], "subwordtoken": [18, 21], "subwordslottoken": [18, 21], "generate_basic_vocab": [18, 22], "generate_subword_vocab": [18, 22], "generate_vocab": [18, 22], "categori": 19, "phonemetoken": 21, "load_token": 21, "default_phoneme_token": 21, "vocabulari": 22, "sampler": 23, "balancedweightedsampl": [23, 24], "distributedbatchsamplerwrapp": [23, 25], "fixedbatchsizebatchsampl": [23, 26, 60, 62], "groupsameitemsampl": [23, 27, 60], "maxtimestampbatchsampl": [23, 28], "sortedbucketingsampl": [23, 29], "sortedslicesampl": [23, 29], "balanced_weighted_sampl": 24, "distributed_sampl": 25, "fixed_batch_size_batch_sampl": 26, "group_same_item_sampl": 27, "max_timestamp_batch_sampl": 28, "sorted_sampl": 29, "metric": 30, "accuraci": [30, 31], "ter": [30, 31], "wer": [30, 31], "per": [30, 31], "cer": [30, 31], "compute_": [30, 31], "compute_mindcf": [30, 31], "calc_diarization_error": [30, 32], "slot_edit_f1": [30, 33], "slot_value_c": [30, 33], "slot_value_w": [30, 33], "slot_type_f1": [30, 33], "common": [31, 36, 57, 74], "slot_fil": 33, "nn": 34, "s3prlupstream": [34, 46], "featur": [34, 46], "framelevel": [34, 36], "utterancelevel": [34, 36], "framelevellinear": [34, 39], "meanpoolinglinear": [34, 39], "meanpool": [34, 41], "temporalaveragepool": [34, 41], "temporalstatisticspool": [34, 41], "rnnencod": [34, 42], "superbdiarizationmodel": [34, 42], "amsoftmax": [34, 43], "softmax": [34, 43], "superbxvector": [34, 44], "xvectorbackbon": [34, 44], "beamdecod": [34, 35], "beam_decod": 35, "hear": 37, "hearfullyconnectedpredict": [37, 62], "interfac": 38, "absupstream": 38, "absfeatur": 38, "absframemodel": 38, "absutterancemodel": 38, "linear": 39, "pit": 40, "pit_loss": 40, "pool": 41, "selfattentivepool": 41, "attentivestatisticspool": 41, "rnn": 42, "rnnlayer": 42, "speaker_loss": 43, "speaker_model": 44, "tdnn": 44, "ecapa_tdnn": 44, "speakerembeddingextractor": 44, "specaug": 45, "modelwithspecaug": 45, "upstream": [46, 103], "upstreamdownstreammodel": 46, "problem": [47, 56, 102], "superbasr": [47, 48, 50], "superbpr": [47, 48, 51], "superbsf": [47, 48, 52], "superbasv": [47, 53, 55], "superb": [47, 57, 75, 76], "superbk": [47, 57, 77], "superbsid": [47, 57, 62, 78], "superbsd": [47, 79, 81], "hearfsd": [47, 57, 60, 61, 62, 63, 69], "hearesc50": [47, 57, 58, 59, 61, 64, 65, 66, 67, 70, 71, 72, 73], "hearbeijingopera": [47, 57, 58], "hearcremad": [47, 57, 59], "heargsc5hr": [47, 57, 63], "heargtzanmusicspeech": [47, 57, 65], "heargtzan": [47, 57, 64], "heargunshot": [47, 57, 66], "hearlibricount": [47, 57, 67], "hearnsynth5hr": [47, 57, 69], "hearstrok": [47, 57, 70], "hearton": [47, 57, 71], "hearvoc": [47, 57, 72], "hearvoxlingu": [47, 57, 73], "heardcase2016task2": [47, 57, 60, 68], "hearmaestro": [47, 57, 68], "asr": [48, 49], "run": [49, 54, 74, 80, 102], "superb_asr": 50, "prepare_librispeech": 50, "prepare_common_token": 50, "superb_pr": 51, "superb_sf": 52, "audio_snips_for_slot_fil": 52, "asv": [53, 54], "superb_asv": 55, "prepare_voxceleb1_for_sv": 55, "hear_beijing_opera": 58, "hear_cremad": 59, "hear_dcase_2016_task2": 60, "eventpredictiontask": [60, 87], "heartimestampdatapip": 60, "ordereddict": [60, 62], "dataclass": [60, 62], "dcase_2016_task2": 60, "deepcopi": [60, 68], "hear_esc50": 61, "hear_scene_kfold": 61, "hear_fsd": 62, "hearscenepip": 62, "scenepredictiontask": [62, 88], "hear_scene_trainvaltest": 62, "hear_gsc5hr": 63, "hear_gtzan": 64, "hear_gtzan_music_speech": 65, "hear_gunshot": 66, "hear_libricount": 67, "hear_maestro": 68, "prepare_maestro": 68, "hear_nsynth5hr": 69, "hear_strok": 70, "hear_ton": 71, "hear_voc": 72, "hear_vox_lingu": 73, "superb_": [75, 76], "iemocap_for_superb": 75, "fsc_for_multi_classif": 76, "superb_k": 77, "gsc1_for_classif": 77, "superb_sid": 78, "voxceleb1_for_sid": 78, "superb_sd": 81, "kaldi_dir_to_rttm": 82, "csv_to_kaldi_dir": 82, "kaldi_dir_to_csv": 82, "task": [83, 84], "diarizationpit": [83, 85], "dumpfeatur": [83, 86], "speakerverif": [83, 89], "speech2textctctask": [83, 90], "utteranceclassificationtask": [83, 91], "utterancemulticlassclassificationtask": 83, "dump_featur": 86, "event_predict": 87, "scene_predict": 88, "speaker_verification_task": 89, "speakerclassifi": 89, "speech2text_ctc_task": 90, "speech2textctcexampl": 90, "utterance_classification_task": 91, "utteranceclassifierexampl": 91, "benchmark": 93, "download": 94, "get_dir": 94, "set_dir": 94, "urls_to_filepath": 94, "overrid": 95, "parse_overrid": 95, "pseudo_data": 96, "pseudo_audio": 96, "get_pseudo_wav": 96, "seed": 97, "fix_random_se": 97, "intern": 98, "s3prl": [98, 99, 100, 101, 102, 103], "develop": [98, 101], "write": 98, "code": 98, "unit": 98, "test": 98, "document": [98, 100], "style": 98, "check": 98, "commit": 98, "push": 98, "send": 98, "pull": 98, "request": 98, "contribut": [99, 100], "get": 100, "start": 100, "how": 100, "api": 100, "indic": 100, "tabl": 100, "instal": 101, "minim": 101, "edit": 101, "full": 101, "us": 102, "modul": 102, "customiz": 102, "recip": 102, "usag": 102, "1": 102, "import": 102, "colab": 102, "2": [102, 103], "configur": 102, "from": 102, "cli": 102, "3": 102, "unifi": 102, "main": 102, "custom": 102, "collect": 103, "ssl": 103, "method": 103, "name1": 103, "name2": 103, "mockingjai": 103, "mockingjay_origin": 103, "mockingjay_100hr": 103, "mockingjay_960hr": 103, "mockingjay_logmelbase_t_adamw_b32_200k_100hr": 103, "mockingjay_logmellinearlarge_t_adamw_b32_500k_360hr_drop1": 103, "mockingjay_logmelbase_t_adamw_b32_1m_960hr": 103, "mockingjay_logmelbase_t_adamw_b32_1m_960hr_drop1": 103, "mockingjay_logmelbase_t_adamw_b32_1m_960hr_seq3k": 103, "tera": 103, "tera_100hr": 103, "tera_960hr": 103, "tera_logmelbase_t_f_adamw_b32_200k_100hr": 103, "tera_logmelbase_t_f_m_adamw_b32_200k_100hr": 103, "tera_logmelbase_t_f_adamw_b32_1m_960hr": 103, "tera_logmelbase_t_f_adamw_b32_1m_960hr_drop1": 103, "tera_logmelbase_t_f_adamw_b32_1m_960hr_seq3k": 103, "tera_logmelbase_t_f_m_adamw_b32_1m_960hr_drop1": 103, "tera_fbankbase_t_f_adamw_b32_200k_100hr": 103, "audio": 103, "albert": 103, "audio_albert": 103, "audio_albert_960hr": 103, "audio_albert_logmelbase_t_share_adamw_b32_1m_960hr_drop1": 103, "apc": 103, "apc_360hr": 103, "apc_960hr": 103, "vq": 103, "vq_apc": 103, "vq_apc_360hr": 103, "vq_apc_960hr": 103, "npc": 103, "npc_360hr": 103, "npc_960hr": 103, "pase": 103, "pase_plu": 103, "modifi": 103, "cpc": 103, "modified_cpc": 103, "decoar": 103, "decoar_lay": 103, "0": 103, "decoar2": 103, "wav2vec": 103, "wav2vec_larg": 103, "vq_wav2vec": 103, "vq_wav2vec_gumbel": 103, "vq_wav2vec_kmean": 103, "discret": 103, "bert": 103, "discretebert": 103, "vq_wav2vec_kmeans_roberta": 103, "wav2vec2": 103, "wav2vec2_base_960": 103, "wav2vec2_large_960": 103, "wav2vec2_large_ll60k": 103, "wav2vec2_large_lv60_cv_swbd_fsh": 103, "wav2vec2_conformer_relpo": 103, "wav2vec2_conformer_rop": 103, "xlsr_53": 103, "xl": 103, "r": 103, "xls_r_300m": 103, "xls_r_1b": 103, "xls_r_2b": 103, "hubert": 103, "hubert_bas": 103, "hubert_large_ll60k": 103, "distilhubert": 103, "distilhubert_bas": 103, "mgr": 103, "hubert_base_robust_mgr": 103, "unispeech": 103, "sat": 103, "unispeech_sat": 103, "unispeech_sat_bas": 103, "unispeech_sat_base_plu": 103, "unispeech_sat_larg": 103, "wavlm": 103, "wavlm_bas": 103, "wavlm_base_plu": 103, "wavlm_larg": 103, "data2vec": 103, "data2vec_base_960": 103, "data2vec_large_ll60k": 103, "ast": 103, "ssast": 103, "ssast_frame_bas": 103, "mae": 103, "mae_ast_fram": 103, "mae_ast_patch": 103, "byol": 103, "A": 103, "byol_a_2048": 103, "byol_a_1024": 103, "byol_a_512": 103, "": 103, "byol_s_default": 103, "byol_s_cvt": 103, "byol_s_resnetish34": 103, "vggish": 103}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"dataio": [[0, "dataio"]], "corpus": [[1, "corpus"]], "FluentSpeechCommands": [[1, "fluentspeechcommands"], [3, "fluentspeechcommands"]], "IEMOCAP": [[1, "iemocap"], [4, "id1"]], "LibriSpeech": [[1, "librispeech"], [6, "id1"]], "LibriLight": [[1, "librilight"], [5, "id1"]], "Quesst14": [[1, "quesst14"], [7, "id1"]], "SNIPS": [[1, "snips"], [8, "id1"]], "SpeechCommandsV1": [[1, "speechcommandsv1"], [9, "speechcommandsv1"]], "VoxCeleb1SID": [[1, "voxceleb1sid"], [10, "id1"]], "VoxCeleb1SV": [[1, "voxceleb1sv"], [11, "id1"]], "base": [[2, "base"], [13, "base"], [56, "base"], [84, "base"]], "Corpus": [[2, "corpus"]], "fluent_speech_commands": [[3, "fluent-speech-commands"]], "iemocap": [[4, "iemocap"]], "librilight": [[5, "librilight"]], "librispeech": [[6, "librispeech"]], "quesst14": [[7, "quesst14"]], "snips": [[8, "snips"]], "speech_commands": [[9, "speech-commands"]], "voxceleb1sid": [[10, "voxceleb1sid"]], "voxceleb1sv": [[11, "voxceleb1sv"]], "dataset": [[12, "dataset"]], "Dataset": [[12, "id1"], [13, "dataset"], [14, "dataset"], [15, "dataset"], [16, "dataset"]], "DiarizationDataset": [[12, "diarizationdataset"], [14, "diarizationdataset"]], "EncodeCategories": [[12, "encodecategories"], [15, "encodecategories"]], "EncodeCategory": [[12, "encodecategory"], [15, "encodecategory"]], "EncodeText": [[12, "encodetext"], [15, "encodetext"]], "LoadAudio": [[12, "loadaudio"], [16, "loadaudio"]], "get_info": [[12, "get-info"], [17, "get-info"]], "diarization": [[14, "diarization"], [32, "diarization"], [79, "diarization"], [85, "diarization"]], "KaldiData": [[14, "kaldidata"]], "encode": [[15, "encode"]], "CategoryEncoder": [[15, "categoryencoder"], [18, "categoryencoder"], [19, "categoryencoder"], [62, "categoryencoder"]], "CategoryEncoders": [[15, "categoryencoders"], [18, "categoryencoders"], [19, "categoryencoders"]], "Tokenizer": [[15, "tokenizer"], [18, "tokenizer"]], "load_audio": [[16, "load-audio"]], "util": [[17, "util"], [82, "util"], [92, "util"]], "Parallel": [[17, "parallel"]], "Path": [[17, "path"], [60, "path"], [61, "path"], [62, "path"], [68, "path"]], "defaultdict": [[17, "defaultdict"], [60, "defaultdict"], [61, "defaultdict"], [62, "defaultdict"], [68, "defaultdict"]], "tqdm": [[17, "tqdm"]], "delayed": [[17, "delayed"]], "encoder": [[18, "encoder"]], "G2P": [[18, "g2p"], [20, "id1"]], "BertTokenizer": [[18, "berttokenizer"]], "WordTokenizer": [[18, "wordtokenizer"], [21, "wordtokenizer"]], "CharacterTokenizer": [[18, "charactertokenizer"], [21, "charactertokenizer"]], "CharacterSlotTokenizer": [[18, "characterslottokenizer"], [21, "characterslottokenizer"]], "SubwordTokenizer": [[18, "subwordtokenizer"], [21, "subwordtokenizer"]], "SubwordSlotTokenizer": [[18, "subwordslottokenizer"], [21, "subwordslottokenizer"]], "generate_basic_vocab": [[18, "generate-basic-vocab"], [22, "generate-basic-vocab"]], "generate_subword_vocab": [[18, "generate-subword-vocab"], [22, "generate-subword-vocab"]], "generate_vocab": [[18, "generate-vocab"], [22, "generate-vocab"]], "category": [[19, "category"]], "g2p": [[20, "g2p"]], "tokenizer": [[21, "tokenizer"]], "PhonemeTokenizer": [[21, "phonemetokenizer"]], "load_tokenizer": [[21, "load-tokenizer"]], "default_phoneme_tokenizer": [[21, "default-phoneme-tokenizer"]], "vocabulary": [[22, "vocabulary"]], "sampler": [[23, "sampler"]], "BalancedWeightedSampler": [[23, "balancedweightedsampler"], [24, "balancedweightedsampler"]], "DistributedBatchSamplerWrapper": [[23, "distributedbatchsamplerwrapper"], [25, "distributedbatchsamplerwrapper"]], "FixedBatchSizeBatchSampler": [[23, "fixedbatchsizebatchsampler"], [26, "fixedbatchsizebatchsampler"], [60, "fixedbatchsizebatchsampler"], [62, "fixedbatchsizebatchsampler"]], "GroupSameItemSampler": [[23, "groupsameitemsampler"], [27, "groupsameitemsampler"], [60, "groupsameitemsampler"]], "MaxTimestampBatchSampler": [[23, "maxtimestampbatchsampler"], [28, "maxtimestampbatchsampler"]], "SortedBucketingSampler": [[23, "sortedbucketingsampler"], [29, "sortedbucketingsampler"]], "SortedSliceSampler": [[23, "sortedslicesampler"], [29, "sortedslicesampler"]], "balanced_weighted_sampler": [[24, "balanced-weighted-sampler"]], "distributed_sampler": [[25, "distributed-sampler"]], "fixed_batch_size_batch_sampler": [[26, "fixed-batch-size-batch-sampler"]], "group_same_item_sampler": [[27, "group-same-item-sampler"]], "max_timestamp_batch_sampler": [[28, "max-timestamp-batch-sampler"]], "sorted_sampler": [[29, "sorted-sampler"]], "metric": [[30, "metric"]], "accuracy": [[30, "accuracy"], [31, "accuracy"]], "ter": [[30, "ter"], [31, "ter"]], "wer": [[30, "wer"], [31, "wer"]], "per": [[30, "per"], [31, "per"]], "cer": [[30, "cer"], [31, "cer"]], "compute_eer": [[30, "compute-eer"], [31, "compute-eer"]], "compute_minDCF": [[30, "compute-mindcf"], [31, "compute-mindcf"]], "calc_diarization_error": [[30, "calc-diarization-error"], [32, "calc-diarization-error"]], "slot_edit_f1": [[30, "slot-edit-f1"], [33, "slot-edit-f1"]], "slot_value_cer": [[30, "slot-value-cer"], [33, "slot-value-cer"]], "slot_value_wer": [[30, "slot-value-wer"], [33, "slot-value-wer"]], "slot_type_f1": [[30, "slot-type-f1"], [33, "slot-type-f1"]], "common": [[31, "common"], [36, "common"], [57, "common"]], "slot_filling": [[33, "slot-filling"]], "nn": [[34, "nn"]], "S3PRLUpstream": [[34, "s3prlupstream"], [46, "s3prlupstream"]], "Featurizer": [[34, "featurizer"], [46, "featurizer"]], "FrameLevel": [[34, "framelevel"], [36, "framelevel"]], "UtteranceLevel": [[34, "utterancelevel"], [36, "utterancelevel"]], "FrameLevelLinear": [[34, "framelevellinear"], [39, "framelevellinear"]], "MeanPoolingLinear": [[34, "meanpoolinglinear"], [39, "meanpoolinglinear"]], "MeanPooling": [[34, "meanpooling"], [41, "meanpooling"]], "TemporalAveragePooling": [[34, "temporalaveragepooling"], [41, "temporalaveragepooling"]], "TemporalStatisticsPooling": [[34, "temporalstatisticspooling"], [41, "temporalstatisticspooling"]], "RNNEncoder": [[34, "rnnencoder"], [42, "rnnencoder"]], "SuperbDiarizationModel": [[34, "superbdiarizationmodel"], [42, "superbdiarizationmodel"]], "amsoftmax": [[34, "amsoftmax"], [43, "amsoftmax"]], "softmax": [[34, "softmax"], [43, "softmax"]], "SuperbXvector": [[34, "superbxvector"], [44, "superbxvector"]], "XVectorBackbone": [[34, "xvectorbackbone"], [44, "xvectorbackbone"]], "BeamDecoder": [[34, "beamdecoder"], [35, "beamdecoder"]], "beam_decoder": [[35, "beam-decoder"]], "hear": [[37, "hear"]], "HearFullyConnectedPrediction": [[37, "hearfullyconnectedprediction"], [62, "hearfullyconnectedprediction"]], "interface": [[38, "interface"]], "AbsUpstream": [[38, "absupstream"]], "AbsFeaturizer": [[38, "absfeaturizer"]], "AbsFrameModel": [[38, "absframemodel"]], "AbsUtteranceModel": [[38, "absutterancemodel"]], "linear": [[39, "linear"]], "pit": [[40, "pit"]], "pit_loss": [[40, "pit-loss"]], "pooling": [[41, "pooling"]], "SelfAttentivePooling": [[41, "selfattentivepooling"]], "AttentiveStatisticsPooling": [[41, "attentivestatisticspooling"]], "rnn": [[42, "rnn"]], "RNNLayer": [[42, "rnnlayer"]], "speaker_loss": [[43, "speaker-loss"]], "speaker_model": [[44, "speaker-model"]], "TDNN": [[44, "tdnn"]], "ECAPA_TDNN": [[44, "ecapa-tdnn"]], "SpeakerEmbeddingExtractor": [[44, "speakerembeddingextractor"]], "specaug": [[45, "specaug"]], "ModelWithSpecaug": [[45, "modelwithspecaug"]], "SpecAug": [[45, "id1"]], "upstream": [[46, "upstream"]], "UpstreamDownstreamModel": [[46, "upstreamdownstreammodel"]], "problem": [[47, "problem"]], "SuperbASR": [[47, "superbasr"], [48, "superbasr"], [50, "superbasr"]], "SuperbPR": [[47, "superbpr"], [48, "superbpr"], [51, "superbpr"]], "SuperbSF": [[47, "superbsf"], [48, "superbsf"], [52, "superbsf"]], "SuperbASV": [[47, "superbasv"], [53, "superbasv"], [55, "superbasv"]], "SuperbER": [[47, "superber"], [57, "superber"], [75, "superber"]], "SuperbIC": [[47, "superbic"], [57, "superbic"], [76, "superbic"]], "SuperbKS": [[47, "superbks"], [57, "superbks"], [77, "superbks"]], "SuperbSID": [[47, "superbsid"], [57, "superbsid"], [62, "superbsid"], [78, "superbsid"]], "SuperbSD": [[47, "superbsd"], [79, "superbsd"], [81, "superbsd"]], "HearFSD": [[47, "hearfsd"], [57, "hearfsd"], [60, "hearfsd"], [61, "hearfsd"], [62, "hearfsd"], [63, "hearfsd"], [69, "hearfsd"]], "HearESC50": [[47, "hearesc50"], [57, "hearesc50"], [58, "hearesc50"], [59, "hearesc50"], [61, "hearesc50"], [64, "hearesc50"], [65, "hearesc50"], [66, "hearesc50"], [67, "hearesc50"], [70, "hearesc50"], [71, "hearesc50"], [72, "hearesc50"], [73, "hearesc50"]], "HearBeijingOpera": [[47, "hearbeijingopera"], [57, "hearbeijingopera"], [58, "hearbeijingopera"]], "HearCremaD": [[47, "hearcremad"], [57, "hearcremad"], [59, "hearcremad"]], "HearGSC5hr": [[47, "heargsc5hr"], [57, "heargsc5hr"], [63, "heargsc5hr"]], "HearGtzanMusicSpeech": [[47, "heargtzanmusicspeech"], [57, "heargtzanmusicspeech"], [65, "heargtzanmusicspeech"]], "HearGtzan": [[47, "heargtzan"], [57, "heargtzan"], [64, "heargtzan"]], "HearGunshot": [[47, "heargunshot"], [57, "heargunshot"], [66, "heargunshot"]], "HearLibriCount": [[47, "hearlibricount"], [57, "hearlibricount"], [67, "hearlibricount"]], "HearNsynth5hr": [[47, "hearnsynth5hr"], [57, "hearnsynth5hr"], [69, "hearnsynth5hr"]], "HearStroke": [[47, "hearstroke"], [57, "hearstroke"], [70, "hearstroke"]], "HearTonic": [[47, "heartonic"], [57, "heartonic"], [71, "heartonic"]], "HearVocal": [[47, "hearvocal"], [57, "hearvocal"], [72, "hearvocal"]], "HearVoxLingual": [[47, "hearvoxlingual"], [57, "hearvoxlingual"], [73, "hearvoxlingual"]], "HearDcase2016Task2": [[47, "heardcase2016task2"], [57, "heardcase2016task2"], [60, "heardcase2016task2"], [68, "heardcase2016task2"]], "HearMaestro": [[47, "hearmaestro"], [57, "hearmaestro"], [68, "hearmaestro"]], "asr": [[48, "asr"]], "run": [[49, "run"], [54, "run"], [74, "run"], [80, "run"]], "ASR": [[49, "asr"]], "superb_asr": [[50, "superb-asr"]], "prepare_librispeech": [[50, "prepare-librispeech"]], "prepare_common_tokenizer": [[50, "prepare-common-tokenizer"]], "superb_pr": [[51, "superb-pr"]], "superb_sf": [[52, "superb-sf"]], "audio_snips_for_slot_filling": [[52, "audio-snips-for-slot-filling"]], "asv": [[53, "asv"]], "ASV": [[54, "asv"]], "superb_asv": [[55, "superb-asv"]], "prepare_voxceleb1_for_sv": [[55, "prepare-voxceleb1-for-sv"]], "Problem": [[56, "problem"]], "hear_beijing_opera": [[58, "hear-beijing-opera"]], "hear_cremad": [[59, "hear-cremad"]], "hear_dcase_2016_task2": [[60, "hear-dcase-2016-task2"]], "EventPredictionTask": [[60, "eventpredictiontask"], [87, "eventpredictiontask"]], "HearTimestampDatapipe": [[60, "heartimestampdatapipe"]], "OrderedDict": [[60, "ordereddict"], [62, "ordereddict"]], "dataclass": [[60, "dataclass"], [62, "dataclass"]], "dcase_2016_task2": [[60, "dcase-2016-task2"]], "deepcopy": [[60, "deepcopy"], [68, "deepcopy"]], "hear_esc50": [[61, "hear-esc50"]], "hear_scene_kfolds": [[61, "hear-scene-kfolds"]], "hear_fsd": [[62, "hear-fsd"]], "HearScenePipe": [[62, "hearscenepipe"]], "ScenePredictionTask": [[62, "scenepredictiontask"], [88, "scenepredictiontask"]], "hear_scene_trainvaltest": [[62, "hear-scene-trainvaltest"]], "hear_gsc5hr": [[63, "hear-gsc5hr"]], "hear_gtzan": [[64, "hear-gtzan"]], "hear_gtzan_music_speech": [[65, "hear-gtzan-music-speech"]], "hear_gunshot": [[66, "hear-gunshot"]], "hear_libricount": [[67, "hear-libricount"]], "hear_maestro": [[68, "hear-maestro"]], "prepare_maestro": [[68, "prepare-maestro"]], "hear_nsynth5hr": [[69, "hear-nsynth5hr"]], "hear_stroke": [[70, "hear-stroke"]], "hear_tonic": [[71, "hear-tonic"]], "hear_vocal": [[72, "hear-vocal"]], "hear_vox_lingual": [[73, "hear-vox-lingual"]], "Common": [[74, "common"]], "superb_er": [[75, "superb-er"]], "iemocap_for_superb": [[75, "iemocap-for-superb"]], "superb_ic": [[76, "superb-ic"]], "fsc_for_multi_classification": [[76, "fsc-for-multi-classification"]], "superb_ks": [[77, "superb-ks"]], "gsc1_for_classification": [[77, "gsc1-for-classification"]], "superb_sid": [[78, "superb-sid"]], "voxceleb1_for_sid": [[78, "voxceleb1-for-sid"]], "Diarization": [[80, "diarization"]], "superb_sd": [[81, "superb-sd"]], "kaldi_dir_to_rttm": [[82, "kaldi-dir-to-rttm"]], "csv_to_kaldi_dir": [[82, "csv-to-kaldi-dir"]], "kaldi_dir_to_csv": [[82, "kaldi-dir-to-csv"]], "task": [[83, "task"]], "Task": [[83, "id1"], [84, "task"]], "DiarizationPIT": [[83, "diarizationpit"], [85, "diarizationpit"]], "DumpFeature": [[83, "dumpfeature"], [86, "dumpfeature"]], "SpeakerVerification": [[83, "speakerverification"], [89, "speakerverification"]], "Speech2TextCTCTask": [[83, "speech2textctctask"], [90, "speech2textctctask"]], "UtteranceClassificationTask": [[83, "utteranceclassificationtask"], [91, "utteranceclassificationtask"]], "UtteranceMultiClassClassificationTask": [[83, "utterancemulticlassclassificationtask"]], "dump_feature": [[86, "dump-feature"]], "event_prediction": [[87, "event-prediction"]], "scene_prediction": [[88, "scene-prediction"]], "speaker_verification_task": [[89, "speaker-verification-task"]], "SpeakerClassifier": [[89, "speakerclassifier"]], "speech2text_ctc_task": [[90, "speech2text-ctc-task"]], "Speech2TextCTCExample": [[90, "speech2textctcexample"]], "utterance_classification_task": [[91, "utterance-classification-task"]], "UtteranceClassifierExample": [[91, "utteranceclassifierexample"]], "benchmark": [[93, "benchmark"], [93, "id1"]], "download": [[94, "download"], [94, "id1"]], "get_dir": [[94, "get-dir"]], "set_dir": [[94, "set-dir"]], "urls_to_filepaths": [[94, "urls-to-filepaths"]], "override": [[95, "override"]], "parse_overrides": [[95, "parse-overrides"]], "pseudo_data": [[96, "pseudo-data"]], "pseudo_audio": [[96, "pseudo-audio"]], "get_pseudo_wavs": [[96, "get-pseudo-wavs"]], "seed": [[97, "seed"]], "fix_random_seeds": [[97, "fix-random-seeds"]], "Internal S3PRL Development": [[98, "internal-s3prl-development"]], "Write code": [[98, "write-code"]], "Unit tests": [[98, "unit-tests"]], "Documentation": [[98, "documentation"]], "Coding-style check": [[98, "coding-style-check"]], "Commit / Push": [[98, "commit-push"]], "Send a pull request": [[98, "send-a-pull-request"]], "Contribute to S3PRL": [[99, "contribute-to-s3prl"]], "S3PRL": [[100, "s3prl"]], "Getting Started": [[100, "getting-started"]], "Getting started": [[100, null]], "How to Contribute": [[100, "how-to-contribute"], [100, null]], "API Documentation": [[100, "api-documentation"]], "Indices and tables": [[100, "indices-and-tables"]], "Install S3PRL": [[101, "install-s3prl"]], "Minimal installation": [[101, "minimal-installation"]], "Editable installation": [[101, "editable-installation"]], "Full installation": [[101, "full-installation"]], "Development installation": [[101, "development-installation"]], "Use Problem module to run customizable recipes": [[102, "use-problem-module-to-run-customizable-recipes"]], "Usage 1. Import and run on Colab": [[102, "usage-1-import-and-run-on-colab"]], "Usage 2. Run & configure from CLI": [[102, "usage-2-run-configure-from-cli"]], "Usage 3. Run & configure with the unified s3prl-main": [[102, "usage-3-run-configure-with-the-unified-s3prl-main"]], "Customization": [[102, "customization"]], "S3PRL Upstream Collection": [[103, "s3prl-upstream-collection"]], "SSL Method": [[103, "ssl-method"]], "name1": [[103, "name1"]], "name2": [[103, "name2"]], "Mockingjay": [[103, "mockingjay"]], "mockingjay": [[103, "id1"]], "mockingjay_origin": [[103, "mockingjay-origin"]], "mockingjay_100hr": [[103, "mockingjay-100hr"]], "mockingjay_960hr": [[103, "mockingjay-960hr"]], "mockingjay_logMelBase_T_AdamW_b32_200k_100hr": [[103, "mockingjay-logmelbase-t-adamw-b32-200k-100hr"]], "mockingjay_logMelLinearLarge_T_AdamW_b32_500k_360hr_drop1": [[103, "mockingjay-logmellinearlarge-t-adamw-b32-500k-360hr-drop1"]], "mockingjay_logMelBase_T_AdamW_b32_1m_960hr": [[103, "mockingjay-logmelbase-t-adamw-b32-1m-960hr"]], "mockingjay_logMelBase_T_AdamW_b32_1m_960hr_drop1": [[103, "mockingjay-logmelbase-t-adamw-b32-1m-960hr-drop1"]], "mockingjay_logMelBase_T_AdamW_b32_1m_960hr_seq3k": [[103, "mockingjay-logmelbase-t-adamw-b32-1m-960hr-seq3k"]], "TERA": [[103, "tera"]], "tera": [[103, "id2"]], "tera_100hr": [[103, "tera-100hr"]], "tera_960hr": [[103, "tera-960hr"]], "tera_logMelBase_T_F_AdamW_b32_200k_100hr": [[103, "tera-logmelbase-t-f-adamw-b32-200k-100hr"]], "tera_logMelBase_T_F_M_AdamW_b32_200k_100hr": [[103, "tera-logmelbase-t-f-m-adamw-b32-200k-100hr"]], "tera_logMelBase_T_F_AdamW_b32_1m_960hr": [[103, "tera-logmelbase-t-f-adamw-b32-1m-960hr"]], "tera_logMelBase_T_F_AdamW_b32_1m_960hr_drop1": [[103, "tera-logmelbase-t-f-adamw-b32-1m-960hr-drop1"]], "tera_logMelBase_T_F_AdamW_b32_1m_960hr_seq3k": [[103, "tera-logmelbase-t-f-adamw-b32-1m-960hr-seq3k"]], "tera_logMelBase_T_F_M_AdamW_b32_1m_960hr_drop1": [[103, "tera-logmelbase-t-f-m-adamw-b32-1m-960hr-drop1"]], "tera_fbankBase_T_F_AdamW_b32_200k_100hr": [[103, "tera-fbankbase-t-f-adamw-b32-200k-100hr"]], "Audio ALBERT": [[103, "audio-albert"]], "audio_albert": [[103, "id3"]], "audio_albert_960hr": [[103, "audio-albert-960hr"]], "audio_albert_logMelBase_T_share_AdamW_b32_1m_960hr_drop1": [[103, "audio-albert-logmelbase-t-share-adamw-b32-1m-960hr-drop1"]], "APC": [[103, "apc"]], "apc": [[103, "id4"]], "apc_360hr": [[103, "apc-360hr"]], "apc_960hr": [[103, "apc-960hr"]], "VQ-APC": [[103, "vq-apc"]], "vq_apc": [[103, "id5"]], "vq_apc_360hr": [[103, "vq-apc-360hr"]], "vq_apc_960hr": [[103, "vq-apc-960hr"]], "NPC": [[103, "npc"]], "npc": [[103, "id6"]], "npc_360hr": [[103, "npc-360hr"]], "npc_960hr": [[103, "npc-960hr"]], "PASE+": [[103, "pase"]], "pase_plus": [[103, "pase-plus"]], "Modified CPC": [[103, "modified-cpc"]], "modified_cpc": [[103, "id7"]], "DeCoAR": [[103, "decoar"]], "decoar_layers": [[103, "decoar-layers"]], "DeCoAR 2.0": [[103, "decoar-2-0"]], "decoar2": [[103, "decoar2"]], "wav2vec": [[103, "wav2vec"], [103, "id8"]], "wav2vec_large": [[103, "wav2vec-large"]], "vq-wav2vec": [[103, "vq-wav2vec"]], "vq_wav2vec": [[103, "id9"]], "vq_wav2vec_gumbel": [[103, "vq-wav2vec-gumbel"]], "vq_wav2vec_kmeans": [[103, "vq-wav2vec-kmeans"]], "Discrete BERT": [[103, "discrete-bert"]], "discretebert": [[103, "discretebert"]], "vq_wav2vec_kmeans_roberta": [[103, "vq-wav2vec-kmeans-roberta"]], "wav2vec 2.0": [[103, "wav2vec-2-0"]], "wav2vec2": [[103, "wav2vec2"]], "wav2vec2_base_960": [[103, "wav2vec2-base-960"]], "wav2vec2_large_960": [[103, "wav2vec2-large-960"]], "wav2vec2_large_ll60k": [[103, "wav2vec2-large-ll60k"]], "wav2vec2_large_lv60_cv_swbd_fsh": [[103, "wav2vec2-large-lv60-cv-swbd-fsh"]], "wav2vec2_conformer_relpos": [[103, "wav2vec2-conformer-relpos"]], "wav2vec2_conformer_rope": [[103, "wav2vec2-conformer-rope"]], "xlsr_53": [[103, "xlsr-53"]], "XLS-R": [[103, "xls-r"]], "xls_r_300m": [[103, "xls-r-300m"]], "xls_r_1b": [[103, "xls-r-1b"]], "xls_r_2b": [[103, "xls-r-2b"]], "HuBERT": [[103, "hubert"]], "hubert": [[103, "id11"]], "hubert_base": [[103, "hubert-base"]], "hubert_large_ll60k": [[103, "hubert-large-ll60k"]], "DistilHuBERT": [[103, "distilhubert"]], "distilhubert": [[103, "id12"]], "distilhubert_base": [[103, "distilhubert-base"]], "HuBERT-MGR": [[103, "hubert-mgr"]], "hubert_base_robust_mgr": [[103, "hubert-base-robust-mgr"]], "Unispeech-SAT": [[103, "unispeech-sat"]], "unispeech_sat": [[103, "id13"]], "unispeech_sat_base": [[103, "unispeech-sat-base"]], "unispeech_sat_base_plus": [[103, "unispeech-sat-base-plus"]], "unispeech_sat_large": [[103, "unispeech-sat-large"]], "WavLM": [[103, "wavlm"]], "wavlm": [[103, "id14"]], "wavlm_base": [[103, "wavlm-base"]], "wavlm_base_plus": [[103, "wavlm-base-plus"]], "wavlm_large": [[103, "wavlm-large"]], "data2vec": [[103, "data2vec"], [103, "id15"]], "data2vec_base_960": [[103, "data2vec-base-960"]], "data2vec_large_ll60k": [[103, "data2vec-large-ll60k"]], "AST": [[103, "ast"]], "ast": [[103, "id16"]], "SSAST": [[103, "ssast"]], "ssast_frame_base": [[103, "ssast-frame-base"]], "MAE-AST": [[103, "mae-ast"]], "mae_ast_frame": [[103, "mae-ast-frame"]], "mae_ast_patch": [[103, "mae-ast-patch"]], "Byol-A": [[103, "byol-a"]], "byol_a_2048": [[103, "byol-a-2048"]], "byol_a_1024": [[103, "byol-a-1024"]], "byol_a_512": [[103, "byol-a-512"]], "Byol-S": [[103, "byol-s"]], "byol_s_default": [[103, "byol-s-default"]], "byol_s_cvt": [[103, "byol-s-cvt"]], "byol_s_resnetish34": [[103, "byol-s-resnetish34"]], "VGGish": [[103, "vggish"]], "vggish": [[103, "id17"]]}, "indexentries": {"module": [[0, "module-s3prl.dataio"], [1, "module-s3prl.dataio.corpus"], [2, "module-s3prl.dataio.corpus.base"], [3, "module-s3prl.dataio.corpus.fluent_speech_commands"], [4, "module-s3prl.dataio.corpus.iemocap"], [5, "module-s3prl.dataio.corpus.librilight"], [6, "module-s3prl.dataio.corpus.librispeech"], [7, "module-s3prl.dataio.corpus.quesst14"], [8, "module-s3prl.dataio.corpus.snips"], [9, "module-s3prl.dataio.corpus.speech_commands"], [10, "module-s3prl.dataio.corpus.voxceleb1sid"], [11, "module-s3prl.dataio.corpus.voxceleb1sv"], [12, "module-s3prl.dataio.dataset"], [13, "module-s3prl.dataio.dataset.base"], [14, "module-s3prl.dataio.dataset.diarization"], [15, "module-s3prl.dataio.dataset.encode"], [16, "module-s3prl.dataio.dataset.load_audio"], [17, "module-s3prl.dataio.dataset.util"], [18, "module-s3prl.dataio.encoder"], [19, "module-s3prl.dataio.encoder.category"], [20, "module-s3prl.dataio.encoder.g2p"], [21, "module-s3prl.dataio.encoder.tokenizer"], [22, "module-s3prl.dataio.encoder.vocabulary"], [23, "module-s3prl.dataio.sampler"], [24, "module-s3prl.dataio.sampler.balanced_weighted_sampler"], [25, "module-s3prl.dataio.sampler.distributed_sampler"], [26, "module-s3prl.dataio.sampler.fixed_batch_size_batch_sampler"], [27, "module-s3prl.dataio.sampler.group_same_item_sampler"], [28, "module-s3prl.dataio.sampler.max_timestamp_batch_sampler"], [29, "module-s3prl.dataio.sampler.sorted_sampler"], [30, "module-s3prl.metric"], [31, "module-s3prl.metric.common"], [32, "module-s3prl.metric.diarization"], [33, "module-s3prl.metric.slot_filling"], [34, "module-s3prl.nn"], [35, "module-s3prl.nn.beam_decoder"], [36, "module-s3prl.nn.common"], [37, "module-s3prl.nn.hear"], [38, "module-s3prl.nn.interface"], [39, "module-s3prl.nn.linear"], [40, "module-s3prl.nn.pit"], [41, "module-s3prl.nn.pooling"], [42, "module-s3prl.nn.rnn"], [43, "module-s3prl.nn.speaker_loss"], [44, "module-s3prl.nn.speaker_model"], [45, "module-s3prl.nn.specaug"], [46, "module-s3prl.nn.upstream"], [47, "module-s3prl.problem"], [48, "module-s3prl.problem.asr"], [49, "module-s3prl.problem.asr.run"], [50, "module-s3prl.problem.asr.superb_asr"], [51, "module-s3prl.problem.asr.superb_pr"], [52, "module-s3prl.problem.asr.superb_sf"], [53, "module-s3prl.problem.asv"], [54, "module-s3prl.problem.asv.run"], [55, "module-s3prl.problem.asv.superb_asv"], [56, "module-s3prl.problem.base"], [57, "module-s3prl.problem.common"], [58, "module-s3prl.problem.common.hear_beijing_opera"], [59, "module-s3prl.problem.common.hear_cremad"], [60, "module-s3prl.problem.common.hear_dcase_2016_task2"], [61, "module-s3prl.problem.common.hear_esc50"], [62, "module-s3prl.problem.common.hear_fsd"], [63, "module-s3prl.problem.common.hear_gsc5hr"], [64, "module-s3prl.problem.common.hear_gtzan"], [65, "module-s3prl.problem.common.hear_gtzan_music_speech"], [66, "module-s3prl.problem.common.hear_gunshot"], [67, "module-s3prl.problem.common.hear_libricount"], [68, "module-s3prl.problem.common.hear_maestro"], [69, "module-s3prl.problem.common.hear_nsynth5hr"], [70, "module-s3prl.problem.common.hear_stroke"], [71, "module-s3prl.problem.common.hear_tonic"], [72, "module-s3prl.problem.common.hear_vocal"], [73, "module-s3prl.problem.common.hear_vox_lingual"], [74, "module-s3prl.problem.common.run"], [75, "module-s3prl.problem.common.superb_er"], [76, "module-s3prl.problem.common.superb_ic"], [77, "module-s3prl.problem.common.superb_ks"], [78, "module-s3prl.problem.common.superb_sid"], [79, "module-s3prl.problem.diarization"], [80, "module-s3prl.problem.diarization.run"], [81, "module-s3prl.problem.diarization.superb_sd"], [82, "module-s3prl.problem.diarization.util"], [83, "module-s3prl.task"], [84, "module-s3prl.task.base"], [85, "module-s3prl.task.diarization"], [86, "module-s3prl.task.dump_feature"], [87, "module-s3prl.task.event_prediction"], [88, "module-s3prl.task.scene_prediction"], [89, "module-s3prl.task.speaker_verification_task"], [90, "module-s3prl.task.speech2text_ctc_task"], [91, "module-s3prl.task.utterance_classification_task"], [92, "module-s3prl.util"], [93, "module-s3prl.util.benchmark"], [94, "module-s3prl.util.download"], [95, "module-s3prl.util.override"], [96, "module-s3prl.util.pseudo_data"], [97, "module-s3prl.util.seed"]], "s3prl.dataio": [[0, "module-s3prl.dataio"]], "fluentspeechcommands (class in s3prl.dataio.corpus)": [[1, "s3prl.dataio.corpus.FluentSpeechCommands"]], "iemocap (class in s3prl.dataio.corpus)": [[1, "s3prl.dataio.corpus.IEMOCAP"]], "librilight (class in s3prl.dataio.corpus)": [[1, "s3prl.dataio.corpus.LibriLight"]], "librispeech (class in s3prl.dataio.corpus)": [[1, "s3prl.dataio.corpus.LibriSpeech"]], "quesst14 (class in s3prl.dataio.corpus)": [[1, "s3prl.dataio.corpus.Quesst14"]], "snips (class in s3prl.dataio.corpus)": [[1, "s3prl.dataio.corpus.SNIPS"]], "speechcommandsv1 (class in s3prl.dataio.corpus)": [[1, "s3prl.dataio.corpus.SpeechCommandsV1"]], "voxceleb1sid (class in s3prl.dataio.corpus)": [[1, "s3prl.dataio.corpus.VoxCeleb1SID"]], "voxceleb1sv (class in s3prl.dataio.corpus)": [[1, "s3prl.dataio.corpus.VoxCeleb1SV"]], "all_data (s3prl.dataio.corpus.fluentspeechcommands property)": [[1, "s3prl.dataio.corpus.FluentSpeechCommands.all_data"]], "all_data (s3prl.dataio.corpus.iemocap property)": [[1, "s3prl.dataio.corpus.IEMOCAP.all_data"]], "all_data (s3prl.dataio.corpus.librilight property)": [[1, "s3prl.dataio.corpus.LibriLight.all_data"]], "all_data (s3prl.dataio.corpus.librispeech property)": [[1, "s3prl.dataio.corpus.LibriSpeech.all_data"]], "all_data (s3prl.dataio.corpus.snips property)": [[1, "s3prl.dataio.corpus.SNIPS.all_data"]], "all_data (s3prl.dataio.corpus.speechcommandsv1 property)": [[1, "s3prl.dataio.corpus.SpeechCommandsV1.all_data"]], "all_data (s3prl.dataio.corpus.voxceleb1sid property)": [[1, "s3prl.dataio.corpus.VoxCeleb1SID.all_data"]], "all_data (s3prl.dataio.corpus.voxceleb1sv property)": [[1, "s3prl.dataio.corpus.VoxCeleb1SV.all_data"]], "data_split (s3prl.dataio.corpus.fluentspeechcommands property)": [[1, "s3prl.dataio.corpus.FluentSpeechCommands.data_split"]], "data_split (s3prl.dataio.corpus.iemocap property)": [[1, "s3prl.dataio.corpus.IEMOCAP.data_split"]], "data_split (s3prl.dataio.corpus.librilight property)": [[1, "s3prl.dataio.corpus.LibriLight.data_split"]], "data_split (s3prl.dataio.corpus.librispeech property)": [[1, "s3prl.dataio.corpus.LibriSpeech.data_split"]], "data_split (s3prl.dataio.corpus.snips property)": [[1, "s3prl.dataio.corpus.SNIPS.data_split"]], "data_split (s3prl.dataio.corpus.speechcommandsv1 property)": [[1, "s3prl.dataio.corpus.SpeechCommandsV1.data_split"]], "data_split (s3prl.dataio.corpus.voxceleb1sid property)": [[1, "s3prl.dataio.corpus.VoxCeleb1SID.data_split"]], "data_split (s3prl.dataio.corpus.voxceleb1sv property)": [[1, "s3prl.dataio.corpus.VoxCeleb1SV.data_split"]], "data_split_ids (s3prl.dataio.corpus.fluentspeechcommands property)": [[1, "s3prl.dataio.corpus.FluentSpeechCommands.data_split_ids"]], "data_split_ids (s3prl.dataio.corpus.iemocap property)": [[1, "s3prl.dataio.corpus.IEMOCAP.data_split_ids"]], "data_split_ids (s3prl.dataio.corpus.librilight property)": [[1, "s3prl.dataio.corpus.LibriLight.data_split_ids"]], "data_split_ids (s3prl.dataio.corpus.librispeech property)": [[1, "s3prl.dataio.corpus.LibriSpeech.data_split_ids"]], "data_split_ids (s3prl.dataio.corpus.snips property)": [[1, "s3prl.dataio.corpus.SNIPS.data_split_ids"]], "data_split_ids (s3prl.dataio.corpus.speechcommandsv1 property)": [[1, "s3prl.dataio.corpus.SpeechCommandsV1.data_split_ids"]], "data_split_ids (s3prl.dataio.corpus.voxceleb1sid property)": [[1, "s3prl.dataio.corpus.VoxCeleb1SID.data_split_ids"]], "data_split_ids (s3prl.dataio.corpus.voxceleb1sv property)": [[1, "s3prl.dataio.corpus.VoxCeleb1SV.data_split_ids"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.fluentspeechcommands static method)": [[1, "s3prl.dataio.corpus.FluentSpeechCommands.dataframe_to_datapoints"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.iemocap static method)": [[1, "s3prl.dataio.corpus.IEMOCAP.dataframe_to_datapoints"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.librilight static method)": [[1, "s3prl.dataio.corpus.LibriLight.dataframe_to_datapoints"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.librispeech static method)": [[1, "s3prl.dataio.corpus.LibriSpeech.dataframe_to_datapoints"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.snips static method)": [[1, "s3prl.dataio.corpus.SNIPS.dataframe_to_datapoints"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.speechcommandsv1 static method)": [[1, "s3prl.dataio.corpus.SpeechCommandsV1.dataframe_to_datapoints"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.voxceleb1sid static method)": [[1, "s3prl.dataio.corpus.VoxCeleb1SID.dataframe_to_datapoints"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.voxceleb1sv static method)": [[1, "s3prl.dataio.corpus.VoxCeleb1SV.dataframe_to_datapoints"]], "docs (s3prl.dataio.corpus.quesst14 property)": [[1, "s3prl.dataio.corpus.Quesst14.docs"]], "download_dataset() (s3prl.dataio.corpus.fluentspeechcommands class method)": [[1, "s3prl.dataio.corpus.FluentSpeechCommands.download_dataset"]], "download_dataset() (s3prl.dataio.corpus.iemocap class method)": [[1, "s3prl.dataio.corpus.IEMOCAP.download_dataset"]], "download_dataset() (s3prl.dataio.corpus.librilight class method)": [[1, "s3prl.dataio.corpus.LibriLight.download_dataset"]], "download_dataset() (s3prl.dataio.corpus.librispeech class method)": [[1, "s3prl.dataio.corpus.LibriSpeech.download_dataset"]], "download_dataset() (s3prl.dataio.corpus.quesst14 class method)": [[1, "s3prl.dataio.corpus.Quesst14.download_dataset"]], "download_dataset() (s3prl.dataio.corpus.speechcommandsv1 class method)": [[1, "s3prl.dataio.corpus.SpeechCommandsV1.download_dataset"]], "download_dataset() (s3prl.dataio.corpus.voxceleb1sid class method)": [[1, "s3prl.dataio.corpus.VoxCeleb1SID.download_dataset"]], "format_path() (s3prl.dataio.corpus.voxceleb1sv static method)": [[1, "s3prl.dataio.corpus.VoxCeleb1SV.format_path"]], "format_test_trials() (s3prl.dataio.corpus.voxceleb1sv class method)": [[1, "s3prl.dataio.corpus.VoxCeleb1SV.format_test_trials"]], "get_corpus_splits() (s3prl.dataio.corpus.librispeech method)": [[1, "s3prl.dataio.corpus.LibriSpeech.get_corpus_splits"]], "get_session_with_act() (s3prl.dataio.corpus.iemocap method)": [[1, "s3prl.dataio.corpus.IEMOCAP.get_session_with_act"]], "get_whole_session() (s3prl.dataio.corpus.iemocap method)": [[1, "s3prl.dataio.corpus.IEMOCAP.get_whole_session"]], "list_to_dict() (s3prl.dataio.corpus.speechcommandsv1 class method)": [[1, "s3prl.dataio.corpus.SpeechCommandsV1.list_to_dict"]], "parse_test_data_list() (s3prl.dataio.corpus.speechcommandsv1 static method)": [[1, "s3prl.dataio.corpus.SpeechCommandsV1.parse_test_data_list"]], "parse_train_valid_data_list() (s3prl.dataio.corpus.speechcommandsv1 static method)": [[1, "s3prl.dataio.corpus.SpeechCommandsV1.parse_train_valid_data_list"]], "path2data() (s3prl.dataio.corpus.voxceleb1sv class method)": [[1, "s3prl.dataio.corpus.VoxCeleb1SV.path2data"]], "path2uid() (s3prl.dataio.corpus.voxceleb1sv class method)": [[1, "s3prl.dataio.corpus.VoxCeleb1SV.path2uid"]], "path_to_unique_name() (s3prl.dataio.corpus.speechcommandsv1 static method)": [[1, "s3prl.dataio.corpus.SpeechCommandsV1.path_to_unique_name"]], "s3prl.dataio.corpus": [[1, "module-s3prl.dataio.corpus"]], "split_dataset() (s3prl.dataio.corpus.speechcommandsv1 static method)": [[1, "s3prl.dataio.corpus.SpeechCommandsV1.split_dataset"]], "test_queries (s3prl.dataio.corpus.quesst14 property)": [[1, "s3prl.dataio.corpus.Quesst14.test_queries"]], "valid_queries (s3prl.dataio.corpus.quesst14 property)": [[1, "s3prl.dataio.corpus.Quesst14.valid_queries"]], "corpus (class in s3prl.dataio.corpus.base)": [[2, "s3prl.dataio.corpus.base.Corpus"]], "all_data (s3prl.dataio.corpus.base.corpus property)": [[2, "s3prl.dataio.corpus.base.Corpus.all_data"]], "data_split (s3prl.dataio.corpus.base.corpus property)": [[2, "s3prl.dataio.corpus.base.Corpus.data_split"]], "data_split_ids (s3prl.dataio.corpus.base.corpus property)": [[2, "s3prl.dataio.corpus.base.Corpus.data_split_ids"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.base.corpus static method)": [[2, "s3prl.dataio.corpus.base.Corpus.dataframe_to_datapoints"]], "s3prl.dataio.corpus.base": [[2, "module-s3prl.dataio.corpus.base"]], "fluentspeechcommands (class in s3prl.dataio.corpus.fluent_speech_commands)": [[3, "s3prl.dataio.corpus.fluent_speech_commands.FluentSpeechCommands"]], "all_data (s3prl.dataio.corpus.fluent_speech_commands.fluentspeechcommands property)": [[3, "s3prl.dataio.corpus.fluent_speech_commands.FluentSpeechCommands.all_data"]], "data_split (s3prl.dataio.corpus.fluent_speech_commands.fluentspeechcommands property)": [[3, "s3prl.dataio.corpus.fluent_speech_commands.FluentSpeechCommands.data_split"]], "data_split_ids (s3prl.dataio.corpus.fluent_speech_commands.fluentspeechcommands property)": [[3, "s3prl.dataio.corpus.fluent_speech_commands.FluentSpeechCommands.data_split_ids"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.fluent_speech_commands.fluentspeechcommands static method)": [[3, "s3prl.dataio.corpus.fluent_speech_commands.FluentSpeechCommands.dataframe_to_datapoints"]], "download_dataset() (s3prl.dataio.corpus.fluent_speech_commands.fluentspeechcommands class method)": [[3, "s3prl.dataio.corpus.fluent_speech_commands.FluentSpeechCommands.download_dataset"]], "s3prl.dataio.corpus.fluent_speech_commands": [[3, "module-s3prl.dataio.corpus.fluent_speech_commands"]], "iemocap (class in s3prl.dataio.corpus.iemocap)": [[4, "s3prl.dataio.corpus.iemocap.IEMOCAP"]], "all_data (s3prl.dataio.corpus.iemocap.iemocap property)": [[4, "s3prl.dataio.corpus.iemocap.IEMOCAP.all_data"]], "data_split (s3prl.dataio.corpus.iemocap.iemocap property)": [[4, "s3prl.dataio.corpus.iemocap.IEMOCAP.data_split"]], "data_split_ids (s3prl.dataio.corpus.iemocap.iemocap property)": [[4, "s3prl.dataio.corpus.iemocap.IEMOCAP.data_split_ids"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.iemocap.iemocap static method)": [[4, "s3prl.dataio.corpus.iemocap.IEMOCAP.dataframe_to_datapoints"]], "download_dataset() (s3prl.dataio.corpus.iemocap.iemocap class method)": [[4, "s3prl.dataio.corpus.iemocap.IEMOCAP.download_dataset"]], "get_session_with_act() (s3prl.dataio.corpus.iemocap.iemocap method)": [[4, "s3prl.dataio.corpus.iemocap.IEMOCAP.get_session_with_act"]], "get_whole_session() (s3prl.dataio.corpus.iemocap.iemocap method)": [[4, "s3prl.dataio.corpus.iemocap.IEMOCAP.get_whole_session"]], "s3prl.dataio.corpus.iemocap": [[4, "module-s3prl.dataio.corpus.iemocap"]], "librilight (class in s3prl.dataio.corpus.librilight)": [[5, "s3prl.dataio.corpus.librilight.LibriLight"]], "all_data (s3prl.dataio.corpus.librilight.librilight property)": [[5, "s3prl.dataio.corpus.librilight.LibriLight.all_data"]], "data_split (s3prl.dataio.corpus.librilight.librilight property)": [[5, "s3prl.dataio.corpus.librilight.LibriLight.data_split"]], "data_split_ids (s3prl.dataio.corpus.librilight.librilight property)": [[5, "s3prl.dataio.corpus.librilight.LibriLight.data_split_ids"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.librilight.librilight static method)": [[5, "s3prl.dataio.corpus.librilight.LibriLight.dataframe_to_datapoints"]], "download_dataset() (s3prl.dataio.corpus.librilight.librilight class method)": [[5, "s3prl.dataio.corpus.librilight.LibriLight.download_dataset"]], "s3prl.dataio.corpus.librilight": [[5, "module-s3prl.dataio.corpus.librilight"]], "librispeech (class in s3prl.dataio.corpus.librispeech)": [[6, "s3prl.dataio.corpus.librispeech.LibriSpeech"]], "all_data (s3prl.dataio.corpus.librispeech.librispeech property)": [[6, "s3prl.dataio.corpus.librispeech.LibriSpeech.all_data"]], "data_split (s3prl.dataio.corpus.librispeech.librispeech property)": [[6, "s3prl.dataio.corpus.librispeech.LibriSpeech.data_split"]], "data_split_ids (s3prl.dataio.corpus.librispeech.librispeech property)": [[6, "s3prl.dataio.corpus.librispeech.LibriSpeech.data_split_ids"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.librispeech.librispeech static method)": [[6, "s3prl.dataio.corpus.librispeech.LibriSpeech.dataframe_to_datapoints"]], "download_dataset() (s3prl.dataio.corpus.librispeech.librispeech class method)": [[6, "s3prl.dataio.corpus.librispeech.LibriSpeech.download_dataset"]], "get_corpus_splits() (s3prl.dataio.corpus.librispeech.librispeech method)": [[6, "s3prl.dataio.corpus.librispeech.LibriSpeech.get_corpus_splits"]], "s3prl.dataio.corpus.librispeech": [[6, "module-s3prl.dataio.corpus.librispeech"]], "quesst14 (class in s3prl.dataio.corpus.quesst14)": [[7, "s3prl.dataio.corpus.quesst14.Quesst14"]], "docs (s3prl.dataio.corpus.quesst14.quesst14 property)": [[7, "s3prl.dataio.corpus.quesst14.Quesst14.docs"]], "download_dataset() (s3prl.dataio.corpus.quesst14.quesst14 class method)": [[7, "s3prl.dataio.corpus.quesst14.Quesst14.download_dataset"]], "s3prl.dataio.corpus.quesst14": [[7, "module-s3prl.dataio.corpus.quesst14"]], "test_queries (s3prl.dataio.corpus.quesst14.quesst14 property)": [[7, "s3prl.dataio.corpus.quesst14.Quesst14.test_queries"]], "valid_queries (s3prl.dataio.corpus.quesst14.quesst14 property)": [[7, "s3prl.dataio.corpus.quesst14.Quesst14.valid_queries"]], "snips (class in s3prl.dataio.corpus.snips)": [[8, "s3prl.dataio.corpus.snips.SNIPS"]], "all_data (s3prl.dataio.corpus.snips.snips property)": [[8, "s3prl.dataio.corpus.snips.SNIPS.all_data"]], "data_split (s3prl.dataio.corpus.snips.snips property)": [[8, "s3prl.dataio.corpus.snips.SNIPS.data_split"]], "data_split_ids (s3prl.dataio.corpus.snips.snips property)": [[8, "s3prl.dataio.corpus.snips.SNIPS.data_split_ids"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.snips.snips static method)": [[8, "s3prl.dataio.corpus.snips.SNIPS.dataframe_to_datapoints"]], "s3prl.dataio.corpus.snips": [[8, "module-s3prl.dataio.corpus.snips"]], "speechcommandsv1 (class in s3prl.dataio.corpus.speech_commands)": [[9, "s3prl.dataio.corpus.speech_commands.SpeechCommandsV1"]], "all_data (s3prl.dataio.corpus.speech_commands.speechcommandsv1 property)": [[9, "s3prl.dataio.corpus.speech_commands.SpeechCommandsV1.all_data"]], "data_split (s3prl.dataio.corpus.speech_commands.speechcommandsv1 property)": [[9, "s3prl.dataio.corpus.speech_commands.SpeechCommandsV1.data_split"]], "data_split_ids (s3prl.dataio.corpus.speech_commands.speechcommandsv1 property)": [[9, "s3prl.dataio.corpus.speech_commands.SpeechCommandsV1.data_split_ids"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.speech_commands.speechcommandsv1 static method)": [[9, "s3prl.dataio.corpus.speech_commands.SpeechCommandsV1.dataframe_to_datapoints"]], "download_dataset() (s3prl.dataio.corpus.speech_commands.speechcommandsv1 class method)": [[9, "s3prl.dataio.corpus.speech_commands.SpeechCommandsV1.download_dataset"]], "list_to_dict() (s3prl.dataio.corpus.speech_commands.speechcommandsv1 class method)": [[9, "s3prl.dataio.corpus.speech_commands.SpeechCommandsV1.list_to_dict"]], "parse_test_data_list() (s3prl.dataio.corpus.speech_commands.speechcommandsv1 static method)": [[9, "s3prl.dataio.corpus.speech_commands.SpeechCommandsV1.parse_test_data_list"]], "parse_train_valid_data_list() (s3prl.dataio.corpus.speech_commands.speechcommandsv1 static method)": [[9, "s3prl.dataio.corpus.speech_commands.SpeechCommandsV1.parse_train_valid_data_list"]], "path_to_unique_name() (s3prl.dataio.corpus.speech_commands.speechcommandsv1 static method)": [[9, "s3prl.dataio.corpus.speech_commands.SpeechCommandsV1.path_to_unique_name"]], "s3prl.dataio.corpus.speech_commands": [[9, "module-s3prl.dataio.corpus.speech_commands"]], "split_dataset() (s3prl.dataio.corpus.speech_commands.speechcommandsv1 static method)": [[9, "s3prl.dataio.corpus.speech_commands.SpeechCommandsV1.split_dataset"]], "voxceleb1sid (class in s3prl.dataio.corpus.voxceleb1sid)": [[10, "s3prl.dataio.corpus.voxceleb1sid.VoxCeleb1SID"]], "all_data (s3prl.dataio.corpus.voxceleb1sid.voxceleb1sid property)": [[10, "s3prl.dataio.corpus.voxceleb1sid.VoxCeleb1SID.all_data"]], "data_split (s3prl.dataio.corpus.voxceleb1sid.voxceleb1sid property)": [[10, "s3prl.dataio.corpus.voxceleb1sid.VoxCeleb1SID.data_split"]], "data_split_ids (s3prl.dataio.corpus.voxceleb1sid.voxceleb1sid property)": [[10, "s3prl.dataio.corpus.voxceleb1sid.VoxCeleb1SID.data_split_ids"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.voxceleb1sid.voxceleb1sid static method)": [[10, "s3prl.dataio.corpus.voxceleb1sid.VoxCeleb1SID.dataframe_to_datapoints"]], "download_dataset() (s3prl.dataio.corpus.voxceleb1sid.voxceleb1sid class method)": [[10, "s3prl.dataio.corpus.voxceleb1sid.VoxCeleb1SID.download_dataset"]], "s3prl.dataio.corpus.voxceleb1sid": [[10, "module-s3prl.dataio.corpus.voxceleb1sid"]], "voxceleb1sv (class in s3prl.dataio.corpus.voxceleb1sv)": [[11, "s3prl.dataio.corpus.voxceleb1sv.VoxCeleb1SV"]], "all_data (s3prl.dataio.corpus.voxceleb1sv.voxceleb1sv property)": [[11, "s3prl.dataio.corpus.voxceleb1sv.VoxCeleb1SV.all_data"]], "data_split (s3prl.dataio.corpus.voxceleb1sv.voxceleb1sv property)": [[11, "s3prl.dataio.corpus.voxceleb1sv.VoxCeleb1SV.data_split"]], "data_split_ids (s3prl.dataio.corpus.voxceleb1sv.voxceleb1sv property)": [[11, "s3prl.dataio.corpus.voxceleb1sv.VoxCeleb1SV.data_split_ids"]], "dataframe_to_datapoints() (s3prl.dataio.corpus.voxceleb1sv.voxceleb1sv static method)": [[11, "s3prl.dataio.corpus.voxceleb1sv.VoxCeleb1SV.dataframe_to_datapoints"]], "format_path() (s3prl.dataio.corpus.voxceleb1sv.voxceleb1sv static method)": [[11, "s3prl.dataio.corpus.voxceleb1sv.VoxCeleb1SV.format_path"]], "format_test_trials() (s3prl.dataio.corpus.voxceleb1sv.voxceleb1sv class method)": [[11, "s3prl.dataio.corpus.voxceleb1sv.VoxCeleb1SV.format_test_trials"]], "path2data() (s3prl.dataio.corpus.voxceleb1sv.voxceleb1sv class method)": [[11, "s3prl.dataio.corpus.voxceleb1sv.VoxCeleb1SV.path2data"]], "path2uid() (s3prl.dataio.corpus.voxceleb1sv.voxceleb1sv class method)": [[11, "s3prl.dataio.corpus.voxceleb1sv.VoxCeleb1SV.path2uid"]], "s3prl.dataio.corpus.voxceleb1sv": [[11, "module-s3prl.dataio.corpus.voxceleb1sv"]], "dataset (class in s3prl.dataio.dataset)": [[12, "s3prl.dataio.dataset.Dataset"]], "diarizationdataset (class in s3prl.dataio.dataset)": [[12, "s3prl.dataio.dataset.DiarizationDataset"]], "encodecategories (class in s3prl.dataio.dataset)": [[12, "s3prl.dataio.dataset.EncodeCategories"]], "encodecategory (class in s3prl.dataio.dataset)": [[12, "s3prl.dataio.dataset.EncodeCategory"]], "encodetext (class in s3prl.dataio.dataset)": [[12, "s3prl.dataio.dataset.EncodeText"]], "loadaudio (class in s3prl.dataio.dataset)": [[12, "s3prl.dataio.dataset.LoadAudio"]], "get_info() (in module s3prl.dataio.dataset)": [[12, "s3prl.dataio.dataset.get_info"]], "getinfo() (s3prl.dataio.dataset.dataset method)": [[12, "s3prl.dataio.dataset.Dataset.getinfo"]], "getinfo() (s3prl.dataio.dataset.diarizationdataset method)": [[12, "s3prl.dataio.dataset.DiarizationDataset.getinfo"]], "getinfo() (s3prl.dataio.dataset.encodecategories method)": [[12, "s3prl.dataio.dataset.EncodeCategories.getinfo"]], "getinfo() (s3prl.dataio.dataset.encodecategory method)": [[12, "s3prl.dataio.dataset.EncodeCategory.getinfo"]], "getinfo() (s3prl.dataio.dataset.encodetext method)": [[12, "s3prl.dataio.dataset.EncodeText.getinfo"]], "getinfo() (s3prl.dataio.dataset.loadaudio method)": [[12, "s3prl.dataio.dataset.LoadAudio.getinfo"]], "s3prl.dataio.dataset": [[12, "module-s3prl.dataio.dataset"]], "dataset (class in s3prl.dataio.dataset.base)": [[13, "s3prl.dataio.dataset.base.Dataset"]], "getinfo() (s3prl.dataio.dataset.base.dataset method)": [[13, "s3prl.dataio.dataset.base.Dataset.getinfo"]], "s3prl.dataio.dataset.base": [[13, "module-s3prl.dataio.dataset.base"]], "dataset (class in s3prl.dataio.dataset.diarization)": [[14, "s3prl.dataio.dataset.diarization.Dataset"]], "diarizationdataset (class in s3prl.dataio.dataset.diarization)": [[14, "s3prl.dataio.dataset.diarization.DiarizationDataset"]], "kaldidata (class in s3prl.dataio.dataset.diarization)": [[14, "s3prl.dataio.dataset.diarization.KaldiData"]], "getinfo() (s3prl.dataio.dataset.diarization.dataset method)": [[14, "s3prl.dataio.dataset.diarization.Dataset.getinfo"]], "getinfo() (s3prl.dataio.dataset.diarization.diarizationdataset method)": [[14, "s3prl.dataio.dataset.diarization.DiarizationDataset.getinfo"]], "load_wav() (s3prl.dataio.dataset.diarization.kaldidata method)": [[14, "s3prl.dataio.dataset.diarization.KaldiData.load_wav"]], "s3prl.dataio.dataset.diarization": [[14, "module-s3prl.dataio.dataset.diarization"]], "categoryencoder (class in s3prl.dataio.dataset.encode)": [[15, "s3prl.dataio.dataset.encode.CategoryEncoder"]], "categoryencoders (class in s3prl.dataio.dataset.encode)": [[15, "s3prl.dataio.dataset.encode.CategoryEncoders"]], "dataset (class in s3prl.dataio.dataset.encode)": [[15, "s3prl.dataio.dataset.encode.Dataset"]], "encodecategories (class in s3prl.dataio.dataset.encode)": [[15, "s3prl.dataio.dataset.encode.EncodeCategories"]], "encodecategory (class in s3prl.dataio.dataset.encode)": [[15, "s3prl.dataio.dataset.encode.EncodeCategory"]], "encodetext (class in s3prl.dataio.dataset.encode)": [[15, "s3prl.dataio.dataset.encode.EncodeText"]], "tokenizer (class in s3prl.dataio.dataset.encode)": [[15, "s3prl.dataio.dataset.encode.Tokenizer"]], "decode() (s3prl.dataio.dataset.encode.categoryencoder method)": [[15, "s3prl.dataio.dataset.encode.CategoryEncoder.decode"]], "decode() (s3prl.dataio.dataset.encode.categoryencoders method)": [[15, "s3prl.dataio.dataset.encode.CategoryEncoders.decode"]], "decode() (s3prl.dataio.dataset.encode.tokenizer method)": [[15, "s3prl.dataio.dataset.encode.Tokenizer.decode"]], "encode() (s3prl.dataio.dataset.encode.categoryencoder method)": [[15, "s3prl.dataio.dataset.encode.CategoryEncoder.encode"]], "encode() (s3prl.dataio.dataset.encode.categoryencoders method)": [[15, "s3prl.dataio.dataset.encode.CategoryEncoders.encode"]], "encode() (s3prl.dataio.dataset.encode.tokenizer method)": [[15, "s3prl.dataio.dataset.encode.Tokenizer.encode"]], "eos_idx (s3prl.dataio.dataset.encode.tokenizer property)": [[15, "s3prl.dataio.dataset.encode.Tokenizer.eos_idx"]], "getinfo() (s3prl.dataio.dataset.encode.dataset method)": [[15, "s3prl.dataio.dataset.encode.Dataset.getinfo"]], "getinfo() (s3prl.dataio.dataset.encode.encodecategories method)": [[15, "s3prl.dataio.dataset.encode.EncodeCategories.getinfo"]], "getinfo() (s3prl.dataio.dataset.encode.encodecategory method)": [[15, "s3prl.dataio.dataset.encode.EncodeCategory.getinfo"]], "getinfo() (s3prl.dataio.dataset.encode.encodetext method)": [[15, "s3prl.dataio.dataset.encode.EncodeText.getinfo"]], "load_from_file() (s3prl.dataio.dataset.encode.tokenizer class method)": [[15, "s3prl.dataio.dataset.encode.Tokenizer.load_from_file"]], "pad_idx (s3prl.dataio.dataset.encode.tokenizer property)": [[15, "s3prl.dataio.dataset.encode.Tokenizer.pad_idx"]], "s3prl.dataio.dataset.encode": [[15, "module-s3prl.dataio.dataset.encode"]], "token_type (s3prl.dataio.dataset.encode.tokenizer property)": [[15, "s3prl.dataio.dataset.encode.Tokenizer.token_type"]], "unk_idx (s3prl.dataio.dataset.encode.tokenizer property)": [[15, "s3prl.dataio.dataset.encode.Tokenizer.unk_idx"]], "vocab_size (s3prl.dataio.dataset.encode.tokenizer property)": [[15, "s3prl.dataio.dataset.encode.Tokenizer.vocab_size"]], "dataset (class in s3prl.dataio.dataset.load_audio)": [[16, "s3prl.dataio.dataset.load_audio.Dataset"]], "loadaudio (class in s3prl.dataio.dataset.load_audio)": [[16, "s3prl.dataio.dataset.load_audio.LoadAudio"]], "getinfo() (s3prl.dataio.dataset.load_audio.dataset method)": [[16, "s3prl.dataio.dataset.load_audio.Dataset.getinfo"]], "getinfo() (s3prl.dataio.dataset.load_audio.loadaudio method)": [[16, "s3prl.dataio.dataset.load_audio.LoadAudio.getinfo"]], "s3prl.dataio.dataset.load_audio": [[16, "module-s3prl.dataio.dataset.load_audio"]], "parallel (class in s3prl.dataio.dataset.util)": [[17, "s3prl.dataio.dataset.util.Parallel"]], "path (class in s3prl.dataio.dataset.util)": [[17, "s3prl.dataio.dataset.util.Path"]], "absolute() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.absolute"]], "anchor (s3prl.dataio.dataset.util.path property)": [[17, "s3prl.dataio.dataset.util.Path.anchor"]], "as_posix() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.as_posix"]], "as_uri() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.as_uri"]], "chmod() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.chmod"]], "clear() (s3prl.dataio.dataset.util.defaultdict method)": [[17, "s3prl.dataio.dataset.util.defaultdict.clear"]], "clear() (s3prl.dataio.dataset.util.tqdm method)": [[17, "s3prl.dataio.dataset.util.tqdm.clear"]], "close() (s3prl.dataio.dataset.util.tqdm method)": [[17, "s3prl.dataio.dataset.util.tqdm.close"]], "copy() (s3prl.dataio.dataset.util.defaultdict method)": [[17, "s3prl.dataio.dataset.util.defaultdict.copy"]], "cwd() (s3prl.dataio.dataset.util.path class method)": [[17, "s3prl.dataio.dataset.util.Path.cwd"]], "debug() (s3prl.dataio.dataset.util.parallel method)": [[17, "s3prl.dataio.dataset.util.Parallel.debug"]], "default_factory (s3prl.dataio.dataset.util.defaultdict attribute)": [[17, "s3prl.dataio.dataset.util.defaultdict.default_factory"]], "defaultdict (class in s3prl.dataio.dataset.util)": [[17, "s3prl.dataio.dataset.util.defaultdict"]], "delayed() (in module s3prl.dataio.dataset.util)": [[17, "s3prl.dataio.dataset.util.delayed"]], "dispatch_next() (s3prl.dataio.dataset.util.parallel method)": [[17, "s3prl.dataio.dataset.util.Parallel.dispatch_next"]], "dispatch_one_batch() (s3prl.dataio.dataset.util.parallel method)": [[17, "s3prl.dataio.dataset.util.Parallel.dispatch_one_batch"]], "display() (s3prl.dataio.dataset.util.tqdm method)": [[17, "s3prl.dataio.dataset.util.tqdm.display"]], "drive (s3prl.dataio.dataset.util.path property)": [[17, "s3prl.dataio.dataset.util.Path.drive"]], "exists() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.exists"]], "expanduser() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.expanduser"]], "external_write_mode() (s3prl.dataio.dataset.util.tqdm class method)": [[17, "s3prl.dataio.dataset.util.tqdm.external_write_mode"]], "format() (s3prl.dataio.dataset.util.parallel method)": [[17, "s3prl.dataio.dataset.util.Parallel.format"]], "format_dict (s3prl.dataio.dataset.util.tqdm property)": [[17, "s3prl.dataio.dataset.util.tqdm.format_dict"]], "format_interval() (s3prl.dataio.dataset.util.tqdm static method)": [[17, "s3prl.dataio.dataset.util.tqdm.format_interval"]], "format_meter() (s3prl.dataio.dataset.util.tqdm static method)": [[17, "s3prl.dataio.dataset.util.tqdm.format_meter"]], "format_num() (s3prl.dataio.dataset.util.tqdm static method)": [[17, "s3prl.dataio.dataset.util.tqdm.format_num"]], "format_sizeof() (s3prl.dataio.dataset.util.tqdm static method)": [[17, "s3prl.dataio.dataset.util.tqdm.format_sizeof"]], "fromkeys() (s3prl.dataio.dataset.util.defaultdict method)": [[17, "s3prl.dataio.dataset.util.defaultdict.fromkeys"]], "get() (s3prl.dataio.dataset.util.defaultdict method)": [[17, "s3prl.dataio.dataset.util.defaultdict.get"]], "get_info() (in module s3prl.dataio.dataset.util)": [[17, "s3prl.dataio.dataset.util.get_info"]], "get_lock() (s3prl.dataio.dataset.util.tqdm class method)": [[17, "s3prl.dataio.dataset.util.tqdm.get_lock"]], "glob() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.glob"]], "group() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.group"]], "home() (s3prl.dataio.dataset.util.path class method)": [[17, "s3prl.dataio.dataset.util.Path.home"]], "is_absolute() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.is_absolute"]], "is_block_device() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.is_block_device"]], "is_char_device() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.is_char_device"]], "is_dir() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.is_dir"]], "is_fifo() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.is_fifo"]], "is_file() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.is_file"]], "is_mount() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.is_mount"]], "is_reserved() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.is_reserved"]], "is_socket() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.is_socket"]], "is_symlink() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.is_symlink"]], "items() (s3prl.dataio.dataset.util.defaultdict method)": [[17, "s3prl.dataio.dataset.util.defaultdict.items"]], "iterdir() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.iterdir"]], "joinpath() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.joinpath"]], "keys() (s3prl.dataio.dataset.util.defaultdict method)": [[17, "s3prl.dataio.dataset.util.defaultdict.keys"]], "lchmod() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.lchmod"]], "link_to() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.link_to"]], "lstat() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.lstat"]], "match() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.match"]], "mkdir() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.mkdir"]], "monitor (s3prl.dataio.dataset.util.tqdm attribute)": [[17, "s3prl.dataio.dataset.util.tqdm.monitor"]], "monitor_interval (s3prl.dataio.dataset.util.tqdm attribute)": [[17, "s3prl.dataio.dataset.util.tqdm.monitor_interval"]], "moveto() (s3prl.dataio.dataset.util.tqdm method)": [[17, "s3prl.dataio.dataset.util.tqdm.moveto"]], "name (s3prl.dataio.dataset.util.path property)": [[17, "s3prl.dataio.dataset.util.Path.name"]], "open() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.open"]], "owner() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.owner"]], "pandas() (s3prl.dataio.dataset.util.tqdm class method)": [[17, "s3prl.dataio.dataset.util.tqdm.pandas"]], "parent (s3prl.dataio.dataset.util.path property)": [[17, "s3prl.dataio.dataset.util.Path.parent"]], "parents (s3prl.dataio.dataset.util.path property)": [[17, "s3prl.dataio.dataset.util.Path.parents"]], "parts (s3prl.dataio.dataset.util.path property)": [[17, "s3prl.dataio.dataset.util.Path.parts"]], "pop() (s3prl.dataio.dataset.util.defaultdict method)": [[17, "s3prl.dataio.dataset.util.defaultdict.pop"]], "popitem() (s3prl.dataio.dataset.util.defaultdict method)": [[17, "s3prl.dataio.dataset.util.defaultdict.popitem"]], "print_progress() (s3prl.dataio.dataset.util.parallel method)": [[17, "s3prl.dataio.dataset.util.Parallel.print_progress"]], "read_bytes() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.read_bytes"]], "read_text() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.read_text"]], "refresh() (s3prl.dataio.dataset.util.tqdm method)": [[17, "s3prl.dataio.dataset.util.tqdm.refresh"]], "relative_to() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.relative_to"]], "rename() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.rename"]], "replace() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.replace"]], "reset() (s3prl.dataio.dataset.util.tqdm method)": [[17, "s3prl.dataio.dataset.util.tqdm.reset"]], "resolve() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.resolve"]], "retrieve() (s3prl.dataio.dataset.util.parallel method)": [[17, "s3prl.dataio.dataset.util.Parallel.retrieve"]], "rglob() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.rglob"]], "rmdir() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.rmdir"]], "root (s3prl.dataio.dataset.util.path property)": [[17, "s3prl.dataio.dataset.util.Path.root"]], "s3prl.dataio.dataset.util": [[17, "module-s3prl.dataio.dataset.util"]], "samefile() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.samefile"]], "set_description() (s3prl.dataio.dataset.util.tqdm method)": [[17, "s3prl.dataio.dataset.util.tqdm.set_description"]], "set_description_str() (s3prl.dataio.dataset.util.tqdm method)": [[17, "s3prl.dataio.dataset.util.tqdm.set_description_str"]], "set_lock() (s3prl.dataio.dataset.util.tqdm class method)": [[17, "s3prl.dataio.dataset.util.tqdm.set_lock"]], "set_postfix() (s3prl.dataio.dataset.util.tqdm method)": [[17, "s3prl.dataio.dataset.util.tqdm.set_postfix"]], "set_postfix_str() (s3prl.dataio.dataset.util.tqdm method)": [[17, "s3prl.dataio.dataset.util.tqdm.set_postfix_str"]], "setdefault() (s3prl.dataio.dataset.util.defaultdict method)": [[17, "s3prl.dataio.dataset.util.defaultdict.setdefault"]], "stat() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.stat"]], "status_printer() (s3prl.dataio.dataset.util.tqdm static method)": [[17, "s3prl.dataio.dataset.util.tqdm.status_printer"]], "stem (s3prl.dataio.dataset.util.path property)": [[17, "s3prl.dataio.dataset.util.Path.stem"]], "suffix (s3prl.dataio.dataset.util.path property)": [[17, "s3prl.dataio.dataset.util.Path.suffix"]], "suffixes (s3prl.dataio.dataset.util.path property)": [[17, "s3prl.dataio.dataset.util.Path.suffixes"]], "symlink_to() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.symlink_to"]], "touch() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.touch"]], "tqdm (class in s3prl.dataio.dataset.util)": [[17, "s3prl.dataio.dataset.util.tqdm"]], "unlink() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.unlink"]], "unpause() (s3prl.dataio.dataset.util.tqdm method)": [[17, "s3prl.dataio.dataset.util.tqdm.unpause"]], "update() (s3prl.dataio.dataset.util.defaultdict method)": [[17, "s3prl.dataio.dataset.util.defaultdict.update"]], "update() (s3prl.dataio.dataset.util.tqdm method)": [[17, "s3prl.dataio.dataset.util.tqdm.update"]], "values() (s3prl.dataio.dataset.util.defaultdict method)": [[17, "s3prl.dataio.dataset.util.defaultdict.values"]], "warn() (s3prl.dataio.dataset.util.parallel method)": [[17, "s3prl.dataio.dataset.util.Parallel.warn"]], "with_name() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.with_name"]], "with_suffix() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.with_suffix"]], "wrapattr() (s3prl.dataio.dataset.util.tqdm class method)": [[17, "s3prl.dataio.dataset.util.tqdm.wrapattr"]], "write() (s3prl.dataio.dataset.util.tqdm class method)": [[17, "s3prl.dataio.dataset.util.tqdm.write"]], "write_bytes() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.write_bytes"]], "write_text() (s3prl.dataio.dataset.util.path method)": [[17, "s3prl.dataio.dataset.util.Path.write_text"]], "berttokenizer (class in s3prl.dataio.encoder)": [[18, "s3prl.dataio.encoder.BertTokenizer"]], "categoryencoder (class in s3prl.dataio.encoder)": [[18, "s3prl.dataio.encoder.CategoryEncoder"]], "categoryencoders (class in s3prl.dataio.encoder)": [[18, "s3prl.dataio.encoder.CategoryEncoders"]], "characterslottokenizer (class in s3prl.dataio.encoder)": [[18, "s3prl.dataio.encoder.CharacterSlotTokenizer"]], "charactertokenizer (class in s3prl.dataio.encoder)": [[18, "s3prl.dataio.encoder.CharacterTokenizer"]], "g2p (class in s3prl.dataio.encoder)": [[18, "s3prl.dataio.encoder.G2P"]], "subwordslottokenizer (class in s3prl.dataio.encoder)": [[18, "s3prl.dataio.encoder.SubwordSlotTokenizer"]], "subwordtokenizer (class in s3prl.dataio.encoder)": [[18, "s3prl.dataio.encoder.SubwordTokenizer"]], "tokenizer (class in s3prl.dataio.encoder)": [[18, "s3prl.dataio.encoder.Tokenizer"]], "wordtokenizer (class in s3prl.dataio.encoder)": [[18, "s3prl.dataio.encoder.WordTokenizer"]], "decode() (s3prl.dataio.encoder.berttokenizer method)": [[18, "s3prl.dataio.encoder.BertTokenizer.decode"]], "decode() (s3prl.dataio.encoder.categoryencoder method)": [[18, "s3prl.dataio.encoder.CategoryEncoder.decode"]], "decode() (s3prl.dataio.encoder.categoryencoders method)": [[18, "s3prl.dataio.encoder.CategoryEncoders.decode"]], "decode() (s3prl.dataio.encoder.characterslottokenizer method)": [[18, "s3prl.dataio.encoder.CharacterSlotTokenizer.decode"]], "decode() (s3prl.dataio.encoder.charactertokenizer method)": [[18, "s3prl.dataio.encoder.CharacterTokenizer.decode"]], "decode() (s3prl.dataio.encoder.subwordslottokenizer method)": [[18, "s3prl.dataio.encoder.SubwordSlotTokenizer.decode"]], "decode() (s3prl.dataio.encoder.subwordtokenizer method)": [[18, "s3prl.dataio.encoder.SubwordTokenizer.decode"]], "decode() (s3prl.dataio.encoder.tokenizer method)": [[18, "s3prl.dataio.encoder.Tokenizer.decode"]], "decode() (s3prl.dataio.encoder.wordtokenizer method)": [[18, "s3prl.dataio.encoder.WordTokenizer.decode"]], "encode() (s3prl.dataio.encoder.berttokenizer method)": [[18, "s3prl.dataio.encoder.BertTokenizer.encode"]], "encode() (s3prl.dataio.encoder.categoryencoder method)": [[18, "s3prl.dataio.encoder.CategoryEncoder.encode"]], "encode() (s3prl.dataio.encoder.categoryencoders method)": [[18, "s3prl.dataio.encoder.CategoryEncoders.encode"]], "encode() (s3prl.dataio.encoder.characterslottokenizer method)": [[18, "s3prl.dataio.encoder.CharacterSlotTokenizer.encode"]], "encode() (s3prl.dataio.encoder.charactertokenizer method)": [[18, "s3prl.dataio.encoder.CharacterTokenizer.encode"]], "encode() (s3prl.dataio.encoder.g2p method)": [[18, "s3prl.dataio.encoder.G2P.encode"]], "encode() (s3prl.dataio.encoder.subwordslottokenizer method)": [[18, "s3prl.dataio.encoder.SubwordSlotTokenizer.encode"]], "encode() (s3prl.dataio.encoder.subwordtokenizer method)": [[18, "s3prl.dataio.encoder.SubwordTokenizer.encode"]], "encode() (s3prl.dataio.encoder.tokenizer method)": [[18, "s3prl.dataio.encoder.Tokenizer.encode"]], "encode() (s3prl.dataio.encoder.wordtokenizer method)": [[18, "s3prl.dataio.encoder.WordTokenizer.encode"]], "eos_idx (s3prl.dataio.encoder.berttokenizer property)": [[18, "s3prl.dataio.encoder.BertTokenizer.eos_idx"]], "eos_idx (s3prl.dataio.encoder.characterslottokenizer property)": [[18, "s3prl.dataio.encoder.CharacterSlotTokenizer.eos_idx"]], "eos_idx (s3prl.dataio.encoder.charactertokenizer property)": [[18, "s3prl.dataio.encoder.CharacterTokenizer.eos_idx"]], "eos_idx (s3prl.dataio.encoder.subwordslottokenizer property)": [[18, "s3prl.dataio.encoder.SubwordSlotTokenizer.eos_idx"]], "eos_idx (s3prl.dataio.encoder.subwordtokenizer property)": [[18, "s3prl.dataio.encoder.SubwordTokenizer.eos_idx"]], "eos_idx (s3prl.dataio.encoder.tokenizer property)": [[18, "s3prl.dataio.encoder.Tokenizer.eos_idx"]], "eos_idx (s3prl.dataio.encoder.wordtokenizer property)": [[18, "s3prl.dataio.encoder.WordTokenizer.eos_idx"]], "generate_basic_vocab() (in module s3prl.dataio.encoder)": [[18, "s3prl.dataio.encoder.generate_basic_vocab"]], "generate_subword_vocab() (in module s3prl.dataio.encoder)": [[18, "s3prl.dataio.encoder.generate_subword_vocab"]], "generate_vocab() (in module s3prl.dataio.encoder)": [[18, "s3prl.dataio.encoder.generate_vocab"]], "idx_to_vocab() (s3prl.dataio.encoder.characterslottokenizer method)": [[18, "s3prl.dataio.encoder.CharacterSlotTokenizer.idx_to_vocab"]], "idx_to_vocab() (s3prl.dataio.encoder.charactertokenizer method)": [[18, "s3prl.dataio.encoder.CharacterTokenizer.idx_to_vocab"]], "idx_to_vocab() (s3prl.dataio.encoder.wordtokenizer method)": [[18, "s3prl.dataio.encoder.WordTokenizer.idx_to_vocab"]], "load_from_file() (s3prl.dataio.encoder.berttokenizer class method)": [[18, "s3prl.dataio.encoder.BertTokenizer.load_from_file"]], "load_from_file() (s3prl.dataio.encoder.characterslottokenizer class method)": [[18, "s3prl.dataio.encoder.CharacterSlotTokenizer.load_from_file"]], "load_from_file() (s3prl.dataio.encoder.charactertokenizer class method)": [[18, "s3prl.dataio.encoder.CharacterTokenizer.load_from_file"]], "load_from_file() (s3prl.dataio.encoder.subwordslottokenizer class method)": [[18, "s3prl.dataio.encoder.SubwordSlotTokenizer.load_from_file"]], "load_from_file() (s3prl.dataio.encoder.subwordtokenizer class method)": [[18, "s3prl.dataio.encoder.SubwordTokenizer.load_from_file"]], "load_from_file() (s3prl.dataio.encoder.tokenizer class method)": [[18, "s3prl.dataio.encoder.Tokenizer.load_from_file"]], "load_from_file() (s3prl.dataio.encoder.wordtokenizer class method)": [[18, "s3prl.dataio.encoder.WordTokenizer.load_from_file"]], "pad_idx (s3prl.dataio.encoder.berttokenizer property)": [[18, "s3prl.dataio.encoder.BertTokenizer.pad_idx"]], "pad_idx (s3prl.dataio.encoder.characterslottokenizer property)": [[18, "s3prl.dataio.encoder.CharacterSlotTokenizer.pad_idx"]], "pad_idx (s3prl.dataio.encoder.charactertokenizer property)": [[18, "s3prl.dataio.encoder.CharacterTokenizer.pad_idx"]], "pad_idx (s3prl.dataio.encoder.subwordslottokenizer property)": [[18, "s3prl.dataio.encoder.SubwordSlotTokenizer.pad_idx"]], "pad_idx (s3prl.dataio.encoder.subwordtokenizer property)": [[18, "s3prl.dataio.encoder.SubwordTokenizer.pad_idx"]], "pad_idx (s3prl.dataio.encoder.tokenizer property)": [[18, "s3prl.dataio.encoder.Tokenizer.pad_idx"]], "pad_idx (s3prl.dataio.encoder.wordtokenizer property)": [[18, "s3prl.dataio.encoder.WordTokenizer.pad_idx"]], "s3prl.dataio.encoder": [[18, "module-s3prl.dataio.encoder"]], "token_type (s3prl.dataio.encoder.berttokenizer property)": [[18, "s3prl.dataio.encoder.BertTokenizer.token_type"]], "token_type (s3prl.dataio.encoder.characterslottokenizer property)": [[18, "s3prl.dataio.encoder.CharacterSlotTokenizer.token_type"]], "token_type (s3prl.dataio.encoder.charactertokenizer property)": [[18, "s3prl.dataio.encoder.CharacterTokenizer.token_type"]], "token_type (s3prl.dataio.encoder.subwordslottokenizer property)": [[18, "s3prl.dataio.encoder.SubwordSlotTokenizer.token_type"]], "token_type (s3prl.dataio.encoder.subwordtokenizer property)": [[18, "s3prl.dataio.encoder.SubwordTokenizer.token_type"]], "token_type (s3prl.dataio.encoder.tokenizer property)": [[18, "s3prl.dataio.encoder.Tokenizer.token_type"]], "token_type (s3prl.dataio.encoder.wordtokenizer property)": [[18, "s3prl.dataio.encoder.WordTokenizer.token_type"]], "unk_idx (s3prl.dataio.encoder.berttokenizer property)": [[18, "s3prl.dataio.encoder.BertTokenizer.unk_idx"]], "unk_idx (s3prl.dataio.encoder.characterslottokenizer property)": [[18, "s3prl.dataio.encoder.CharacterSlotTokenizer.unk_idx"]], "unk_idx (s3prl.dataio.encoder.charactertokenizer property)": [[18, "s3prl.dataio.encoder.CharacterTokenizer.unk_idx"]], "unk_idx (s3prl.dataio.encoder.subwordslottokenizer property)": [[18, "s3prl.dataio.encoder.SubwordSlotTokenizer.unk_idx"]], "unk_idx (s3prl.dataio.encoder.subwordtokenizer property)": [[18, "s3prl.dataio.encoder.SubwordTokenizer.unk_idx"]], "unk_idx (s3prl.dataio.encoder.tokenizer property)": [[18, "s3prl.dataio.encoder.Tokenizer.unk_idx"]], "unk_idx (s3prl.dataio.encoder.wordtokenizer property)": [[18, "s3prl.dataio.encoder.WordTokenizer.unk_idx"]], "vocab_size (s3prl.dataio.encoder.berttokenizer property)": [[18, "s3prl.dataio.encoder.BertTokenizer.vocab_size"]], "vocab_size (s3prl.dataio.encoder.characterslottokenizer property)": [[18, "s3prl.dataio.encoder.CharacterSlotTokenizer.vocab_size"]], "vocab_size (s3prl.dataio.encoder.charactertokenizer property)": [[18, "s3prl.dataio.encoder.CharacterTokenizer.vocab_size"]], "vocab_size (s3prl.dataio.encoder.subwordslottokenizer property)": [[18, "s3prl.dataio.encoder.SubwordSlotTokenizer.vocab_size"]], "vocab_size (s3prl.dataio.encoder.subwordtokenizer property)": [[18, "s3prl.dataio.encoder.SubwordTokenizer.vocab_size"]], "vocab_size (s3prl.dataio.encoder.tokenizer property)": [[18, "s3prl.dataio.encoder.Tokenizer.vocab_size"]], "vocab_size (s3prl.dataio.encoder.wordtokenizer property)": [[18, "s3prl.dataio.encoder.WordTokenizer.vocab_size"]], "vocab_to_idx() (s3prl.dataio.encoder.characterslottokenizer method)": [[18, "s3prl.dataio.encoder.CharacterSlotTokenizer.vocab_to_idx"]], "vocab_to_idx() (s3prl.dataio.encoder.charactertokenizer method)": [[18, "s3prl.dataio.encoder.CharacterTokenizer.vocab_to_idx"]], "vocab_to_idx() (s3prl.dataio.encoder.wordtokenizer method)": [[18, "s3prl.dataio.encoder.WordTokenizer.vocab_to_idx"]], "categoryencoder (class in s3prl.dataio.encoder.category)": [[19, "s3prl.dataio.encoder.category.CategoryEncoder"]], "categoryencoders (class in s3prl.dataio.encoder.category)": [[19, "s3prl.dataio.encoder.category.CategoryEncoders"]], "decode() (s3prl.dataio.encoder.category.categoryencoder method)": [[19, "s3prl.dataio.encoder.category.CategoryEncoder.decode"]], "decode() (s3prl.dataio.encoder.category.categoryencoders method)": [[19, "s3prl.dataio.encoder.category.CategoryEncoders.decode"]], "encode() (s3prl.dataio.encoder.category.categoryencoder method)": [[19, "s3prl.dataio.encoder.category.CategoryEncoder.encode"]], "encode() (s3prl.dataio.encoder.category.categoryencoders method)": [[19, "s3prl.dataio.encoder.category.CategoryEncoders.encode"]], "s3prl.dataio.encoder.category": [[19, "module-s3prl.dataio.encoder.category"]], "g2p (class in s3prl.dataio.encoder.g2p)": [[20, "s3prl.dataio.encoder.g2p.G2P"]], "encode() (s3prl.dataio.encoder.g2p.g2p method)": [[20, "s3prl.dataio.encoder.g2p.G2P.encode"]], "s3prl.dataio.encoder.g2p": [[20, "module-s3prl.dataio.encoder.g2p"]], "characterslottokenizer (class in s3prl.dataio.encoder.tokenizer)": [[21, "s3prl.dataio.encoder.tokenizer.CharacterSlotTokenizer"]], "charactertokenizer (class in s3prl.dataio.encoder.tokenizer)": [[21, "s3prl.dataio.encoder.tokenizer.CharacterTokenizer"]], "phonemetokenizer (class in s3prl.dataio.encoder.tokenizer)": [[21, "s3prl.dataio.encoder.tokenizer.PhonemeTokenizer"]], "subwordslottokenizer (class in s3prl.dataio.encoder.tokenizer)": [[21, "s3prl.dataio.encoder.tokenizer.SubwordSlotTokenizer"]], "subwordtokenizer (class in s3prl.dataio.encoder.tokenizer)": [[21, "s3prl.dataio.encoder.tokenizer.SubwordTokenizer"]], "wordtokenizer (class in s3prl.dataio.encoder.tokenizer)": [[21, "s3prl.dataio.encoder.tokenizer.WordTokenizer"]], "decode() (s3prl.dataio.encoder.tokenizer.characterslottokenizer method)": [[21, "s3prl.dataio.encoder.tokenizer.CharacterSlotTokenizer.decode"]], "decode() (s3prl.dataio.encoder.tokenizer.charactertokenizer method)": [[21, "s3prl.dataio.encoder.tokenizer.CharacterTokenizer.decode"]], "decode() (s3prl.dataio.encoder.tokenizer.phonemetokenizer method)": [[21, "s3prl.dataio.encoder.tokenizer.PhonemeTokenizer.decode"]], "decode() (s3prl.dataio.encoder.tokenizer.subwordslottokenizer method)": [[21, "s3prl.dataio.encoder.tokenizer.SubwordSlotTokenizer.decode"]], "decode() (s3prl.dataio.encoder.tokenizer.subwordtokenizer method)": [[21, "s3prl.dataio.encoder.tokenizer.SubwordTokenizer.decode"]], "decode() (s3prl.dataio.encoder.tokenizer.wordtokenizer method)": [[21, "s3prl.dataio.encoder.tokenizer.WordTokenizer.decode"]], "default_phoneme_tokenizer() (in module s3prl.dataio.encoder.tokenizer)": [[21, "s3prl.dataio.encoder.tokenizer.default_phoneme_tokenizer"]], "encode() (s3prl.dataio.encoder.tokenizer.characterslottokenizer method)": [[21, "s3prl.dataio.encoder.tokenizer.CharacterSlotTokenizer.encode"]], "encode() (s3prl.dataio.encoder.tokenizer.charactertokenizer method)": [[21, "s3prl.dataio.encoder.tokenizer.CharacterTokenizer.encode"]], "encode() (s3prl.dataio.encoder.tokenizer.phonemetokenizer method)": [[21, "s3prl.dataio.encoder.tokenizer.PhonemeTokenizer.encode"]], "encode() (s3prl.dataio.encoder.tokenizer.subwordslottokenizer method)": [[21, "s3prl.dataio.encoder.tokenizer.SubwordSlotTokenizer.encode"]], "encode() (s3prl.dataio.encoder.tokenizer.subwordtokenizer method)": [[21, "s3prl.dataio.encoder.tokenizer.SubwordTokenizer.encode"]], "encode() (s3prl.dataio.encoder.tokenizer.wordtokenizer method)": [[21, "s3prl.dataio.encoder.tokenizer.WordTokenizer.encode"]], "eos_idx (s3prl.dataio.encoder.tokenizer.characterslottokenizer property)": [[21, "s3prl.dataio.encoder.tokenizer.CharacterSlotTokenizer.eos_idx"]], "eos_idx (s3prl.dataio.encoder.tokenizer.charactertokenizer property)": [[21, "s3prl.dataio.encoder.tokenizer.CharacterTokenizer.eos_idx"]], "eos_idx (s3prl.dataio.encoder.tokenizer.phonemetokenizer property)": [[21, "s3prl.dataio.encoder.tokenizer.PhonemeTokenizer.eos_idx"]], "eos_idx (s3prl.dataio.encoder.tokenizer.subwordslottokenizer property)": [[21, "s3prl.dataio.encoder.tokenizer.SubwordSlotTokenizer.eos_idx"]], "eos_idx (s3prl.dataio.encoder.tokenizer.subwordtokenizer property)": [[21, "s3prl.dataio.encoder.tokenizer.SubwordTokenizer.eos_idx"]], "eos_idx (s3prl.dataio.encoder.tokenizer.wordtokenizer property)": [[21, "s3prl.dataio.encoder.tokenizer.WordTokenizer.eos_idx"]], "idx_to_vocab() (s3prl.dataio.encoder.tokenizer.characterslottokenizer method)": [[21, "s3prl.dataio.encoder.tokenizer.CharacterSlotTokenizer.idx_to_vocab"]], "idx_to_vocab() (s3prl.dataio.encoder.tokenizer.charactertokenizer method)": [[21, "s3prl.dataio.encoder.tokenizer.CharacterTokenizer.idx_to_vocab"]], "idx_to_vocab() (s3prl.dataio.encoder.tokenizer.phonemetokenizer method)": [[21, "s3prl.dataio.encoder.tokenizer.PhonemeTokenizer.idx_to_vocab"]], "idx_to_vocab() (s3prl.dataio.encoder.tokenizer.wordtokenizer method)": [[21, "s3prl.dataio.encoder.tokenizer.WordTokenizer.idx_to_vocab"]], "load_from_file() (s3prl.dataio.encoder.tokenizer.characterslottokenizer class method)": [[21, "s3prl.dataio.encoder.tokenizer.CharacterSlotTokenizer.load_from_file"]], "load_from_file() (s3prl.dataio.encoder.tokenizer.charactertokenizer class method)": [[21, "s3prl.dataio.encoder.tokenizer.CharacterTokenizer.load_from_file"]], "load_from_file() (s3prl.dataio.encoder.tokenizer.phonemetokenizer class method)": [[21, "s3prl.dataio.encoder.tokenizer.PhonemeTokenizer.load_from_file"]], "load_from_file() (s3prl.dataio.encoder.tokenizer.subwordslottokenizer class method)": [[21, "s3prl.dataio.encoder.tokenizer.SubwordSlotTokenizer.load_from_file"]], "load_from_file() (s3prl.dataio.encoder.tokenizer.subwordtokenizer class method)": [[21, "s3prl.dataio.encoder.tokenizer.SubwordTokenizer.load_from_file"]], "load_from_file() (s3prl.dataio.encoder.tokenizer.wordtokenizer class method)": [[21, "s3prl.dataio.encoder.tokenizer.WordTokenizer.load_from_file"]], "load_tokenizer() (in module s3prl.dataio.encoder.tokenizer)": [[21, "s3prl.dataio.encoder.tokenizer.load_tokenizer"]], "pad_idx (s3prl.dataio.encoder.tokenizer.characterslottokenizer property)": [[21, "s3prl.dataio.encoder.tokenizer.CharacterSlotTokenizer.pad_idx"]], "pad_idx (s3prl.dataio.encoder.tokenizer.charactertokenizer property)": [[21, "s3prl.dataio.encoder.tokenizer.CharacterTokenizer.pad_idx"]], "pad_idx (s3prl.dataio.encoder.tokenizer.phonemetokenizer property)": [[21, "s3prl.dataio.encoder.tokenizer.PhonemeTokenizer.pad_idx"]], "pad_idx (s3prl.dataio.encoder.tokenizer.subwordslottokenizer property)": [[21, "s3prl.dataio.encoder.tokenizer.SubwordSlotTokenizer.pad_idx"]], "pad_idx (s3prl.dataio.encoder.tokenizer.subwordtokenizer property)": [[21, "s3prl.dataio.encoder.tokenizer.SubwordTokenizer.pad_idx"]], "pad_idx (s3prl.dataio.encoder.tokenizer.wordtokenizer property)": [[21, "s3prl.dataio.encoder.tokenizer.WordTokenizer.pad_idx"]], "s3prl.dataio.encoder.tokenizer": [[21, "module-s3prl.dataio.encoder.tokenizer"]], "token_type (s3prl.dataio.encoder.tokenizer.characterslottokenizer property)": [[21, "s3prl.dataio.encoder.tokenizer.CharacterSlotTokenizer.token_type"]], "token_type (s3prl.dataio.encoder.tokenizer.charactertokenizer property)": [[21, "s3prl.dataio.encoder.tokenizer.CharacterTokenizer.token_type"]], "token_type (s3prl.dataio.encoder.tokenizer.phonemetokenizer property)": [[21, "s3prl.dataio.encoder.tokenizer.PhonemeTokenizer.token_type"]], "token_type (s3prl.dataio.encoder.tokenizer.subwordslottokenizer property)": [[21, "s3prl.dataio.encoder.tokenizer.SubwordSlotTokenizer.token_type"]], "token_type (s3prl.dataio.encoder.tokenizer.subwordtokenizer property)": [[21, "s3prl.dataio.encoder.tokenizer.SubwordTokenizer.token_type"]], "token_type (s3prl.dataio.encoder.tokenizer.wordtokenizer property)": [[21, "s3prl.dataio.encoder.tokenizer.WordTokenizer.token_type"]], "unk_idx (s3prl.dataio.encoder.tokenizer.characterslottokenizer property)": [[21, "s3prl.dataio.encoder.tokenizer.CharacterSlotTokenizer.unk_idx"]], "unk_idx (s3prl.dataio.encoder.tokenizer.charactertokenizer property)": [[21, "s3prl.dataio.encoder.tokenizer.CharacterTokenizer.unk_idx"]], "unk_idx (s3prl.dataio.encoder.tokenizer.phonemetokenizer property)": [[21, "s3prl.dataio.encoder.tokenizer.PhonemeTokenizer.unk_idx"]], "unk_idx (s3prl.dataio.encoder.tokenizer.subwordslottokenizer property)": [[21, "s3prl.dataio.encoder.tokenizer.SubwordSlotTokenizer.unk_idx"]], "unk_idx (s3prl.dataio.encoder.tokenizer.subwordtokenizer property)": [[21, "s3prl.dataio.encoder.tokenizer.SubwordTokenizer.unk_idx"]], "unk_idx (s3prl.dataio.encoder.tokenizer.wordtokenizer property)": [[21, "s3prl.dataio.encoder.tokenizer.WordTokenizer.unk_idx"]], "vocab_size (s3prl.dataio.encoder.tokenizer.characterslottokenizer property)": [[21, "s3prl.dataio.encoder.tokenizer.CharacterSlotTokenizer.vocab_size"]], "vocab_size (s3prl.dataio.encoder.tokenizer.charactertokenizer property)": [[21, "s3prl.dataio.encoder.tokenizer.CharacterTokenizer.vocab_size"]], "vocab_size (s3prl.dataio.encoder.tokenizer.phonemetokenizer property)": [[21, "s3prl.dataio.encoder.tokenizer.PhonemeTokenizer.vocab_size"]], "vocab_size (s3prl.dataio.encoder.tokenizer.subwordslottokenizer property)": [[21, "s3prl.dataio.encoder.tokenizer.SubwordSlotTokenizer.vocab_size"]], "vocab_size (s3prl.dataio.encoder.tokenizer.subwordtokenizer property)": [[21, "s3prl.dataio.encoder.tokenizer.SubwordTokenizer.vocab_size"]], "vocab_size (s3prl.dataio.encoder.tokenizer.wordtokenizer property)": [[21, "s3prl.dataio.encoder.tokenizer.WordTokenizer.vocab_size"]], "vocab_to_idx() (s3prl.dataio.encoder.tokenizer.characterslottokenizer method)": [[21, "s3prl.dataio.encoder.tokenizer.CharacterSlotTokenizer.vocab_to_idx"]], "vocab_to_idx() (s3prl.dataio.encoder.tokenizer.charactertokenizer method)": [[21, "s3prl.dataio.encoder.tokenizer.CharacterTokenizer.vocab_to_idx"]], "vocab_to_idx() (s3prl.dataio.encoder.tokenizer.phonemetokenizer method)": [[21, "s3prl.dataio.encoder.tokenizer.PhonemeTokenizer.vocab_to_idx"]], "vocab_to_idx() (s3prl.dataio.encoder.tokenizer.wordtokenizer method)": [[21, "s3prl.dataio.encoder.tokenizer.WordTokenizer.vocab_to_idx"]], "generate_basic_vocab() (in module s3prl.dataio.encoder.vocabulary)": [[22, "s3prl.dataio.encoder.vocabulary.generate_basic_vocab"]], "generate_subword_vocab() (in module s3prl.dataio.encoder.vocabulary)": [[22, "s3prl.dataio.encoder.vocabulary.generate_subword_vocab"]], "generate_vocab() (in module s3prl.dataio.encoder.vocabulary)": [[22, "s3prl.dataio.encoder.vocabulary.generate_vocab"]], "s3prl.dataio.encoder.vocabulary": [[22, "module-s3prl.dataio.encoder.vocabulary"]], "balancedweightedsampler (class in s3prl.dataio.sampler)": [[23, "s3prl.dataio.sampler.BalancedWeightedSampler"]], "distributedbatchsamplerwrapper (class in s3prl.dataio.sampler)": [[23, "s3prl.dataio.sampler.DistributedBatchSamplerWrapper"]], "fixedbatchsizebatchsampler (class in s3prl.dataio.sampler)": [[23, "s3prl.dataio.sampler.FixedBatchSizeBatchSampler"]], "groupsameitemsampler (class in s3prl.dataio.sampler)": [[23, "s3prl.dataio.sampler.GroupSameItemSampler"]], "maxtimestampbatchsampler (class in s3prl.dataio.sampler)": [[23, "s3prl.dataio.sampler.MaxTimestampBatchSampler"]], "sortedbucketingsampler (class in s3prl.dataio.sampler)": [[23, "s3prl.dataio.sampler.SortedBucketingSampler"]], "sortedslicesampler (class in s3prl.dataio.sampler)": [[23, "s3prl.dataio.sampler.SortedSliceSampler"]], "s3prl.dataio.sampler": [[23, "module-s3prl.dataio.sampler"]], "set_epoch() (s3prl.dataio.sampler.balancedweightedsampler method)": [[23, "s3prl.dataio.sampler.BalancedWeightedSampler.set_epoch"]], "set_epoch() (s3prl.dataio.sampler.distributedbatchsamplerwrapper method)": [[23, "s3prl.dataio.sampler.DistributedBatchSamplerWrapper.set_epoch"]], "set_epoch() (s3prl.dataio.sampler.fixedbatchsizebatchsampler method)": [[23, "s3prl.dataio.sampler.FixedBatchSizeBatchSampler.set_epoch"]], "set_epoch() (s3prl.dataio.sampler.groupsameitemsampler method)": [[23, "s3prl.dataio.sampler.GroupSameItemSampler.set_epoch"]], "set_epoch() (s3prl.dataio.sampler.maxtimestampbatchsampler method)": [[23, "s3prl.dataio.sampler.MaxTimestampBatchSampler.set_epoch"]], "set_epoch() (s3prl.dataio.sampler.sortedbucketingsampler method)": [[23, "s3prl.dataio.sampler.SortedBucketingSampler.set_epoch"]], "set_epoch() (s3prl.dataio.sampler.sortedslicesampler method)": [[23, "s3prl.dataio.sampler.SortedSliceSampler.set_epoch"]], "balancedweightedsampler (class in s3prl.dataio.sampler.balanced_weighted_sampler)": [[24, "s3prl.dataio.sampler.balanced_weighted_sampler.BalancedWeightedSampler"]], "s3prl.dataio.sampler.balanced_weighted_sampler": [[24, "module-s3prl.dataio.sampler.balanced_weighted_sampler"]], "set_epoch() (s3prl.dataio.sampler.balanced_weighted_sampler.balancedweightedsampler method)": [[24, "s3prl.dataio.sampler.balanced_weighted_sampler.BalancedWeightedSampler.set_epoch"]], "distributedbatchsamplerwrapper (class in s3prl.dataio.sampler.distributed_sampler)": [[25, "s3prl.dataio.sampler.distributed_sampler.DistributedBatchSamplerWrapper"]], "s3prl.dataio.sampler.distributed_sampler": [[25, "module-s3prl.dataio.sampler.distributed_sampler"]], "set_epoch() (s3prl.dataio.sampler.distributed_sampler.distributedbatchsamplerwrapper method)": [[25, "s3prl.dataio.sampler.distributed_sampler.DistributedBatchSamplerWrapper.set_epoch"]], "fixedbatchsizebatchsampler (class in s3prl.dataio.sampler.fixed_batch_size_batch_sampler)": [[26, "s3prl.dataio.sampler.fixed_batch_size_batch_sampler.FixedBatchSizeBatchSampler"]], "s3prl.dataio.sampler.fixed_batch_size_batch_sampler": [[26, "module-s3prl.dataio.sampler.fixed_batch_size_batch_sampler"]], "set_epoch() (s3prl.dataio.sampler.fixed_batch_size_batch_sampler.fixedbatchsizebatchsampler method)": [[26, "s3prl.dataio.sampler.fixed_batch_size_batch_sampler.FixedBatchSizeBatchSampler.set_epoch"]], "groupsameitemsampler (class in s3prl.dataio.sampler.group_same_item_sampler)": [[27, "s3prl.dataio.sampler.group_same_item_sampler.GroupSameItemSampler"]], "s3prl.dataio.sampler.group_same_item_sampler": [[27, "module-s3prl.dataio.sampler.group_same_item_sampler"]], "set_epoch() (s3prl.dataio.sampler.group_same_item_sampler.groupsameitemsampler method)": [[27, "s3prl.dataio.sampler.group_same_item_sampler.GroupSameItemSampler.set_epoch"]], "maxtimestampbatchsampler (class in s3prl.dataio.sampler.max_timestamp_batch_sampler)": [[28, "s3prl.dataio.sampler.max_timestamp_batch_sampler.MaxTimestampBatchSampler"]], "s3prl.dataio.sampler.max_timestamp_batch_sampler": [[28, "module-s3prl.dataio.sampler.max_timestamp_batch_sampler"]], "set_epoch() (s3prl.dataio.sampler.max_timestamp_batch_sampler.maxtimestampbatchsampler method)": [[28, "s3prl.dataio.sampler.max_timestamp_batch_sampler.MaxTimestampBatchSampler.set_epoch"]], "sortedbucketingsampler (class in s3prl.dataio.sampler.sorted_sampler)": [[29, "s3prl.dataio.sampler.sorted_sampler.SortedBucketingSampler"]], "sortedslicesampler (class in s3prl.dataio.sampler.sorted_sampler)": [[29, "s3prl.dataio.sampler.sorted_sampler.SortedSliceSampler"]], "s3prl.dataio.sampler.sorted_sampler": [[29, "module-s3prl.dataio.sampler.sorted_sampler"]], "set_epoch() (s3prl.dataio.sampler.sorted_sampler.sortedbucketingsampler method)": [[29, "s3prl.dataio.sampler.sorted_sampler.SortedBucketingSampler.set_epoch"]], "set_epoch() (s3prl.dataio.sampler.sorted_sampler.sortedslicesampler method)": [[29, "s3prl.dataio.sampler.sorted_sampler.SortedSliceSampler.set_epoch"]], "accuracy() (in module s3prl.metric)": [[30, "s3prl.metric.accuracy"]], "calc_diarization_error() (in module s3prl.metric)": [[30, "s3prl.metric.calc_diarization_error"]], "cer() (in module s3prl.metric)": [[30, "s3prl.metric.cer"]], "compute_eer() (in module s3prl.metric)": [[30, "s3prl.metric.compute_eer"]], "compute_mindcf() (in module s3prl.metric)": [[30, "s3prl.metric.compute_minDCF"]], "per() (in module s3prl.metric)": [[30, "s3prl.metric.per"]], "s3prl.metric": [[30, "module-s3prl.metric"]], "slot_edit_f1() (in module s3prl.metric)": [[30, "s3prl.metric.slot_edit_f1"]], "slot_type_f1() (in module s3prl.metric)": [[30, "s3prl.metric.slot_type_f1"]], "slot_value_cer() (in module s3prl.metric)": [[30, "s3prl.metric.slot_value_cer"]], "slot_value_wer() (in module s3prl.metric)": [[30, "s3prl.metric.slot_value_wer"]], "ter() (in module s3prl.metric)": [[30, "s3prl.metric.ter"]], "wer() (in module s3prl.metric)": [[30, "s3prl.metric.wer"]], "accuracy() (in module s3prl.metric.common)": [[31, "s3prl.metric.common.accuracy"]], "cer() (in module s3prl.metric.common)": [[31, "s3prl.metric.common.cer"]], "compute_eer() (in module s3prl.metric.common)": [[31, "s3prl.metric.common.compute_eer"]], "compute_mindcf() (in module s3prl.metric.common)": [[31, "s3prl.metric.common.compute_minDCF"]], "per() (in module s3prl.metric.common)": [[31, "s3prl.metric.common.per"]], "s3prl.metric.common": [[31, "module-s3prl.metric.common"]], "ter() (in module s3prl.metric.common)": [[31, "s3prl.metric.common.ter"]], "wer() (in module s3prl.metric.common)": [[31, "s3prl.metric.common.wer"]], "calc_diarization_error() (in module s3prl.metric.diarization)": [[32, "s3prl.metric.diarization.calc_diarization_error"]], "s3prl.metric.diarization": [[32, "module-s3prl.metric.diarization"]], "s3prl.metric.slot_filling": [[33, "module-s3prl.metric.slot_filling"]], "slot_edit_f1() (in module s3prl.metric.slot_filling)": [[33, "s3prl.metric.slot_filling.slot_edit_f1"]], "slot_type_f1() (in module s3prl.metric.slot_filling)": [[33, "s3prl.metric.slot_filling.slot_type_f1"]], "slot_value_cer() (in module s3prl.metric.slot_filling)": [[33, "s3prl.metric.slot_filling.slot_value_cer"]], "slot_value_wer() (in module s3prl.metric.slot_filling)": [[33, "s3prl.metric.slot_filling.slot_value_wer"]], "beamdecoder (class in s3prl.nn)": [[34, "s3prl.nn.BeamDecoder"]], "featurizer (class in s3prl.nn)": [[34, "s3prl.nn.Featurizer"]], "framelevel (class in s3prl.nn)": [[34, "s3prl.nn.FrameLevel"]], "framelevellinear (class in s3prl.nn)": [[34, "s3prl.nn.FrameLevelLinear"]], "meanpooling (class in s3prl.nn)": [[34, "s3prl.nn.MeanPooling"]], "meanpoolinglinear (class in s3prl.nn)": [[34, "s3prl.nn.MeanPoolingLinear"]], "rnnencoder (class in s3prl.nn)": [[34, "s3prl.nn.RNNEncoder"]], "s3prlupstream (class in s3prl.nn)": [[34, "s3prl.nn.S3PRLUpstream"]], "superbdiarizationmodel (class in s3prl.nn)": [[34, "s3prl.nn.SuperbDiarizationModel"]], "superbxvector (class in s3prl.nn)": [[34, "s3prl.nn.SuperbXvector"]], "temporalaveragepooling (in module s3prl.nn)": [[34, "s3prl.nn.TemporalAveragePooling"]], "temporalstatisticspooling (class in s3prl.nn)": [[34, "s3prl.nn.TemporalStatisticsPooling"]], "utterancelevel (class in s3prl.nn)": [[34, "s3prl.nn.UtteranceLevel"]], "xvectorbackbone (class in s3prl.nn)": [[34, "s3prl.nn.XVectorBackbone"]], "amsoftmax (class in s3prl.nn)": [[34, "s3prl.nn.amsoftmax"]], "available_names() (s3prl.nn.s3prlupstream class method)": [[34, "s3prl.nn.S3PRLUpstream.available_names"]], "decode() (s3prl.nn.beamdecoder method)": [[34, "s3prl.nn.BeamDecoder.decode"]], "downsample_rate (s3prl.nn.featurizer property)": [[34, "s3prl.nn.Featurizer.downsample_rate"]], "downsample_rates (s3prl.nn.s3prlupstream property)": [[34, "s3prl.nn.S3PRLUpstream.downsample_rates"]], "dump_patches (s3prl.nn.featurizer attribute)": [[34, "s3prl.nn.Featurizer.dump_patches"]], "dump_patches (s3prl.nn.framelevel attribute)": [[34, "s3prl.nn.FrameLevel.dump_patches"]], "dump_patches (s3prl.nn.framelevellinear attribute)": [[34, "s3prl.nn.FrameLevelLinear.dump_patches"]], "dump_patches (s3prl.nn.meanpooling attribute)": [[34, "s3prl.nn.MeanPooling.dump_patches"]], "dump_patches (s3prl.nn.meanpoolinglinear attribute)": [[34, "s3prl.nn.MeanPoolingLinear.dump_patches"]], "dump_patches (s3prl.nn.rnnencoder attribute)": [[34, "s3prl.nn.RNNEncoder.dump_patches"]], "dump_patches (s3prl.nn.s3prlupstream attribute)": [[34, "s3prl.nn.S3PRLUpstream.dump_patches"]], "dump_patches (s3prl.nn.superbdiarizationmodel attribute)": [[34, "s3prl.nn.SuperbDiarizationModel.dump_patches"]], "dump_patches (s3prl.nn.superbxvector attribute)": [[34, "s3prl.nn.SuperbXvector.dump_patches"]], "dump_patches (s3prl.nn.temporalstatisticspooling attribute)": [[34, "s3prl.nn.TemporalStatisticsPooling.dump_patches"]], "dump_patches (s3prl.nn.utterancelevel attribute)": [[34, "s3prl.nn.UtteranceLevel.dump_patches"]], "dump_patches (s3prl.nn.xvectorbackbone attribute)": [[34, "s3prl.nn.XVectorBackbone.dump_patches"]], "dump_patches (s3prl.nn.amsoftmax attribute)": [[34, "s3prl.nn.amsoftmax.dump_patches"]], "dump_patches (s3prl.nn.softmax attribute)": [[34, "s3prl.nn.softmax.dump_patches"]], "forward() (s3prl.nn.featurizer method)": [[34, "s3prl.nn.Featurizer.forward"]], "forward() (s3prl.nn.framelevel method)": [[34, "s3prl.nn.FrameLevel.forward"]], "forward() (s3prl.nn.framelevellinear method)": [[34, "s3prl.nn.FrameLevelLinear.forward"]], "forward() (s3prl.nn.meanpooling method)": [[34, "s3prl.nn.MeanPooling.forward"]], "forward() (s3prl.nn.meanpoolinglinear method)": [[34, "s3prl.nn.MeanPoolingLinear.forward"]], "forward() (s3prl.nn.rnnencoder method)": [[34, "s3prl.nn.RNNEncoder.forward"]], "forward() (s3prl.nn.s3prlupstream method)": [[34, "s3prl.nn.S3PRLUpstream.forward"]], "forward() (s3prl.nn.superbdiarizationmodel method)": [[34, "s3prl.nn.SuperbDiarizationModel.forward"]], "forward() (s3prl.nn.superbxvector method)": [[34, "s3prl.nn.SuperbXvector.forward"]], "forward() (s3prl.nn.temporalstatisticspooling method)": [[34, "s3prl.nn.TemporalStatisticsPooling.forward"]], "forward() (s3prl.nn.utterancelevel method)": [[34, "s3prl.nn.UtteranceLevel.forward"]], "forward() (s3prl.nn.xvectorbackbone method)": [[34, "s3prl.nn.XVectorBackbone.forward"]], "forward() (s3prl.nn.amsoftmax method)": [[34, "s3prl.nn.amsoftmax.forward"]], "forward() (s3prl.nn.softmax method)": [[34, "s3prl.nn.softmax.forward"]], "get_timesteps() (s3prl.nn.beamdecoder method)": [[34, "s3prl.nn.BeamDecoder.get_timesteps"]], "get_tokens() (s3prl.nn.beamdecoder method)": [[34, "s3prl.nn.BeamDecoder.get_tokens"]], "hidden_sizes (s3prl.nn.s3prlupstream property)": [[34, "s3prl.nn.S3PRLUpstream.hidden_sizes"]], "input_size (s3prl.nn.framelevel property)": [[34, "s3prl.nn.FrameLevel.input_size"]], "input_size (s3prl.nn.framelevellinear property)": [[34, "s3prl.nn.FrameLevelLinear.input_size"]], "input_size (s3prl.nn.meanpooling property)": [[34, "s3prl.nn.MeanPooling.input_size"]], "input_size (s3prl.nn.meanpoolinglinear property)": [[34, "s3prl.nn.MeanPoolingLinear.input_size"]], "input_size (s3prl.nn.rnnencoder property)": [[34, "s3prl.nn.RNNEncoder.input_size"]], "input_size (s3prl.nn.superbdiarizationmodel property)": [[34, "s3prl.nn.SuperbDiarizationModel.input_size"]], "input_size (s3prl.nn.superbxvector property)": [[34, "s3prl.nn.SuperbXvector.input_size"]], "input_size (s3prl.nn.temporalstatisticspooling property)": [[34, "s3prl.nn.TemporalStatisticsPooling.input_size"]], "input_size (s3prl.nn.utterancelevel property)": [[34, "s3prl.nn.UtteranceLevel.input_size"]], "input_size (s3prl.nn.xvectorbackbone property)": [[34, "s3prl.nn.XVectorBackbone.input_size"]], "input_size (s3prl.nn.amsoftmax property)": [[34, "s3prl.nn.amsoftmax.input_size"]], "input_size (s3prl.nn.softmax property)": [[34, "s3prl.nn.softmax.input_size"]], "num_layers (s3prl.nn.s3prlupstream property)": [[34, "s3prl.nn.S3PRLUpstream.num_layers"]], "output_size (s3prl.nn.featurizer property)": [[34, "s3prl.nn.Featurizer.output_size"]], "output_size (s3prl.nn.framelevel property)": [[34, "s3prl.nn.FrameLevel.output_size"]], "output_size (s3prl.nn.framelevellinear property)": [[34, "s3prl.nn.FrameLevelLinear.output_size"]], "output_size (s3prl.nn.meanpooling property)": [[34, "s3prl.nn.MeanPooling.output_size"]], "output_size (s3prl.nn.meanpoolinglinear property)": [[34, "s3prl.nn.MeanPoolingLinear.output_size"]], "output_size (s3prl.nn.rnnencoder property)": [[34, "s3prl.nn.RNNEncoder.output_size"]], "output_size (s3prl.nn.superbdiarizationmodel property)": [[34, "s3prl.nn.SuperbDiarizationModel.output_size"]], "output_size (s3prl.nn.superbxvector property)": [[34, "s3prl.nn.SuperbXvector.output_size"]], "output_size (s3prl.nn.temporalstatisticspooling property)": [[34, "s3prl.nn.TemporalStatisticsPooling.output_size"]], "output_size (s3prl.nn.utterancelevel property)": [[34, "s3prl.nn.UtteranceLevel.output_size"]], "output_size (s3prl.nn.xvectorbackbone property)": [[34, "s3prl.nn.XVectorBackbone.output_size"]], "output_size (s3prl.nn.amsoftmax property)": [[34, "s3prl.nn.amsoftmax.output_size"]], "output_size (s3prl.nn.softmax property)": [[34, "s3prl.nn.softmax.output_size"]], "s3prl.nn": [[34, "module-s3prl.nn"]], "softmax (class in s3prl.nn)": [[34, "s3prl.nn.softmax"]], "training (s3prl.nn.featurizer attribute)": [[34, "s3prl.nn.Featurizer.training"]], "training (s3prl.nn.framelevel attribute)": [[34, "s3prl.nn.FrameLevel.training"]], "training (s3prl.nn.framelevellinear attribute)": [[34, "s3prl.nn.FrameLevelLinear.training"]], "training (s3prl.nn.meanpooling attribute)": [[34, "s3prl.nn.MeanPooling.training"]], "training (s3prl.nn.meanpoolinglinear attribute)": [[34, "s3prl.nn.MeanPoolingLinear.training"]], "training (s3prl.nn.rnnencoder attribute)": [[34, "s3prl.nn.RNNEncoder.training"]], "training (s3prl.nn.s3prlupstream attribute)": [[34, "s3prl.nn.S3PRLUpstream.training"]], "training (s3prl.nn.superbdiarizationmodel attribute)": [[34, "s3prl.nn.SuperbDiarizationModel.training"]], "training (s3prl.nn.superbxvector attribute)": [[34, "s3prl.nn.SuperbXvector.training"]], "training (s3prl.nn.temporalstatisticspooling attribute)": [[34, "s3prl.nn.TemporalStatisticsPooling.training"]], "training (s3prl.nn.utterancelevel attribute)": [[34, "s3prl.nn.UtteranceLevel.training"]], "training (s3prl.nn.xvectorbackbone attribute)": [[34, "s3prl.nn.XVectorBackbone.training"]], "training (s3prl.nn.amsoftmax attribute)": [[34, "s3prl.nn.amsoftmax.training"]], "training (s3prl.nn.softmax attribute)": [[34, "s3prl.nn.softmax.training"]], "beamdecoder (class in s3prl.nn.beam_decoder)": [[35, "s3prl.nn.beam_decoder.BeamDecoder"]], "decode() (s3prl.nn.beam_decoder.beamdecoder method)": [[35, "s3prl.nn.beam_decoder.BeamDecoder.decode"]], "get_timesteps() (s3prl.nn.beam_decoder.beamdecoder method)": [[35, "s3prl.nn.beam_decoder.BeamDecoder.get_timesteps"]], "get_tokens() (s3prl.nn.beam_decoder.beamdecoder method)": [[35, "s3prl.nn.beam_decoder.BeamDecoder.get_tokens"]], "s3prl.nn.beam_decoder": [[35, "module-s3prl.nn.beam_decoder"]], "framelevel (class in s3prl.nn.common)": [[36, "s3prl.nn.common.FrameLevel"]], "utterancelevel (class in s3prl.nn.common)": [[36, "s3prl.nn.common.UtteranceLevel"]], "dump_patches (s3prl.nn.common.framelevel attribute)": [[36, "s3prl.nn.common.FrameLevel.dump_patches"]], "dump_patches (s3prl.nn.common.utterancelevel attribute)": [[36, "s3prl.nn.common.UtteranceLevel.dump_patches"]], "forward() (s3prl.nn.common.framelevel method)": [[36, "s3prl.nn.common.FrameLevel.forward"]], "forward() (s3prl.nn.common.utterancelevel method)": [[36, "s3prl.nn.common.UtteranceLevel.forward"]], "input_size (s3prl.nn.common.framelevel property)": [[36, "s3prl.nn.common.FrameLevel.input_size"]], "input_size (s3prl.nn.common.utterancelevel property)": [[36, "s3prl.nn.common.UtteranceLevel.input_size"]], "output_size (s3prl.nn.common.framelevel property)": [[36, "s3prl.nn.common.FrameLevel.output_size"]], "output_size (s3prl.nn.common.utterancelevel property)": [[36, "s3prl.nn.common.UtteranceLevel.output_size"]], "s3prl.nn.common": [[36, "module-s3prl.nn.common"]], "training (s3prl.nn.common.framelevel attribute)": [[36, "s3prl.nn.common.FrameLevel.training"]], "training (s3prl.nn.common.utterancelevel attribute)": [[36, "s3prl.nn.common.UtteranceLevel.training"]], "hearfullyconnectedprediction (class in s3prl.nn.hear)": [[37, "s3prl.nn.hear.HearFullyConnectedPrediction"]], "dump_patches (s3prl.nn.hear.hearfullyconnectedprediction attribute)": [[37, "s3prl.nn.hear.HearFullyConnectedPrediction.dump_patches"]], "forward() (s3prl.nn.hear.hearfullyconnectedprediction method)": [[37, "s3prl.nn.hear.HearFullyConnectedPrediction.forward"]], "input_size (s3prl.nn.hear.hearfullyconnectedprediction property)": [[37, "s3prl.nn.hear.HearFullyConnectedPrediction.input_size"]], "output_size (s3prl.nn.hear.hearfullyconnectedprediction property)": [[37, "s3prl.nn.hear.HearFullyConnectedPrediction.output_size"]], "s3prl.nn.hear": [[37, "module-s3prl.nn.hear"]], "training (s3prl.nn.hear.hearfullyconnectedprediction attribute)": [[37, "s3prl.nn.hear.HearFullyConnectedPrediction.training"]], "absfeaturizer (class in s3prl.nn.interface)": [[38, "s3prl.nn.interface.AbsFeaturizer"]], "absframemodel (class in s3prl.nn.interface)": [[38, "s3prl.nn.interface.AbsFrameModel"]], "absupstream (class in s3prl.nn.interface)": [[38, "s3prl.nn.interface.AbsUpstream"]], "absutterancemodel (class in s3prl.nn.interface)": [[38, "s3prl.nn.interface.AbsUtteranceModel"]], "downsample_rate (s3prl.nn.interface.absfeaturizer property)": [[38, "s3prl.nn.interface.AbsFeaturizer.downsample_rate"]], "downsample_rates (s3prl.nn.interface.absupstream property)": [[38, "s3prl.nn.interface.AbsUpstream.downsample_rates"]], "dump_patches (s3prl.nn.interface.absfeaturizer attribute)": [[38, "s3prl.nn.interface.AbsFeaturizer.dump_patches"]], "dump_patches (s3prl.nn.interface.absframemodel attribute)": [[38, "s3prl.nn.interface.AbsFrameModel.dump_patches"]], "dump_patches (s3prl.nn.interface.absupstream attribute)": [[38, "s3prl.nn.interface.AbsUpstream.dump_patches"]], "dump_patches (s3prl.nn.interface.absutterancemodel attribute)": [[38, "s3prl.nn.interface.AbsUtteranceModel.dump_patches"]], "forward() (s3prl.nn.interface.absfeaturizer method)": [[38, "s3prl.nn.interface.AbsFeaturizer.forward"]], "forward() (s3prl.nn.interface.absframemodel method)": [[38, "s3prl.nn.interface.AbsFrameModel.forward"]], "forward() (s3prl.nn.interface.absupstream method)": [[38, "s3prl.nn.interface.AbsUpstream.forward"]], "forward() (s3prl.nn.interface.absutterancemodel method)": [[38, "s3prl.nn.interface.AbsUtteranceModel.forward"]], "hidden_sizes (s3prl.nn.interface.absupstream property)": [[38, "s3prl.nn.interface.AbsUpstream.hidden_sizes"]], "input_size (s3prl.nn.interface.absframemodel property)": [[38, "s3prl.nn.interface.AbsFrameModel.input_size"]], "input_size (s3prl.nn.interface.absutterancemodel property)": [[38, "s3prl.nn.interface.AbsUtteranceModel.input_size"]], "num_layer (s3prl.nn.interface.absupstream property)": [[38, "s3prl.nn.interface.AbsUpstream.num_layer"]], "output_size (s3prl.nn.interface.absfeaturizer property)": [[38, "s3prl.nn.interface.AbsFeaturizer.output_size"]], "output_size (s3prl.nn.interface.absframemodel property)": [[38, "s3prl.nn.interface.AbsFrameModel.output_size"]], "output_size (s3prl.nn.interface.absutterancemodel property)": [[38, "s3prl.nn.interface.AbsUtteranceModel.output_size"]], "s3prl.nn.interface": [[38, "module-s3prl.nn.interface"]], "training (s3prl.nn.interface.absfeaturizer attribute)": [[38, "s3prl.nn.interface.AbsFeaturizer.training"]], "training (s3prl.nn.interface.absframemodel attribute)": [[38, "s3prl.nn.interface.AbsFrameModel.training"]], "training (s3prl.nn.interface.absupstream attribute)": [[38, "s3prl.nn.interface.AbsUpstream.training"]], "training (s3prl.nn.interface.absutterancemodel attribute)": [[38, "s3prl.nn.interface.AbsUtteranceModel.training"]], "framelevellinear (class in s3prl.nn.linear)": [[39, "s3prl.nn.linear.FrameLevelLinear"]], "meanpoolinglinear (class in s3prl.nn.linear)": [[39, "s3prl.nn.linear.MeanPoolingLinear"]], "dump_patches (s3prl.nn.linear.framelevellinear attribute)": [[39, "s3prl.nn.linear.FrameLevelLinear.dump_patches"]], "dump_patches (s3prl.nn.linear.meanpoolinglinear attribute)": [[39, "s3prl.nn.linear.MeanPoolingLinear.dump_patches"]], "forward() (s3prl.nn.linear.framelevellinear method)": [[39, "s3prl.nn.linear.FrameLevelLinear.forward"]], "forward() (s3prl.nn.linear.meanpoolinglinear method)": [[39, "s3prl.nn.linear.MeanPoolingLinear.forward"]], "input_size (s3prl.nn.linear.framelevellinear property)": [[39, "s3prl.nn.linear.FrameLevelLinear.input_size"]], "input_size (s3prl.nn.linear.meanpoolinglinear property)": [[39, "s3prl.nn.linear.MeanPoolingLinear.input_size"]], "output_size (s3prl.nn.linear.framelevellinear property)": [[39, "s3prl.nn.linear.FrameLevelLinear.output_size"]], "output_size (s3prl.nn.linear.meanpoolinglinear property)": [[39, "s3prl.nn.linear.MeanPoolingLinear.output_size"]], "s3prl.nn.linear": [[39, "module-s3prl.nn.linear"]], "training (s3prl.nn.linear.framelevellinear attribute)": [[39, "s3prl.nn.linear.FrameLevelLinear.training"]], "training (s3prl.nn.linear.meanpoolinglinear attribute)": [[39, "s3prl.nn.linear.MeanPoolingLinear.training"]], "pit_loss() (in module s3prl.nn.pit)": [[40, "s3prl.nn.pit.pit_loss"]], "s3prl.nn.pit": [[40, "module-s3prl.nn.pit"]], "attentivestatisticspooling (class in s3prl.nn.pooling)": [[41, "s3prl.nn.pooling.AttentiveStatisticsPooling"]], "meanpooling (class in s3prl.nn.pooling)": [[41, "s3prl.nn.pooling.MeanPooling"]], "selfattentivepooling (class in s3prl.nn.pooling)": [[41, "s3prl.nn.pooling.SelfAttentivePooling"]], "temporalaveragepooling (in module s3prl.nn.pooling)": [[41, "s3prl.nn.pooling.TemporalAveragePooling"]], "temporalstatisticspooling (class in s3prl.nn.pooling)": [[41, "s3prl.nn.pooling.TemporalStatisticsPooling"]], "dump_patches (s3prl.nn.pooling.attentivestatisticspooling attribute)": [[41, "s3prl.nn.pooling.AttentiveStatisticsPooling.dump_patches"]], "dump_patches (s3prl.nn.pooling.meanpooling attribute)": [[41, "s3prl.nn.pooling.MeanPooling.dump_patches"]], "dump_patches (s3prl.nn.pooling.selfattentivepooling attribute)": [[41, "s3prl.nn.pooling.SelfAttentivePooling.dump_patches"]], "dump_patches (s3prl.nn.pooling.temporalstatisticspooling attribute)": [[41, "s3prl.nn.pooling.TemporalStatisticsPooling.dump_patches"]], "forward() (s3prl.nn.pooling.attentivestatisticspooling method)": [[41, "s3prl.nn.pooling.AttentiveStatisticsPooling.forward"]], "forward() (s3prl.nn.pooling.meanpooling method)": [[41, "s3prl.nn.pooling.MeanPooling.forward"]], "forward() (s3prl.nn.pooling.selfattentivepooling method)": [[41, "s3prl.nn.pooling.SelfAttentivePooling.forward"]], "forward() (s3prl.nn.pooling.temporalstatisticspooling method)": [[41, "s3prl.nn.pooling.TemporalStatisticsPooling.forward"]], "input_size (s3prl.nn.pooling.attentivestatisticspooling property)": [[41, "s3prl.nn.pooling.AttentiveStatisticsPooling.input_size"]], "input_size (s3prl.nn.pooling.meanpooling property)": [[41, "s3prl.nn.pooling.MeanPooling.input_size"]], "input_size (s3prl.nn.pooling.selfattentivepooling property)": [[41, "s3prl.nn.pooling.SelfAttentivePooling.input_size"]], "input_size (s3prl.nn.pooling.temporalstatisticspooling property)": [[41, "s3prl.nn.pooling.TemporalStatisticsPooling.input_size"]], "output_size (s3prl.nn.pooling.attentivestatisticspooling property)": [[41, "s3prl.nn.pooling.AttentiveStatisticsPooling.output_size"]], "output_size (s3prl.nn.pooling.meanpooling property)": [[41, "s3prl.nn.pooling.MeanPooling.output_size"]], "output_size (s3prl.nn.pooling.selfattentivepooling property)": [[41, "s3prl.nn.pooling.SelfAttentivePooling.output_size"]], "output_size (s3prl.nn.pooling.temporalstatisticspooling property)": [[41, "s3prl.nn.pooling.TemporalStatisticsPooling.output_size"]], "s3prl.nn.pooling": [[41, "module-s3prl.nn.pooling"]], "training (s3prl.nn.pooling.attentivestatisticspooling attribute)": [[41, "s3prl.nn.pooling.AttentiveStatisticsPooling.training"]], "training (s3prl.nn.pooling.meanpooling attribute)": [[41, "s3prl.nn.pooling.MeanPooling.training"]], "training (s3prl.nn.pooling.selfattentivepooling attribute)": [[41, "s3prl.nn.pooling.SelfAttentivePooling.training"]], "training (s3prl.nn.pooling.temporalstatisticspooling attribute)": [[41, "s3prl.nn.pooling.TemporalStatisticsPooling.training"]], "rnnencoder (class in s3prl.nn.rnn)": [[42, "s3prl.nn.rnn.RNNEncoder"]], "rnnlayer (class in s3prl.nn.rnn)": [[42, "s3prl.nn.rnn.RNNLayer"]], "superbdiarizationmodel (class in s3prl.nn.rnn)": [[42, "s3prl.nn.rnn.SuperbDiarizationModel"]], "dump_patches (s3prl.nn.rnn.rnnencoder attribute)": [[42, "s3prl.nn.rnn.RNNEncoder.dump_patches"]], "dump_patches (s3prl.nn.rnn.rnnlayer attribute)": [[42, "s3prl.nn.rnn.RNNLayer.dump_patches"]], "dump_patches (s3prl.nn.rnn.superbdiarizationmodel attribute)": [[42, "s3prl.nn.rnn.SuperbDiarizationModel.dump_patches"]], "forward() (s3prl.nn.rnn.rnnencoder method)": [[42, "s3prl.nn.rnn.RNNEncoder.forward"]], "forward() (s3prl.nn.rnn.rnnlayer method)": [[42, "s3prl.nn.rnn.RNNLayer.forward"]], "forward() (s3prl.nn.rnn.superbdiarizationmodel method)": [[42, "s3prl.nn.rnn.SuperbDiarizationModel.forward"]], "input_size (s3prl.nn.rnn.rnnencoder property)": [[42, "s3prl.nn.rnn.RNNEncoder.input_size"]], "input_size (s3prl.nn.rnn.rnnlayer property)": [[42, "s3prl.nn.rnn.RNNLayer.input_size"]], "input_size (s3prl.nn.rnn.superbdiarizationmodel property)": [[42, "s3prl.nn.rnn.SuperbDiarizationModel.input_size"]], "output_size (s3prl.nn.rnn.rnnencoder property)": [[42, "s3prl.nn.rnn.RNNEncoder.output_size"]], "output_size (s3prl.nn.rnn.rnnlayer property)": [[42, "s3prl.nn.rnn.RNNLayer.output_size"]], "output_size (s3prl.nn.rnn.superbdiarizationmodel property)": [[42, "s3prl.nn.rnn.SuperbDiarizationModel.output_size"]], "s3prl.nn.rnn": [[42, "module-s3prl.nn.rnn"]], "training (s3prl.nn.rnn.rnnencoder attribute)": [[42, "s3prl.nn.rnn.RNNEncoder.training"]], "training (s3prl.nn.rnn.rnnlayer attribute)": [[42, "s3prl.nn.rnn.RNNLayer.training"]], "training (s3prl.nn.rnn.superbdiarizationmodel attribute)": [[42, "s3prl.nn.rnn.SuperbDiarizationModel.training"]], "amsoftmax (class in s3prl.nn.speaker_loss)": [[43, "s3prl.nn.speaker_loss.amsoftmax"]], "dump_patches (s3prl.nn.speaker_loss.amsoftmax attribute)": [[43, "s3prl.nn.speaker_loss.amsoftmax.dump_patches"]], "dump_patches (s3prl.nn.speaker_loss.softmax attribute)": [[43, "s3prl.nn.speaker_loss.softmax.dump_patches"]], "forward() (s3prl.nn.speaker_loss.amsoftmax method)": [[43, "s3prl.nn.speaker_loss.amsoftmax.forward"]], "forward() (s3prl.nn.speaker_loss.softmax method)": [[43, "s3prl.nn.speaker_loss.softmax.forward"]], "input_size (s3prl.nn.speaker_loss.amsoftmax property)": [[43, "s3prl.nn.speaker_loss.amsoftmax.input_size"]], "input_size (s3prl.nn.speaker_loss.softmax property)": [[43, "s3prl.nn.speaker_loss.softmax.input_size"]], "output_size (s3prl.nn.speaker_loss.amsoftmax property)": [[43, "s3prl.nn.speaker_loss.amsoftmax.output_size"]], "output_size (s3prl.nn.speaker_loss.softmax property)": [[43, "s3prl.nn.speaker_loss.softmax.output_size"]], "s3prl.nn.speaker_loss": [[43, "module-s3prl.nn.speaker_loss"]], "softmax (class in s3prl.nn.speaker_loss)": [[43, "s3prl.nn.speaker_loss.softmax"]], "training (s3prl.nn.speaker_loss.amsoftmax attribute)": [[43, "s3prl.nn.speaker_loss.amsoftmax.training"]], "training (s3prl.nn.speaker_loss.softmax attribute)": [[43, "s3prl.nn.speaker_loss.softmax.training"]], "ecapa_tdnn (class in s3prl.nn.speaker_model)": [[44, "s3prl.nn.speaker_model.ECAPA_TDNN"]], "speakerembeddingextractor (class in s3prl.nn.speaker_model)": [[44, "s3prl.nn.speaker_model.SpeakerEmbeddingExtractor"]], "superbxvector (class in s3prl.nn.speaker_model)": [[44, "s3prl.nn.speaker_model.SuperbXvector"]], "tdnn (class in s3prl.nn.speaker_model)": [[44, "s3prl.nn.speaker_model.TDNN"]], "xvectorbackbone (class in s3prl.nn.speaker_model)": [[44, "s3prl.nn.speaker_model.XVectorBackbone"]], "dump_patches (s3prl.nn.speaker_model.ecapa_tdnn attribute)": [[44, "s3prl.nn.speaker_model.ECAPA_TDNN.dump_patches"]], "dump_patches (s3prl.nn.speaker_model.speakerembeddingextractor attribute)": [[44, "s3prl.nn.speaker_model.SpeakerEmbeddingExtractor.dump_patches"]], "dump_patches (s3prl.nn.speaker_model.superbxvector attribute)": [[44, "s3prl.nn.speaker_model.SuperbXvector.dump_patches"]], "dump_patches (s3prl.nn.speaker_model.tdnn attribute)": [[44, "s3prl.nn.speaker_model.TDNN.dump_patches"]], "dump_patches (s3prl.nn.speaker_model.xvectorbackbone attribute)": [[44, "s3prl.nn.speaker_model.XVectorBackbone.dump_patches"]], "forward() (s3prl.nn.speaker_model.ecapa_tdnn method)": [[44, "s3prl.nn.speaker_model.ECAPA_TDNN.forward"]], "forward() (s3prl.nn.speaker_model.speakerembeddingextractor method)": [[44, "s3prl.nn.speaker_model.SpeakerEmbeddingExtractor.forward"]], "forward() (s3prl.nn.speaker_model.superbxvector method)": [[44, "s3prl.nn.speaker_model.SuperbXvector.forward"]], "forward() (s3prl.nn.speaker_model.tdnn method)": [[44, "s3prl.nn.speaker_model.TDNN.forward"]], "forward() (s3prl.nn.speaker_model.xvectorbackbone method)": [[44, "s3prl.nn.speaker_model.XVectorBackbone.forward"]], "input_size (s3prl.nn.speaker_model.ecapa_tdnn property)": [[44, "s3prl.nn.speaker_model.ECAPA_TDNN.input_size"]], "input_size (s3prl.nn.speaker_model.speakerembeddingextractor property)": [[44, "s3prl.nn.speaker_model.SpeakerEmbeddingExtractor.input_size"]], "input_size (s3prl.nn.speaker_model.superbxvector property)": [[44, "s3prl.nn.speaker_model.SuperbXvector.input_size"]], "input_size (s3prl.nn.speaker_model.tdnn property)": [[44, "s3prl.nn.speaker_model.TDNN.input_size"]], "input_size (s3prl.nn.speaker_model.xvectorbackbone property)": [[44, "s3prl.nn.speaker_model.XVectorBackbone.input_size"]], "output_size (s3prl.nn.speaker_model.ecapa_tdnn property)": [[44, "s3prl.nn.speaker_model.ECAPA_TDNN.output_size"]], "output_size (s3prl.nn.speaker_model.speakerembeddingextractor property)": [[44, "s3prl.nn.speaker_model.SpeakerEmbeddingExtractor.output_size"]], "output_size (s3prl.nn.speaker_model.superbxvector property)": [[44, "s3prl.nn.speaker_model.SuperbXvector.output_size"]], "output_size (s3prl.nn.speaker_model.tdnn property)": [[44, "s3prl.nn.speaker_model.TDNN.output_size"]], "output_size (s3prl.nn.speaker_model.xvectorbackbone property)": [[44, "s3prl.nn.speaker_model.XVectorBackbone.output_size"]], "s3prl.nn.speaker_model": [[44, "module-s3prl.nn.speaker_model"]], "training (s3prl.nn.speaker_model.ecapa_tdnn attribute)": [[44, "s3prl.nn.speaker_model.ECAPA_TDNN.training"]], "training (s3prl.nn.speaker_model.speakerembeddingextractor attribute)": [[44, "s3prl.nn.speaker_model.SpeakerEmbeddingExtractor.training"]], "training (s3prl.nn.speaker_model.superbxvector attribute)": [[44, "s3prl.nn.speaker_model.SuperbXvector.training"]], "training (s3prl.nn.speaker_model.tdnn attribute)": [[44, "s3prl.nn.speaker_model.TDNN.training"]], "training (s3prl.nn.speaker_model.xvectorbackbone attribute)": [[44, "s3prl.nn.speaker_model.XVectorBackbone.training"]], "modelwithspecaug (class in s3prl.nn.specaug)": [[45, "s3prl.nn.specaug.ModelWithSpecaug"]], "specaug (class in s3prl.nn.specaug)": [[45, "s3prl.nn.specaug.SpecAug"]], "apply_specaug() (s3prl.nn.specaug.specaug method)": [[45, "s3prl.nn.specaug.SpecAug.apply_specaug"]], "dump_patches (s3prl.nn.specaug.modelwithspecaug attribute)": [[45, "s3prl.nn.specaug.ModelWithSpecaug.dump_patches"]], "dump_patches (s3prl.nn.specaug.specaug attribute)": [[45, "s3prl.nn.specaug.SpecAug.dump_patches"]], "forward() (s3prl.nn.specaug.modelwithspecaug method)": [[45, "s3prl.nn.specaug.ModelWithSpecaug.forward"]], "forward() (s3prl.nn.specaug.specaug method)": [[45, "s3prl.nn.specaug.SpecAug.forward"]], "input_size (s3prl.nn.specaug.modelwithspecaug property)": [[45, "s3prl.nn.specaug.ModelWithSpecaug.input_size"]], "output_size (s3prl.nn.specaug.modelwithspecaug property)": [[45, "s3prl.nn.specaug.ModelWithSpecaug.output_size"]], "s3prl.nn.specaug": [[45, "module-s3prl.nn.specaug"]], "training (s3prl.nn.specaug.modelwithspecaug attribute)": [[45, "s3prl.nn.specaug.ModelWithSpecaug.training"]], "training (s3prl.nn.specaug.specaug attribute)": [[45, "s3prl.nn.specaug.SpecAug.training"]], "featurizer (class in s3prl.nn.upstream)": [[46, "s3prl.nn.upstream.Featurizer"]], "s3prlupstream (class in s3prl.nn.upstream)": [[46, "s3prl.nn.upstream.S3PRLUpstream"]], "upstreamdownstreammodel (class in s3prl.nn.upstream)": [[46, "s3prl.nn.upstream.UpstreamDownstreamModel"]], "available_names() (s3prl.nn.upstream.s3prlupstream class method)": [[46, "s3prl.nn.upstream.S3PRLUpstream.available_names"]], "downsample_rate (s3prl.nn.upstream.featurizer property)": [[46, "s3prl.nn.upstream.Featurizer.downsample_rate"]], "downsample_rate (s3prl.nn.upstream.upstreamdownstreammodel property)": [[46, "s3prl.nn.upstream.UpstreamDownstreamModel.downsample_rate"]], "downsample_rates (s3prl.nn.upstream.s3prlupstream property)": [[46, "s3prl.nn.upstream.S3PRLUpstream.downsample_rates"]], "dump_patches (s3prl.nn.upstream.featurizer attribute)": [[46, "s3prl.nn.upstream.Featurizer.dump_patches"]], "dump_patches (s3prl.nn.upstream.s3prlupstream attribute)": [[46, "s3prl.nn.upstream.S3PRLUpstream.dump_patches"]], "dump_patches (s3prl.nn.upstream.upstreamdownstreammodel attribute)": [[46, "s3prl.nn.upstream.UpstreamDownstreamModel.dump_patches"]], "forward() (s3prl.nn.upstream.featurizer method)": [[46, "s3prl.nn.upstream.Featurizer.forward"]], "forward() (s3prl.nn.upstream.s3prlupstream method)": [[46, "s3prl.nn.upstream.S3PRLUpstream.forward"]], "forward() (s3prl.nn.upstream.upstreamdownstreammodel method)": [[46, "s3prl.nn.upstream.UpstreamDownstreamModel.forward"]], "hidden_sizes (s3prl.nn.upstream.s3prlupstream property)": [[46, "s3prl.nn.upstream.S3PRLUpstream.hidden_sizes"]], "input_size (s3prl.nn.upstream.upstreamdownstreammodel property)": [[46, "s3prl.nn.upstream.UpstreamDownstreamModel.input_size"]], "num_layers (s3prl.nn.upstream.s3prlupstream property)": [[46, "s3prl.nn.upstream.S3PRLUpstream.num_layers"]], "output_size (s3prl.nn.upstream.featurizer property)": [[46, "s3prl.nn.upstream.Featurizer.output_size"]], "output_size (s3prl.nn.upstream.upstreamdownstreammodel property)": [[46, "s3prl.nn.upstream.UpstreamDownstreamModel.output_size"]], "s3prl.nn.upstream": [[46, "module-s3prl.nn.upstream"]], "training (s3prl.nn.upstream.featurizer attribute)": [[46, "s3prl.nn.upstream.Featurizer.training"]], "training (s3prl.nn.upstream.s3prlupstream attribute)": [[46, "s3prl.nn.upstream.S3PRLUpstream.training"]], "training (s3prl.nn.upstream.upstreamdownstreammodel attribute)": [[46, "s3prl.nn.upstream.UpstreamDownstreamModel.training"]], "hearbeijingopera (class in s3prl.problem)": [[47, "s3prl.problem.HearBeijingOpera"]], "hearcremad (class in s3prl.problem)": [[47, "s3prl.problem.HearCremaD"]], "heardcase2016task2 (class in s3prl.problem)": [[47, "s3prl.problem.HearDcase2016Task2"]], "hearesc50 (class in s3prl.problem)": [[47, "s3prl.problem.HearESC50"]], "hearfsd (class in s3prl.problem)": [[47, "s3prl.problem.HearFSD"]], "heargsc5hr (class in s3prl.problem)": [[47, "s3prl.problem.HearGSC5hr"]], "heargtzan (class in s3prl.problem)": [[47, "s3prl.problem.HearGtzan"]], "heargtzanmusicspeech (class in s3prl.problem)": [[47, "s3prl.problem.HearGtzanMusicSpeech"]], "heargunshot (class in s3prl.problem)": [[47, "s3prl.problem.HearGunshot"]], "hearlibricount (class in s3prl.problem)": [[47, "s3prl.problem.HearLibriCount"]], "hearmaestro (class in s3prl.problem)": [[47, "s3prl.problem.HearMaestro"]], "hearnsynth5hr (class in s3prl.problem)": [[47, "s3prl.problem.HearNsynth5hr"]], "hearstroke (class in s3prl.problem)": [[47, "s3prl.problem.HearStroke"]], "heartonic (class in s3prl.problem)": [[47, "s3prl.problem.HearTonic"]], "hearvocal (class in s3prl.problem)": [[47, "s3prl.problem.HearVocal"]], "hearvoxlingual (class in s3prl.problem)": [[47, "s3prl.problem.HearVoxLingual"]], "superbasr (class in s3prl.problem)": [[47, "s3prl.problem.SuperbASR"]], "superbasv (class in s3prl.problem)": [[47, "s3prl.problem.SuperbASV"]], "superber (class in s3prl.problem)": [[47, "s3prl.problem.SuperbER"]], "superbic (class in s3prl.problem)": [[47, "s3prl.problem.SuperbIC"]], "superbks (class in s3prl.problem)": [[47, "s3prl.problem.SuperbKS"]], "superbpr (class in s3prl.problem)": [[47, "s3prl.problem.SuperbPR"]], "superbsd (class in s3prl.problem)": [[47, "s3prl.problem.SuperbSD"]], "superbsf (class in s3prl.problem)": [[47, "s3prl.problem.SuperbSF"]], "superbsid (class in s3prl.problem)": [[47, "s3prl.problem.SuperbSID"]], "build_batch_sampler() (s3prl.problem.hearbeijingopera method)": [[47, "s3prl.problem.HearBeijingOpera.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.hearcremad method)": [[47, "s3prl.problem.HearCremaD.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.heardcase2016task2 method)": [[47, "s3prl.problem.HearDcase2016Task2.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.hearesc50 method)": [[47, "s3prl.problem.HearESC50.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.hearfsd method)": [[47, "s3prl.problem.HearFSD.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.heargsc5hr method)": [[47, "s3prl.problem.HearGSC5hr.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.heargtzan method)": [[47, "s3prl.problem.HearGtzan.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.heargtzanmusicspeech method)": [[47, "s3prl.problem.HearGtzanMusicSpeech.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.heargunshot method)": [[47, "s3prl.problem.HearGunshot.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.hearlibricount method)": [[47, "s3prl.problem.HearLibriCount.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.hearmaestro method)": [[47, "s3prl.problem.HearMaestro.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.hearnsynth5hr method)": [[47, "s3prl.problem.HearNsynth5hr.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.hearstroke method)": [[47, "s3prl.problem.HearStroke.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.heartonic method)": [[47, "s3prl.problem.HearTonic.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.hearvocal method)": [[47, "s3prl.problem.HearVocal.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.hearvoxlingual method)": [[47, "s3prl.problem.HearVoxLingual.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.superbasr method)": [[47, "s3prl.problem.SuperbASR.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.superbasv method)": [[47, "s3prl.problem.SuperbASV.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.superber method)": [[47, "s3prl.problem.SuperbER.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.superbic method)": [[47, "s3prl.problem.SuperbIC.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.superbks method)": [[47, "s3prl.problem.SuperbKS.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.superbpr method)": [[47, "s3prl.problem.SuperbPR.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.superbsd method)": [[47, "s3prl.problem.SuperbSD.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.superbsf method)": [[47, "s3prl.problem.SuperbSF.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.superbsid method)": [[47, "s3prl.problem.SuperbSID.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.hearbeijingopera method)": [[47, "s3prl.problem.HearBeijingOpera.build_collate_fn"]], "build_collate_fn() (s3prl.problem.hearcremad method)": [[47, "s3prl.problem.HearCremaD.build_collate_fn"]], "build_collate_fn() (s3prl.problem.heardcase2016task2 method)": [[47, "s3prl.problem.HearDcase2016Task2.build_collate_fn"]], "build_collate_fn() (s3prl.problem.hearesc50 method)": [[47, "s3prl.problem.HearESC50.build_collate_fn"]], "build_collate_fn() (s3prl.problem.hearfsd method)": [[47, "s3prl.problem.HearFSD.build_collate_fn"]], "build_collate_fn() (s3prl.problem.heargsc5hr method)": [[47, "s3prl.problem.HearGSC5hr.build_collate_fn"]], "build_collate_fn() (s3prl.problem.heargtzan method)": [[47, "s3prl.problem.HearGtzan.build_collate_fn"]], "build_collate_fn() (s3prl.problem.heargtzanmusicspeech method)": [[47, "s3prl.problem.HearGtzanMusicSpeech.build_collate_fn"]], "build_collate_fn() (s3prl.problem.heargunshot method)": [[47, "s3prl.problem.HearGunshot.build_collate_fn"]], "build_collate_fn() (s3prl.problem.hearlibricount method)": [[47, "s3prl.problem.HearLibriCount.build_collate_fn"]], "build_collate_fn() (s3prl.problem.hearmaestro method)": [[47, "s3prl.problem.HearMaestro.build_collate_fn"]], "build_collate_fn() (s3prl.problem.hearnsynth5hr method)": [[47, "s3prl.problem.HearNsynth5hr.build_collate_fn"]], "build_collate_fn() (s3prl.problem.hearstroke method)": [[47, "s3prl.problem.HearStroke.build_collate_fn"]], "build_collate_fn() (s3prl.problem.heartonic method)": [[47, "s3prl.problem.HearTonic.build_collate_fn"]], "build_collate_fn() (s3prl.problem.hearvocal method)": [[47, "s3prl.problem.HearVocal.build_collate_fn"]], "build_collate_fn() (s3prl.problem.hearvoxlingual method)": [[47, "s3prl.problem.HearVoxLingual.build_collate_fn"]], "build_collate_fn() (s3prl.problem.superbasr method)": [[47, "s3prl.problem.SuperbASR.build_collate_fn"]], "build_collate_fn() (s3prl.problem.superbasv method)": [[47, "s3prl.problem.SuperbASV.build_collate_fn"]], "build_collate_fn() (s3prl.problem.superber method)": [[47, "s3prl.problem.SuperbER.build_collate_fn"]], "build_collate_fn() (s3prl.problem.superbic method)": [[47, "s3prl.problem.SuperbIC.build_collate_fn"]], "build_collate_fn() (s3prl.problem.superbks method)": [[47, "s3prl.problem.SuperbKS.build_collate_fn"]], "build_collate_fn() (s3prl.problem.superbpr method)": [[47, "s3prl.problem.SuperbPR.build_collate_fn"]], "build_collate_fn() (s3prl.problem.superbsd method)": [[47, "s3prl.problem.SuperbSD.build_collate_fn"]], "build_collate_fn() (s3prl.problem.superbsf method)": [[47, "s3prl.problem.SuperbSF.build_collate_fn"]], "build_collate_fn() (s3prl.problem.superbsid method)": [[47, "s3prl.problem.SuperbSID.build_collate_fn"]], "build_dataset() (s3prl.problem.hearbeijingopera method)": [[47, "s3prl.problem.HearBeijingOpera.build_dataset"]], "build_dataset() (s3prl.problem.hearcremad method)": [[47, "s3prl.problem.HearCremaD.build_dataset"]], "build_dataset() (s3prl.problem.heardcase2016task2 method)": [[47, "s3prl.problem.HearDcase2016Task2.build_dataset"]], "build_dataset() (s3prl.problem.hearesc50 method)": [[47, "s3prl.problem.HearESC50.build_dataset"]], "build_dataset() (s3prl.problem.hearfsd method)": [[47, "s3prl.problem.HearFSD.build_dataset"]], "build_dataset() (s3prl.problem.heargsc5hr method)": [[47, "s3prl.problem.HearGSC5hr.build_dataset"]], "build_dataset() (s3prl.problem.heargtzan method)": [[47, "s3prl.problem.HearGtzan.build_dataset"]], "build_dataset() (s3prl.problem.heargtzanmusicspeech method)": [[47, "s3prl.problem.HearGtzanMusicSpeech.build_dataset"]], "build_dataset() (s3prl.problem.heargunshot method)": [[47, "s3prl.problem.HearGunshot.build_dataset"]], "build_dataset() (s3prl.problem.hearlibricount method)": [[47, "s3prl.problem.HearLibriCount.build_dataset"]], "build_dataset() (s3prl.problem.hearmaestro method)": [[47, "s3prl.problem.HearMaestro.build_dataset"]], "build_dataset() (s3prl.problem.hearnsynth5hr method)": [[47, "s3prl.problem.HearNsynth5hr.build_dataset"]], "build_dataset() (s3prl.problem.hearstroke method)": [[47, "s3prl.problem.HearStroke.build_dataset"]], "build_dataset() (s3prl.problem.heartonic method)": [[47, "s3prl.problem.HearTonic.build_dataset"]], "build_dataset() (s3prl.problem.hearvocal method)": [[47, "s3prl.problem.HearVocal.build_dataset"]], "build_dataset() (s3prl.problem.hearvoxlingual method)": [[47, "s3prl.problem.HearVoxLingual.build_dataset"]], "build_dataset() (s3prl.problem.superbasr method)": [[47, "s3prl.problem.SuperbASR.build_dataset"]], "build_dataset() (s3prl.problem.superbasv method)": [[47, "s3prl.problem.SuperbASV.build_dataset"]], "build_dataset() (s3prl.problem.superber method)": [[47, "s3prl.problem.SuperbER.build_dataset"]], "build_dataset() (s3prl.problem.superbic method)": [[47, "s3prl.problem.SuperbIC.build_dataset"]], "build_dataset() (s3prl.problem.superbks method)": [[47, "s3prl.problem.SuperbKS.build_dataset"]], "build_dataset() (s3prl.problem.superbpr method)": [[47, "s3prl.problem.SuperbPR.build_dataset"]], "build_dataset() (s3prl.problem.superbsd method)": [[47, "s3prl.problem.SuperbSD.build_dataset"]], "build_dataset() (s3prl.problem.superbsf method)": [[47, "s3prl.problem.SuperbSF.build_dataset"]], "build_dataset() (s3prl.problem.superbsid method)": [[47, "s3prl.problem.SuperbSID.build_dataset"]], "build_downstream() (s3prl.problem.hearbeijingopera method)": [[47, "s3prl.problem.HearBeijingOpera.build_downstream"]], "build_downstream() (s3prl.problem.hearcremad method)": [[47, "s3prl.problem.HearCremaD.build_downstream"]], "build_downstream() (s3prl.problem.heardcase2016task2 method)": [[47, "s3prl.problem.HearDcase2016Task2.build_downstream"]], "build_downstream() (s3prl.problem.hearesc50 method)": [[47, "s3prl.problem.HearESC50.build_downstream"]], "build_downstream() (s3prl.problem.hearfsd method)": [[47, "s3prl.problem.HearFSD.build_downstream"]], "build_downstream() (s3prl.problem.heargsc5hr method)": [[47, "s3prl.problem.HearGSC5hr.build_downstream"]], "build_downstream() (s3prl.problem.heargtzan method)": [[47, "s3prl.problem.HearGtzan.build_downstream"]], "build_downstream() (s3prl.problem.heargtzanmusicspeech method)": [[47, "s3prl.problem.HearGtzanMusicSpeech.build_downstream"]], "build_downstream() (s3prl.problem.heargunshot method)": [[47, "s3prl.problem.HearGunshot.build_downstream"]], "build_downstream() (s3prl.problem.hearlibricount method)": [[47, "s3prl.problem.HearLibriCount.build_downstream"]], "build_downstream() (s3prl.problem.hearmaestro method)": [[47, "s3prl.problem.HearMaestro.build_downstream"]], "build_downstream() (s3prl.problem.hearnsynth5hr method)": [[47, "s3prl.problem.HearNsynth5hr.build_downstream"]], "build_downstream() (s3prl.problem.hearstroke method)": [[47, "s3prl.problem.HearStroke.build_downstream"]], "build_downstream() (s3prl.problem.heartonic method)": [[47, "s3prl.problem.HearTonic.build_downstream"]], "build_downstream() (s3prl.problem.hearvocal method)": [[47, "s3prl.problem.HearVocal.build_downstream"]], "build_downstream() (s3prl.problem.hearvoxlingual method)": [[47, "s3prl.problem.HearVoxLingual.build_downstream"]], "build_downstream() (s3prl.problem.superbasr method)": [[47, "s3prl.problem.SuperbASR.build_downstream"]], "build_downstream() (s3prl.problem.superbasv method)": [[47, "s3prl.problem.SuperbASV.build_downstream"]], "build_downstream() (s3prl.problem.superber method)": [[47, "s3prl.problem.SuperbER.build_downstream"]], "build_downstream() (s3prl.problem.superbic method)": [[47, "s3prl.problem.SuperbIC.build_downstream"]], "build_downstream() (s3prl.problem.superbks method)": [[47, "s3prl.problem.SuperbKS.build_downstream"]], "build_downstream() (s3prl.problem.superbpr method)": [[47, "s3prl.problem.SuperbPR.build_downstream"]], "build_downstream() (s3prl.problem.superbsd method)": [[47, "s3prl.problem.SuperbSD.build_downstream"]], "build_downstream() (s3prl.problem.superbsf method)": [[47, "s3prl.problem.SuperbSF.build_downstream"]], "build_downstream() (s3prl.problem.superbsid method)": [[47, "s3prl.problem.SuperbSID.build_downstream"]], "build_encoder() (s3prl.problem.hearbeijingopera method)": [[47, "s3prl.problem.HearBeijingOpera.build_encoder"]], "build_encoder() (s3prl.problem.hearcremad method)": [[47, "s3prl.problem.HearCremaD.build_encoder"]], "build_encoder() (s3prl.problem.heardcase2016task2 method)": [[47, "s3prl.problem.HearDcase2016Task2.build_encoder"]], "build_encoder() (s3prl.problem.hearesc50 method)": [[47, "s3prl.problem.HearESC50.build_encoder"]], "build_encoder() (s3prl.problem.hearfsd method)": [[47, "s3prl.problem.HearFSD.build_encoder"]], "build_encoder() (s3prl.problem.heargsc5hr method)": [[47, "s3prl.problem.HearGSC5hr.build_encoder"]], "build_encoder() (s3prl.problem.heargtzan method)": [[47, "s3prl.problem.HearGtzan.build_encoder"]], "build_encoder() (s3prl.problem.heargtzanmusicspeech method)": [[47, "s3prl.problem.HearGtzanMusicSpeech.build_encoder"]], "build_encoder() (s3prl.problem.heargunshot method)": [[47, "s3prl.problem.HearGunshot.build_encoder"]], "build_encoder() (s3prl.problem.hearlibricount method)": [[47, "s3prl.problem.HearLibriCount.build_encoder"]], "build_encoder() (s3prl.problem.hearmaestro method)": [[47, "s3prl.problem.HearMaestro.build_encoder"]], "build_encoder() (s3prl.problem.hearnsynth5hr method)": [[47, "s3prl.problem.HearNsynth5hr.build_encoder"]], "build_encoder() (s3prl.problem.hearstroke method)": [[47, "s3prl.problem.HearStroke.build_encoder"]], "build_encoder() (s3prl.problem.heartonic method)": [[47, "s3prl.problem.HearTonic.build_encoder"]], "build_encoder() (s3prl.problem.hearvocal method)": [[47, "s3prl.problem.HearVocal.build_encoder"]], "build_encoder() (s3prl.problem.hearvoxlingual method)": [[47, "s3prl.problem.HearVoxLingual.build_encoder"]], "build_encoder() (s3prl.problem.superbasv method)": [[47, "s3prl.problem.SuperbASV.build_encoder"]], "build_encoder() (s3prl.problem.superber method)": [[47, "s3prl.problem.SuperbER.build_encoder"]], "build_encoder() (s3prl.problem.superbic method)": [[47, "s3prl.problem.SuperbIC.build_encoder"]], "build_encoder() (s3prl.problem.superbks method)": [[47, "s3prl.problem.SuperbKS.build_encoder"]], "build_encoder() (s3prl.problem.superbsid method)": [[47, "s3prl.problem.SuperbSID.build_encoder"]], "build_featurizer() (s3prl.problem.hearbeijingopera method)": [[47, "s3prl.problem.HearBeijingOpera.build_featurizer"]], "build_featurizer() (s3prl.problem.hearcremad method)": [[47, "s3prl.problem.HearCremaD.build_featurizer"]], "build_featurizer() (s3prl.problem.heardcase2016task2 method)": [[47, "s3prl.problem.HearDcase2016Task2.build_featurizer"]], "build_featurizer() (s3prl.problem.hearesc50 method)": [[47, "s3prl.problem.HearESC50.build_featurizer"]], "build_featurizer() (s3prl.problem.hearfsd method)": [[47, "s3prl.problem.HearFSD.build_featurizer"]], "build_featurizer() (s3prl.problem.heargsc5hr method)": [[47, "s3prl.problem.HearGSC5hr.build_featurizer"]], "build_featurizer() (s3prl.problem.heargtzan method)": [[47, "s3prl.problem.HearGtzan.build_featurizer"]], "build_featurizer() (s3prl.problem.heargtzanmusicspeech method)": [[47, "s3prl.problem.HearGtzanMusicSpeech.build_featurizer"]], "build_featurizer() (s3prl.problem.heargunshot method)": [[47, "s3prl.problem.HearGunshot.build_featurizer"]], "build_featurizer() (s3prl.problem.hearlibricount method)": [[47, "s3prl.problem.HearLibriCount.build_featurizer"]], "build_featurizer() (s3prl.problem.hearmaestro method)": [[47, "s3prl.problem.HearMaestro.build_featurizer"]], "build_featurizer() (s3prl.problem.hearnsynth5hr method)": [[47, "s3prl.problem.HearNsynth5hr.build_featurizer"]], "build_featurizer() (s3prl.problem.hearstroke method)": [[47, "s3prl.problem.HearStroke.build_featurizer"]], "build_featurizer() (s3prl.problem.heartonic method)": [[47, "s3prl.problem.HearTonic.build_featurizer"]], "build_featurizer() (s3prl.problem.hearvocal method)": [[47, "s3prl.problem.HearVocal.build_featurizer"]], "build_featurizer() (s3prl.problem.hearvoxlingual method)": [[47, "s3prl.problem.HearVoxLingual.build_featurizer"]], "build_featurizer() (s3prl.problem.superbasr method)": [[47, "s3prl.problem.SuperbASR.build_featurizer"]], "build_featurizer() (s3prl.problem.superbasv method)": [[47, "s3prl.problem.SuperbASV.build_featurizer"]], "build_featurizer() (s3prl.problem.superber method)": [[47, "s3prl.problem.SuperbER.build_featurizer"]], "build_featurizer() (s3prl.problem.superbic method)": [[47, "s3prl.problem.SuperbIC.build_featurizer"]], "build_featurizer() (s3prl.problem.superbks method)": [[47, "s3prl.problem.SuperbKS.build_featurizer"]], "build_featurizer() (s3prl.problem.superbpr method)": [[47, "s3prl.problem.SuperbPR.build_featurizer"]], "build_featurizer() (s3prl.problem.superbsd method)": [[47, "s3prl.problem.SuperbSD.build_featurizer"]], "build_featurizer() (s3prl.problem.superbsf method)": [[47, "s3prl.problem.SuperbSF.build_featurizer"]], "build_featurizer() (s3prl.problem.superbsid method)": [[47, "s3prl.problem.SuperbSID.build_featurizer"]], "build_model() (s3prl.problem.hearbeijingopera method)": [[47, "s3prl.problem.HearBeijingOpera.build_model"]], "build_model() (s3prl.problem.hearcremad method)": [[47, "s3prl.problem.HearCremaD.build_model"]], "build_model() (s3prl.problem.heardcase2016task2 method)": [[47, "s3prl.problem.HearDcase2016Task2.build_model"]], "build_model() (s3prl.problem.hearesc50 method)": [[47, "s3prl.problem.HearESC50.build_model"]], "build_model() (s3prl.problem.hearfsd method)": [[47, "s3prl.problem.HearFSD.build_model"]], "build_model() (s3prl.problem.heargsc5hr method)": [[47, "s3prl.problem.HearGSC5hr.build_model"]], "build_model() (s3prl.problem.heargtzan method)": [[47, "s3prl.problem.HearGtzan.build_model"]], "build_model() (s3prl.problem.heargtzanmusicspeech method)": [[47, "s3prl.problem.HearGtzanMusicSpeech.build_model"]], "build_model() (s3prl.problem.heargunshot method)": [[47, "s3prl.problem.HearGunshot.build_model"]], "build_model() (s3prl.problem.hearlibricount method)": [[47, "s3prl.problem.HearLibriCount.build_model"]], "build_model() (s3prl.problem.hearmaestro method)": [[47, "s3prl.problem.HearMaestro.build_model"]], "build_model() (s3prl.problem.hearnsynth5hr method)": [[47, "s3prl.problem.HearNsynth5hr.build_model"]], "build_model() (s3prl.problem.hearstroke method)": [[47, "s3prl.problem.HearStroke.build_model"]], "build_model() (s3prl.problem.heartonic method)": [[47, "s3prl.problem.HearTonic.build_model"]], "build_model() (s3prl.problem.hearvocal method)": [[47, "s3prl.problem.HearVocal.build_model"]], "build_model() (s3prl.problem.hearvoxlingual method)": [[47, "s3prl.problem.HearVoxLingual.build_model"]], "build_model() (s3prl.problem.superbasr method)": [[47, "s3prl.problem.SuperbASR.build_model"]], "build_model() (s3prl.problem.superbasv method)": [[47, "s3prl.problem.SuperbASV.build_model"]], "build_model() (s3prl.problem.superber method)": [[47, "s3prl.problem.SuperbER.build_model"]], "build_model() (s3prl.problem.superbic method)": [[47, "s3prl.problem.SuperbIC.build_model"]], "build_model() (s3prl.problem.superbks method)": [[47, "s3prl.problem.SuperbKS.build_model"]], "build_model() (s3prl.problem.superbpr method)": [[47, "s3prl.problem.SuperbPR.build_model"]], "build_model() (s3prl.problem.superbsd method)": [[47, "s3prl.problem.SuperbSD.build_model"]], "build_model() (s3prl.problem.superbsf method)": [[47, "s3prl.problem.SuperbSF.build_model"]], "build_model() (s3prl.problem.superbsid method)": [[47, "s3prl.problem.SuperbSID.build_model"]], "build_optimizer() (s3prl.problem.hearbeijingopera method)": [[47, "s3prl.problem.HearBeijingOpera.build_optimizer"]], "build_optimizer() (s3prl.problem.hearcremad method)": [[47, "s3prl.problem.HearCremaD.build_optimizer"]], "build_optimizer() (s3prl.problem.heardcase2016task2 method)": [[47, "s3prl.problem.HearDcase2016Task2.build_optimizer"]], "build_optimizer() (s3prl.problem.hearesc50 method)": [[47, "s3prl.problem.HearESC50.build_optimizer"]], "build_optimizer() (s3prl.problem.hearfsd method)": [[47, "s3prl.problem.HearFSD.build_optimizer"]], "build_optimizer() (s3prl.problem.heargsc5hr method)": [[47, "s3prl.problem.HearGSC5hr.build_optimizer"]], "build_optimizer() (s3prl.problem.heargtzan method)": [[47, "s3prl.problem.HearGtzan.build_optimizer"]], "build_optimizer() (s3prl.problem.heargtzanmusicspeech method)": [[47, "s3prl.problem.HearGtzanMusicSpeech.build_optimizer"]], "build_optimizer() (s3prl.problem.heargunshot method)": [[47, "s3prl.problem.HearGunshot.build_optimizer"]], "build_optimizer() (s3prl.problem.hearlibricount method)": [[47, "s3prl.problem.HearLibriCount.build_optimizer"]], "build_optimizer() (s3prl.problem.hearmaestro method)": [[47, "s3prl.problem.HearMaestro.build_optimizer"]], "build_optimizer() (s3prl.problem.hearnsynth5hr method)": [[47, "s3prl.problem.HearNsynth5hr.build_optimizer"]], "build_optimizer() (s3prl.problem.hearstroke method)": [[47, "s3prl.problem.HearStroke.build_optimizer"]], "build_optimizer() (s3prl.problem.heartonic method)": [[47, "s3prl.problem.HearTonic.build_optimizer"]], "build_optimizer() (s3prl.problem.hearvocal method)": [[47, "s3prl.problem.HearVocal.build_optimizer"]], "build_optimizer() (s3prl.problem.hearvoxlingual method)": [[47, "s3prl.problem.HearVoxLingual.build_optimizer"]], "build_optimizer() (s3prl.problem.superbasr method)": [[47, "s3prl.problem.SuperbASR.build_optimizer"]], "build_optimizer() (s3prl.problem.superbasv method)": [[47, "s3prl.problem.SuperbASV.build_optimizer"]], "build_optimizer() (s3prl.problem.superber method)": [[47, "s3prl.problem.SuperbER.build_optimizer"]], "build_optimizer() (s3prl.problem.superbic method)": [[47, "s3prl.problem.SuperbIC.build_optimizer"]], "build_optimizer() (s3prl.problem.superbks method)": [[47, "s3prl.problem.SuperbKS.build_optimizer"]], "build_optimizer() (s3prl.problem.superbpr method)": [[47, "s3prl.problem.SuperbPR.build_optimizer"]], "build_optimizer() (s3prl.problem.superbsd method)": [[47, "s3prl.problem.SuperbSD.build_optimizer"]], "build_optimizer() (s3prl.problem.superbsf method)": [[47, "s3prl.problem.SuperbSF.build_optimizer"]], "build_optimizer() (s3prl.problem.superbsid method)": [[47, "s3prl.problem.SuperbSID.build_optimizer"]], "build_scheduler() (s3prl.problem.hearbeijingopera method)": [[47, "s3prl.problem.HearBeijingOpera.build_scheduler"]], "build_scheduler() (s3prl.problem.hearcremad method)": [[47, "s3prl.problem.HearCremaD.build_scheduler"]], "build_scheduler() (s3prl.problem.heardcase2016task2 method)": [[47, "s3prl.problem.HearDcase2016Task2.build_scheduler"]], "build_scheduler() (s3prl.problem.hearesc50 method)": [[47, "s3prl.problem.HearESC50.build_scheduler"]], "build_scheduler() (s3prl.problem.hearfsd method)": [[47, "s3prl.problem.HearFSD.build_scheduler"]], "build_scheduler() (s3prl.problem.heargsc5hr method)": [[47, "s3prl.problem.HearGSC5hr.build_scheduler"]], "build_scheduler() (s3prl.problem.heargtzan method)": [[47, "s3prl.problem.HearGtzan.build_scheduler"]], "build_scheduler() (s3prl.problem.heargtzanmusicspeech method)": [[47, "s3prl.problem.HearGtzanMusicSpeech.build_scheduler"]], "build_scheduler() (s3prl.problem.heargunshot method)": [[47, "s3prl.problem.HearGunshot.build_scheduler"]], "build_scheduler() (s3prl.problem.hearlibricount method)": [[47, "s3prl.problem.HearLibriCount.build_scheduler"]], "build_scheduler() (s3prl.problem.hearmaestro method)": [[47, "s3prl.problem.HearMaestro.build_scheduler"]], "build_scheduler() (s3prl.problem.hearnsynth5hr method)": [[47, "s3prl.problem.HearNsynth5hr.build_scheduler"]], "build_scheduler() (s3prl.problem.hearstroke method)": [[47, "s3prl.problem.HearStroke.build_scheduler"]], "build_scheduler() (s3prl.problem.heartonic method)": [[47, "s3prl.problem.HearTonic.build_scheduler"]], "build_scheduler() (s3prl.problem.hearvocal method)": [[47, "s3prl.problem.HearVocal.build_scheduler"]], "build_scheduler() (s3prl.problem.hearvoxlingual method)": [[47, "s3prl.problem.HearVoxLingual.build_scheduler"]], "build_scheduler() (s3prl.problem.superbasr method)": [[47, "s3prl.problem.SuperbASR.build_scheduler"]], "build_scheduler() (s3prl.problem.superbasv method)": [[47, "s3prl.problem.SuperbASV.build_scheduler"]], "build_scheduler() (s3prl.problem.superber method)": [[47, "s3prl.problem.SuperbER.build_scheduler"]], "build_scheduler() (s3prl.problem.superbic method)": [[47, "s3prl.problem.SuperbIC.build_scheduler"]], "build_scheduler() (s3prl.problem.superbks method)": [[47, "s3prl.problem.SuperbKS.build_scheduler"]], "build_scheduler() (s3prl.problem.superbpr method)": [[47, "s3prl.problem.SuperbPR.build_scheduler"]], "build_scheduler() (s3prl.problem.superbsd method)": [[47, "s3prl.problem.SuperbSD.build_scheduler"]], "build_scheduler() (s3prl.problem.superbsf method)": [[47, "s3prl.problem.SuperbSF.build_scheduler"]], "build_scheduler() (s3prl.problem.superbsid method)": [[47, "s3prl.problem.SuperbSID.build_scheduler"]], "build_task() (s3prl.problem.hearbeijingopera method)": [[47, "s3prl.problem.HearBeijingOpera.build_task"]], "build_task() (s3prl.problem.hearcremad method)": [[47, "s3prl.problem.HearCremaD.build_task"]], "build_task() (s3prl.problem.heardcase2016task2 method)": [[47, "s3prl.problem.HearDcase2016Task2.build_task"]], "build_task() (s3prl.problem.hearesc50 method)": [[47, "s3prl.problem.HearESC50.build_task"]], "build_task() (s3prl.problem.hearfsd method)": [[47, "s3prl.problem.HearFSD.build_task"]], "build_task() (s3prl.problem.heargsc5hr method)": [[47, "s3prl.problem.HearGSC5hr.build_task"]], "build_task() (s3prl.problem.heargtzan method)": [[47, "s3prl.problem.HearGtzan.build_task"]], "build_task() (s3prl.problem.heargtzanmusicspeech method)": [[47, "s3prl.problem.HearGtzanMusicSpeech.build_task"]], "build_task() (s3prl.problem.heargunshot method)": [[47, "s3prl.problem.HearGunshot.build_task"]], "build_task() (s3prl.problem.hearlibricount method)": [[47, "s3prl.problem.HearLibriCount.build_task"]], "build_task() (s3prl.problem.hearmaestro method)": [[47, "s3prl.problem.HearMaestro.build_task"]], "build_task() (s3prl.problem.hearnsynth5hr method)": [[47, "s3prl.problem.HearNsynth5hr.build_task"]], "build_task() (s3prl.problem.hearstroke method)": [[47, "s3prl.problem.HearStroke.build_task"]], "build_task() (s3prl.problem.heartonic method)": [[47, "s3prl.problem.HearTonic.build_task"]], "build_task() (s3prl.problem.hearvocal method)": [[47, "s3prl.problem.HearVocal.build_task"]], "build_task() (s3prl.problem.hearvoxlingual method)": [[47, "s3prl.problem.HearVoxLingual.build_task"]], "build_task() (s3prl.problem.superbasr method)": [[47, "s3prl.problem.SuperbASR.build_task"]], "build_task() (s3prl.problem.superbasv method)": [[47, "s3prl.problem.SuperbASV.build_task"]], "build_task() (s3prl.problem.superber method)": [[47, "s3prl.problem.SuperbER.build_task"]], "build_task() (s3prl.problem.superbic method)": [[47, "s3prl.problem.SuperbIC.build_task"]], "build_task() (s3prl.problem.superbks method)": [[47, "s3prl.problem.SuperbKS.build_task"]], "build_task() (s3prl.problem.superbpr method)": [[47, "s3prl.problem.SuperbPR.build_task"]], "build_task() (s3prl.problem.superbsd method)": [[47, "s3prl.problem.SuperbSD.build_task"]], "build_task() (s3prl.problem.superbsf method)": [[47, "s3prl.problem.SuperbSF.build_task"]], "build_task() (s3prl.problem.superbsid method)": [[47, "s3prl.problem.SuperbSID.build_task"]], "build_tokenizer() (s3prl.problem.superbasr method)": [[47, "s3prl.problem.SuperbASR.build_tokenizer"]], "build_tokenizer() (s3prl.problem.superbpr method)": [[47, "s3prl.problem.SuperbPR.build_tokenizer"]], "build_tokenizer() (s3prl.problem.superbsf method)": [[47, "s3prl.problem.SuperbSF.build_tokenizer"]], "build_upstream() (s3prl.problem.hearbeijingopera method)": [[47, "s3prl.problem.HearBeijingOpera.build_upstream"]], "build_upstream() (s3prl.problem.hearcremad method)": [[47, "s3prl.problem.HearCremaD.build_upstream"]], "build_upstream() (s3prl.problem.heardcase2016task2 method)": [[47, "s3prl.problem.HearDcase2016Task2.build_upstream"]], "build_upstream() (s3prl.problem.hearesc50 method)": [[47, "s3prl.problem.HearESC50.build_upstream"]], "build_upstream() (s3prl.problem.hearfsd method)": [[47, "s3prl.problem.HearFSD.build_upstream"]], "build_upstream() (s3prl.problem.heargsc5hr method)": [[47, "s3prl.problem.HearGSC5hr.build_upstream"]], "build_upstream() (s3prl.problem.heargtzan method)": [[47, "s3prl.problem.HearGtzan.build_upstream"]], "build_upstream() (s3prl.problem.heargtzanmusicspeech method)": [[47, "s3prl.problem.HearGtzanMusicSpeech.build_upstream"]], "build_upstream() (s3prl.problem.heargunshot method)": [[47, "s3prl.problem.HearGunshot.build_upstream"]], "build_upstream() (s3prl.problem.hearlibricount method)": [[47, "s3prl.problem.HearLibriCount.build_upstream"]], "build_upstream() (s3prl.problem.hearmaestro method)": [[47, "s3prl.problem.HearMaestro.build_upstream"]], "build_upstream() (s3prl.problem.hearnsynth5hr method)": [[47, "s3prl.problem.HearNsynth5hr.build_upstream"]], "build_upstream() (s3prl.problem.hearstroke method)": [[47, "s3prl.problem.HearStroke.build_upstream"]], "build_upstream() (s3prl.problem.heartonic method)": [[47, "s3prl.problem.HearTonic.build_upstream"]], "build_upstream() (s3prl.problem.hearvocal method)": [[47, "s3prl.problem.HearVocal.build_upstream"]], "build_upstream() (s3prl.problem.hearvoxlingual method)": [[47, "s3prl.problem.HearVoxLingual.build_upstream"]], "build_upstream() (s3prl.problem.superbasr method)": [[47, "s3prl.problem.SuperbASR.build_upstream"]], "build_upstream() (s3prl.problem.superbasv method)": [[47, "s3prl.problem.SuperbASV.build_upstream"]], "build_upstream() (s3prl.problem.superber method)": [[47, "s3prl.problem.SuperbER.build_upstream"]], "build_upstream() (s3prl.problem.superbic method)": [[47, "s3prl.problem.SuperbIC.build_upstream"]], "build_upstream() (s3prl.problem.superbks method)": [[47, "s3prl.problem.SuperbKS.build_upstream"]], "build_upstream() (s3prl.problem.superbpr method)": [[47, "s3prl.problem.SuperbPR.build_upstream"]], "build_upstream() (s3prl.problem.superbsd method)": [[47, "s3prl.problem.SuperbSD.build_upstream"]], "build_upstream() (s3prl.problem.superbsf method)": [[47, "s3prl.problem.SuperbSF.build_upstream"]], "build_upstream() (s3prl.problem.superbsid method)": [[47, "s3prl.problem.SuperbSID.build_upstream"]], "default_config() (s3prl.problem.hearbeijingopera method)": [[47, "s3prl.problem.HearBeijingOpera.default_config"]], "default_config() (s3prl.problem.hearcremad method)": [[47, "s3prl.problem.HearCremaD.default_config"]], "default_config() (s3prl.problem.heardcase2016task2 method)": [[47, "s3prl.problem.HearDcase2016Task2.default_config"]], "default_config() (s3prl.problem.hearesc50 method)": [[47, "s3prl.problem.HearESC50.default_config"]], "default_config() (s3prl.problem.hearfsd method)": [[47, "s3prl.problem.HearFSD.default_config"]], "default_config() (s3prl.problem.heargsc5hr method)": [[47, "s3prl.problem.HearGSC5hr.default_config"]], "default_config() (s3prl.problem.heargtzan method)": [[47, "s3prl.problem.HearGtzan.default_config"]], "default_config() (s3prl.problem.heargtzanmusicspeech method)": [[47, "s3prl.problem.HearGtzanMusicSpeech.default_config"]], "default_config() (s3prl.problem.heargunshot method)": [[47, "s3prl.problem.HearGunshot.default_config"]], "default_config() (s3prl.problem.hearlibricount method)": [[47, "s3prl.problem.HearLibriCount.default_config"]], "default_config() (s3prl.problem.hearmaestro method)": [[47, "s3prl.problem.HearMaestro.default_config"]], "default_config() (s3prl.problem.hearnsynth5hr method)": [[47, "s3prl.problem.HearNsynth5hr.default_config"]], "default_config() (s3prl.problem.hearstroke method)": [[47, "s3prl.problem.HearStroke.default_config"]], "default_config() (s3prl.problem.heartonic method)": [[47, "s3prl.problem.HearTonic.default_config"]], "default_config() (s3prl.problem.hearvocal method)": [[47, "s3prl.problem.HearVocal.default_config"]], "default_config() (s3prl.problem.hearvoxlingual method)": [[47, "s3prl.problem.HearVoxLingual.default_config"]], "default_config() (s3prl.problem.superbasr method)": [[47, "s3prl.problem.SuperbASR.default_config"]], "default_config() (s3prl.problem.superbasv method)": [[47, "s3prl.problem.SuperbASV.default_config"]], "default_config() (s3prl.problem.superber method)": [[47, "s3prl.problem.SuperbER.default_config"]], "default_config() (s3prl.problem.superbic method)": [[47, "s3prl.problem.SuperbIC.default_config"]], "default_config() (s3prl.problem.superbks method)": [[47, "s3prl.problem.SuperbKS.default_config"]], "default_config() (s3prl.problem.superbpr method)": [[47, "s3prl.problem.SuperbPR.default_config"]], "default_config() (s3prl.problem.superbsd method)": [[47, "s3prl.problem.SuperbSD.default_config"]], "default_config() (s3prl.problem.superbsf method)": [[47, "s3prl.problem.SuperbSF.default_config"]], "default_config() (s3prl.problem.superbsid method)": [[47, "s3prl.problem.SuperbSID.default_config"]], "evaluate() (s3prl.problem.hearbeijingopera method)": [[47, "s3prl.problem.HearBeijingOpera.evaluate"]], "evaluate() (s3prl.problem.hearcremad method)": [[47, "s3prl.problem.HearCremaD.evaluate"]], "evaluate() (s3prl.problem.heardcase2016task2 method)": [[47, "s3prl.problem.HearDcase2016Task2.evaluate"]], "evaluate() (s3prl.problem.hearesc50 method)": [[47, "s3prl.problem.HearESC50.evaluate"]], "evaluate() (s3prl.problem.hearfsd method)": [[47, "s3prl.problem.HearFSD.evaluate"]], "evaluate() (s3prl.problem.heargsc5hr method)": [[47, "s3prl.problem.HearGSC5hr.evaluate"]], "evaluate() (s3prl.problem.heargtzan method)": [[47, "s3prl.problem.HearGtzan.evaluate"]], "evaluate() (s3prl.problem.heargtzanmusicspeech method)": [[47, "s3prl.problem.HearGtzanMusicSpeech.evaluate"]], "evaluate() (s3prl.problem.heargunshot method)": [[47, "s3prl.problem.HearGunshot.evaluate"]], "evaluate() (s3prl.problem.hearlibricount method)": [[47, "s3prl.problem.HearLibriCount.evaluate"]], "evaluate() (s3prl.problem.hearmaestro method)": [[47, "s3prl.problem.HearMaestro.evaluate"]], "evaluate() (s3prl.problem.hearnsynth5hr method)": [[47, "s3prl.problem.HearNsynth5hr.evaluate"]], "evaluate() (s3prl.problem.hearstroke method)": [[47, "s3prl.problem.HearStroke.evaluate"]], "evaluate() (s3prl.problem.heartonic method)": [[47, "s3prl.problem.HearTonic.evaluate"]], "evaluate() (s3prl.problem.hearvocal method)": [[47, "s3prl.problem.HearVocal.evaluate"]], "evaluate() (s3prl.problem.hearvoxlingual method)": [[47, "s3prl.problem.HearVoxLingual.evaluate"]], "evaluate() (s3prl.problem.superbasr method)": [[47, "s3prl.problem.SuperbASR.evaluate"]], "evaluate() (s3prl.problem.superbasv method)": [[47, "s3prl.problem.SuperbASV.evaluate"]], "evaluate() (s3prl.problem.superber method)": [[47, "s3prl.problem.SuperbER.evaluate"]], "evaluate() (s3prl.problem.superbic method)": [[47, "s3prl.problem.SuperbIC.evaluate"]], "evaluate() (s3prl.problem.superbks method)": [[47, "s3prl.problem.SuperbKS.evaluate"]], "evaluate() (s3prl.problem.superbpr method)": [[47, "s3prl.problem.SuperbPR.evaluate"]], "evaluate() (s3prl.problem.superbsd method)": [[47, "s3prl.problem.SuperbSD.evaluate"]], "evaluate() (s3prl.problem.superbsf method)": [[47, "s3prl.problem.SuperbSF.evaluate"]], "evaluate() (s3prl.problem.superbsid method)": [[47, "s3prl.problem.SuperbSID.evaluate"]], "get_class_from_name() (s3prl.problem.hearbeijingopera class method)": [[47, "s3prl.problem.HearBeijingOpera.get_class_from_name"]], "get_class_from_name() (s3prl.problem.hearcremad class method)": [[47, "s3prl.problem.HearCremaD.get_class_from_name"]], "get_class_from_name() (s3prl.problem.heardcase2016task2 class method)": [[47, "s3prl.problem.HearDcase2016Task2.get_class_from_name"]], "get_class_from_name() (s3prl.problem.hearesc50 class method)": [[47, "s3prl.problem.HearESC50.get_class_from_name"]], "get_class_from_name() (s3prl.problem.hearfsd class method)": [[47, "s3prl.problem.HearFSD.get_class_from_name"]], "get_class_from_name() (s3prl.problem.heargsc5hr class method)": [[47, "s3prl.problem.HearGSC5hr.get_class_from_name"]], "get_class_from_name() (s3prl.problem.heargtzan class method)": [[47, "s3prl.problem.HearGtzan.get_class_from_name"]], "get_class_from_name() (s3prl.problem.heargtzanmusicspeech class method)": [[47, "s3prl.problem.HearGtzanMusicSpeech.get_class_from_name"]], "get_class_from_name() (s3prl.problem.heargunshot class method)": [[47, "s3prl.problem.HearGunshot.get_class_from_name"]], "get_class_from_name() (s3prl.problem.hearlibricount class method)": [[47, "s3prl.problem.HearLibriCount.get_class_from_name"]], "get_class_from_name() (s3prl.problem.hearmaestro class method)": [[47, "s3prl.problem.HearMaestro.get_class_from_name"]], "get_class_from_name() (s3prl.problem.hearnsynth5hr class method)": [[47, "s3prl.problem.HearNsynth5hr.get_class_from_name"]], "get_class_from_name() (s3prl.problem.hearstroke class method)": [[47, "s3prl.problem.HearStroke.get_class_from_name"]], "get_class_from_name() (s3prl.problem.heartonic class method)": [[47, "s3prl.problem.HearTonic.get_class_from_name"]], "get_class_from_name() (s3prl.problem.hearvocal class method)": [[47, "s3prl.problem.HearVocal.get_class_from_name"]], "get_class_from_name() (s3prl.problem.hearvoxlingual class method)": [[47, "s3prl.problem.HearVoxLingual.get_class_from_name"]], "get_class_from_name() (s3prl.problem.superbasr class method)": [[47, "s3prl.problem.SuperbASR.get_class_from_name"]], "get_class_from_name() (s3prl.problem.superbasv class method)": [[47, "s3prl.problem.SuperbASV.get_class_from_name"]], "get_class_from_name() (s3prl.problem.superber class method)": [[47, "s3prl.problem.SuperbER.get_class_from_name"]], "get_class_from_name() (s3prl.problem.superbic class method)": [[47, "s3prl.problem.SuperbIC.get_class_from_name"]], "get_class_from_name() (s3prl.problem.superbks class method)": [[47, "s3prl.problem.SuperbKS.get_class_from_name"]], "get_class_from_name() (s3prl.problem.superbpr class method)": [[47, "s3prl.problem.SuperbPR.get_class_from_name"]], "get_class_from_name() (s3prl.problem.superbsd class method)": [[47, "s3prl.problem.SuperbSD.get_class_from_name"]], "get_class_from_name() (s3prl.problem.superbsf class method)": [[47, "s3prl.problem.SuperbSF.get_class_from_name"]], "get_class_from_name() (s3prl.problem.superbsid class method)": [[47, "s3prl.problem.SuperbSID.get_class_from_name"]], "load_model() (s3prl.problem.hearbeijingopera method)": [[47, "s3prl.problem.HearBeijingOpera.load_model"]], "load_model() (s3prl.problem.hearcremad method)": [[47, "s3prl.problem.HearCremaD.load_model"]], "load_model() (s3prl.problem.heardcase2016task2 method)": [[47, "s3prl.problem.HearDcase2016Task2.load_model"]], "load_model() (s3prl.problem.hearesc50 method)": [[47, "s3prl.problem.HearESC50.load_model"]], "load_model() (s3prl.problem.hearfsd method)": [[47, "s3prl.problem.HearFSD.load_model"]], "load_model() (s3prl.problem.heargsc5hr method)": [[47, "s3prl.problem.HearGSC5hr.load_model"]], "load_model() (s3prl.problem.heargtzan method)": [[47, "s3prl.problem.HearGtzan.load_model"]], "load_model() (s3prl.problem.heargtzanmusicspeech method)": [[47, "s3prl.problem.HearGtzanMusicSpeech.load_model"]], "load_model() (s3prl.problem.heargunshot method)": [[47, "s3prl.problem.HearGunshot.load_model"]], "load_model() (s3prl.problem.hearlibricount method)": [[47, "s3prl.problem.HearLibriCount.load_model"]], "load_model() (s3prl.problem.hearmaestro method)": [[47, "s3prl.problem.HearMaestro.load_model"]], "load_model() (s3prl.problem.hearnsynth5hr method)": [[47, "s3prl.problem.HearNsynth5hr.load_model"]], "load_model() (s3prl.problem.hearstroke method)": [[47, "s3prl.problem.HearStroke.load_model"]], "load_model() (s3prl.problem.heartonic method)": [[47, "s3prl.problem.HearTonic.load_model"]], "load_model() (s3prl.problem.hearvocal method)": [[47, "s3prl.problem.HearVocal.load_model"]], "load_model() (s3prl.problem.hearvoxlingual method)": [[47, "s3prl.problem.HearVoxLingual.load_model"]], "load_model() (s3prl.problem.superbasr method)": [[47, "s3prl.problem.SuperbASR.load_model"]], "load_model() (s3prl.problem.superbasv method)": [[47, "s3prl.problem.SuperbASV.load_model"]], "load_model() (s3prl.problem.superber method)": [[47, "s3prl.problem.SuperbER.load_model"]], "load_model() (s3prl.problem.superbic method)": [[47, "s3prl.problem.SuperbIC.load_model"]], "load_model() (s3prl.problem.superbks method)": [[47, "s3prl.problem.SuperbKS.load_model"]], "load_model() (s3prl.problem.superbpr method)": [[47, "s3prl.problem.SuperbPR.load_model"]], "load_model() (s3prl.problem.superbsd method)": [[47, "s3prl.problem.SuperbSD.load_model"]], "load_model() (s3prl.problem.superbsf method)": [[47, "s3prl.problem.SuperbSF.load_model"]], "load_model() (s3prl.problem.superbsid method)": [[47, "s3prl.problem.SuperbSID.load_model"]], "load_model_and_task() (s3prl.problem.hearbeijingopera method)": [[47, "s3prl.problem.HearBeijingOpera.load_model_and_task"]], "load_model_and_task() (s3prl.problem.hearcremad method)": [[47, "s3prl.problem.HearCremaD.load_model_and_task"]], "load_model_and_task() (s3prl.problem.heardcase2016task2 method)": [[47, "s3prl.problem.HearDcase2016Task2.load_model_and_task"]], "load_model_and_task() (s3prl.problem.hearesc50 method)": [[47, "s3prl.problem.HearESC50.load_model_and_task"]], "load_model_and_task() (s3prl.problem.hearfsd method)": [[47, "s3prl.problem.HearFSD.load_model_and_task"]], "load_model_and_task() (s3prl.problem.heargsc5hr method)": [[47, "s3prl.problem.HearGSC5hr.load_model_and_task"]], "load_model_and_task() (s3prl.problem.heargtzan method)": [[47, "s3prl.problem.HearGtzan.load_model_and_task"]], "load_model_and_task() (s3prl.problem.heargtzanmusicspeech method)": [[47, "s3prl.problem.HearGtzanMusicSpeech.load_model_and_task"]], "load_model_and_task() (s3prl.problem.heargunshot method)": [[47, "s3prl.problem.HearGunshot.load_model_and_task"]], "load_model_and_task() (s3prl.problem.hearlibricount method)": [[47, "s3prl.problem.HearLibriCount.load_model_and_task"]], "load_model_and_task() (s3prl.problem.hearmaestro method)": [[47, "s3prl.problem.HearMaestro.load_model_and_task"]], "load_model_and_task() (s3prl.problem.hearnsynth5hr method)": [[47, "s3prl.problem.HearNsynth5hr.load_model_and_task"]], "load_model_and_task() (s3prl.problem.hearstroke method)": [[47, "s3prl.problem.HearStroke.load_model_and_task"]], "load_model_and_task() (s3prl.problem.heartonic method)": [[47, "s3prl.problem.HearTonic.load_model_and_task"]], "load_model_and_task() (s3prl.problem.hearvocal method)": [[47, "s3prl.problem.HearVocal.load_model_and_task"]], "load_model_and_task() (s3prl.problem.hearvoxlingual method)": [[47, "s3prl.problem.HearVoxLingual.load_model_and_task"]], "load_model_and_task() (s3prl.problem.superbasr method)": [[47, "s3prl.problem.SuperbASR.load_model_and_task"]], "load_model_and_task() (s3prl.problem.superbasv method)": [[47, "s3prl.problem.SuperbASV.load_model_and_task"]], "load_model_and_task() (s3prl.problem.superber method)": [[47, "s3prl.problem.SuperbER.load_model_and_task"]], "load_model_and_task() (s3prl.problem.superbic method)": [[47, "s3prl.problem.SuperbIC.load_model_and_task"]], "load_model_and_task() (s3prl.problem.superbks method)": [[47, "s3prl.problem.SuperbKS.load_model_and_task"]], "load_model_and_task() (s3prl.problem.superbpr method)": [[47, "s3prl.problem.SuperbPR.load_model_and_task"]], "load_model_and_task() (s3prl.problem.superbsd method)": [[47, "s3prl.problem.SuperbSD.load_model_and_task"]], "load_model_and_task() (s3prl.problem.superbsf method)": [[47, "s3prl.problem.SuperbSF.load_model_and_task"]], "load_model_and_task() (s3prl.problem.superbsid method)": [[47, "s3prl.problem.SuperbSID.load_model_and_task"]], "load_task() (s3prl.problem.hearbeijingopera method)": [[47, "s3prl.problem.HearBeijingOpera.load_task"]], "load_task() (s3prl.problem.hearcremad method)": [[47, "s3prl.problem.HearCremaD.load_task"]], "load_task() (s3prl.problem.heardcase2016task2 method)": [[47, "s3prl.problem.HearDcase2016Task2.load_task"]], "load_task() (s3prl.problem.hearesc50 method)": [[47, "s3prl.problem.HearESC50.load_task"]], "load_task() (s3prl.problem.hearfsd method)": [[47, "s3prl.problem.HearFSD.load_task"]], "load_task() (s3prl.problem.heargsc5hr method)": [[47, "s3prl.problem.HearGSC5hr.load_task"]], "load_task() (s3prl.problem.heargtzan method)": [[47, "s3prl.problem.HearGtzan.load_task"]], "load_task() (s3prl.problem.heargtzanmusicspeech method)": [[47, "s3prl.problem.HearGtzanMusicSpeech.load_task"]], "load_task() (s3prl.problem.heargunshot method)": [[47, "s3prl.problem.HearGunshot.load_task"]], "load_task() (s3prl.problem.hearlibricount method)": [[47, "s3prl.problem.HearLibriCount.load_task"]], "load_task() (s3prl.problem.hearmaestro method)": [[47, "s3prl.problem.HearMaestro.load_task"]], "load_task() (s3prl.problem.hearnsynth5hr method)": [[47, "s3prl.problem.HearNsynth5hr.load_task"]], "load_task() (s3prl.problem.hearstroke method)": [[47, "s3prl.problem.HearStroke.load_task"]], "load_task() (s3prl.problem.heartonic method)": [[47, "s3prl.problem.HearTonic.load_task"]], "load_task() (s3prl.problem.hearvocal method)": [[47, "s3prl.problem.HearVocal.load_task"]], "load_task() (s3prl.problem.hearvoxlingual method)": [[47, "s3prl.problem.HearVoxLingual.load_task"]], "load_task() (s3prl.problem.superbasr method)": [[47, "s3prl.problem.SuperbASR.load_task"]], "load_task() (s3prl.problem.superbasv method)": [[47, "s3prl.problem.SuperbASV.load_task"]], "load_task() (s3prl.problem.superber method)": [[47, "s3prl.problem.SuperbER.load_task"]], "load_task() (s3prl.problem.superbic method)": [[47, "s3prl.problem.SuperbIC.load_task"]], "load_task() (s3prl.problem.superbks method)": [[47, "s3prl.problem.SuperbKS.load_task"]], "load_task() (s3prl.problem.superbpr method)": [[47, "s3prl.problem.SuperbPR.load_task"]], "load_task() (s3prl.problem.superbsd method)": [[47, "s3prl.problem.SuperbSD.load_task"]], "load_task() (s3prl.problem.superbsf method)": [[47, "s3prl.problem.SuperbSF.load_task"]], "load_task() (s3prl.problem.superbsid method)": [[47, "s3prl.problem.SuperbSID.load_task"]], "main() (s3prl.problem.hearbeijingopera method)": [[47, "s3prl.problem.HearBeijingOpera.main"]], "main() (s3prl.problem.hearcremad method)": [[47, "s3prl.problem.HearCremaD.main"]], "main() (s3prl.problem.heardcase2016task2 method)": [[47, "s3prl.problem.HearDcase2016Task2.main"]], "main() (s3prl.problem.hearesc50 method)": [[47, "s3prl.problem.HearESC50.main"]], "main() (s3prl.problem.hearfsd method)": [[47, "s3prl.problem.HearFSD.main"]], "main() (s3prl.problem.heargsc5hr method)": [[47, "s3prl.problem.HearGSC5hr.main"]], "main() (s3prl.problem.heargtzan method)": [[47, "s3prl.problem.HearGtzan.main"]], "main() (s3prl.problem.heargtzanmusicspeech method)": [[47, "s3prl.problem.HearGtzanMusicSpeech.main"]], "main() (s3prl.problem.heargunshot method)": [[47, "s3prl.problem.HearGunshot.main"]], "main() (s3prl.problem.hearlibricount method)": [[47, "s3prl.problem.HearLibriCount.main"]], "main() (s3prl.problem.hearmaestro method)": [[47, "s3prl.problem.HearMaestro.main"]], "main() (s3prl.problem.hearnsynth5hr method)": [[47, "s3prl.problem.HearNsynth5hr.main"]], "main() (s3prl.problem.hearstroke method)": [[47, "s3prl.problem.HearStroke.main"]], "main() (s3prl.problem.heartonic method)": [[47, "s3prl.problem.HearTonic.main"]], "main() (s3prl.problem.hearvocal method)": [[47, "s3prl.problem.HearVocal.main"]], "main() (s3prl.problem.hearvoxlingual method)": [[47, "s3prl.problem.HearVoxLingual.main"]], "main() (s3prl.problem.superbasr method)": [[47, "s3prl.problem.SuperbASR.main"]], "main() (s3prl.problem.superbasv method)": [[47, "s3prl.problem.SuperbASV.main"]], "main() (s3prl.problem.superber method)": [[47, "s3prl.problem.SuperbER.main"]], "main() (s3prl.problem.superbic method)": [[47, "s3prl.problem.SuperbIC.main"]], "main() (s3prl.problem.superbks method)": [[47, "s3prl.problem.SuperbKS.main"]], "main() (s3prl.problem.superbpr method)": [[47, "s3prl.problem.SuperbPR.main"]], "main() (s3prl.problem.superbsd method)": [[47, "s3prl.problem.SuperbSD.main"]], "main() (s3prl.problem.superbsf method)": [[47, "s3prl.problem.SuperbSF.main"]], "main() (s3prl.problem.superbsid method)": [[47, "s3prl.problem.SuperbSID.main"]], "prepare_data() (s3prl.problem.hearbeijingopera method)": [[47, "s3prl.problem.HearBeijingOpera.prepare_data"]], "prepare_data() (s3prl.problem.hearcremad method)": [[47, "s3prl.problem.HearCremaD.prepare_data"]], "prepare_data() (s3prl.problem.heardcase2016task2 method)": [[47, "s3prl.problem.HearDcase2016Task2.prepare_data"]], "prepare_data() (s3prl.problem.hearesc50 method)": [[47, "s3prl.problem.HearESC50.prepare_data"]], "prepare_data() (s3prl.problem.hearfsd method)": [[47, "s3prl.problem.HearFSD.prepare_data"]], "prepare_data() (s3prl.problem.heargsc5hr method)": [[47, "s3prl.problem.HearGSC5hr.prepare_data"]], "prepare_data() (s3prl.problem.heargtzan method)": [[47, "s3prl.problem.HearGtzan.prepare_data"]], "prepare_data() (s3prl.problem.heargtzanmusicspeech method)": [[47, "s3prl.problem.HearGtzanMusicSpeech.prepare_data"]], "prepare_data() (s3prl.problem.heargunshot method)": [[47, "s3prl.problem.HearGunshot.prepare_data"]], "prepare_data() (s3prl.problem.hearlibricount method)": [[47, "s3prl.problem.HearLibriCount.prepare_data"]], "prepare_data() (s3prl.problem.hearmaestro method)": [[47, "s3prl.problem.HearMaestro.prepare_data"]], "prepare_data() (s3prl.problem.hearnsynth5hr method)": [[47, "s3prl.problem.HearNsynth5hr.prepare_data"]], "prepare_data() (s3prl.problem.hearstroke method)": [[47, "s3prl.problem.HearStroke.prepare_data"]], "prepare_data() (s3prl.problem.heartonic method)": [[47, "s3prl.problem.HearTonic.prepare_data"]], "prepare_data() (s3prl.problem.hearvocal method)": [[47, "s3prl.problem.HearVocal.prepare_data"]], "prepare_data() (s3prl.problem.hearvoxlingual method)": [[47, "s3prl.problem.HearVoxLingual.prepare_data"]], "prepare_data() (s3prl.problem.superbasr method)": [[47, "s3prl.problem.SuperbASR.prepare_data"]], "prepare_data() (s3prl.problem.superbasv method)": [[47, "s3prl.problem.SuperbASV.prepare_data"]], "prepare_data() (s3prl.problem.superber method)": [[47, "s3prl.problem.SuperbER.prepare_data"]], "prepare_data() (s3prl.problem.superbic method)": [[47, "s3prl.problem.SuperbIC.prepare_data"]], "prepare_data() (s3prl.problem.superbks method)": [[47, "s3prl.problem.SuperbKS.prepare_data"]], "prepare_data() (s3prl.problem.superbpr method)": [[47, "s3prl.problem.SuperbPR.prepare_data"]], "prepare_data() (s3prl.problem.superbsd method)": [[47, "s3prl.problem.SuperbSD.prepare_data"]], "prepare_data() (s3prl.problem.superbsf method)": [[47, "s3prl.problem.SuperbSF.prepare_data"]], "prepare_data() (s3prl.problem.superbsid method)": [[47, "s3prl.problem.SuperbSID.prepare_data"]], "prepare_tokenizer_data() (s3prl.problem.superbasr method)": [[47, "s3prl.problem.SuperbASR.prepare_tokenizer_data"]], "prepare_tokenizer_data() (s3prl.problem.superbpr method)": [[47, "s3prl.problem.SuperbPR.prepare_tokenizer_data"]], "prepare_tokenizer_data() (s3prl.problem.superbsf method)": [[47, "s3prl.problem.SuperbSF.prepare_tokenizer_data"]], "run() (s3prl.problem.hearbeijingopera method)": [[47, "s3prl.problem.HearBeijingOpera.run"]], "run() (s3prl.problem.hearcremad method)": [[47, "s3prl.problem.HearCremaD.run"]], "run() (s3prl.problem.heardcase2016task2 method)": [[47, "s3prl.problem.HearDcase2016Task2.run"]], "run() (s3prl.problem.hearesc50 method)": [[47, "s3prl.problem.HearESC50.run"]], "run() (s3prl.problem.hearfsd method)": [[47, "s3prl.problem.HearFSD.run"]], "run() (s3prl.problem.heargsc5hr method)": [[47, "s3prl.problem.HearGSC5hr.run"]], "run() (s3prl.problem.heargtzan method)": [[47, "s3prl.problem.HearGtzan.run"]], "run() (s3prl.problem.heargtzanmusicspeech method)": [[47, "s3prl.problem.HearGtzanMusicSpeech.run"]], "run() (s3prl.problem.heargunshot method)": [[47, "s3prl.problem.HearGunshot.run"]], "run() (s3prl.problem.hearlibricount method)": [[47, "s3prl.problem.HearLibriCount.run"]], "run() (s3prl.problem.hearmaestro method)": [[47, "s3prl.problem.HearMaestro.run"]], "run() (s3prl.problem.hearnsynth5hr method)": [[47, "s3prl.problem.HearNsynth5hr.run"]], "run() (s3prl.problem.hearstroke method)": [[47, "s3prl.problem.HearStroke.run"]], "run() (s3prl.problem.heartonic method)": [[47, "s3prl.problem.HearTonic.run"]], "run() (s3prl.problem.hearvocal method)": [[47, "s3prl.problem.HearVocal.run"]], "run() (s3prl.problem.hearvoxlingual method)": [[47, "s3prl.problem.HearVoxLingual.run"]], "run() (s3prl.problem.superbasr method)": [[47, "s3prl.problem.SuperbASR.run"]], "run() (s3prl.problem.superbasv method)": [[47, "s3prl.problem.SuperbASV.run"]], "run() (s3prl.problem.superber method)": [[47, "s3prl.problem.SuperbER.run"]], "run() (s3prl.problem.superbic method)": [[47, "s3prl.problem.SuperbIC.run"]], "run() (s3prl.problem.superbks method)": [[47, "s3prl.problem.SuperbKS.run"]], "run() (s3prl.problem.superbpr method)": [[47, "s3prl.problem.SuperbPR.run"]], "run() (s3prl.problem.superbsd method)": [[47, "s3prl.problem.SuperbSD.run"]], "run() (s3prl.problem.superbsf method)": [[47, "s3prl.problem.SuperbSF.run"]], "run() (s3prl.problem.superbsid method)": [[47, "s3prl.problem.SuperbSID.run"]], "s3prl.problem": [[47, "module-s3prl.problem"]], "save_model() (s3prl.problem.hearbeijingopera method)": [[47, "s3prl.problem.HearBeijingOpera.save_model"]], "save_model() (s3prl.problem.hearcremad method)": [[47, "s3prl.problem.HearCremaD.save_model"]], "save_model() (s3prl.problem.heardcase2016task2 method)": [[47, "s3prl.problem.HearDcase2016Task2.save_model"]], "save_model() (s3prl.problem.hearesc50 method)": [[47, "s3prl.problem.HearESC50.save_model"]], "save_model() (s3prl.problem.hearfsd method)": [[47, "s3prl.problem.HearFSD.save_model"]], "save_model() (s3prl.problem.heargsc5hr method)": [[47, "s3prl.problem.HearGSC5hr.save_model"]], "save_model() (s3prl.problem.heargtzan method)": [[47, "s3prl.problem.HearGtzan.save_model"]], "save_model() (s3prl.problem.heargtzanmusicspeech method)": [[47, "s3prl.problem.HearGtzanMusicSpeech.save_model"]], "save_model() (s3prl.problem.heargunshot method)": [[47, "s3prl.problem.HearGunshot.save_model"]], "save_model() (s3prl.problem.hearlibricount method)": [[47, "s3prl.problem.HearLibriCount.save_model"]], "save_model() (s3prl.problem.hearmaestro method)": [[47, "s3prl.problem.HearMaestro.save_model"]], "save_model() (s3prl.problem.hearnsynth5hr method)": [[47, "s3prl.problem.HearNsynth5hr.save_model"]], "save_model() (s3prl.problem.hearstroke method)": [[47, "s3prl.problem.HearStroke.save_model"]], "save_model() (s3prl.problem.heartonic method)": [[47, "s3prl.problem.HearTonic.save_model"]], "save_model() (s3prl.problem.hearvocal method)": [[47, "s3prl.problem.HearVocal.save_model"]], "save_model() (s3prl.problem.hearvoxlingual method)": [[47, "s3prl.problem.HearVoxLingual.save_model"]], "save_model() (s3prl.problem.superbasr method)": [[47, "s3prl.problem.SuperbASR.save_model"]], "save_model() (s3prl.problem.superbasv method)": [[47, "s3prl.problem.SuperbASV.save_model"]], "save_model() (s3prl.problem.superber method)": [[47, "s3prl.problem.SuperbER.save_model"]], "save_model() (s3prl.problem.superbic method)": [[47, "s3prl.problem.SuperbIC.save_model"]], "save_model() (s3prl.problem.superbks method)": [[47, "s3prl.problem.SuperbKS.save_model"]], "save_model() (s3prl.problem.superbpr method)": [[47, "s3prl.problem.SuperbPR.save_model"]], "save_model() (s3prl.problem.superbsd method)": [[47, "s3prl.problem.SuperbSD.save_model"]], "save_model() (s3prl.problem.superbsf method)": [[47, "s3prl.problem.SuperbSF.save_model"]], "save_model() (s3prl.problem.superbsid method)": [[47, "s3prl.problem.SuperbSID.save_model"]], "save_task() (s3prl.problem.hearbeijingopera method)": [[47, "s3prl.problem.HearBeijingOpera.save_task"]], "save_task() (s3prl.problem.hearcremad method)": [[47, "s3prl.problem.HearCremaD.save_task"]], "save_task() (s3prl.problem.heardcase2016task2 method)": [[47, "s3prl.problem.HearDcase2016Task2.save_task"]], "save_task() (s3prl.problem.hearesc50 method)": [[47, "s3prl.problem.HearESC50.save_task"]], "save_task() (s3prl.problem.hearfsd method)": [[47, "s3prl.problem.HearFSD.save_task"]], "save_task() (s3prl.problem.heargsc5hr method)": [[47, "s3prl.problem.HearGSC5hr.save_task"]], "save_task() (s3prl.problem.heargtzan method)": [[47, "s3prl.problem.HearGtzan.save_task"]], "save_task() (s3prl.problem.heargtzanmusicspeech method)": [[47, "s3prl.problem.HearGtzanMusicSpeech.save_task"]], "save_task() (s3prl.problem.heargunshot method)": [[47, "s3prl.problem.HearGunshot.save_task"]], "save_task() (s3prl.problem.hearlibricount method)": [[47, "s3prl.problem.HearLibriCount.save_task"]], "save_task() (s3prl.problem.hearmaestro method)": [[47, "s3prl.problem.HearMaestro.save_task"]], "save_task() (s3prl.problem.hearnsynth5hr method)": [[47, "s3prl.problem.HearNsynth5hr.save_task"]], "save_task() (s3prl.problem.hearstroke method)": [[47, "s3prl.problem.HearStroke.save_task"]], "save_task() (s3prl.problem.heartonic method)": [[47, "s3prl.problem.HearTonic.save_task"]], "save_task() (s3prl.problem.hearvocal method)": [[47, "s3prl.problem.HearVocal.save_task"]], "save_task() (s3prl.problem.hearvoxlingual method)": [[47, "s3prl.problem.HearVoxLingual.save_task"]], "save_task() (s3prl.problem.superbasr method)": [[47, "s3prl.problem.SuperbASR.save_task"]], "save_task() (s3prl.problem.superbasv method)": [[47, "s3prl.problem.SuperbASV.save_task"]], "save_task() (s3prl.problem.superber method)": [[47, "s3prl.problem.SuperbER.save_task"]], "save_task() (s3prl.problem.superbic method)": [[47, "s3prl.problem.SuperbIC.save_task"]], "save_task() (s3prl.problem.superbks method)": [[47, "s3prl.problem.SuperbKS.save_task"]], "save_task() (s3prl.problem.superbpr method)": [[47, "s3prl.problem.SuperbPR.save_task"]], "save_task() (s3prl.problem.superbsd method)": [[47, "s3prl.problem.SuperbSD.save_task"]], "save_task() (s3prl.problem.superbsf method)": [[47, "s3prl.problem.SuperbSF.save_task"]], "save_task() (s3prl.problem.superbsid method)": [[47, "s3prl.problem.SuperbSID.save_task"]], "scoring() (s3prl.problem.superbsd method)": [[47, "s3prl.problem.SuperbSD.scoring"]], "train() (s3prl.problem.hearbeijingopera method)": [[47, "s3prl.problem.HearBeijingOpera.train"]], "train() (s3prl.problem.hearcremad method)": [[47, "s3prl.problem.HearCremaD.train"]], "train() (s3prl.problem.heardcase2016task2 method)": [[47, "s3prl.problem.HearDcase2016Task2.train"]], "train() (s3prl.problem.hearesc50 method)": [[47, "s3prl.problem.HearESC50.train"]], "train() (s3prl.problem.hearfsd method)": [[47, "s3prl.problem.HearFSD.train"]], "train() (s3prl.problem.heargsc5hr method)": [[47, "s3prl.problem.HearGSC5hr.train"]], "train() (s3prl.problem.heargtzan method)": [[47, "s3prl.problem.HearGtzan.train"]], "train() (s3prl.problem.heargtzanmusicspeech method)": [[47, "s3prl.problem.HearGtzanMusicSpeech.train"]], "train() (s3prl.problem.heargunshot method)": [[47, "s3prl.problem.HearGunshot.train"]], "train() (s3prl.problem.hearlibricount method)": [[47, "s3prl.problem.HearLibriCount.train"]], "train() (s3prl.problem.hearmaestro method)": [[47, "s3prl.problem.HearMaestro.train"]], "train() (s3prl.problem.hearnsynth5hr method)": [[47, "s3prl.problem.HearNsynth5hr.train"]], "train() (s3prl.problem.hearstroke method)": [[47, "s3prl.problem.HearStroke.train"]], "train() (s3prl.problem.heartonic method)": [[47, "s3prl.problem.HearTonic.train"]], "train() (s3prl.problem.hearvocal method)": [[47, "s3prl.problem.HearVocal.train"]], "train() (s3prl.problem.hearvoxlingual method)": [[47, "s3prl.problem.HearVoxLingual.train"]], "train() (s3prl.problem.superbasr method)": [[47, "s3prl.problem.SuperbASR.train"]], "train() (s3prl.problem.superbasv method)": [[47, "s3prl.problem.SuperbASV.train"]], "train() (s3prl.problem.superber method)": [[47, "s3prl.problem.SuperbER.train"]], "train() (s3prl.problem.superbic method)": [[47, "s3prl.problem.SuperbIC.train"]], "train() (s3prl.problem.superbks method)": [[47, "s3prl.problem.SuperbKS.train"]], "train() (s3prl.problem.superbpr method)": [[47, "s3prl.problem.SuperbPR.train"]], "train() (s3prl.problem.superbsd method)": [[47, "s3prl.problem.SuperbSD.train"]], "train() (s3prl.problem.superbsf method)": [[47, "s3prl.problem.SuperbSF.train"]], "train() (s3prl.problem.superbsid method)": [[47, "s3prl.problem.SuperbSID.train"]], "superbasr (class in s3prl.problem.asr)": [[48, "s3prl.problem.asr.SuperbASR"]], "superbpr (class in s3prl.problem.asr)": [[48, "s3prl.problem.asr.SuperbPR"]], "superbsf (class in s3prl.problem.asr)": [[48, "s3prl.problem.asr.SuperbSF"]], "build_batch_sampler() (s3prl.problem.asr.superbasr method)": [[48, "s3prl.problem.asr.SuperbASR.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.asr.superbpr method)": [[48, "s3prl.problem.asr.SuperbPR.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.asr.superbsf method)": [[48, "s3prl.problem.asr.SuperbSF.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.asr.superbasr method)": [[48, "s3prl.problem.asr.SuperbASR.build_collate_fn"]], "build_collate_fn() (s3prl.problem.asr.superbpr method)": [[48, "s3prl.problem.asr.SuperbPR.build_collate_fn"]], "build_collate_fn() (s3prl.problem.asr.superbsf method)": [[48, "s3prl.problem.asr.SuperbSF.build_collate_fn"]], "build_dataset() (s3prl.problem.asr.superbasr method)": [[48, "s3prl.problem.asr.SuperbASR.build_dataset"]], "build_dataset() (s3prl.problem.asr.superbpr method)": [[48, "s3prl.problem.asr.SuperbPR.build_dataset"]], "build_dataset() (s3prl.problem.asr.superbsf method)": [[48, "s3prl.problem.asr.SuperbSF.build_dataset"]], "build_downstream() (s3prl.problem.asr.superbasr method)": [[48, "s3prl.problem.asr.SuperbASR.build_downstream"]], "build_downstream() (s3prl.problem.asr.superbpr method)": [[48, "s3prl.problem.asr.SuperbPR.build_downstream"]], "build_downstream() (s3prl.problem.asr.superbsf method)": [[48, "s3prl.problem.asr.SuperbSF.build_downstream"]], "build_featurizer() (s3prl.problem.asr.superbasr method)": [[48, "s3prl.problem.asr.SuperbASR.build_featurizer"]], "build_featurizer() (s3prl.problem.asr.superbpr method)": [[48, "s3prl.problem.asr.SuperbPR.build_featurizer"]], "build_featurizer() (s3prl.problem.asr.superbsf method)": [[48, "s3prl.problem.asr.SuperbSF.build_featurizer"]], "build_model() (s3prl.problem.asr.superbasr method)": [[48, "s3prl.problem.asr.SuperbASR.build_model"]], "build_model() (s3prl.problem.asr.superbpr method)": [[48, "s3prl.problem.asr.SuperbPR.build_model"]], "build_model() (s3prl.problem.asr.superbsf method)": [[48, "s3prl.problem.asr.SuperbSF.build_model"]], "build_optimizer() (s3prl.problem.asr.superbasr method)": [[48, "s3prl.problem.asr.SuperbASR.build_optimizer"]], "build_optimizer() (s3prl.problem.asr.superbpr method)": [[48, "s3prl.problem.asr.SuperbPR.build_optimizer"]], "build_optimizer() (s3prl.problem.asr.superbsf method)": [[48, "s3prl.problem.asr.SuperbSF.build_optimizer"]], "build_scheduler() (s3prl.problem.asr.superbasr method)": [[48, "s3prl.problem.asr.SuperbASR.build_scheduler"]], "build_scheduler() (s3prl.problem.asr.superbpr method)": [[48, "s3prl.problem.asr.SuperbPR.build_scheduler"]], "build_scheduler() (s3prl.problem.asr.superbsf method)": [[48, "s3prl.problem.asr.SuperbSF.build_scheduler"]], "build_task() (s3prl.problem.asr.superbasr method)": [[48, "s3prl.problem.asr.SuperbASR.build_task"]], "build_task() (s3prl.problem.asr.superbpr method)": [[48, "s3prl.problem.asr.SuperbPR.build_task"]], "build_task() (s3prl.problem.asr.superbsf method)": [[48, "s3prl.problem.asr.SuperbSF.build_task"]], "build_tokenizer() (s3prl.problem.asr.superbasr method)": [[48, "s3prl.problem.asr.SuperbASR.build_tokenizer"]], "build_tokenizer() (s3prl.problem.asr.superbpr method)": [[48, "s3prl.problem.asr.SuperbPR.build_tokenizer"]], "build_tokenizer() (s3prl.problem.asr.superbsf method)": [[48, "s3prl.problem.asr.SuperbSF.build_tokenizer"]], "build_upstream() (s3prl.problem.asr.superbasr method)": [[48, "s3prl.problem.asr.SuperbASR.build_upstream"]], "build_upstream() (s3prl.problem.asr.superbpr method)": [[48, "s3prl.problem.asr.SuperbPR.build_upstream"]], "build_upstream() (s3prl.problem.asr.superbsf method)": [[48, "s3prl.problem.asr.SuperbSF.build_upstream"]], "default_config() (s3prl.problem.asr.superbasr method)": [[48, "s3prl.problem.asr.SuperbASR.default_config"]], "default_config() (s3prl.problem.asr.superbpr method)": [[48, "s3prl.problem.asr.SuperbPR.default_config"]], "default_config() (s3prl.problem.asr.superbsf method)": [[48, "s3prl.problem.asr.SuperbSF.default_config"]], "evaluate() (s3prl.problem.asr.superbasr method)": [[48, "s3prl.problem.asr.SuperbASR.evaluate"]], "evaluate() (s3prl.problem.asr.superbpr method)": [[48, "s3prl.problem.asr.SuperbPR.evaluate"]], "evaluate() (s3prl.problem.asr.superbsf method)": [[48, "s3prl.problem.asr.SuperbSF.evaluate"]], "get_class_from_name() (s3prl.problem.asr.superbasr class method)": [[48, "s3prl.problem.asr.SuperbASR.get_class_from_name"]], "get_class_from_name() (s3prl.problem.asr.superbpr class method)": [[48, "s3prl.problem.asr.SuperbPR.get_class_from_name"]], "get_class_from_name() (s3prl.problem.asr.superbsf class method)": [[48, "s3prl.problem.asr.SuperbSF.get_class_from_name"]], "load_model() (s3prl.problem.asr.superbasr method)": [[48, "s3prl.problem.asr.SuperbASR.load_model"]], "load_model() (s3prl.problem.asr.superbpr method)": [[48, "s3prl.problem.asr.SuperbPR.load_model"]], "load_model() (s3prl.problem.asr.superbsf method)": [[48, "s3prl.problem.asr.SuperbSF.load_model"]], "load_model_and_task() (s3prl.problem.asr.superbasr method)": [[48, "s3prl.problem.asr.SuperbASR.load_model_and_task"]], "load_model_and_task() (s3prl.problem.asr.superbpr method)": [[48, "s3prl.problem.asr.SuperbPR.load_model_and_task"]], "load_model_and_task() (s3prl.problem.asr.superbsf method)": [[48, "s3prl.problem.asr.SuperbSF.load_model_and_task"]], "load_task() (s3prl.problem.asr.superbasr method)": [[48, "s3prl.problem.asr.SuperbASR.load_task"]], "load_task() (s3prl.problem.asr.superbpr method)": [[48, "s3prl.problem.asr.SuperbPR.load_task"]], "load_task() (s3prl.problem.asr.superbsf method)": [[48, "s3prl.problem.asr.SuperbSF.load_task"]], "main() (s3prl.problem.asr.superbasr method)": [[48, "s3prl.problem.asr.SuperbASR.main"]], "main() (s3prl.problem.asr.superbpr method)": [[48, "s3prl.problem.asr.SuperbPR.main"]], "main() (s3prl.problem.asr.superbsf method)": [[48, "s3prl.problem.asr.SuperbSF.main"]], "prepare_data() (s3prl.problem.asr.superbasr method)": [[48, "s3prl.problem.asr.SuperbASR.prepare_data"]], "prepare_data() (s3prl.problem.asr.superbpr method)": [[48, "s3prl.problem.asr.SuperbPR.prepare_data"]], "prepare_data() (s3prl.problem.asr.superbsf method)": [[48, "s3prl.problem.asr.SuperbSF.prepare_data"]], "prepare_tokenizer_data() (s3prl.problem.asr.superbasr method)": [[48, "s3prl.problem.asr.SuperbASR.prepare_tokenizer_data"]], "prepare_tokenizer_data() (s3prl.problem.asr.superbpr method)": [[48, "s3prl.problem.asr.SuperbPR.prepare_tokenizer_data"]], "prepare_tokenizer_data() (s3prl.problem.asr.superbsf method)": [[48, "s3prl.problem.asr.SuperbSF.prepare_tokenizer_data"]], "run() (s3prl.problem.asr.superbasr method)": [[48, "s3prl.problem.asr.SuperbASR.run"]], "run() (s3prl.problem.asr.superbpr method)": [[48, "s3prl.problem.asr.SuperbPR.run"]], "run() (s3prl.problem.asr.superbsf method)": [[48, "s3prl.problem.asr.SuperbSF.run"]], "s3prl.problem.asr": [[48, "module-s3prl.problem.asr"]], "save_model() (s3prl.problem.asr.superbasr method)": [[48, "s3prl.problem.asr.SuperbASR.save_model"]], "save_model() (s3prl.problem.asr.superbpr method)": [[48, "s3prl.problem.asr.SuperbPR.save_model"]], "save_model() (s3prl.problem.asr.superbsf method)": [[48, "s3prl.problem.asr.SuperbSF.save_model"]], "save_task() (s3prl.problem.asr.superbasr method)": [[48, "s3prl.problem.asr.SuperbASR.save_task"]], "save_task() (s3prl.problem.asr.superbpr method)": [[48, "s3prl.problem.asr.SuperbPR.save_task"]], "save_task() (s3prl.problem.asr.superbsf method)": [[48, "s3prl.problem.asr.SuperbSF.save_task"]], "train() (s3prl.problem.asr.superbasr method)": [[48, "s3prl.problem.asr.SuperbASR.train"]], "train() (s3prl.problem.asr.superbpr method)": [[48, "s3prl.problem.asr.SuperbPR.train"]], "train() (s3prl.problem.asr.superbsf method)": [[48, "s3prl.problem.asr.SuperbSF.train"]], "asr (class in s3prl.problem.asr.run)": [[49, "s3prl.problem.asr.run.ASR"]], "build_collate_fn() (s3prl.problem.asr.run.asr method)": [[49, "s3prl.problem.asr.run.ASR.build_collate_fn"]], "build_featurizer() (s3prl.problem.asr.run.asr method)": [[49, "s3prl.problem.asr.run.ASR.build_featurizer"]], "build_model() (s3prl.problem.asr.run.asr method)": [[49, "s3prl.problem.asr.run.ASR.build_model"]], "build_optimizer() (s3prl.problem.asr.run.asr method)": [[49, "s3prl.problem.asr.run.ASR.build_optimizer"]], "build_scheduler() (s3prl.problem.asr.run.asr method)": [[49, "s3prl.problem.asr.run.ASR.build_scheduler"]], "build_task() (s3prl.problem.asr.run.asr method)": [[49, "s3prl.problem.asr.run.ASR.build_task"]], "build_upstream() (s3prl.problem.asr.run.asr method)": [[49, "s3prl.problem.asr.run.ASR.build_upstream"]], "evaluate() (s3prl.problem.asr.run.asr method)": [[49, "s3prl.problem.asr.run.ASR.evaluate"]], "get_class_from_name() (s3prl.problem.asr.run.asr class method)": [[49, "s3prl.problem.asr.run.ASR.get_class_from_name"]], "load_model() (s3prl.problem.asr.run.asr method)": [[49, "s3prl.problem.asr.run.ASR.load_model"]], "load_model_and_task() (s3prl.problem.asr.run.asr method)": [[49, "s3prl.problem.asr.run.ASR.load_model_and_task"]], "load_task() (s3prl.problem.asr.run.asr method)": [[49, "s3prl.problem.asr.run.ASR.load_task"]], "main() (s3prl.problem.asr.run.asr method)": [[49, "s3prl.problem.asr.run.ASR.main"]], "run() (s3prl.problem.asr.run.asr method)": [[49, "s3prl.problem.asr.run.ASR.run"]], "s3prl.problem.asr.run": [[49, "module-s3prl.problem.asr.run"]], "save_model() (s3prl.problem.asr.run.asr method)": [[49, "s3prl.problem.asr.run.ASR.save_model"]], "save_task() (s3prl.problem.asr.run.asr method)": [[49, "s3prl.problem.asr.run.ASR.save_task"]], "train() (s3prl.problem.asr.run.asr method)": [[49, "s3prl.problem.asr.run.ASR.train"]], "superbasr (class in s3prl.problem.asr.superb_asr)": [[50, "s3prl.problem.asr.superb_asr.SuperbASR"]], "build_batch_sampler() (s3prl.problem.asr.superb_asr.superbasr method)": [[50, "s3prl.problem.asr.superb_asr.SuperbASR.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.asr.superb_asr.superbasr method)": [[50, "s3prl.problem.asr.superb_asr.SuperbASR.build_collate_fn"]], "build_dataset() (s3prl.problem.asr.superb_asr.superbasr method)": [[50, "s3prl.problem.asr.superb_asr.SuperbASR.build_dataset"]], "build_downstream() (s3prl.problem.asr.superb_asr.superbasr method)": [[50, "s3prl.problem.asr.superb_asr.SuperbASR.build_downstream"]], "build_featurizer() (s3prl.problem.asr.superb_asr.superbasr method)": [[50, "s3prl.problem.asr.superb_asr.SuperbASR.build_featurizer"]], "build_model() (s3prl.problem.asr.superb_asr.superbasr method)": [[50, "s3prl.problem.asr.superb_asr.SuperbASR.build_model"]], "build_optimizer() (s3prl.problem.asr.superb_asr.superbasr method)": [[50, "s3prl.problem.asr.superb_asr.SuperbASR.build_optimizer"]], "build_scheduler() (s3prl.problem.asr.superb_asr.superbasr method)": [[50, "s3prl.problem.asr.superb_asr.SuperbASR.build_scheduler"]], "build_task() (s3prl.problem.asr.superb_asr.superbasr method)": [[50, "s3prl.problem.asr.superb_asr.SuperbASR.build_task"]], "build_tokenizer() (s3prl.problem.asr.superb_asr.superbasr method)": [[50, "s3prl.problem.asr.superb_asr.SuperbASR.build_tokenizer"]], "build_upstream() (s3prl.problem.asr.superb_asr.superbasr method)": [[50, "s3prl.problem.asr.superb_asr.SuperbASR.build_upstream"]], "default_config() (s3prl.problem.asr.superb_asr.superbasr method)": [[50, "s3prl.problem.asr.superb_asr.SuperbASR.default_config"]], "evaluate() (s3prl.problem.asr.superb_asr.superbasr method)": [[50, "s3prl.problem.asr.superb_asr.SuperbASR.evaluate"]], "get_class_from_name() (s3prl.problem.asr.superb_asr.superbasr class method)": [[50, "s3prl.problem.asr.superb_asr.SuperbASR.get_class_from_name"]], "load_model() (s3prl.problem.asr.superb_asr.superbasr method)": [[50, "s3prl.problem.asr.superb_asr.SuperbASR.load_model"]], "load_model_and_task() (s3prl.problem.asr.superb_asr.superbasr method)": [[50, "s3prl.problem.asr.superb_asr.SuperbASR.load_model_and_task"]], "load_task() (s3prl.problem.asr.superb_asr.superbasr method)": [[50, "s3prl.problem.asr.superb_asr.SuperbASR.load_task"]], "main() (s3prl.problem.asr.superb_asr.superbasr method)": [[50, "s3prl.problem.asr.superb_asr.SuperbASR.main"]], "prepare_common_tokenizer() (in module s3prl.problem.asr.superb_asr)": [[50, "s3prl.problem.asr.superb_asr.prepare_common_tokenizer"]], "prepare_data() (s3prl.problem.asr.superb_asr.superbasr method)": [[50, "s3prl.problem.asr.superb_asr.SuperbASR.prepare_data"]], "prepare_librispeech() (in module s3prl.problem.asr.superb_asr)": [[50, "s3prl.problem.asr.superb_asr.prepare_librispeech"]], "prepare_tokenizer_data() (s3prl.problem.asr.superb_asr.superbasr method)": [[50, "s3prl.problem.asr.superb_asr.SuperbASR.prepare_tokenizer_data"]], "run() (s3prl.problem.asr.superb_asr.superbasr method)": [[50, "s3prl.problem.asr.superb_asr.SuperbASR.run"]], "s3prl.problem.asr.superb_asr": [[50, "module-s3prl.problem.asr.superb_asr"]], "save_model() (s3prl.problem.asr.superb_asr.superbasr method)": [[50, "s3prl.problem.asr.superb_asr.SuperbASR.save_model"]], "save_task() (s3prl.problem.asr.superb_asr.superbasr method)": [[50, "s3prl.problem.asr.superb_asr.SuperbASR.save_task"]], "train() (s3prl.problem.asr.superb_asr.superbasr method)": [[50, "s3prl.problem.asr.superb_asr.SuperbASR.train"]], "superbpr (class in s3prl.problem.asr.superb_pr)": [[51, "s3prl.problem.asr.superb_pr.SuperbPR"]], "build_batch_sampler() (s3prl.problem.asr.superb_pr.superbpr method)": [[51, "s3prl.problem.asr.superb_pr.SuperbPR.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.asr.superb_pr.superbpr method)": [[51, "s3prl.problem.asr.superb_pr.SuperbPR.build_collate_fn"]], "build_dataset() (s3prl.problem.asr.superb_pr.superbpr method)": [[51, "s3prl.problem.asr.superb_pr.SuperbPR.build_dataset"]], "build_downstream() (s3prl.problem.asr.superb_pr.superbpr method)": [[51, "s3prl.problem.asr.superb_pr.SuperbPR.build_downstream"]], "build_featurizer() (s3prl.problem.asr.superb_pr.superbpr method)": [[51, "s3prl.problem.asr.superb_pr.SuperbPR.build_featurizer"]], "build_model() (s3prl.problem.asr.superb_pr.superbpr method)": [[51, "s3prl.problem.asr.superb_pr.SuperbPR.build_model"]], "build_optimizer() (s3prl.problem.asr.superb_pr.superbpr method)": [[51, "s3prl.problem.asr.superb_pr.SuperbPR.build_optimizer"]], "build_scheduler() (s3prl.problem.asr.superb_pr.superbpr method)": [[51, "s3prl.problem.asr.superb_pr.SuperbPR.build_scheduler"]], "build_task() (s3prl.problem.asr.superb_pr.superbpr method)": [[51, "s3prl.problem.asr.superb_pr.SuperbPR.build_task"]], "build_tokenizer() (s3prl.problem.asr.superb_pr.superbpr method)": [[51, "s3prl.problem.asr.superb_pr.SuperbPR.build_tokenizer"]], "build_upstream() (s3prl.problem.asr.superb_pr.superbpr method)": [[51, "s3prl.problem.asr.superb_pr.SuperbPR.build_upstream"]], "default_config() (s3prl.problem.asr.superb_pr.superbpr method)": [[51, "s3prl.problem.asr.superb_pr.SuperbPR.default_config"]], "evaluate() (s3prl.problem.asr.superb_pr.superbpr method)": [[51, "s3prl.problem.asr.superb_pr.SuperbPR.evaluate"]], "get_class_from_name() (s3prl.problem.asr.superb_pr.superbpr class method)": [[51, "s3prl.problem.asr.superb_pr.SuperbPR.get_class_from_name"]], "load_model() (s3prl.problem.asr.superb_pr.superbpr method)": [[51, "s3prl.problem.asr.superb_pr.SuperbPR.load_model"]], "load_model_and_task() (s3prl.problem.asr.superb_pr.superbpr method)": [[51, "s3prl.problem.asr.superb_pr.SuperbPR.load_model_and_task"]], "load_task() (s3prl.problem.asr.superb_pr.superbpr method)": [[51, "s3prl.problem.asr.superb_pr.SuperbPR.load_task"]], "main() (s3prl.problem.asr.superb_pr.superbpr method)": [[51, "s3prl.problem.asr.superb_pr.SuperbPR.main"]], "prepare_data() (s3prl.problem.asr.superb_pr.superbpr method)": [[51, "s3prl.problem.asr.superb_pr.SuperbPR.prepare_data"]], "prepare_tokenizer_data() (s3prl.problem.asr.superb_pr.superbpr method)": [[51, "s3prl.problem.asr.superb_pr.SuperbPR.prepare_tokenizer_data"]], "run() (s3prl.problem.asr.superb_pr.superbpr method)": [[51, "s3prl.problem.asr.superb_pr.SuperbPR.run"]], "s3prl.problem.asr.superb_pr": [[51, "module-s3prl.problem.asr.superb_pr"]], "save_model() (s3prl.problem.asr.superb_pr.superbpr method)": [[51, "s3prl.problem.asr.superb_pr.SuperbPR.save_model"]], "save_task() (s3prl.problem.asr.superb_pr.superbpr method)": [[51, "s3prl.problem.asr.superb_pr.SuperbPR.save_task"]], "train() (s3prl.problem.asr.superb_pr.superbpr method)": [[51, "s3prl.problem.asr.superb_pr.SuperbPR.train"]], "superbsf (class in s3prl.problem.asr.superb_sf)": [[52, "s3prl.problem.asr.superb_sf.SuperbSF"]], "audio_snips_for_slot_filling() (in module s3prl.problem.asr.superb_sf)": [[52, "s3prl.problem.asr.superb_sf.audio_snips_for_slot_filling"]], "build_batch_sampler() (s3prl.problem.asr.superb_sf.superbsf method)": [[52, "s3prl.problem.asr.superb_sf.SuperbSF.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.asr.superb_sf.superbsf method)": [[52, "s3prl.problem.asr.superb_sf.SuperbSF.build_collate_fn"]], "build_dataset() (s3prl.problem.asr.superb_sf.superbsf method)": [[52, "s3prl.problem.asr.superb_sf.SuperbSF.build_dataset"]], "build_downstream() (s3prl.problem.asr.superb_sf.superbsf method)": [[52, "s3prl.problem.asr.superb_sf.SuperbSF.build_downstream"]], "build_featurizer() (s3prl.problem.asr.superb_sf.superbsf method)": [[52, "s3prl.problem.asr.superb_sf.SuperbSF.build_featurizer"]], "build_model() (s3prl.problem.asr.superb_sf.superbsf method)": [[52, "s3prl.problem.asr.superb_sf.SuperbSF.build_model"]], "build_optimizer() (s3prl.problem.asr.superb_sf.superbsf method)": [[52, "s3prl.problem.asr.superb_sf.SuperbSF.build_optimizer"]], "build_scheduler() (s3prl.problem.asr.superb_sf.superbsf method)": [[52, "s3prl.problem.asr.superb_sf.SuperbSF.build_scheduler"]], "build_task() (s3prl.problem.asr.superb_sf.superbsf method)": [[52, "s3prl.problem.asr.superb_sf.SuperbSF.build_task"]], "build_tokenizer() (s3prl.problem.asr.superb_sf.superbsf method)": [[52, "s3prl.problem.asr.superb_sf.SuperbSF.build_tokenizer"]], "build_upstream() (s3prl.problem.asr.superb_sf.superbsf method)": [[52, "s3prl.problem.asr.superb_sf.SuperbSF.build_upstream"]], "default_config() (s3prl.problem.asr.superb_sf.superbsf method)": [[52, "s3prl.problem.asr.superb_sf.SuperbSF.default_config"]], "evaluate() (s3prl.problem.asr.superb_sf.superbsf method)": [[52, "s3prl.problem.asr.superb_sf.SuperbSF.evaluate"]], "get_class_from_name() (s3prl.problem.asr.superb_sf.superbsf class method)": [[52, "s3prl.problem.asr.superb_sf.SuperbSF.get_class_from_name"]], "load_model() (s3prl.problem.asr.superb_sf.superbsf method)": [[52, "s3prl.problem.asr.superb_sf.SuperbSF.load_model"]], "load_model_and_task() (s3prl.problem.asr.superb_sf.superbsf method)": [[52, "s3prl.problem.asr.superb_sf.SuperbSF.load_model_and_task"]], "load_task() (s3prl.problem.asr.superb_sf.superbsf method)": [[52, "s3prl.problem.asr.superb_sf.SuperbSF.load_task"]], "main() (s3prl.problem.asr.superb_sf.superbsf method)": [[52, "s3prl.problem.asr.superb_sf.SuperbSF.main"]], "prepare_data() (s3prl.problem.asr.superb_sf.superbsf method)": [[52, "s3prl.problem.asr.superb_sf.SuperbSF.prepare_data"]], "prepare_tokenizer_data() (s3prl.problem.asr.superb_sf.superbsf method)": [[52, "s3prl.problem.asr.superb_sf.SuperbSF.prepare_tokenizer_data"]], "run() (s3prl.problem.asr.superb_sf.superbsf method)": [[52, "s3prl.problem.asr.superb_sf.SuperbSF.run"]], "s3prl.problem.asr.superb_sf": [[52, "module-s3prl.problem.asr.superb_sf"]], "save_model() (s3prl.problem.asr.superb_sf.superbsf method)": [[52, "s3prl.problem.asr.superb_sf.SuperbSF.save_model"]], "save_task() (s3prl.problem.asr.superb_sf.superbsf method)": [[52, "s3prl.problem.asr.superb_sf.SuperbSF.save_task"]], "train() (s3prl.problem.asr.superb_sf.superbsf method)": [[52, "s3prl.problem.asr.superb_sf.SuperbSF.train"]], "superbasv (class in s3prl.problem.asv)": [[53, "s3prl.problem.asv.SuperbASV"]], "build_batch_sampler() (s3prl.problem.asv.superbasv method)": [[53, "s3prl.problem.asv.SuperbASV.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.asv.superbasv method)": [[53, "s3prl.problem.asv.SuperbASV.build_collate_fn"]], "build_dataset() (s3prl.problem.asv.superbasv method)": [[53, "s3prl.problem.asv.SuperbASV.build_dataset"]], "build_downstream() (s3prl.problem.asv.superbasv method)": [[53, "s3prl.problem.asv.SuperbASV.build_downstream"]], "build_encoder() (s3prl.problem.asv.superbasv method)": [[53, "s3prl.problem.asv.SuperbASV.build_encoder"]], "build_featurizer() (s3prl.problem.asv.superbasv method)": [[53, "s3prl.problem.asv.SuperbASV.build_featurizer"]], "build_model() (s3prl.problem.asv.superbasv method)": [[53, "s3prl.problem.asv.SuperbASV.build_model"]], "build_optimizer() (s3prl.problem.asv.superbasv method)": [[53, "s3prl.problem.asv.SuperbASV.build_optimizer"]], "build_scheduler() (s3prl.problem.asv.superbasv method)": [[53, "s3prl.problem.asv.SuperbASV.build_scheduler"]], "build_task() (s3prl.problem.asv.superbasv method)": [[53, "s3prl.problem.asv.SuperbASV.build_task"]], "build_upstream() (s3prl.problem.asv.superbasv method)": [[53, "s3prl.problem.asv.SuperbASV.build_upstream"]], "default_config() (s3prl.problem.asv.superbasv method)": [[53, "s3prl.problem.asv.SuperbASV.default_config"]], "evaluate() (s3prl.problem.asv.superbasv method)": [[53, "s3prl.problem.asv.SuperbASV.evaluate"]], "get_class_from_name() (s3prl.problem.asv.superbasv class method)": [[53, "s3prl.problem.asv.SuperbASV.get_class_from_name"]], "load_model() (s3prl.problem.asv.superbasv method)": [[53, "s3prl.problem.asv.SuperbASV.load_model"]], "load_model_and_task() (s3prl.problem.asv.superbasv method)": [[53, "s3prl.problem.asv.SuperbASV.load_model_and_task"]], "load_task() (s3prl.problem.asv.superbasv method)": [[53, "s3prl.problem.asv.SuperbASV.load_task"]], "main() (s3prl.problem.asv.superbasv method)": [[53, "s3prl.problem.asv.SuperbASV.main"]], "prepare_data() (s3prl.problem.asv.superbasv method)": [[53, "s3prl.problem.asv.SuperbASV.prepare_data"]], "run() (s3prl.problem.asv.superbasv method)": [[53, "s3prl.problem.asv.SuperbASV.run"]], "s3prl.problem.asv": [[53, "module-s3prl.problem.asv"]], "save_model() (s3prl.problem.asv.superbasv method)": [[53, "s3prl.problem.asv.SuperbASV.save_model"]], "save_task() (s3prl.problem.asv.superbasv method)": [[53, "s3prl.problem.asv.SuperbASV.save_task"]], "train() (s3prl.problem.asv.superbasv method)": [[53, "s3prl.problem.asv.SuperbASV.train"]], "asv (class in s3prl.problem.asv.run)": [[54, "s3prl.problem.asv.run.ASV"]], "build_collate_fn() (s3prl.problem.asv.run.asv method)": [[54, "s3prl.problem.asv.run.ASV.build_collate_fn"]], "build_featurizer() (s3prl.problem.asv.run.asv method)": [[54, "s3prl.problem.asv.run.ASV.build_featurizer"]], "build_model() (s3prl.problem.asv.run.asv method)": [[54, "s3prl.problem.asv.run.ASV.build_model"]], "build_optimizer() (s3prl.problem.asv.run.asv method)": [[54, "s3prl.problem.asv.run.ASV.build_optimizer"]], "build_scheduler() (s3prl.problem.asv.run.asv method)": [[54, "s3prl.problem.asv.run.ASV.build_scheduler"]], "build_task() (s3prl.problem.asv.run.asv method)": [[54, "s3prl.problem.asv.run.ASV.build_task"]], "build_upstream() (s3prl.problem.asv.run.asv method)": [[54, "s3prl.problem.asv.run.ASV.build_upstream"]], "evaluate() (s3prl.problem.asv.run.asv method)": [[54, "s3prl.problem.asv.run.ASV.evaluate"]], "get_class_from_name() (s3prl.problem.asv.run.asv class method)": [[54, "s3prl.problem.asv.run.ASV.get_class_from_name"]], "load_model() (s3prl.problem.asv.run.asv method)": [[54, "s3prl.problem.asv.run.ASV.load_model"]], "load_model_and_task() (s3prl.problem.asv.run.asv method)": [[54, "s3prl.problem.asv.run.ASV.load_model_and_task"]], "load_task() (s3prl.problem.asv.run.asv method)": [[54, "s3prl.problem.asv.run.ASV.load_task"]], "main() (s3prl.problem.asv.run.asv method)": [[54, "s3prl.problem.asv.run.ASV.main"]], "run() (s3prl.problem.asv.run.asv method)": [[54, "s3prl.problem.asv.run.ASV.run"]], "s3prl.problem.asv.run": [[54, "module-s3prl.problem.asv.run"]], "save_model() (s3prl.problem.asv.run.asv method)": [[54, "s3prl.problem.asv.run.ASV.save_model"]], "save_task() (s3prl.problem.asv.run.asv method)": [[54, "s3prl.problem.asv.run.ASV.save_task"]], "train() (s3prl.problem.asv.run.asv method)": [[54, "s3prl.problem.asv.run.ASV.train"]], "superbasv (class in s3prl.problem.asv.superb_asv)": [[55, "s3prl.problem.asv.superb_asv.SuperbASV"]], "build_batch_sampler() (s3prl.problem.asv.superb_asv.superbasv method)": [[55, "s3prl.problem.asv.superb_asv.SuperbASV.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.asv.superb_asv.superbasv method)": [[55, "s3prl.problem.asv.superb_asv.SuperbASV.build_collate_fn"]], "build_dataset() (s3prl.problem.asv.superb_asv.superbasv method)": [[55, "s3prl.problem.asv.superb_asv.SuperbASV.build_dataset"]], "build_downstream() (s3prl.problem.asv.superb_asv.superbasv method)": [[55, "s3prl.problem.asv.superb_asv.SuperbASV.build_downstream"]], "build_encoder() (s3prl.problem.asv.superb_asv.superbasv method)": [[55, "s3prl.problem.asv.superb_asv.SuperbASV.build_encoder"]], "build_featurizer() (s3prl.problem.asv.superb_asv.superbasv method)": [[55, "s3prl.problem.asv.superb_asv.SuperbASV.build_featurizer"]], "build_model() (s3prl.problem.asv.superb_asv.superbasv method)": [[55, "s3prl.problem.asv.superb_asv.SuperbASV.build_model"]], "build_optimizer() (s3prl.problem.asv.superb_asv.superbasv method)": [[55, "s3prl.problem.asv.superb_asv.SuperbASV.build_optimizer"]], "build_scheduler() (s3prl.problem.asv.superb_asv.superbasv method)": [[55, "s3prl.problem.asv.superb_asv.SuperbASV.build_scheduler"]], "build_task() (s3prl.problem.asv.superb_asv.superbasv method)": [[55, "s3prl.problem.asv.superb_asv.SuperbASV.build_task"]], "build_upstream() (s3prl.problem.asv.superb_asv.superbasv method)": [[55, "s3prl.problem.asv.superb_asv.SuperbASV.build_upstream"]], "default_config() (s3prl.problem.asv.superb_asv.superbasv method)": [[55, "s3prl.problem.asv.superb_asv.SuperbASV.default_config"]], "evaluate() (s3prl.problem.asv.superb_asv.superbasv method)": [[55, "s3prl.problem.asv.superb_asv.SuperbASV.evaluate"]], "get_class_from_name() (s3prl.problem.asv.superb_asv.superbasv class method)": [[55, "s3prl.problem.asv.superb_asv.SuperbASV.get_class_from_name"]], "load_model() (s3prl.problem.asv.superb_asv.superbasv method)": [[55, "s3prl.problem.asv.superb_asv.SuperbASV.load_model"]], "load_model_and_task() (s3prl.problem.asv.superb_asv.superbasv method)": [[55, "s3prl.problem.asv.superb_asv.SuperbASV.load_model_and_task"]], "load_task() (s3prl.problem.asv.superb_asv.superbasv method)": [[55, "s3prl.problem.asv.superb_asv.SuperbASV.load_task"]], "main() (s3prl.problem.asv.superb_asv.superbasv method)": [[55, "s3prl.problem.asv.superb_asv.SuperbASV.main"]], "prepare_data() (s3prl.problem.asv.superb_asv.superbasv method)": [[55, "s3prl.problem.asv.superb_asv.SuperbASV.prepare_data"]], "prepare_voxceleb1_for_sv() (in module s3prl.problem.asv.superb_asv)": [[55, "s3prl.problem.asv.superb_asv.prepare_voxceleb1_for_sv"]], "run() (s3prl.problem.asv.superb_asv.superbasv method)": [[55, "s3prl.problem.asv.superb_asv.SuperbASV.run"]], "s3prl.problem.asv.superb_asv": [[55, "module-s3prl.problem.asv.superb_asv"]], "save_model() (s3prl.problem.asv.superb_asv.superbasv method)": [[55, "s3prl.problem.asv.superb_asv.SuperbASV.save_model"]], "save_task() (s3prl.problem.asv.superb_asv.superbasv method)": [[55, "s3prl.problem.asv.superb_asv.SuperbASV.save_task"]], "train() (s3prl.problem.asv.superb_asv.superbasv method)": [[55, "s3prl.problem.asv.superb_asv.SuperbASV.train"]], "problem (class in s3prl.problem.base)": [[56, "s3prl.problem.base.Problem"]], "build_collate_fn() (s3prl.problem.base.problem method)": [[56, "s3prl.problem.base.Problem.build_collate_fn"]], "build_featurizer() (s3prl.problem.base.problem method)": [[56, "s3prl.problem.base.Problem.build_featurizer"]], "build_model() (s3prl.problem.base.problem method)": [[56, "s3prl.problem.base.Problem.build_model"]], "build_optimizer() (s3prl.problem.base.problem method)": [[56, "s3prl.problem.base.Problem.build_optimizer"]], "build_scheduler() (s3prl.problem.base.problem method)": [[56, "s3prl.problem.base.Problem.build_scheduler"]], "build_upstream() (s3prl.problem.base.problem method)": [[56, "s3prl.problem.base.Problem.build_upstream"]], "evaluate() (s3prl.problem.base.problem method)": [[56, "s3prl.problem.base.Problem.evaluate"]], "get_class_from_name() (s3prl.problem.base.problem class method)": [[56, "s3prl.problem.base.Problem.get_class_from_name"]], "load_model() (s3prl.problem.base.problem method)": [[56, "s3prl.problem.base.Problem.load_model"]], "load_model_and_task() (s3prl.problem.base.problem method)": [[56, "s3prl.problem.base.Problem.load_model_and_task"]], "load_task() (s3prl.problem.base.problem method)": [[56, "s3prl.problem.base.Problem.load_task"]], "main() (s3prl.problem.base.problem method)": [[56, "s3prl.problem.base.Problem.main"]], "s3prl.problem.base": [[56, "module-s3prl.problem.base"]], "save_model() (s3prl.problem.base.problem method)": [[56, "s3prl.problem.base.Problem.save_model"]], "save_task() (s3prl.problem.base.problem method)": [[56, "s3prl.problem.base.Problem.save_task"]], "train() (s3prl.problem.base.problem method)": [[56, "s3prl.problem.base.Problem.train"]], "hearbeijingopera (class in s3prl.problem.common)": [[57, "s3prl.problem.common.HearBeijingOpera"]], "hearcremad (class in s3prl.problem.common)": [[57, "s3prl.problem.common.HearCremaD"]], "heardcase2016task2 (class in s3prl.problem.common)": [[57, "s3prl.problem.common.HearDcase2016Task2"]], "hearesc50 (class in s3prl.problem.common)": [[57, "s3prl.problem.common.HearESC50"]], "hearfsd (class in s3prl.problem.common)": [[57, "s3prl.problem.common.HearFSD"]], "heargsc5hr (class in s3prl.problem.common)": [[57, "s3prl.problem.common.HearGSC5hr"]], "heargtzan (class in s3prl.problem.common)": [[57, "s3prl.problem.common.HearGtzan"]], "heargtzanmusicspeech (class in s3prl.problem.common)": [[57, "s3prl.problem.common.HearGtzanMusicSpeech"]], "heargunshot (class in s3prl.problem.common)": [[57, "s3prl.problem.common.HearGunshot"]], "hearlibricount (class in s3prl.problem.common)": [[57, "s3prl.problem.common.HearLibriCount"]], "hearmaestro (class in s3prl.problem.common)": [[57, "s3prl.problem.common.HearMaestro"]], "hearnsynth5hr (class in s3prl.problem.common)": [[57, "s3prl.problem.common.HearNsynth5hr"]], "hearstroke (class in s3prl.problem.common)": [[57, "s3prl.problem.common.HearStroke"]], "heartonic (class in s3prl.problem.common)": [[57, "s3prl.problem.common.HearTonic"]], "hearvocal (class in s3prl.problem.common)": [[57, "s3prl.problem.common.HearVocal"]], "hearvoxlingual (class in s3prl.problem.common)": [[57, "s3prl.problem.common.HearVoxLingual"]], "superber (class in s3prl.problem.common)": [[57, "s3prl.problem.common.SuperbER"]], "superbic (class in s3prl.problem.common)": [[57, "s3prl.problem.common.SuperbIC"]], "superbks (class in s3prl.problem.common)": [[57, "s3prl.problem.common.SuperbKS"]], "superbsid (class in s3prl.problem.common)": [[57, "s3prl.problem.common.SuperbSID"]], "build_batch_sampler() (s3prl.problem.common.hearbeijingopera method)": [[57, "s3prl.problem.common.HearBeijingOpera.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hearcremad method)": [[57, "s3prl.problem.common.HearCremaD.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.heardcase2016task2 method)": [[57, "s3prl.problem.common.HearDcase2016Task2.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hearesc50 method)": [[57, "s3prl.problem.common.HearESC50.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hearfsd method)": [[57, "s3prl.problem.common.HearFSD.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.heargsc5hr method)": [[57, "s3prl.problem.common.HearGSC5hr.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.heargtzan method)": [[57, "s3prl.problem.common.HearGtzan.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.heargtzanmusicspeech method)": [[57, "s3prl.problem.common.HearGtzanMusicSpeech.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.heargunshot method)": [[57, "s3prl.problem.common.HearGunshot.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hearlibricount method)": [[57, "s3prl.problem.common.HearLibriCount.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hearmaestro method)": [[57, "s3prl.problem.common.HearMaestro.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hearnsynth5hr method)": [[57, "s3prl.problem.common.HearNsynth5hr.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hearstroke method)": [[57, "s3prl.problem.common.HearStroke.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.heartonic method)": [[57, "s3prl.problem.common.HearTonic.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hearvocal method)": [[57, "s3prl.problem.common.HearVocal.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hearvoxlingual method)": [[57, "s3prl.problem.common.HearVoxLingual.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.superber method)": [[57, "s3prl.problem.common.SuperbER.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.superbic method)": [[57, "s3prl.problem.common.SuperbIC.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.superbks method)": [[57, "s3prl.problem.common.SuperbKS.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.superbsid method)": [[57, "s3prl.problem.common.SuperbSID.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hearbeijingopera method)": [[57, "s3prl.problem.common.HearBeijingOpera.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hearcremad method)": [[57, "s3prl.problem.common.HearCremaD.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.heardcase2016task2 method)": [[57, "s3prl.problem.common.HearDcase2016Task2.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hearesc50 method)": [[57, "s3prl.problem.common.HearESC50.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hearfsd method)": [[57, "s3prl.problem.common.HearFSD.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.heargsc5hr method)": [[57, "s3prl.problem.common.HearGSC5hr.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.heargtzan method)": [[57, "s3prl.problem.common.HearGtzan.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.heargtzanmusicspeech method)": [[57, "s3prl.problem.common.HearGtzanMusicSpeech.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.heargunshot method)": [[57, "s3prl.problem.common.HearGunshot.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hearlibricount method)": [[57, "s3prl.problem.common.HearLibriCount.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hearmaestro method)": [[57, "s3prl.problem.common.HearMaestro.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hearnsynth5hr method)": [[57, "s3prl.problem.common.HearNsynth5hr.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hearstroke method)": [[57, "s3prl.problem.common.HearStroke.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.heartonic method)": [[57, "s3prl.problem.common.HearTonic.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hearvocal method)": [[57, "s3prl.problem.common.HearVocal.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hearvoxlingual method)": [[57, "s3prl.problem.common.HearVoxLingual.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.superber method)": [[57, "s3prl.problem.common.SuperbER.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.superbic method)": [[57, "s3prl.problem.common.SuperbIC.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.superbks method)": [[57, "s3prl.problem.common.SuperbKS.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.superbsid method)": [[57, "s3prl.problem.common.SuperbSID.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hearbeijingopera method)": [[57, "s3prl.problem.common.HearBeijingOpera.build_dataset"]], "build_dataset() (s3prl.problem.common.hearcremad method)": [[57, "s3prl.problem.common.HearCremaD.build_dataset"]], "build_dataset() (s3prl.problem.common.heardcase2016task2 method)": [[57, "s3prl.problem.common.HearDcase2016Task2.build_dataset"]], "build_dataset() (s3prl.problem.common.hearesc50 method)": [[57, "s3prl.problem.common.HearESC50.build_dataset"]], "build_dataset() (s3prl.problem.common.hearfsd method)": [[57, "s3prl.problem.common.HearFSD.build_dataset"]], "build_dataset() (s3prl.problem.common.heargsc5hr method)": [[57, "s3prl.problem.common.HearGSC5hr.build_dataset"]], "build_dataset() (s3prl.problem.common.heargtzan method)": [[57, "s3prl.problem.common.HearGtzan.build_dataset"]], "build_dataset() (s3prl.problem.common.heargtzanmusicspeech method)": [[57, "s3prl.problem.common.HearGtzanMusicSpeech.build_dataset"]], "build_dataset() (s3prl.problem.common.heargunshot method)": [[57, "s3prl.problem.common.HearGunshot.build_dataset"]], "build_dataset() (s3prl.problem.common.hearlibricount method)": [[57, "s3prl.problem.common.HearLibriCount.build_dataset"]], "build_dataset() (s3prl.problem.common.hearmaestro method)": [[57, "s3prl.problem.common.HearMaestro.build_dataset"]], "build_dataset() (s3prl.problem.common.hearnsynth5hr method)": [[57, "s3prl.problem.common.HearNsynth5hr.build_dataset"]], "build_dataset() (s3prl.problem.common.hearstroke method)": [[57, "s3prl.problem.common.HearStroke.build_dataset"]], "build_dataset() (s3prl.problem.common.heartonic method)": [[57, "s3prl.problem.common.HearTonic.build_dataset"]], "build_dataset() (s3prl.problem.common.hearvocal method)": [[57, "s3prl.problem.common.HearVocal.build_dataset"]], "build_dataset() (s3prl.problem.common.hearvoxlingual method)": [[57, "s3prl.problem.common.HearVoxLingual.build_dataset"]], "build_dataset() (s3prl.problem.common.superber method)": [[57, "s3prl.problem.common.SuperbER.build_dataset"]], "build_dataset() (s3prl.problem.common.superbic method)": [[57, "s3prl.problem.common.SuperbIC.build_dataset"]], "build_dataset() (s3prl.problem.common.superbks method)": [[57, "s3prl.problem.common.SuperbKS.build_dataset"]], "build_dataset() (s3prl.problem.common.superbsid method)": [[57, "s3prl.problem.common.SuperbSID.build_dataset"]], "build_downstream() (s3prl.problem.common.hearbeijingopera method)": [[57, "s3prl.problem.common.HearBeijingOpera.build_downstream"]], "build_downstream() (s3prl.problem.common.hearcremad method)": [[57, "s3prl.problem.common.HearCremaD.build_downstream"]], "build_downstream() (s3prl.problem.common.heardcase2016task2 method)": [[57, "s3prl.problem.common.HearDcase2016Task2.build_downstream"]], "build_downstream() (s3prl.problem.common.hearesc50 method)": [[57, "s3prl.problem.common.HearESC50.build_downstream"]], "build_downstream() (s3prl.problem.common.hearfsd method)": [[57, "s3prl.problem.common.HearFSD.build_downstream"]], "build_downstream() (s3prl.problem.common.heargsc5hr method)": [[57, "s3prl.problem.common.HearGSC5hr.build_downstream"]], "build_downstream() (s3prl.problem.common.heargtzan method)": [[57, "s3prl.problem.common.HearGtzan.build_downstream"]], "build_downstream() (s3prl.problem.common.heargtzanmusicspeech method)": [[57, "s3prl.problem.common.HearGtzanMusicSpeech.build_downstream"]], "build_downstream() (s3prl.problem.common.heargunshot method)": [[57, "s3prl.problem.common.HearGunshot.build_downstream"]], "build_downstream() (s3prl.problem.common.hearlibricount method)": [[57, "s3prl.problem.common.HearLibriCount.build_downstream"]], "build_downstream() (s3prl.problem.common.hearmaestro method)": [[57, "s3prl.problem.common.HearMaestro.build_downstream"]], "build_downstream() (s3prl.problem.common.hearnsynth5hr method)": [[57, "s3prl.problem.common.HearNsynth5hr.build_downstream"]], "build_downstream() (s3prl.problem.common.hearstroke method)": [[57, "s3prl.problem.common.HearStroke.build_downstream"]], "build_downstream() (s3prl.problem.common.heartonic method)": [[57, "s3prl.problem.common.HearTonic.build_downstream"]], "build_downstream() (s3prl.problem.common.hearvocal method)": [[57, "s3prl.problem.common.HearVocal.build_downstream"]], "build_downstream() (s3prl.problem.common.hearvoxlingual method)": [[57, "s3prl.problem.common.HearVoxLingual.build_downstream"]], "build_downstream() (s3prl.problem.common.superber method)": [[57, "s3prl.problem.common.SuperbER.build_downstream"]], "build_downstream() (s3prl.problem.common.superbic method)": [[57, "s3prl.problem.common.SuperbIC.build_downstream"]], "build_downstream() (s3prl.problem.common.superbks method)": [[57, "s3prl.problem.common.SuperbKS.build_downstream"]], "build_downstream() (s3prl.problem.common.superbsid method)": [[57, "s3prl.problem.common.SuperbSID.build_downstream"]], "build_encoder() (s3prl.problem.common.hearbeijingopera method)": [[57, "s3prl.problem.common.HearBeijingOpera.build_encoder"]], "build_encoder() (s3prl.problem.common.hearcremad method)": [[57, "s3prl.problem.common.HearCremaD.build_encoder"]], "build_encoder() (s3prl.problem.common.heardcase2016task2 method)": [[57, "s3prl.problem.common.HearDcase2016Task2.build_encoder"]], "build_encoder() (s3prl.problem.common.hearesc50 method)": [[57, "s3prl.problem.common.HearESC50.build_encoder"]], "build_encoder() (s3prl.problem.common.hearfsd method)": [[57, "s3prl.problem.common.HearFSD.build_encoder"]], "build_encoder() (s3prl.problem.common.heargsc5hr method)": [[57, "s3prl.problem.common.HearGSC5hr.build_encoder"]], "build_encoder() (s3prl.problem.common.heargtzan method)": [[57, "s3prl.problem.common.HearGtzan.build_encoder"]], "build_encoder() (s3prl.problem.common.heargtzanmusicspeech method)": [[57, "s3prl.problem.common.HearGtzanMusicSpeech.build_encoder"]], "build_encoder() (s3prl.problem.common.heargunshot method)": [[57, "s3prl.problem.common.HearGunshot.build_encoder"]], "build_encoder() (s3prl.problem.common.hearlibricount method)": [[57, "s3prl.problem.common.HearLibriCount.build_encoder"]], "build_encoder() (s3prl.problem.common.hearmaestro method)": [[57, "s3prl.problem.common.HearMaestro.build_encoder"]], "build_encoder() (s3prl.problem.common.hearnsynth5hr method)": [[57, "s3prl.problem.common.HearNsynth5hr.build_encoder"]], "build_encoder() (s3prl.problem.common.hearstroke method)": [[57, "s3prl.problem.common.HearStroke.build_encoder"]], "build_encoder() (s3prl.problem.common.heartonic method)": [[57, "s3prl.problem.common.HearTonic.build_encoder"]], "build_encoder() (s3prl.problem.common.hearvocal method)": [[57, "s3prl.problem.common.HearVocal.build_encoder"]], "build_encoder() (s3prl.problem.common.hearvoxlingual method)": [[57, "s3prl.problem.common.HearVoxLingual.build_encoder"]], "build_encoder() (s3prl.problem.common.superber method)": [[57, "s3prl.problem.common.SuperbER.build_encoder"]], "build_encoder() (s3prl.problem.common.superbic method)": [[57, "s3prl.problem.common.SuperbIC.build_encoder"]], "build_encoder() (s3prl.problem.common.superbks method)": [[57, "s3prl.problem.common.SuperbKS.build_encoder"]], "build_encoder() (s3prl.problem.common.superbsid method)": [[57, "s3prl.problem.common.SuperbSID.build_encoder"]], "build_featurizer() (s3prl.problem.common.hearbeijingopera method)": [[57, "s3prl.problem.common.HearBeijingOpera.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hearcremad method)": [[57, "s3prl.problem.common.HearCremaD.build_featurizer"]], "build_featurizer() (s3prl.problem.common.heardcase2016task2 method)": [[57, "s3prl.problem.common.HearDcase2016Task2.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hearesc50 method)": [[57, "s3prl.problem.common.HearESC50.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hearfsd method)": [[57, "s3prl.problem.common.HearFSD.build_featurizer"]], "build_featurizer() (s3prl.problem.common.heargsc5hr method)": [[57, "s3prl.problem.common.HearGSC5hr.build_featurizer"]], "build_featurizer() (s3prl.problem.common.heargtzan method)": [[57, "s3prl.problem.common.HearGtzan.build_featurizer"]], "build_featurizer() (s3prl.problem.common.heargtzanmusicspeech method)": [[57, "s3prl.problem.common.HearGtzanMusicSpeech.build_featurizer"]], "build_featurizer() (s3prl.problem.common.heargunshot method)": [[57, "s3prl.problem.common.HearGunshot.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hearlibricount method)": [[57, "s3prl.problem.common.HearLibriCount.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hearmaestro method)": [[57, "s3prl.problem.common.HearMaestro.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hearnsynth5hr method)": [[57, "s3prl.problem.common.HearNsynth5hr.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hearstroke method)": [[57, "s3prl.problem.common.HearStroke.build_featurizer"]], "build_featurizer() (s3prl.problem.common.heartonic method)": [[57, "s3prl.problem.common.HearTonic.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hearvocal method)": [[57, "s3prl.problem.common.HearVocal.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hearvoxlingual method)": [[57, "s3prl.problem.common.HearVoxLingual.build_featurizer"]], "build_featurizer() (s3prl.problem.common.superber method)": [[57, "s3prl.problem.common.SuperbER.build_featurizer"]], "build_featurizer() (s3prl.problem.common.superbic method)": [[57, "s3prl.problem.common.SuperbIC.build_featurizer"]], "build_featurizer() (s3prl.problem.common.superbks method)": [[57, "s3prl.problem.common.SuperbKS.build_featurizer"]], "build_featurizer() (s3prl.problem.common.superbsid method)": [[57, "s3prl.problem.common.SuperbSID.build_featurizer"]], "build_model() (s3prl.problem.common.hearbeijingopera method)": [[57, "s3prl.problem.common.HearBeijingOpera.build_model"]], "build_model() (s3prl.problem.common.hearcremad method)": [[57, "s3prl.problem.common.HearCremaD.build_model"]], "build_model() (s3prl.problem.common.heardcase2016task2 method)": [[57, "s3prl.problem.common.HearDcase2016Task2.build_model"]], "build_model() (s3prl.problem.common.hearesc50 method)": [[57, "s3prl.problem.common.HearESC50.build_model"]], "build_model() (s3prl.problem.common.hearfsd method)": [[57, "s3prl.problem.common.HearFSD.build_model"]], "build_model() (s3prl.problem.common.heargsc5hr method)": [[57, "s3prl.problem.common.HearGSC5hr.build_model"]], "build_model() (s3prl.problem.common.heargtzan method)": [[57, "s3prl.problem.common.HearGtzan.build_model"]], "build_model() (s3prl.problem.common.heargtzanmusicspeech method)": [[57, "s3prl.problem.common.HearGtzanMusicSpeech.build_model"]], "build_model() (s3prl.problem.common.heargunshot method)": [[57, "s3prl.problem.common.HearGunshot.build_model"]], "build_model() (s3prl.problem.common.hearlibricount method)": [[57, "s3prl.problem.common.HearLibriCount.build_model"]], "build_model() (s3prl.problem.common.hearmaestro method)": [[57, "s3prl.problem.common.HearMaestro.build_model"]], "build_model() (s3prl.problem.common.hearnsynth5hr method)": [[57, "s3prl.problem.common.HearNsynth5hr.build_model"]], "build_model() (s3prl.problem.common.hearstroke method)": [[57, "s3prl.problem.common.HearStroke.build_model"]], "build_model() (s3prl.problem.common.heartonic method)": [[57, "s3prl.problem.common.HearTonic.build_model"]], "build_model() (s3prl.problem.common.hearvocal method)": [[57, "s3prl.problem.common.HearVocal.build_model"]], "build_model() (s3prl.problem.common.hearvoxlingual method)": [[57, "s3prl.problem.common.HearVoxLingual.build_model"]], "build_model() (s3prl.problem.common.superber method)": [[57, "s3prl.problem.common.SuperbER.build_model"]], "build_model() (s3prl.problem.common.superbic method)": [[57, "s3prl.problem.common.SuperbIC.build_model"]], "build_model() (s3prl.problem.common.superbks method)": [[57, "s3prl.problem.common.SuperbKS.build_model"]], "build_model() (s3prl.problem.common.superbsid method)": [[57, "s3prl.problem.common.SuperbSID.build_model"]], "build_optimizer() (s3prl.problem.common.hearbeijingopera method)": [[57, "s3prl.problem.common.HearBeijingOpera.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hearcremad method)": [[57, "s3prl.problem.common.HearCremaD.build_optimizer"]], "build_optimizer() (s3prl.problem.common.heardcase2016task2 method)": [[57, "s3prl.problem.common.HearDcase2016Task2.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hearesc50 method)": [[57, "s3prl.problem.common.HearESC50.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hearfsd method)": [[57, "s3prl.problem.common.HearFSD.build_optimizer"]], "build_optimizer() (s3prl.problem.common.heargsc5hr method)": [[57, "s3prl.problem.common.HearGSC5hr.build_optimizer"]], "build_optimizer() (s3prl.problem.common.heargtzan method)": [[57, "s3prl.problem.common.HearGtzan.build_optimizer"]], "build_optimizer() (s3prl.problem.common.heargtzanmusicspeech method)": [[57, "s3prl.problem.common.HearGtzanMusicSpeech.build_optimizer"]], "build_optimizer() (s3prl.problem.common.heargunshot method)": [[57, "s3prl.problem.common.HearGunshot.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hearlibricount method)": [[57, "s3prl.problem.common.HearLibriCount.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hearmaestro method)": [[57, "s3prl.problem.common.HearMaestro.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hearnsynth5hr method)": [[57, "s3prl.problem.common.HearNsynth5hr.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hearstroke method)": [[57, "s3prl.problem.common.HearStroke.build_optimizer"]], "build_optimizer() (s3prl.problem.common.heartonic method)": [[57, "s3prl.problem.common.HearTonic.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hearvocal method)": [[57, "s3prl.problem.common.HearVocal.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hearvoxlingual method)": [[57, "s3prl.problem.common.HearVoxLingual.build_optimizer"]], "build_optimizer() (s3prl.problem.common.superber method)": [[57, "s3prl.problem.common.SuperbER.build_optimizer"]], "build_optimizer() (s3prl.problem.common.superbic method)": [[57, "s3prl.problem.common.SuperbIC.build_optimizer"]], "build_optimizer() (s3prl.problem.common.superbks method)": [[57, "s3prl.problem.common.SuperbKS.build_optimizer"]], "build_optimizer() (s3prl.problem.common.superbsid method)": [[57, "s3prl.problem.common.SuperbSID.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hearbeijingopera method)": [[57, "s3prl.problem.common.HearBeijingOpera.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hearcremad method)": [[57, "s3prl.problem.common.HearCremaD.build_scheduler"]], "build_scheduler() (s3prl.problem.common.heardcase2016task2 method)": [[57, "s3prl.problem.common.HearDcase2016Task2.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hearesc50 method)": [[57, "s3prl.problem.common.HearESC50.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hearfsd method)": [[57, "s3prl.problem.common.HearFSD.build_scheduler"]], "build_scheduler() (s3prl.problem.common.heargsc5hr method)": [[57, "s3prl.problem.common.HearGSC5hr.build_scheduler"]], "build_scheduler() (s3prl.problem.common.heargtzan method)": [[57, "s3prl.problem.common.HearGtzan.build_scheduler"]], "build_scheduler() (s3prl.problem.common.heargtzanmusicspeech method)": [[57, "s3prl.problem.common.HearGtzanMusicSpeech.build_scheduler"]], "build_scheduler() (s3prl.problem.common.heargunshot method)": [[57, "s3prl.problem.common.HearGunshot.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hearlibricount method)": [[57, "s3prl.problem.common.HearLibriCount.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hearmaestro method)": [[57, "s3prl.problem.common.HearMaestro.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hearnsynth5hr method)": [[57, "s3prl.problem.common.HearNsynth5hr.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hearstroke method)": [[57, "s3prl.problem.common.HearStroke.build_scheduler"]], "build_scheduler() (s3prl.problem.common.heartonic method)": [[57, "s3prl.problem.common.HearTonic.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hearvocal method)": [[57, "s3prl.problem.common.HearVocal.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hearvoxlingual method)": [[57, "s3prl.problem.common.HearVoxLingual.build_scheduler"]], "build_scheduler() (s3prl.problem.common.superber method)": [[57, "s3prl.problem.common.SuperbER.build_scheduler"]], "build_scheduler() (s3prl.problem.common.superbic method)": [[57, "s3prl.problem.common.SuperbIC.build_scheduler"]], "build_scheduler() (s3prl.problem.common.superbks method)": [[57, "s3prl.problem.common.SuperbKS.build_scheduler"]], "build_scheduler() (s3prl.problem.common.superbsid method)": [[57, "s3prl.problem.common.SuperbSID.build_scheduler"]], "build_task() (s3prl.problem.common.hearbeijingopera method)": [[57, "s3prl.problem.common.HearBeijingOpera.build_task"]], "build_task() (s3prl.problem.common.hearcremad method)": [[57, "s3prl.problem.common.HearCremaD.build_task"]], "build_task() (s3prl.problem.common.heardcase2016task2 method)": [[57, "s3prl.problem.common.HearDcase2016Task2.build_task"]], "build_task() (s3prl.problem.common.hearesc50 method)": [[57, "s3prl.problem.common.HearESC50.build_task"]], "build_task() (s3prl.problem.common.hearfsd method)": [[57, "s3prl.problem.common.HearFSD.build_task"]], "build_task() (s3prl.problem.common.heargsc5hr method)": [[57, "s3prl.problem.common.HearGSC5hr.build_task"]], "build_task() (s3prl.problem.common.heargtzan method)": [[57, "s3prl.problem.common.HearGtzan.build_task"]], "build_task() (s3prl.problem.common.heargtzanmusicspeech method)": [[57, "s3prl.problem.common.HearGtzanMusicSpeech.build_task"]], "build_task() (s3prl.problem.common.heargunshot method)": [[57, "s3prl.problem.common.HearGunshot.build_task"]], "build_task() (s3prl.problem.common.hearlibricount method)": [[57, "s3prl.problem.common.HearLibriCount.build_task"]], "build_task() (s3prl.problem.common.hearmaestro method)": [[57, "s3prl.problem.common.HearMaestro.build_task"]], "build_task() (s3prl.problem.common.hearnsynth5hr method)": [[57, "s3prl.problem.common.HearNsynth5hr.build_task"]], "build_task() (s3prl.problem.common.hearstroke method)": [[57, "s3prl.problem.common.HearStroke.build_task"]], "build_task() (s3prl.problem.common.heartonic method)": [[57, "s3prl.problem.common.HearTonic.build_task"]], "build_task() (s3prl.problem.common.hearvocal method)": [[57, "s3prl.problem.common.HearVocal.build_task"]], "build_task() (s3prl.problem.common.hearvoxlingual method)": [[57, "s3prl.problem.common.HearVoxLingual.build_task"]], "build_task() (s3prl.problem.common.superber method)": [[57, "s3prl.problem.common.SuperbER.build_task"]], "build_task() (s3prl.problem.common.superbic method)": [[57, "s3prl.problem.common.SuperbIC.build_task"]], "build_task() (s3prl.problem.common.superbks method)": [[57, "s3prl.problem.common.SuperbKS.build_task"]], "build_task() (s3prl.problem.common.superbsid method)": [[57, "s3prl.problem.common.SuperbSID.build_task"]], "build_upstream() (s3prl.problem.common.hearbeijingopera method)": [[57, "s3prl.problem.common.HearBeijingOpera.build_upstream"]], "build_upstream() (s3prl.problem.common.hearcremad method)": [[57, "s3prl.problem.common.HearCremaD.build_upstream"]], "build_upstream() (s3prl.problem.common.heardcase2016task2 method)": [[57, "s3prl.problem.common.HearDcase2016Task2.build_upstream"]], "build_upstream() (s3prl.problem.common.hearesc50 method)": [[57, "s3prl.problem.common.HearESC50.build_upstream"]], "build_upstream() (s3prl.problem.common.hearfsd method)": [[57, "s3prl.problem.common.HearFSD.build_upstream"]], "build_upstream() (s3prl.problem.common.heargsc5hr method)": [[57, "s3prl.problem.common.HearGSC5hr.build_upstream"]], "build_upstream() (s3prl.problem.common.heargtzan method)": [[57, "s3prl.problem.common.HearGtzan.build_upstream"]], "build_upstream() (s3prl.problem.common.heargtzanmusicspeech method)": [[57, "s3prl.problem.common.HearGtzanMusicSpeech.build_upstream"]], "build_upstream() (s3prl.problem.common.heargunshot method)": [[57, "s3prl.problem.common.HearGunshot.build_upstream"]], "build_upstream() (s3prl.problem.common.hearlibricount method)": [[57, "s3prl.problem.common.HearLibriCount.build_upstream"]], "build_upstream() (s3prl.problem.common.hearmaestro method)": [[57, "s3prl.problem.common.HearMaestro.build_upstream"]], "build_upstream() (s3prl.problem.common.hearnsynth5hr method)": [[57, "s3prl.problem.common.HearNsynth5hr.build_upstream"]], "build_upstream() (s3prl.problem.common.hearstroke method)": [[57, "s3prl.problem.common.HearStroke.build_upstream"]], "build_upstream() (s3prl.problem.common.heartonic method)": [[57, "s3prl.problem.common.HearTonic.build_upstream"]], "build_upstream() (s3prl.problem.common.hearvocal method)": [[57, "s3prl.problem.common.HearVocal.build_upstream"]], "build_upstream() (s3prl.problem.common.hearvoxlingual method)": [[57, "s3prl.problem.common.HearVoxLingual.build_upstream"]], "build_upstream() (s3prl.problem.common.superber method)": [[57, "s3prl.problem.common.SuperbER.build_upstream"]], "build_upstream() (s3prl.problem.common.superbic method)": [[57, "s3prl.problem.common.SuperbIC.build_upstream"]], "build_upstream() (s3prl.problem.common.superbks method)": [[57, "s3prl.problem.common.SuperbKS.build_upstream"]], "build_upstream() (s3prl.problem.common.superbsid method)": [[57, "s3prl.problem.common.SuperbSID.build_upstream"]], "default_config() (s3prl.problem.common.hearbeijingopera method)": [[57, "s3prl.problem.common.HearBeijingOpera.default_config"]], "default_config() (s3prl.problem.common.hearcremad method)": [[57, "s3prl.problem.common.HearCremaD.default_config"]], "default_config() (s3prl.problem.common.heardcase2016task2 method)": [[57, "s3prl.problem.common.HearDcase2016Task2.default_config"]], "default_config() (s3prl.problem.common.hearesc50 method)": [[57, "s3prl.problem.common.HearESC50.default_config"]], "default_config() (s3prl.problem.common.hearfsd method)": [[57, "s3prl.problem.common.HearFSD.default_config"]], "default_config() (s3prl.problem.common.heargsc5hr method)": [[57, "s3prl.problem.common.HearGSC5hr.default_config"]], "default_config() (s3prl.problem.common.heargtzan method)": [[57, "s3prl.problem.common.HearGtzan.default_config"]], "default_config() (s3prl.problem.common.heargtzanmusicspeech method)": [[57, "s3prl.problem.common.HearGtzanMusicSpeech.default_config"]], "default_config() (s3prl.problem.common.heargunshot method)": [[57, "s3prl.problem.common.HearGunshot.default_config"]], "default_config() (s3prl.problem.common.hearlibricount method)": [[57, "s3prl.problem.common.HearLibriCount.default_config"]], "default_config() (s3prl.problem.common.hearmaestro method)": [[57, "s3prl.problem.common.HearMaestro.default_config"]], "default_config() (s3prl.problem.common.hearnsynth5hr method)": [[57, "s3prl.problem.common.HearNsynth5hr.default_config"]], "default_config() (s3prl.problem.common.hearstroke method)": [[57, "s3prl.problem.common.HearStroke.default_config"]], "default_config() (s3prl.problem.common.heartonic method)": [[57, "s3prl.problem.common.HearTonic.default_config"]], "default_config() (s3prl.problem.common.hearvocal method)": [[57, "s3prl.problem.common.HearVocal.default_config"]], "default_config() (s3prl.problem.common.hearvoxlingual method)": [[57, "s3prl.problem.common.HearVoxLingual.default_config"]], "default_config() (s3prl.problem.common.superber method)": [[57, "s3prl.problem.common.SuperbER.default_config"]], "default_config() (s3prl.problem.common.superbic method)": [[57, "s3prl.problem.common.SuperbIC.default_config"]], "default_config() (s3prl.problem.common.superbks method)": [[57, "s3prl.problem.common.SuperbKS.default_config"]], "default_config() (s3prl.problem.common.superbsid method)": [[57, "s3prl.problem.common.SuperbSID.default_config"]], "evaluate() (s3prl.problem.common.hearbeijingopera method)": [[57, "s3prl.problem.common.HearBeijingOpera.evaluate"]], "evaluate() (s3prl.problem.common.hearcremad method)": [[57, "s3prl.problem.common.HearCremaD.evaluate"]], "evaluate() (s3prl.problem.common.heardcase2016task2 method)": [[57, "s3prl.problem.common.HearDcase2016Task2.evaluate"]], "evaluate() (s3prl.problem.common.hearesc50 method)": [[57, "s3prl.problem.common.HearESC50.evaluate"]], "evaluate() (s3prl.problem.common.hearfsd method)": [[57, "s3prl.problem.common.HearFSD.evaluate"]], "evaluate() (s3prl.problem.common.heargsc5hr method)": [[57, "s3prl.problem.common.HearGSC5hr.evaluate"]], "evaluate() (s3prl.problem.common.heargtzan method)": [[57, "s3prl.problem.common.HearGtzan.evaluate"]], "evaluate() (s3prl.problem.common.heargtzanmusicspeech method)": [[57, "s3prl.problem.common.HearGtzanMusicSpeech.evaluate"]], "evaluate() (s3prl.problem.common.heargunshot method)": [[57, "s3prl.problem.common.HearGunshot.evaluate"]], "evaluate() (s3prl.problem.common.hearlibricount method)": [[57, "s3prl.problem.common.HearLibriCount.evaluate"]], "evaluate() (s3prl.problem.common.hearmaestro method)": [[57, "s3prl.problem.common.HearMaestro.evaluate"]], "evaluate() (s3prl.problem.common.hearnsynth5hr method)": [[57, "s3prl.problem.common.HearNsynth5hr.evaluate"]], "evaluate() (s3prl.problem.common.hearstroke method)": [[57, "s3prl.problem.common.HearStroke.evaluate"]], "evaluate() (s3prl.problem.common.heartonic method)": [[57, "s3prl.problem.common.HearTonic.evaluate"]], "evaluate() (s3prl.problem.common.hearvocal method)": [[57, "s3prl.problem.common.HearVocal.evaluate"]], "evaluate() (s3prl.problem.common.hearvoxlingual method)": [[57, "s3prl.problem.common.HearVoxLingual.evaluate"]], "evaluate() (s3prl.problem.common.superber method)": [[57, "s3prl.problem.common.SuperbER.evaluate"]], "evaluate() (s3prl.problem.common.superbic method)": [[57, "s3prl.problem.common.SuperbIC.evaluate"]], "evaluate() (s3prl.problem.common.superbks method)": [[57, "s3prl.problem.common.SuperbKS.evaluate"]], "evaluate() (s3prl.problem.common.superbsid method)": [[57, "s3prl.problem.common.SuperbSID.evaluate"]], "get_class_from_name() (s3prl.problem.common.hearbeijingopera class method)": [[57, "s3prl.problem.common.HearBeijingOpera.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hearcremad class method)": [[57, "s3prl.problem.common.HearCremaD.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.heardcase2016task2 class method)": [[57, "s3prl.problem.common.HearDcase2016Task2.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hearesc50 class method)": [[57, "s3prl.problem.common.HearESC50.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hearfsd class method)": [[57, "s3prl.problem.common.HearFSD.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.heargsc5hr class method)": [[57, "s3prl.problem.common.HearGSC5hr.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.heargtzan class method)": [[57, "s3prl.problem.common.HearGtzan.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.heargtzanmusicspeech class method)": [[57, "s3prl.problem.common.HearGtzanMusicSpeech.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.heargunshot class method)": [[57, "s3prl.problem.common.HearGunshot.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hearlibricount class method)": [[57, "s3prl.problem.common.HearLibriCount.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hearmaestro class method)": [[57, "s3prl.problem.common.HearMaestro.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hearnsynth5hr class method)": [[57, "s3prl.problem.common.HearNsynth5hr.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hearstroke class method)": [[57, "s3prl.problem.common.HearStroke.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.heartonic class method)": [[57, "s3prl.problem.common.HearTonic.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hearvocal class method)": [[57, "s3prl.problem.common.HearVocal.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hearvoxlingual class method)": [[57, "s3prl.problem.common.HearVoxLingual.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.superber class method)": [[57, "s3prl.problem.common.SuperbER.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.superbic class method)": [[57, "s3prl.problem.common.SuperbIC.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.superbks class method)": [[57, "s3prl.problem.common.SuperbKS.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.superbsid class method)": [[57, "s3prl.problem.common.SuperbSID.get_class_from_name"]], "load_model() (s3prl.problem.common.hearbeijingopera method)": [[57, "s3prl.problem.common.HearBeijingOpera.load_model"]], "load_model() (s3prl.problem.common.hearcremad method)": [[57, "s3prl.problem.common.HearCremaD.load_model"]], "load_model() (s3prl.problem.common.heardcase2016task2 method)": [[57, "s3prl.problem.common.HearDcase2016Task2.load_model"]], "load_model() (s3prl.problem.common.hearesc50 method)": [[57, "s3prl.problem.common.HearESC50.load_model"]], "load_model() (s3prl.problem.common.hearfsd method)": [[57, "s3prl.problem.common.HearFSD.load_model"]], "load_model() (s3prl.problem.common.heargsc5hr method)": [[57, "s3prl.problem.common.HearGSC5hr.load_model"]], "load_model() (s3prl.problem.common.heargtzan method)": [[57, "s3prl.problem.common.HearGtzan.load_model"]], "load_model() (s3prl.problem.common.heargtzanmusicspeech method)": [[57, "s3prl.problem.common.HearGtzanMusicSpeech.load_model"]], "load_model() (s3prl.problem.common.heargunshot method)": [[57, "s3prl.problem.common.HearGunshot.load_model"]], "load_model() (s3prl.problem.common.hearlibricount method)": [[57, "s3prl.problem.common.HearLibriCount.load_model"]], "load_model() (s3prl.problem.common.hearmaestro method)": [[57, "s3prl.problem.common.HearMaestro.load_model"]], "load_model() (s3prl.problem.common.hearnsynth5hr method)": [[57, "s3prl.problem.common.HearNsynth5hr.load_model"]], "load_model() (s3prl.problem.common.hearstroke method)": [[57, "s3prl.problem.common.HearStroke.load_model"]], "load_model() (s3prl.problem.common.heartonic method)": [[57, "s3prl.problem.common.HearTonic.load_model"]], "load_model() (s3prl.problem.common.hearvocal method)": [[57, "s3prl.problem.common.HearVocal.load_model"]], "load_model() (s3prl.problem.common.hearvoxlingual method)": [[57, "s3prl.problem.common.HearVoxLingual.load_model"]], "load_model() (s3prl.problem.common.superber method)": [[57, "s3prl.problem.common.SuperbER.load_model"]], "load_model() (s3prl.problem.common.superbic method)": [[57, "s3prl.problem.common.SuperbIC.load_model"]], "load_model() (s3prl.problem.common.superbks method)": [[57, "s3prl.problem.common.SuperbKS.load_model"]], "load_model() (s3prl.problem.common.superbsid method)": [[57, "s3prl.problem.common.SuperbSID.load_model"]], "load_model_and_task() (s3prl.problem.common.hearbeijingopera method)": [[57, "s3prl.problem.common.HearBeijingOpera.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hearcremad method)": [[57, "s3prl.problem.common.HearCremaD.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.heardcase2016task2 method)": [[57, "s3prl.problem.common.HearDcase2016Task2.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hearesc50 method)": [[57, "s3prl.problem.common.HearESC50.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hearfsd method)": [[57, "s3prl.problem.common.HearFSD.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.heargsc5hr method)": [[57, "s3prl.problem.common.HearGSC5hr.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.heargtzan method)": [[57, "s3prl.problem.common.HearGtzan.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.heargtzanmusicspeech method)": [[57, "s3prl.problem.common.HearGtzanMusicSpeech.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.heargunshot method)": [[57, "s3prl.problem.common.HearGunshot.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hearlibricount method)": [[57, "s3prl.problem.common.HearLibriCount.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hearmaestro method)": [[57, "s3prl.problem.common.HearMaestro.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hearnsynth5hr method)": [[57, "s3prl.problem.common.HearNsynth5hr.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hearstroke method)": [[57, "s3prl.problem.common.HearStroke.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.heartonic method)": [[57, "s3prl.problem.common.HearTonic.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hearvocal method)": [[57, "s3prl.problem.common.HearVocal.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hearvoxlingual method)": [[57, "s3prl.problem.common.HearVoxLingual.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.superber method)": [[57, "s3prl.problem.common.SuperbER.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.superbic method)": [[57, "s3prl.problem.common.SuperbIC.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.superbks method)": [[57, "s3prl.problem.common.SuperbKS.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.superbsid method)": [[57, "s3prl.problem.common.SuperbSID.load_model_and_task"]], "load_task() (s3prl.problem.common.hearbeijingopera method)": [[57, "s3prl.problem.common.HearBeijingOpera.load_task"]], "load_task() (s3prl.problem.common.hearcremad method)": [[57, "s3prl.problem.common.HearCremaD.load_task"]], "load_task() (s3prl.problem.common.heardcase2016task2 method)": [[57, "s3prl.problem.common.HearDcase2016Task2.load_task"]], "load_task() (s3prl.problem.common.hearesc50 method)": [[57, "s3prl.problem.common.HearESC50.load_task"]], "load_task() (s3prl.problem.common.hearfsd method)": [[57, "s3prl.problem.common.HearFSD.load_task"]], "load_task() (s3prl.problem.common.heargsc5hr method)": [[57, "s3prl.problem.common.HearGSC5hr.load_task"]], "load_task() (s3prl.problem.common.heargtzan method)": [[57, "s3prl.problem.common.HearGtzan.load_task"]], "load_task() (s3prl.problem.common.heargtzanmusicspeech method)": [[57, "s3prl.problem.common.HearGtzanMusicSpeech.load_task"]], "load_task() (s3prl.problem.common.heargunshot method)": [[57, "s3prl.problem.common.HearGunshot.load_task"]], "load_task() (s3prl.problem.common.hearlibricount method)": [[57, "s3prl.problem.common.HearLibriCount.load_task"]], "load_task() (s3prl.problem.common.hearmaestro method)": [[57, "s3prl.problem.common.HearMaestro.load_task"]], "load_task() (s3prl.problem.common.hearnsynth5hr method)": [[57, "s3prl.problem.common.HearNsynth5hr.load_task"]], "load_task() (s3prl.problem.common.hearstroke method)": [[57, "s3prl.problem.common.HearStroke.load_task"]], "load_task() (s3prl.problem.common.heartonic method)": [[57, "s3prl.problem.common.HearTonic.load_task"]], "load_task() (s3prl.problem.common.hearvocal method)": [[57, "s3prl.problem.common.HearVocal.load_task"]], "load_task() (s3prl.problem.common.hearvoxlingual method)": [[57, "s3prl.problem.common.HearVoxLingual.load_task"]], "load_task() (s3prl.problem.common.superber method)": [[57, "s3prl.problem.common.SuperbER.load_task"]], "load_task() (s3prl.problem.common.superbic method)": [[57, "s3prl.problem.common.SuperbIC.load_task"]], "load_task() (s3prl.problem.common.superbks method)": [[57, "s3prl.problem.common.SuperbKS.load_task"]], "load_task() (s3prl.problem.common.superbsid method)": [[57, "s3prl.problem.common.SuperbSID.load_task"]], "main() (s3prl.problem.common.hearbeijingopera method)": [[57, "s3prl.problem.common.HearBeijingOpera.main"]], "main() (s3prl.problem.common.hearcremad method)": [[57, "s3prl.problem.common.HearCremaD.main"]], "main() (s3prl.problem.common.heardcase2016task2 method)": [[57, "s3prl.problem.common.HearDcase2016Task2.main"]], "main() (s3prl.problem.common.hearesc50 method)": [[57, "s3prl.problem.common.HearESC50.main"]], "main() (s3prl.problem.common.hearfsd method)": [[57, "s3prl.problem.common.HearFSD.main"]], "main() (s3prl.problem.common.heargsc5hr method)": [[57, "s3prl.problem.common.HearGSC5hr.main"]], "main() (s3prl.problem.common.heargtzan method)": [[57, "s3prl.problem.common.HearGtzan.main"]], "main() (s3prl.problem.common.heargtzanmusicspeech method)": [[57, "s3prl.problem.common.HearGtzanMusicSpeech.main"]], "main() (s3prl.problem.common.heargunshot method)": [[57, "s3prl.problem.common.HearGunshot.main"]], "main() (s3prl.problem.common.hearlibricount method)": [[57, "s3prl.problem.common.HearLibriCount.main"]], "main() (s3prl.problem.common.hearmaestro method)": [[57, "s3prl.problem.common.HearMaestro.main"]], "main() (s3prl.problem.common.hearnsynth5hr method)": [[57, "s3prl.problem.common.HearNsynth5hr.main"]], "main() (s3prl.problem.common.hearstroke method)": [[57, "s3prl.problem.common.HearStroke.main"]], "main() (s3prl.problem.common.heartonic method)": [[57, "s3prl.problem.common.HearTonic.main"]], "main() (s3prl.problem.common.hearvocal method)": [[57, "s3prl.problem.common.HearVocal.main"]], "main() (s3prl.problem.common.hearvoxlingual method)": [[57, "s3prl.problem.common.HearVoxLingual.main"]], "main() (s3prl.problem.common.superber method)": [[57, "s3prl.problem.common.SuperbER.main"]], "main() (s3prl.problem.common.superbic method)": [[57, "s3prl.problem.common.SuperbIC.main"]], "main() (s3prl.problem.common.superbks method)": [[57, "s3prl.problem.common.SuperbKS.main"]], "main() (s3prl.problem.common.superbsid method)": [[57, "s3prl.problem.common.SuperbSID.main"]], "prepare_data() (s3prl.problem.common.hearbeijingopera method)": [[57, "s3prl.problem.common.HearBeijingOpera.prepare_data"]], "prepare_data() (s3prl.problem.common.hearcremad method)": [[57, "s3prl.problem.common.HearCremaD.prepare_data"]], "prepare_data() (s3prl.problem.common.heardcase2016task2 method)": [[57, "s3prl.problem.common.HearDcase2016Task2.prepare_data"]], "prepare_data() (s3prl.problem.common.hearesc50 method)": [[57, "s3prl.problem.common.HearESC50.prepare_data"]], "prepare_data() (s3prl.problem.common.hearfsd method)": [[57, "s3prl.problem.common.HearFSD.prepare_data"]], "prepare_data() (s3prl.problem.common.heargsc5hr method)": [[57, "s3prl.problem.common.HearGSC5hr.prepare_data"]], "prepare_data() (s3prl.problem.common.heargtzan method)": [[57, "s3prl.problem.common.HearGtzan.prepare_data"]], "prepare_data() (s3prl.problem.common.heargtzanmusicspeech method)": [[57, "s3prl.problem.common.HearGtzanMusicSpeech.prepare_data"]], "prepare_data() (s3prl.problem.common.heargunshot method)": [[57, "s3prl.problem.common.HearGunshot.prepare_data"]], "prepare_data() (s3prl.problem.common.hearlibricount method)": [[57, "s3prl.problem.common.HearLibriCount.prepare_data"]], "prepare_data() (s3prl.problem.common.hearmaestro method)": [[57, "s3prl.problem.common.HearMaestro.prepare_data"]], "prepare_data() (s3prl.problem.common.hearnsynth5hr method)": [[57, "s3prl.problem.common.HearNsynth5hr.prepare_data"]], "prepare_data() (s3prl.problem.common.hearstroke method)": [[57, "s3prl.problem.common.HearStroke.prepare_data"]], "prepare_data() (s3prl.problem.common.heartonic method)": [[57, "s3prl.problem.common.HearTonic.prepare_data"]], "prepare_data() (s3prl.problem.common.hearvocal method)": [[57, "s3prl.problem.common.HearVocal.prepare_data"]], "prepare_data() (s3prl.problem.common.hearvoxlingual method)": [[57, "s3prl.problem.common.HearVoxLingual.prepare_data"]], "prepare_data() (s3prl.problem.common.superber method)": [[57, "s3prl.problem.common.SuperbER.prepare_data"]], "prepare_data() (s3prl.problem.common.superbic method)": [[57, "s3prl.problem.common.SuperbIC.prepare_data"]], "prepare_data() (s3prl.problem.common.superbks method)": [[57, "s3prl.problem.common.SuperbKS.prepare_data"]], "prepare_data() (s3prl.problem.common.superbsid method)": [[57, "s3prl.problem.common.SuperbSID.prepare_data"]], "run() (s3prl.problem.common.hearbeijingopera method)": [[57, "s3prl.problem.common.HearBeijingOpera.run"]], "run() (s3prl.problem.common.hearcremad method)": [[57, "s3prl.problem.common.HearCremaD.run"]], "run() (s3prl.problem.common.heardcase2016task2 method)": [[57, "s3prl.problem.common.HearDcase2016Task2.run"]], "run() (s3prl.problem.common.hearesc50 method)": [[57, "s3prl.problem.common.HearESC50.run"]], "run() (s3prl.problem.common.hearfsd method)": [[57, "s3prl.problem.common.HearFSD.run"]], "run() (s3prl.problem.common.heargsc5hr method)": [[57, "s3prl.problem.common.HearGSC5hr.run"]], "run() (s3prl.problem.common.heargtzan method)": [[57, "s3prl.problem.common.HearGtzan.run"]], "run() (s3prl.problem.common.heargtzanmusicspeech method)": [[57, "s3prl.problem.common.HearGtzanMusicSpeech.run"]], "run() (s3prl.problem.common.heargunshot method)": [[57, "s3prl.problem.common.HearGunshot.run"]], "run() (s3prl.problem.common.hearlibricount method)": [[57, "s3prl.problem.common.HearLibriCount.run"]], "run() (s3prl.problem.common.hearmaestro method)": [[57, "s3prl.problem.common.HearMaestro.run"]], "run() (s3prl.problem.common.hearnsynth5hr method)": [[57, "s3prl.problem.common.HearNsynth5hr.run"]], "run() (s3prl.problem.common.hearstroke method)": [[57, "s3prl.problem.common.HearStroke.run"]], "run() (s3prl.problem.common.heartonic method)": [[57, "s3prl.problem.common.HearTonic.run"]], "run() (s3prl.problem.common.hearvocal method)": [[57, "s3prl.problem.common.HearVocal.run"]], "run() (s3prl.problem.common.hearvoxlingual method)": [[57, "s3prl.problem.common.HearVoxLingual.run"]], "run() (s3prl.problem.common.superber method)": [[57, "s3prl.problem.common.SuperbER.run"]], "run() (s3prl.problem.common.superbic method)": [[57, "s3prl.problem.common.SuperbIC.run"]], "run() (s3prl.problem.common.superbks method)": [[57, "s3prl.problem.common.SuperbKS.run"]], "run() (s3prl.problem.common.superbsid method)": [[57, "s3prl.problem.common.SuperbSID.run"]], "s3prl.problem.common": [[57, "module-s3prl.problem.common"]], "save_model() (s3prl.problem.common.hearbeijingopera method)": [[57, "s3prl.problem.common.HearBeijingOpera.save_model"]], "save_model() (s3prl.problem.common.hearcremad method)": [[57, "s3prl.problem.common.HearCremaD.save_model"]], "save_model() (s3prl.problem.common.heardcase2016task2 method)": [[57, "s3prl.problem.common.HearDcase2016Task2.save_model"]], "save_model() (s3prl.problem.common.hearesc50 method)": [[57, "s3prl.problem.common.HearESC50.save_model"]], "save_model() (s3prl.problem.common.hearfsd method)": [[57, "s3prl.problem.common.HearFSD.save_model"]], "save_model() (s3prl.problem.common.heargsc5hr method)": [[57, "s3prl.problem.common.HearGSC5hr.save_model"]], "save_model() (s3prl.problem.common.heargtzan method)": [[57, "s3prl.problem.common.HearGtzan.save_model"]], "save_model() (s3prl.problem.common.heargtzanmusicspeech method)": [[57, "s3prl.problem.common.HearGtzanMusicSpeech.save_model"]], "save_model() (s3prl.problem.common.heargunshot method)": [[57, "s3prl.problem.common.HearGunshot.save_model"]], "save_model() (s3prl.problem.common.hearlibricount method)": [[57, "s3prl.problem.common.HearLibriCount.save_model"]], "save_model() (s3prl.problem.common.hearmaestro method)": [[57, "s3prl.problem.common.HearMaestro.save_model"]], "save_model() (s3prl.problem.common.hearnsynth5hr method)": [[57, "s3prl.problem.common.HearNsynth5hr.save_model"]], "save_model() (s3prl.problem.common.hearstroke method)": [[57, "s3prl.problem.common.HearStroke.save_model"]], "save_model() (s3prl.problem.common.heartonic method)": [[57, "s3prl.problem.common.HearTonic.save_model"]], "save_model() (s3prl.problem.common.hearvocal method)": [[57, "s3prl.problem.common.HearVocal.save_model"]], "save_model() (s3prl.problem.common.hearvoxlingual method)": [[57, "s3prl.problem.common.HearVoxLingual.save_model"]], "save_model() (s3prl.problem.common.superber method)": [[57, "s3prl.problem.common.SuperbER.save_model"]], "save_model() (s3prl.problem.common.superbic method)": [[57, "s3prl.problem.common.SuperbIC.save_model"]], "save_model() (s3prl.problem.common.superbks method)": [[57, "s3prl.problem.common.SuperbKS.save_model"]], "save_model() (s3prl.problem.common.superbsid method)": [[57, "s3prl.problem.common.SuperbSID.save_model"]], "save_task() (s3prl.problem.common.hearbeijingopera method)": [[57, "s3prl.problem.common.HearBeijingOpera.save_task"]], "save_task() (s3prl.problem.common.hearcremad method)": [[57, "s3prl.problem.common.HearCremaD.save_task"]], "save_task() (s3prl.problem.common.heardcase2016task2 method)": [[57, "s3prl.problem.common.HearDcase2016Task2.save_task"]], "save_task() (s3prl.problem.common.hearesc50 method)": [[57, "s3prl.problem.common.HearESC50.save_task"]], "save_task() (s3prl.problem.common.hearfsd method)": [[57, "s3prl.problem.common.HearFSD.save_task"]], "save_task() (s3prl.problem.common.heargsc5hr method)": [[57, "s3prl.problem.common.HearGSC5hr.save_task"]], "save_task() (s3prl.problem.common.heargtzan method)": [[57, "s3prl.problem.common.HearGtzan.save_task"]], "save_task() (s3prl.problem.common.heargtzanmusicspeech method)": [[57, "s3prl.problem.common.HearGtzanMusicSpeech.save_task"]], "save_task() (s3prl.problem.common.heargunshot method)": [[57, "s3prl.problem.common.HearGunshot.save_task"]], "save_task() (s3prl.problem.common.hearlibricount method)": [[57, "s3prl.problem.common.HearLibriCount.save_task"]], "save_task() (s3prl.problem.common.hearmaestro method)": [[57, "s3prl.problem.common.HearMaestro.save_task"]], "save_task() (s3prl.problem.common.hearnsynth5hr method)": [[57, "s3prl.problem.common.HearNsynth5hr.save_task"]], "save_task() (s3prl.problem.common.hearstroke method)": [[57, "s3prl.problem.common.HearStroke.save_task"]], "save_task() (s3prl.problem.common.heartonic method)": [[57, "s3prl.problem.common.HearTonic.save_task"]], "save_task() (s3prl.problem.common.hearvocal method)": [[57, "s3prl.problem.common.HearVocal.save_task"]], "save_task() (s3prl.problem.common.hearvoxlingual method)": [[57, "s3prl.problem.common.HearVoxLingual.save_task"]], "save_task() (s3prl.problem.common.superber method)": [[57, "s3prl.problem.common.SuperbER.save_task"]], "save_task() (s3prl.problem.common.superbic method)": [[57, "s3prl.problem.common.SuperbIC.save_task"]], "save_task() (s3prl.problem.common.superbks method)": [[57, "s3prl.problem.common.SuperbKS.save_task"]], "save_task() (s3prl.problem.common.superbsid method)": [[57, "s3prl.problem.common.SuperbSID.save_task"]], "train() (s3prl.problem.common.hearbeijingopera method)": [[57, "s3prl.problem.common.HearBeijingOpera.train"]], "train() (s3prl.problem.common.hearcremad method)": [[57, "s3prl.problem.common.HearCremaD.train"]], "train() (s3prl.problem.common.heardcase2016task2 method)": [[57, "s3prl.problem.common.HearDcase2016Task2.train"]], "train() (s3prl.problem.common.hearesc50 method)": [[57, "s3prl.problem.common.HearESC50.train"]], "train() (s3prl.problem.common.hearfsd method)": [[57, "s3prl.problem.common.HearFSD.train"]], "train() (s3prl.problem.common.heargsc5hr method)": [[57, "s3prl.problem.common.HearGSC5hr.train"]], "train() (s3prl.problem.common.heargtzan method)": [[57, "s3prl.problem.common.HearGtzan.train"]], "train() (s3prl.problem.common.heargtzanmusicspeech method)": [[57, "s3prl.problem.common.HearGtzanMusicSpeech.train"]], "train() (s3prl.problem.common.heargunshot method)": [[57, "s3prl.problem.common.HearGunshot.train"]], "train() (s3prl.problem.common.hearlibricount method)": [[57, "s3prl.problem.common.HearLibriCount.train"]], "train() (s3prl.problem.common.hearmaestro method)": [[57, "s3prl.problem.common.HearMaestro.train"]], "train() (s3prl.problem.common.hearnsynth5hr method)": [[57, "s3prl.problem.common.HearNsynth5hr.train"]], "train() (s3prl.problem.common.hearstroke method)": [[57, "s3prl.problem.common.HearStroke.train"]], "train() (s3prl.problem.common.heartonic method)": [[57, "s3prl.problem.common.HearTonic.train"]], "train() (s3prl.problem.common.hearvocal method)": [[57, "s3prl.problem.common.HearVocal.train"]], "train() (s3prl.problem.common.hearvoxlingual method)": [[57, "s3prl.problem.common.HearVoxLingual.train"]], "train() (s3prl.problem.common.superber method)": [[57, "s3prl.problem.common.SuperbER.train"]], "train() (s3prl.problem.common.superbic method)": [[57, "s3prl.problem.common.SuperbIC.train"]], "train() (s3prl.problem.common.superbks method)": [[57, "s3prl.problem.common.SuperbKS.train"]], "train() (s3prl.problem.common.superbsid method)": [[57, "s3prl.problem.common.SuperbSID.train"]], "hearbeijingopera (class in s3prl.problem.common.hear_beijing_opera)": [[58, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera"]], "hearesc50 (class in s3prl.problem.common.hear_beijing_opera)": [[58, "s3prl.problem.common.hear_beijing_opera.HearESC50"]], "build_batch_sampler() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearESC50.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearESC50.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearESC50.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearESC50.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearESC50.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearESC50.build_featurizer"]], "build_model() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.build_model"]], "build_model() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearESC50.build_model"]], "build_optimizer() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearESC50.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearESC50.build_scheduler"]], "build_task() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.build_task"]], "build_task() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearESC50.build_task"]], "build_upstream() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearESC50.build_upstream"]], "default_config() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.default_config"]], "default_config() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearESC50.default_config"]], "evaluate() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.evaluate"]], "evaluate() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearESC50.evaluate"]], "get_class_from_name() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera class method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_beijing_opera.hearesc50 class method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearESC50.get_class_from_name"]], "load_model() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.load_model"]], "load_model() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearESC50.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearESC50.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.load_task"]], "load_task() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearESC50.load_task"]], "main() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.main"]], "main() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearESC50.main"]], "prepare_data() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearESC50.prepare_data"]], "run() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.run"]], "run() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearESC50.run"]], "s3prl.problem.common.hear_beijing_opera": [[58, "module-s3prl.problem.common.hear_beijing_opera"]], "save_model() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.save_model"]], "save_model() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearESC50.save_model"]], "save_task() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.save_task"]], "save_task() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearESC50.save_task"]], "train() (s3prl.problem.common.hear_beijing_opera.hearbeijingopera method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearBeijingOpera.train"]], "train() (s3prl.problem.common.hear_beijing_opera.hearesc50 method)": [[58, "s3prl.problem.common.hear_beijing_opera.HearESC50.train"]], "hearcremad (class in s3prl.problem.common.hear_cremad)": [[59, "s3prl.problem.common.hear_cremad.HearCremaD"]], "hearesc50 (class in s3prl.problem.common.hear_cremad)": [[59, "s3prl.problem.common.hear_cremad.HearESC50"]], "build_batch_sampler() (s3prl.problem.common.hear_cremad.hearcremad method)": [[59, "s3prl.problem.common.hear_cremad.HearCremaD.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[59, "s3prl.problem.common.hear_cremad.HearESC50.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_cremad.hearcremad method)": [[59, "s3prl.problem.common.hear_cremad.HearCremaD.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[59, "s3prl.problem.common.hear_cremad.HearESC50.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_cremad.hearcremad method)": [[59, "s3prl.problem.common.hear_cremad.HearCremaD.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[59, "s3prl.problem.common.hear_cremad.HearESC50.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_cremad.hearcremad method)": [[59, "s3prl.problem.common.hear_cremad.HearCremaD.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[59, "s3prl.problem.common.hear_cremad.HearESC50.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_cremad.hearcremad method)": [[59, "s3prl.problem.common.hear_cremad.HearCremaD.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[59, "s3prl.problem.common.hear_cremad.HearESC50.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_cremad.hearcremad method)": [[59, "s3prl.problem.common.hear_cremad.HearCremaD.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[59, "s3prl.problem.common.hear_cremad.HearESC50.build_featurizer"]], "build_model() (s3prl.problem.common.hear_cremad.hearcremad method)": [[59, "s3prl.problem.common.hear_cremad.HearCremaD.build_model"]], "build_model() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[59, "s3prl.problem.common.hear_cremad.HearESC50.build_model"]], "build_optimizer() (s3prl.problem.common.hear_cremad.hearcremad method)": [[59, "s3prl.problem.common.hear_cremad.HearCremaD.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[59, "s3prl.problem.common.hear_cremad.HearESC50.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_cremad.hearcremad method)": [[59, "s3prl.problem.common.hear_cremad.HearCremaD.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[59, "s3prl.problem.common.hear_cremad.HearESC50.build_scheduler"]], "build_task() (s3prl.problem.common.hear_cremad.hearcremad method)": [[59, "s3prl.problem.common.hear_cremad.HearCremaD.build_task"]], "build_task() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[59, "s3prl.problem.common.hear_cremad.HearESC50.build_task"]], "build_upstream() (s3prl.problem.common.hear_cremad.hearcremad method)": [[59, "s3prl.problem.common.hear_cremad.HearCremaD.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[59, "s3prl.problem.common.hear_cremad.HearESC50.build_upstream"]], "default_config() (s3prl.problem.common.hear_cremad.hearcremad method)": [[59, "s3prl.problem.common.hear_cremad.HearCremaD.default_config"]], "default_config() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[59, "s3prl.problem.common.hear_cremad.HearESC50.default_config"]], "evaluate() (s3prl.problem.common.hear_cremad.hearcremad method)": [[59, "s3prl.problem.common.hear_cremad.HearCremaD.evaluate"]], "evaluate() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[59, "s3prl.problem.common.hear_cremad.HearESC50.evaluate"]], "get_class_from_name() (s3prl.problem.common.hear_cremad.hearcremad class method)": [[59, "s3prl.problem.common.hear_cremad.HearCremaD.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_cremad.hearesc50 class method)": [[59, "s3prl.problem.common.hear_cremad.HearESC50.get_class_from_name"]], "load_model() (s3prl.problem.common.hear_cremad.hearcremad method)": [[59, "s3prl.problem.common.hear_cremad.HearCremaD.load_model"]], "load_model() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[59, "s3prl.problem.common.hear_cremad.HearESC50.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_cremad.hearcremad method)": [[59, "s3prl.problem.common.hear_cremad.HearCremaD.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[59, "s3prl.problem.common.hear_cremad.HearESC50.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_cremad.hearcremad method)": [[59, "s3prl.problem.common.hear_cremad.HearCremaD.load_task"]], "load_task() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[59, "s3prl.problem.common.hear_cremad.HearESC50.load_task"]], "main() (s3prl.problem.common.hear_cremad.hearcremad method)": [[59, "s3prl.problem.common.hear_cremad.HearCremaD.main"]], "main() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[59, "s3prl.problem.common.hear_cremad.HearESC50.main"]], "prepare_data() (s3prl.problem.common.hear_cremad.hearcremad method)": [[59, "s3prl.problem.common.hear_cremad.HearCremaD.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[59, "s3prl.problem.common.hear_cremad.HearESC50.prepare_data"]], "run() (s3prl.problem.common.hear_cremad.hearcremad method)": [[59, "s3prl.problem.common.hear_cremad.HearCremaD.run"]], "run() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[59, "s3prl.problem.common.hear_cremad.HearESC50.run"]], "s3prl.problem.common.hear_cremad": [[59, "module-s3prl.problem.common.hear_cremad"]], "save_model() (s3prl.problem.common.hear_cremad.hearcremad method)": [[59, "s3prl.problem.common.hear_cremad.HearCremaD.save_model"]], "save_model() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[59, "s3prl.problem.common.hear_cremad.HearESC50.save_model"]], "save_task() (s3prl.problem.common.hear_cremad.hearcremad method)": [[59, "s3prl.problem.common.hear_cremad.HearCremaD.save_task"]], "save_task() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[59, "s3prl.problem.common.hear_cremad.HearESC50.save_task"]], "train() (s3prl.problem.common.hear_cremad.hearcremad method)": [[59, "s3prl.problem.common.hear_cremad.HearCremaD.train"]], "train() (s3prl.problem.common.hear_cremad.hearesc50 method)": [[59, "s3prl.problem.common.hear_cremad.HearESC50.train"]], "eventpredictiontask (class in s3prl.problem.common.hear_dcase_2016_task2)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask"]], "fixedbatchsizebatchsampler (class in s3prl.problem.common.hear_dcase_2016_task2)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.FixedBatchSizeBatchSampler"]], "groupsameitemsampler (class in s3prl.problem.common.hear_dcase_2016_task2)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.GroupSameItemSampler"]], "heardcase2016task2 (class in s3prl.problem.common.hear_dcase_2016_task2)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2"]], "hearfsd (class in s3prl.problem.common.hear_dcase_2016_task2)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD"]], "heartimestampdatapipe (class in s3prl.problem.common.hear_dcase_2016_task2)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearTimestampDatapipe"]], "ordereddict (class in s3prl.problem.common.hear_dcase_2016_task2)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.OrderedDict"]], "path (class in s3prl.problem.common.hear_dcase_2016_task2)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path"]], "absolute() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.absolute"]], "anchor (s3prl.problem.common.hear_dcase_2016_task2.path property)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.anchor"]], "as_posix() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.as_posix"]], "as_uri() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.as_uri"]], "build_batch_sampler() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.build_featurizer"]], "build_model() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.build_model"]], "build_model() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.build_model"]], "build_optimizer() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.build_scheduler"]], "build_task() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.build_task"]], "build_task() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.build_task"]], "build_upstream() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.build_upstream"]], "chmod() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.chmod"]], "clear() (s3prl.problem.common.hear_dcase_2016_task2.ordereddict method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.OrderedDict.clear"]], "clear() (s3prl.problem.common.hear_dcase_2016_task2.defaultdict method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.defaultdict.clear"]], "copy() (s3prl.problem.common.hear_dcase_2016_task2.ordereddict method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.OrderedDict.copy"]], "copy() (s3prl.problem.common.hear_dcase_2016_task2.defaultdict method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.defaultdict.copy"]], "cwd() (s3prl.problem.common.hear_dcase_2016_task2.path class method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.cwd"]], "dataclass() (in module s3prl.problem.common.hear_dcase_2016_task2)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.dataclass"]], "dcase_2016_task2() (in module s3prl.problem.common.hear_dcase_2016_task2)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.dcase_2016_task2"]], "deepcopy() (in module s3prl.problem.common.hear_dcase_2016_task2)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.deepcopy"]], "default_config() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.default_config"]], "default_config() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.default_config"]], "default_factory (s3prl.problem.common.hear_dcase_2016_task2.defaultdict attribute)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.defaultdict.default_factory"]], "defaultdict (class in s3prl.problem.common.hear_dcase_2016_task2)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.defaultdict"]], "drive (s3prl.problem.common.hear_dcase_2016_task2.path property)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.drive"]], "dump_patches (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask attribute)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.dump_patches"]], "eval_reduction() (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.eval_reduction"]], "evaluate() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.evaluate"]], "evaluate() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.evaluate"]], "exists() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.exists"]], "expanduser() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.expanduser"]], "forward() (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.forward"]], "forward() (s3prl.problem.common.hear_dcase_2016_task2.heartimestampdatapipe method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearTimestampDatapipe.forward"]], "fromkeys() (s3prl.problem.common.hear_dcase_2016_task2.ordereddict method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.OrderedDict.fromkeys"]], "fromkeys() (s3prl.problem.common.hear_dcase_2016_task2.defaultdict method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.defaultdict.fromkeys"]], "get() (s3prl.problem.common.hear_dcase_2016_task2.ordereddict method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.OrderedDict.get"]], "get() (s3prl.problem.common.hear_dcase_2016_task2.defaultdict method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.defaultdict.get"]], "get_class_from_name() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 class method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd class method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.get_class_from_name"]], "get_state() (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.get_state"]], "glob() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.glob"]], "group() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.group"]], "home() (s3prl.problem.common.hear_dcase_2016_task2.path class method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.home"]], "is_absolute() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.is_absolute"]], "is_block_device() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.is_block_device"]], "is_char_device() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.is_char_device"]], "is_dir() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.is_dir"]], "is_fifo() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.is_fifo"]], "is_file() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.is_file"]], "is_mount() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.is_mount"]], "is_reserved() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.is_reserved"]], "is_socket() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.is_socket"]], "is_symlink() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.is_symlink"]], "items() (s3prl.problem.common.hear_dcase_2016_task2.ordereddict method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.OrderedDict.items"]], "items() (s3prl.problem.common.hear_dcase_2016_task2.defaultdict method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.defaultdict.items"]], "iterdir() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.iterdir"]], "joinpath() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.joinpath"]], "keys() (s3prl.problem.common.hear_dcase_2016_task2.ordereddict method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.OrderedDict.keys"]], "keys() (s3prl.problem.common.hear_dcase_2016_task2.defaultdict method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.defaultdict.keys"]], "lchmod() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.lchmod"]], "link_to() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.link_to"]], "load_model() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.load_model"]], "load_model() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.load_task"]], "load_task() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.load_task"]], "log_scores() (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.log_scores"]], "lstat() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.lstat"]], "main() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.main"]], "main() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.main"]], "match() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.match"]], "mkdir() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.mkdir"]], "move_to_end() (s3prl.problem.common.hear_dcase_2016_task2.ordereddict method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.OrderedDict.move_to_end"]], "name (s3prl.problem.common.hear_dcase_2016_task2.path property)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.name"]], "open() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.open"]], "owner() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.owner"]], "parent (s3prl.problem.common.hear_dcase_2016_task2.path property)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.parent"]], "parents (s3prl.problem.common.hear_dcase_2016_task2.path property)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.parents"]], "parse_cached_results() (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.parse_cached_results"]], "parts (s3prl.problem.common.hear_dcase_2016_task2.path property)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.parts"]], "pop() (s3prl.problem.common.hear_dcase_2016_task2.ordereddict method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.OrderedDict.pop"]], "pop() (s3prl.problem.common.hear_dcase_2016_task2.defaultdict method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.defaultdict.pop"]], "popitem() (s3prl.problem.common.hear_dcase_2016_task2.ordereddict method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.OrderedDict.popitem"]], "popitem() (s3prl.problem.common.hear_dcase_2016_task2.defaultdict method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.defaultdict.popitem"]], "predict() (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.predict"]], "prepare_data() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.prepare_data"]], "read_bytes() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.read_bytes"]], "read_text() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.read_text"]], "reduction() (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.reduction"]], "relative_to() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.relative_to"]], "rename() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.rename"]], "replace() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.replace"]], "resolve() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.resolve"]], "rglob() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.rglob"]], "rmdir() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.rmdir"]], "root (s3prl.problem.common.hear_dcase_2016_task2.path property)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.root"]], "run() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.run"]], "run() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.run"]], "s3prl.problem.common.hear_dcase_2016_task2": [[60, "module-s3prl.problem.common.hear_dcase_2016_task2"]], "samefile() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.samefile"]], "save_model() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.save_model"]], "save_model() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.save_model"]], "save_task() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.save_task"]], "save_task() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.save_task"]], "set_epoch() (s3prl.problem.common.hear_dcase_2016_task2.fixedbatchsizebatchsampler method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.FixedBatchSizeBatchSampler.set_epoch"]], "set_epoch() (s3prl.problem.common.hear_dcase_2016_task2.groupsameitemsampler method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.GroupSameItemSampler.set_epoch"]], "set_state() (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.set_state"]], "setdefault() (s3prl.problem.common.hear_dcase_2016_task2.ordereddict method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.OrderedDict.setdefault"]], "setdefault() (s3prl.problem.common.hear_dcase_2016_task2.defaultdict method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.defaultdict.setdefault"]], "stat() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.stat"]], "stem (s3prl.problem.common.hear_dcase_2016_task2.path property)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.stem"]], "suffix (s3prl.problem.common.hear_dcase_2016_task2.path property)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.suffix"]], "suffixes (s3prl.problem.common.hear_dcase_2016_task2.path property)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.suffixes"]], "symlink_to() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.symlink_to"]], "test_reduction() (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.test_reduction"]], "test_step() (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.test_step"]], "touch() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.touch"]], "train() (s3prl.problem.common.hear_dcase_2016_task2.heardcase2016task2 method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearDcase2016Task2.train"]], "train() (s3prl.problem.common.hear_dcase_2016_task2.hearfsd method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.HearFSD.train"]], "train_reduction() (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.train_reduction"]], "train_step() (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.train_step"]], "training (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask attribute)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.training"]], "unlink() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.unlink"]], "update() (s3prl.problem.common.hear_dcase_2016_task2.ordereddict method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.OrderedDict.update"]], "update() (s3prl.problem.common.hear_dcase_2016_task2.defaultdict method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.defaultdict.update"]], "valid_reduction() (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.valid_reduction"]], "valid_step() (s3prl.problem.common.hear_dcase_2016_task2.eventpredictiontask method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.EventPredictionTask.valid_step"]], "values() (s3prl.problem.common.hear_dcase_2016_task2.ordereddict method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.OrderedDict.values"]], "values() (s3prl.problem.common.hear_dcase_2016_task2.defaultdict method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.defaultdict.values"]], "with_name() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.with_name"]], "with_suffix() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.with_suffix"]], "write_bytes() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.write_bytes"]], "write_text() (s3prl.problem.common.hear_dcase_2016_task2.path method)": [[60, "s3prl.problem.common.hear_dcase_2016_task2.Path.write_text"]], "hearesc50 (class in s3prl.problem.common.hear_esc50)": [[61, "s3prl.problem.common.hear_esc50.HearESC50"]], "hearfsd (class in s3prl.problem.common.hear_esc50)": [[61, "s3prl.problem.common.hear_esc50.HearFSD"]], "path (class in s3prl.problem.common.hear_esc50)": [[61, "s3prl.problem.common.hear_esc50.Path"]], "absolute() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.absolute"]], "anchor (s3prl.problem.common.hear_esc50.path property)": [[61, "s3prl.problem.common.hear_esc50.Path.anchor"]], "as_posix() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.as_posix"]], "as_uri() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.as_uri"]], "build_batch_sampler() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[61, "s3prl.problem.common.hear_esc50.HearESC50.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_esc50.hearfsd method)": [[61, "s3prl.problem.common.hear_esc50.HearFSD.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[61, "s3prl.problem.common.hear_esc50.HearESC50.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_esc50.hearfsd method)": [[61, "s3prl.problem.common.hear_esc50.HearFSD.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[61, "s3prl.problem.common.hear_esc50.HearESC50.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_esc50.hearfsd method)": [[61, "s3prl.problem.common.hear_esc50.HearFSD.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[61, "s3prl.problem.common.hear_esc50.HearESC50.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_esc50.hearfsd method)": [[61, "s3prl.problem.common.hear_esc50.HearFSD.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[61, "s3prl.problem.common.hear_esc50.HearESC50.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_esc50.hearfsd method)": [[61, "s3prl.problem.common.hear_esc50.HearFSD.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[61, "s3prl.problem.common.hear_esc50.HearESC50.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_esc50.hearfsd method)": [[61, "s3prl.problem.common.hear_esc50.HearFSD.build_featurizer"]], "build_model() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[61, "s3prl.problem.common.hear_esc50.HearESC50.build_model"]], "build_model() (s3prl.problem.common.hear_esc50.hearfsd method)": [[61, "s3prl.problem.common.hear_esc50.HearFSD.build_model"]], "build_optimizer() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[61, "s3prl.problem.common.hear_esc50.HearESC50.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_esc50.hearfsd method)": [[61, "s3prl.problem.common.hear_esc50.HearFSD.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[61, "s3prl.problem.common.hear_esc50.HearESC50.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_esc50.hearfsd method)": [[61, "s3prl.problem.common.hear_esc50.HearFSD.build_scheduler"]], "build_task() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[61, "s3prl.problem.common.hear_esc50.HearESC50.build_task"]], "build_task() (s3prl.problem.common.hear_esc50.hearfsd method)": [[61, "s3prl.problem.common.hear_esc50.HearFSD.build_task"]], "build_upstream() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[61, "s3prl.problem.common.hear_esc50.HearESC50.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_esc50.hearfsd method)": [[61, "s3prl.problem.common.hear_esc50.HearFSD.build_upstream"]], "chmod() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.chmod"]], "clear() (s3prl.problem.common.hear_esc50.defaultdict method)": [[61, "s3prl.problem.common.hear_esc50.defaultdict.clear"]], "copy() (s3prl.problem.common.hear_esc50.defaultdict method)": [[61, "s3prl.problem.common.hear_esc50.defaultdict.copy"]], "cwd() (s3prl.problem.common.hear_esc50.path class method)": [[61, "s3prl.problem.common.hear_esc50.Path.cwd"]], "default_config() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[61, "s3prl.problem.common.hear_esc50.HearESC50.default_config"]], "default_config() (s3prl.problem.common.hear_esc50.hearfsd method)": [[61, "s3prl.problem.common.hear_esc50.HearFSD.default_config"]], "default_factory (s3prl.problem.common.hear_esc50.defaultdict attribute)": [[61, "s3prl.problem.common.hear_esc50.defaultdict.default_factory"]], "defaultdict (class in s3prl.problem.common.hear_esc50)": [[61, "s3prl.problem.common.hear_esc50.defaultdict"]], "drive (s3prl.problem.common.hear_esc50.path property)": [[61, "s3prl.problem.common.hear_esc50.Path.drive"]], "evaluate() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[61, "s3prl.problem.common.hear_esc50.HearESC50.evaluate"]], "evaluate() (s3prl.problem.common.hear_esc50.hearfsd method)": [[61, "s3prl.problem.common.hear_esc50.HearFSD.evaluate"]], "exists() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.exists"]], "expanduser() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.expanduser"]], "fromkeys() (s3prl.problem.common.hear_esc50.defaultdict method)": [[61, "s3prl.problem.common.hear_esc50.defaultdict.fromkeys"]], "get() (s3prl.problem.common.hear_esc50.defaultdict method)": [[61, "s3prl.problem.common.hear_esc50.defaultdict.get"]], "get_class_from_name() (s3prl.problem.common.hear_esc50.hearesc50 class method)": [[61, "s3prl.problem.common.hear_esc50.HearESC50.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_esc50.hearfsd class method)": [[61, "s3prl.problem.common.hear_esc50.HearFSD.get_class_from_name"]], "glob() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.glob"]], "group() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.group"]], "hear_scene_kfolds() (in module s3prl.problem.common.hear_esc50)": [[61, "s3prl.problem.common.hear_esc50.hear_scene_kfolds"]], "home() (s3prl.problem.common.hear_esc50.path class method)": [[61, "s3prl.problem.common.hear_esc50.Path.home"]], "is_absolute() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.is_absolute"]], "is_block_device() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.is_block_device"]], "is_char_device() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.is_char_device"]], "is_dir() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.is_dir"]], "is_fifo() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.is_fifo"]], "is_file() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.is_file"]], "is_mount() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.is_mount"]], "is_reserved() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.is_reserved"]], "is_socket() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.is_socket"]], "is_symlink() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.is_symlink"]], "items() (s3prl.problem.common.hear_esc50.defaultdict method)": [[61, "s3prl.problem.common.hear_esc50.defaultdict.items"]], "iterdir() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.iterdir"]], "joinpath() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.joinpath"]], "keys() (s3prl.problem.common.hear_esc50.defaultdict method)": [[61, "s3prl.problem.common.hear_esc50.defaultdict.keys"]], "lchmod() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.lchmod"]], "link_to() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.link_to"]], "load_model() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[61, "s3prl.problem.common.hear_esc50.HearESC50.load_model"]], "load_model() (s3prl.problem.common.hear_esc50.hearfsd method)": [[61, "s3prl.problem.common.hear_esc50.HearFSD.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[61, "s3prl.problem.common.hear_esc50.HearESC50.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_esc50.hearfsd method)": [[61, "s3prl.problem.common.hear_esc50.HearFSD.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[61, "s3prl.problem.common.hear_esc50.HearESC50.load_task"]], "load_task() (s3prl.problem.common.hear_esc50.hearfsd method)": [[61, "s3prl.problem.common.hear_esc50.HearFSD.load_task"]], "lstat() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.lstat"]], "main() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[61, "s3prl.problem.common.hear_esc50.HearESC50.main"]], "main() (s3prl.problem.common.hear_esc50.hearfsd method)": [[61, "s3prl.problem.common.hear_esc50.HearFSD.main"]], "match() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.match"]], "mkdir() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.mkdir"]], "name (s3prl.problem.common.hear_esc50.path property)": [[61, "s3prl.problem.common.hear_esc50.Path.name"]], "open() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.open"]], "owner() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.owner"]], "parent (s3prl.problem.common.hear_esc50.path property)": [[61, "s3prl.problem.common.hear_esc50.Path.parent"]], "parents (s3prl.problem.common.hear_esc50.path property)": [[61, "s3prl.problem.common.hear_esc50.Path.parents"]], "parts (s3prl.problem.common.hear_esc50.path property)": [[61, "s3prl.problem.common.hear_esc50.Path.parts"]], "pop() (s3prl.problem.common.hear_esc50.defaultdict method)": [[61, "s3prl.problem.common.hear_esc50.defaultdict.pop"]], "popitem() (s3prl.problem.common.hear_esc50.defaultdict method)": [[61, "s3prl.problem.common.hear_esc50.defaultdict.popitem"]], "prepare_data() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[61, "s3prl.problem.common.hear_esc50.HearESC50.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_esc50.hearfsd method)": [[61, "s3prl.problem.common.hear_esc50.HearFSD.prepare_data"]], "read_bytes() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.read_bytes"]], "read_text() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.read_text"]], "relative_to() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.relative_to"]], "rename() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.rename"]], "replace() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.replace"]], "resolve() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.resolve"]], "rglob() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.rglob"]], "rmdir() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.rmdir"]], "root (s3prl.problem.common.hear_esc50.path property)": [[61, "s3prl.problem.common.hear_esc50.Path.root"]], "run() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[61, "s3prl.problem.common.hear_esc50.HearESC50.run"]], "run() (s3prl.problem.common.hear_esc50.hearfsd method)": [[61, "s3prl.problem.common.hear_esc50.HearFSD.run"]], "s3prl.problem.common.hear_esc50": [[61, "module-s3prl.problem.common.hear_esc50"]], "samefile() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.samefile"]], "save_model() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[61, "s3prl.problem.common.hear_esc50.HearESC50.save_model"]], "save_model() (s3prl.problem.common.hear_esc50.hearfsd method)": [[61, "s3prl.problem.common.hear_esc50.HearFSD.save_model"]], "save_task() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[61, "s3prl.problem.common.hear_esc50.HearESC50.save_task"]], "save_task() (s3prl.problem.common.hear_esc50.hearfsd method)": [[61, "s3prl.problem.common.hear_esc50.HearFSD.save_task"]], "setdefault() (s3prl.problem.common.hear_esc50.defaultdict method)": [[61, "s3prl.problem.common.hear_esc50.defaultdict.setdefault"]], "stat() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.stat"]], "stem (s3prl.problem.common.hear_esc50.path property)": [[61, "s3prl.problem.common.hear_esc50.Path.stem"]], "suffix (s3prl.problem.common.hear_esc50.path property)": [[61, "s3prl.problem.common.hear_esc50.Path.suffix"]], "suffixes (s3prl.problem.common.hear_esc50.path property)": [[61, "s3prl.problem.common.hear_esc50.Path.suffixes"]], "symlink_to() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.symlink_to"]], "touch() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.touch"]], "train() (s3prl.problem.common.hear_esc50.hearesc50 method)": [[61, "s3prl.problem.common.hear_esc50.HearESC50.train"]], "train() (s3prl.problem.common.hear_esc50.hearfsd method)": [[61, "s3prl.problem.common.hear_esc50.HearFSD.train"]], "unlink() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.unlink"]], "update() (s3prl.problem.common.hear_esc50.defaultdict method)": [[61, "s3prl.problem.common.hear_esc50.defaultdict.update"]], "values() (s3prl.problem.common.hear_esc50.defaultdict method)": [[61, "s3prl.problem.common.hear_esc50.defaultdict.values"]], "with_name() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.with_name"]], "with_suffix() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.with_suffix"]], "write_bytes() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.write_bytes"]], "write_text() (s3prl.problem.common.hear_esc50.path method)": [[61, "s3prl.problem.common.hear_esc50.Path.write_text"]], "categoryencoder (class in s3prl.problem.common.hear_fsd)": [[62, "s3prl.problem.common.hear_fsd.CategoryEncoder"]], "fixedbatchsizebatchsampler (class in s3prl.problem.common.hear_fsd)": [[62, "s3prl.problem.common.hear_fsd.FixedBatchSizeBatchSampler"]], "hearfsd (class in s3prl.problem.common.hear_fsd)": [[62, "s3prl.problem.common.hear_fsd.HearFSD"]], "hearfullyconnectedprediction (class in s3prl.problem.common.hear_fsd)": [[62, "s3prl.problem.common.hear_fsd.HearFullyConnectedPrediction"]], "hearscenepipe (class in s3prl.problem.common.hear_fsd)": [[62, "s3prl.problem.common.hear_fsd.HearScenePipe"]], "ordereddict (class in s3prl.problem.common.hear_fsd)": [[62, "s3prl.problem.common.hear_fsd.OrderedDict"]], "path (class in s3prl.problem.common.hear_fsd)": [[62, "s3prl.problem.common.hear_fsd.Path"]], "scenepredictiontask (class in s3prl.problem.common.hear_fsd)": [[62, "s3prl.problem.common.hear_fsd.ScenePredictionTask"]], "superbsid (class in s3prl.problem.common.hear_fsd)": [[62, "s3prl.problem.common.hear_fsd.SuperbSID"]], "absolute() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.absolute"]], "anchor (s3prl.problem.common.hear_fsd.path property)": [[62, "s3prl.problem.common.hear_fsd.Path.anchor"]], "as_posix() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.as_posix"]], "as_uri() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.as_uri"]], "build_batch_sampler() (s3prl.problem.common.hear_fsd.hearfsd method)": [[62, "s3prl.problem.common.hear_fsd.HearFSD.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_fsd.superbsid method)": [[62, "s3prl.problem.common.hear_fsd.SuperbSID.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_fsd.hearfsd method)": [[62, "s3prl.problem.common.hear_fsd.HearFSD.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_fsd.superbsid method)": [[62, "s3prl.problem.common.hear_fsd.SuperbSID.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_fsd.hearfsd method)": [[62, "s3prl.problem.common.hear_fsd.HearFSD.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_fsd.superbsid method)": [[62, "s3prl.problem.common.hear_fsd.SuperbSID.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_fsd.hearfsd method)": [[62, "s3prl.problem.common.hear_fsd.HearFSD.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_fsd.superbsid method)": [[62, "s3prl.problem.common.hear_fsd.SuperbSID.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_fsd.hearfsd method)": [[62, "s3prl.problem.common.hear_fsd.HearFSD.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_fsd.superbsid method)": [[62, "s3prl.problem.common.hear_fsd.SuperbSID.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_fsd.hearfsd method)": [[62, "s3prl.problem.common.hear_fsd.HearFSD.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_fsd.superbsid method)": [[62, "s3prl.problem.common.hear_fsd.SuperbSID.build_featurizer"]], "build_model() (s3prl.problem.common.hear_fsd.hearfsd method)": [[62, "s3prl.problem.common.hear_fsd.HearFSD.build_model"]], "build_model() (s3prl.problem.common.hear_fsd.superbsid method)": [[62, "s3prl.problem.common.hear_fsd.SuperbSID.build_model"]], "build_optimizer() (s3prl.problem.common.hear_fsd.hearfsd method)": [[62, "s3prl.problem.common.hear_fsd.HearFSD.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_fsd.superbsid method)": [[62, "s3prl.problem.common.hear_fsd.SuperbSID.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_fsd.hearfsd method)": [[62, "s3prl.problem.common.hear_fsd.HearFSD.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_fsd.superbsid method)": [[62, "s3prl.problem.common.hear_fsd.SuperbSID.build_scheduler"]], "build_task() (s3prl.problem.common.hear_fsd.hearfsd method)": [[62, "s3prl.problem.common.hear_fsd.HearFSD.build_task"]], "build_task() (s3prl.problem.common.hear_fsd.superbsid method)": [[62, "s3prl.problem.common.hear_fsd.SuperbSID.build_task"]], "build_upstream() (s3prl.problem.common.hear_fsd.hearfsd method)": [[62, "s3prl.problem.common.hear_fsd.HearFSD.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_fsd.superbsid method)": [[62, "s3prl.problem.common.hear_fsd.SuperbSID.build_upstream"]], "chmod() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.chmod"]], "clear() (s3prl.problem.common.hear_fsd.ordereddict method)": [[62, "s3prl.problem.common.hear_fsd.OrderedDict.clear"]], "clear() (s3prl.problem.common.hear_fsd.defaultdict method)": [[62, "s3prl.problem.common.hear_fsd.defaultdict.clear"]], "copy() (s3prl.problem.common.hear_fsd.ordereddict method)": [[62, "s3prl.problem.common.hear_fsd.OrderedDict.copy"]], "copy() (s3prl.problem.common.hear_fsd.defaultdict method)": [[62, "s3prl.problem.common.hear_fsd.defaultdict.copy"]], "cwd() (s3prl.problem.common.hear_fsd.path class method)": [[62, "s3prl.problem.common.hear_fsd.Path.cwd"]], "dataclass() (in module s3prl.problem.common.hear_fsd)": [[62, "s3prl.problem.common.hear_fsd.dataclass"]], "decode() (s3prl.problem.common.hear_fsd.categoryencoder method)": [[62, "s3prl.problem.common.hear_fsd.CategoryEncoder.decode"]], "default_config() (s3prl.problem.common.hear_fsd.hearfsd method)": [[62, "s3prl.problem.common.hear_fsd.HearFSD.default_config"]], "default_config() (s3prl.problem.common.hear_fsd.superbsid method)": [[62, "s3prl.problem.common.hear_fsd.SuperbSID.default_config"]], "default_factory (s3prl.problem.common.hear_fsd.defaultdict attribute)": [[62, "s3prl.problem.common.hear_fsd.defaultdict.default_factory"]], "defaultdict (class in s3prl.problem.common.hear_fsd)": [[62, "s3prl.problem.common.hear_fsd.defaultdict"]], "drive (s3prl.problem.common.hear_fsd.path property)": [[62, "s3prl.problem.common.hear_fsd.Path.drive"]], "dump_patches (s3prl.problem.common.hear_fsd.hearfullyconnectedprediction attribute)": [[62, "s3prl.problem.common.hear_fsd.HearFullyConnectedPrediction.dump_patches"]], "dump_patches (s3prl.problem.common.hear_fsd.scenepredictiontask attribute)": [[62, "s3prl.problem.common.hear_fsd.ScenePredictionTask.dump_patches"]], "encode() (s3prl.problem.common.hear_fsd.categoryencoder method)": [[62, "s3prl.problem.common.hear_fsd.CategoryEncoder.encode"]], "evaluate() (s3prl.problem.common.hear_fsd.hearfsd method)": [[62, "s3prl.problem.common.hear_fsd.HearFSD.evaluate"]], "evaluate() (s3prl.problem.common.hear_fsd.superbsid method)": [[62, "s3prl.problem.common.hear_fsd.SuperbSID.evaluate"]], "exists() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.exists"]], "expanduser() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.expanduser"]], "forward() (s3prl.problem.common.hear_fsd.hearfullyconnectedprediction method)": [[62, "s3prl.problem.common.hear_fsd.HearFullyConnectedPrediction.forward"]], "forward() (s3prl.problem.common.hear_fsd.hearscenepipe method)": [[62, "s3prl.problem.common.hear_fsd.HearScenePipe.forward"]], "forward() (s3prl.problem.common.hear_fsd.scenepredictiontask method)": [[62, "s3prl.problem.common.hear_fsd.ScenePredictionTask.forward"]], "fromkeys() (s3prl.problem.common.hear_fsd.ordereddict method)": [[62, "s3prl.problem.common.hear_fsd.OrderedDict.fromkeys"]], "fromkeys() (s3prl.problem.common.hear_fsd.defaultdict method)": [[62, "s3prl.problem.common.hear_fsd.defaultdict.fromkeys"]], "get() (s3prl.problem.common.hear_fsd.ordereddict method)": [[62, "s3prl.problem.common.hear_fsd.OrderedDict.get"]], "get() (s3prl.problem.common.hear_fsd.defaultdict method)": [[62, "s3prl.problem.common.hear_fsd.defaultdict.get"]], "get_class_from_name() (s3prl.problem.common.hear_fsd.hearfsd class method)": [[62, "s3prl.problem.common.hear_fsd.HearFSD.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_fsd.superbsid class method)": [[62, "s3prl.problem.common.hear_fsd.SuperbSID.get_class_from_name"]], "get_state() (s3prl.problem.common.hear_fsd.scenepredictiontask method)": [[62, "s3prl.problem.common.hear_fsd.ScenePredictionTask.get_state"]], "glob() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.glob"]], "group() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.group"]], "hear_scene_trainvaltest() (in module s3prl.problem.common.hear_fsd)": [[62, "s3prl.problem.common.hear_fsd.hear_scene_trainvaltest"]], "home() (s3prl.problem.common.hear_fsd.path class method)": [[62, "s3prl.problem.common.hear_fsd.Path.home"]], "input_size (s3prl.problem.common.hear_fsd.hearfullyconnectedprediction property)": [[62, "s3prl.problem.common.hear_fsd.HearFullyConnectedPrediction.input_size"]], "is_absolute() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.is_absolute"]], "is_block_device() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.is_block_device"]], "is_char_device() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.is_char_device"]], "is_dir() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.is_dir"]], "is_fifo() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.is_fifo"]], "is_file() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.is_file"]], "is_mount() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.is_mount"]], "is_reserved() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.is_reserved"]], "is_socket() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.is_socket"]], "is_symlink() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.is_symlink"]], "items() (s3prl.problem.common.hear_fsd.ordereddict method)": [[62, "s3prl.problem.common.hear_fsd.OrderedDict.items"]], "items() (s3prl.problem.common.hear_fsd.defaultdict method)": [[62, "s3prl.problem.common.hear_fsd.defaultdict.items"]], "iterdir() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.iterdir"]], "joinpath() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.joinpath"]], "keys() (s3prl.problem.common.hear_fsd.ordereddict method)": [[62, "s3prl.problem.common.hear_fsd.OrderedDict.keys"]], "keys() (s3prl.problem.common.hear_fsd.defaultdict method)": [[62, "s3prl.problem.common.hear_fsd.defaultdict.keys"]], "lchmod() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.lchmod"]], "link_to() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.link_to"]], "load_model() (s3prl.problem.common.hear_fsd.hearfsd method)": [[62, "s3prl.problem.common.hear_fsd.HearFSD.load_model"]], "load_model() (s3prl.problem.common.hear_fsd.superbsid method)": [[62, "s3prl.problem.common.hear_fsd.SuperbSID.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_fsd.hearfsd method)": [[62, "s3prl.problem.common.hear_fsd.HearFSD.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_fsd.superbsid method)": [[62, "s3prl.problem.common.hear_fsd.SuperbSID.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_fsd.hearfsd method)": [[62, "s3prl.problem.common.hear_fsd.HearFSD.load_task"]], "load_task() (s3prl.problem.common.hear_fsd.superbsid method)": [[62, "s3prl.problem.common.hear_fsd.SuperbSID.load_task"]], "log_scores() (s3prl.problem.common.hear_fsd.scenepredictiontask method)": [[62, "s3prl.problem.common.hear_fsd.ScenePredictionTask.log_scores"]], "lstat() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.lstat"]], "main() (s3prl.problem.common.hear_fsd.hearfsd method)": [[62, "s3prl.problem.common.hear_fsd.HearFSD.main"]], "main() (s3prl.problem.common.hear_fsd.superbsid method)": [[62, "s3prl.problem.common.hear_fsd.SuperbSID.main"]], "match() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.match"]], "mkdir() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.mkdir"]], "move_to_end() (s3prl.problem.common.hear_fsd.ordereddict method)": [[62, "s3prl.problem.common.hear_fsd.OrderedDict.move_to_end"]], "name (s3prl.problem.common.hear_fsd.path property)": [[62, "s3prl.problem.common.hear_fsd.Path.name"]], "open() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.open"]], "output_size (s3prl.problem.common.hear_fsd.hearfullyconnectedprediction property)": [[62, "s3prl.problem.common.hear_fsd.HearFullyConnectedPrediction.output_size"]], "owner() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.owner"]], "parent (s3prl.problem.common.hear_fsd.path property)": [[62, "s3prl.problem.common.hear_fsd.Path.parent"]], "parents (s3prl.problem.common.hear_fsd.path property)": [[62, "s3prl.problem.common.hear_fsd.Path.parents"]], "parse_cached_results() (s3prl.problem.common.hear_fsd.scenepredictiontask method)": [[62, "s3prl.problem.common.hear_fsd.ScenePredictionTask.parse_cached_results"]], "parts (s3prl.problem.common.hear_fsd.path property)": [[62, "s3prl.problem.common.hear_fsd.Path.parts"]], "pop() (s3prl.problem.common.hear_fsd.ordereddict method)": [[62, "s3prl.problem.common.hear_fsd.OrderedDict.pop"]], "pop() (s3prl.problem.common.hear_fsd.defaultdict method)": [[62, "s3prl.problem.common.hear_fsd.defaultdict.pop"]], "popitem() (s3prl.problem.common.hear_fsd.ordereddict method)": [[62, "s3prl.problem.common.hear_fsd.OrderedDict.popitem"]], "popitem() (s3prl.problem.common.hear_fsd.defaultdict method)": [[62, "s3prl.problem.common.hear_fsd.defaultdict.popitem"]], "predict() (s3prl.problem.common.hear_fsd.scenepredictiontask method)": [[62, "s3prl.problem.common.hear_fsd.ScenePredictionTask.predict"]], "prepare_data() (s3prl.problem.common.hear_fsd.hearfsd method)": [[62, "s3prl.problem.common.hear_fsd.HearFSD.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_fsd.superbsid method)": [[62, "s3prl.problem.common.hear_fsd.SuperbSID.prepare_data"]], "read_bytes() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.read_bytes"]], "read_text() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.read_text"]], "reduction() (s3prl.problem.common.hear_fsd.scenepredictiontask method)": [[62, "s3prl.problem.common.hear_fsd.ScenePredictionTask.reduction"]], "relative_to() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.relative_to"]], "rename() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.rename"]], "replace() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.replace"]], "resolve() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.resolve"]], "rglob() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.rglob"]], "rmdir() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.rmdir"]], "root (s3prl.problem.common.hear_fsd.path property)": [[62, "s3prl.problem.common.hear_fsd.Path.root"]], "run() (s3prl.problem.common.hear_fsd.hearfsd method)": [[62, "s3prl.problem.common.hear_fsd.HearFSD.run"]], "run() (s3prl.problem.common.hear_fsd.superbsid method)": [[62, "s3prl.problem.common.hear_fsd.SuperbSID.run"]], "s3prl.problem.common.hear_fsd": [[62, "module-s3prl.problem.common.hear_fsd"]], "samefile() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.samefile"]], "save_model() (s3prl.problem.common.hear_fsd.hearfsd method)": [[62, "s3prl.problem.common.hear_fsd.HearFSD.save_model"]], "save_model() (s3prl.problem.common.hear_fsd.superbsid method)": [[62, "s3prl.problem.common.hear_fsd.SuperbSID.save_model"]], "save_task() (s3prl.problem.common.hear_fsd.hearfsd method)": [[62, "s3prl.problem.common.hear_fsd.HearFSD.save_task"]], "save_task() (s3prl.problem.common.hear_fsd.superbsid method)": [[62, "s3prl.problem.common.hear_fsd.SuperbSID.save_task"]], "set_epoch() (s3prl.problem.common.hear_fsd.fixedbatchsizebatchsampler method)": [[62, "s3prl.problem.common.hear_fsd.FixedBatchSizeBatchSampler.set_epoch"]], "set_state() (s3prl.problem.common.hear_fsd.scenepredictiontask method)": [[62, "s3prl.problem.common.hear_fsd.ScenePredictionTask.set_state"]], "setdefault() (s3prl.problem.common.hear_fsd.ordereddict method)": [[62, "s3prl.problem.common.hear_fsd.OrderedDict.setdefault"]], "setdefault() (s3prl.problem.common.hear_fsd.defaultdict method)": [[62, "s3prl.problem.common.hear_fsd.defaultdict.setdefault"]], "stat() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.stat"]], "stem (s3prl.problem.common.hear_fsd.path property)": [[62, "s3prl.problem.common.hear_fsd.Path.stem"]], "suffix (s3prl.problem.common.hear_fsd.path property)": [[62, "s3prl.problem.common.hear_fsd.Path.suffix"]], "suffixes (s3prl.problem.common.hear_fsd.path property)": [[62, "s3prl.problem.common.hear_fsd.Path.suffixes"]], "symlink_to() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.symlink_to"]], "test_reduction() (s3prl.problem.common.hear_fsd.scenepredictiontask method)": [[62, "s3prl.problem.common.hear_fsd.ScenePredictionTask.test_reduction"]], "test_step() (s3prl.problem.common.hear_fsd.scenepredictiontask method)": [[62, "s3prl.problem.common.hear_fsd.ScenePredictionTask.test_step"]], "touch() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.touch"]], "train() (s3prl.problem.common.hear_fsd.hearfsd method)": [[62, "s3prl.problem.common.hear_fsd.HearFSD.train"]], "train() (s3prl.problem.common.hear_fsd.superbsid method)": [[62, "s3prl.problem.common.hear_fsd.SuperbSID.train"]], "train_reduction() (s3prl.problem.common.hear_fsd.scenepredictiontask method)": [[62, "s3prl.problem.common.hear_fsd.ScenePredictionTask.train_reduction"]], "train_step() (s3prl.problem.common.hear_fsd.scenepredictiontask method)": [[62, "s3prl.problem.common.hear_fsd.ScenePredictionTask.train_step"]], "training (s3prl.problem.common.hear_fsd.hearfullyconnectedprediction attribute)": [[62, "s3prl.problem.common.hear_fsd.HearFullyConnectedPrediction.training"]], "training (s3prl.problem.common.hear_fsd.scenepredictiontask attribute)": [[62, "s3prl.problem.common.hear_fsd.ScenePredictionTask.training"]], "unlink() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.unlink"]], "update() (s3prl.problem.common.hear_fsd.ordereddict method)": [[62, "s3prl.problem.common.hear_fsd.OrderedDict.update"]], "update() (s3prl.problem.common.hear_fsd.defaultdict method)": [[62, "s3prl.problem.common.hear_fsd.defaultdict.update"]], "valid_reduction() (s3prl.problem.common.hear_fsd.scenepredictiontask method)": [[62, "s3prl.problem.common.hear_fsd.ScenePredictionTask.valid_reduction"]], "valid_step() (s3prl.problem.common.hear_fsd.scenepredictiontask method)": [[62, "s3prl.problem.common.hear_fsd.ScenePredictionTask.valid_step"]], "values() (s3prl.problem.common.hear_fsd.ordereddict method)": [[62, "s3prl.problem.common.hear_fsd.OrderedDict.values"]], "values() (s3prl.problem.common.hear_fsd.defaultdict method)": [[62, "s3prl.problem.common.hear_fsd.defaultdict.values"]], "with_name() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.with_name"]], "with_suffix() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.with_suffix"]], "write_bytes() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.write_bytes"]], "write_text() (s3prl.problem.common.hear_fsd.path method)": [[62, "s3prl.problem.common.hear_fsd.Path.write_text"]], "hearfsd (class in s3prl.problem.common.hear_gsc5hr)": [[63, "s3prl.problem.common.hear_gsc5hr.HearFSD"]], "heargsc5hr (class in s3prl.problem.common.hear_gsc5hr)": [[63, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr"]], "build_batch_sampler() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearFSD.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearFSD.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearFSD.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearFSD.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearFSD.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearFSD.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.build_featurizer"]], "build_model() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearFSD.build_model"]], "build_model() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.build_model"]], "build_optimizer() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearFSD.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearFSD.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.build_scheduler"]], "build_task() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearFSD.build_task"]], "build_task() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.build_task"]], "build_upstream() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearFSD.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.build_upstream"]], "default_config() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearFSD.default_config"]], "default_config() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.default_config"]], "evaluate() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearFSD.evaluate"]], "evaluate() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.evaluate"]], "get_class_from_name() (s3prl.problem.common.hear_gsc5hr.hearfsd class method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearFSD.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_gsc5hr.heargsc5hr class method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.get_class_from_name"]], "load_model() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearFSD.load_model"]], "load_model() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearFSD.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearFSD.load_task"]], "load_task() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.load_task"]], "main() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearFSD.main"]], "main() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.main"]], "prepare_data() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearFSD.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.prepare_data"]], "run() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearFSD.run"]], "run() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.run"]], "s3prl.problem.common.hear_gsc5hr": [[63, "module-s3prl.problem.common.hear_gsc5hr"]], "save_model() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearFSD.save_model"]], "save_model() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.save_model"]], "save_task() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearFSD.save_task"]], "save_task() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.save_task"]], "train() (s3prl.problem.common.hear_gsc5hr.hearfsd method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearFSD.train"]], "train() (s3prl.problem.common.hear_gsc5hr.heargsc5hr method)": [[63, "s3prl.problem.common.hear_gsc5hr.HearGSC5hr.train"]], "hearesc50 (class in s3prl.problem.common.hear_gtzan)": [[64, "s3prl.problem.common.hear_gtzan.HearESC50"]], "heargtzan (class in s3prl.problem.common.hear_gtzan)": [[64, "s3prl.problem.common.hear_gtzan.HearGtzan"]], "build_batch_sampler() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[64, "s3prl.problem.common.hear_gtzan.HearESC50.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[64, "s3prl.problem.common.hear_gtzan.HearGtzan.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[64, "s3prl.problem.common.hear_gtzan.HearESC50.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[64, "s3prl.problem.common.hear_gtzan.HearGtzan.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[64, "s3prl.problem.common.hear_gtzan.HearESC50.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[64, "s3prl.problem.common.hear_gtzan.HearGtzan.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[64, "s3prl.problem.common.hear_gtzan.HearESC50.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[64, "s3prl.problem.common.hear_gtzan.HearGtzan.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[64, "s3prl.problem.common.hear_gtzan.HearESC50.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[64, "s3prl.problem.common.hear_gtzan.HearGtzan.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[64, "s3prl.problem.common.hear_gtzan.HearESC50.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[64, "s3prl.problem.common.hear_gtzan.HearGtzan.build_featurizer"]], "build_model() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[64, "s3prl.problem.common.hear_gtzan.HearESC50.build_model"]], "build_model() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[64, "s3prl.problem.common.hear_gtzan.HearGtzan.build_model"]], "build_optimizer() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[64, "s3prl.problem.common.hear_gtzan.HearESC50.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[64, "s3prl.problem.common.hear_gtzan.HearGtzan.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[64, "s3prl.problem.common.hear_gtzan.HearESC50.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[64, "s3prl.problem.common.hear_gtzan.HearGtzan.build_scheduler"]], "build_task() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[64, "s3prl.problem.common.hear_gtzan.HearESC50.build_task"]], "build_task() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[64, "s3prl.problem.common.hear_gtzan.HearGtzan.build_task"]], "build_upstream() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[64, "s3prl.problem.common.hear_gtzan.HearESC50.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[64, "s3prl.problem.common.hear_gtzan.HearGtzan.build_upstream"]], "default_config() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[64, "s3prl.problem.common.hear_gtzan.HearESC50.default_config"]], "default_config() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[64, "s3prl.problem.common.hear_gtzan.HearGtzan.default_config"]], "evaluate() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[64, "s3prl.problem.common.hear_gtzan.HearESC50.evaluate"]], "evaluate() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[64, "s3prl.problem.common.hear_gtzan.HearGtzan.evaluate"]], "get_class_from_name() (s3prl.problem.common.hear_gtzan.hearesc50 class method)": [[64, "s3prl.problem.common.hear_gtzan.HearESC50.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_gtzan.heargtzan class method)": [[64, "s3prl.problem.common.hear_gtzan.HearGtzan.get_class_from_name"]], "load_model() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[64, "s3prl.problem.common.hear_gtzan.HearESC50.load_model"]], "load_model() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[64, "s3prl.problem.common.hear_gtzan.HearGtzan.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[64, "s3prl.problem.common.hear_gtzan.HearESC50.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[64, "s3prl.problem.common.hear_gtzan.HearGtzan.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[64, "s3prl.problem.common.hear_gtzan.HearESC50.load_task"]], "load_task() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[64, "s3prl.problem.common.hear_gtzan.HearGtzan.load_task"]], "main() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[64, "s3prl.problem.common.hear_gtzan.HearESC50.main"]], "main() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[64, "s3prl.problem.common.hear_gtzan.HearGtzan.main"]], "prepare_data() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[64, "s3prl.problem.common.hear_gtzan.HearESC50.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[64, "s3prl.problem.common.hear_gtzan.HearGtzan.prepare_data"]], "run() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[64, "s3prl.problem.common.hear_gtzan.HearESC50.run"]], "run() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[64, "s3prl.problem.common.hear_gtzan.HearGtzan.run"]], "s3prl.problem.common.hear_gtzan": [[64, "module-s3prl.problem.common.hear_gtzan"]], "save_model() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[64, "s3prl.problem.common.hear_gtzan.HearESC50.save_model"]], "save_model() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[64, "s3prl.problem.common.hear_gtzan.HearGtzan.save_model"]], "save_task() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[64, "s3prl.problem.common.hear_gtzan.HearESC50.save_task"]], "save_task() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[64, "s3prl.problem.common.hear_gtzan.HearGtzan.save_task"]], "train() (s3prl.problem.common.hear_gtzan.hearesc50 method)": [[64, "s3prl.problem.common.hear_gtzan.HearESC50.train"]], "train() (s3prl.problem.common.hear_gtzan.heargtzan method)": [[64, "s3prl.problem.common.hear_gtzan.HearGtzan.train"]], "hearesc50 (class in s3prl.problem.common.hear_gtzan_music_speech)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50"]], "heargtzanmusicspeech (class in s3prl.problem.common.hear_gtzan_music_speech)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech"]], "build_batch_sampler() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.build_featurizer"]], "build_model() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.build_model"]], "build_model() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.build_model"]], "build_optimizer() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.build_scheduler"]], "build_task() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.build_task"]], "build_task() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.build_task"]], "build_upstream() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.build_upstream"]], "default_config() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.default_config"]], "default_config() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.default_config"]], "evaluate() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.evaluate"]], "evaluate() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.evaluate"]], "get_class_from_name() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 class method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech class method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.get_class_from_name"]], "load_model() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.load_model"]], "load_model() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.load_task"]], "load_task() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.load_task"]], "main() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.main"]], "main() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.main"]], "prepare_data() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.prepare_data"]], "run() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.run"]], "run() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.run"]], "s3prl.problem.common.hear_gtzan_music_speech": [[65, "module-s3prl.problem.common.hear_gtzan_music_speech"]], "save_model() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.save_model"]], "save_model() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.save_model"]], "save_task() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.save_task"]], "save_task() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.save_task"]], "train() (s3prl.problem.common.hear_gtzan_music_speech.hearesc50 method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearESC50.train"]], "train() (s3prl.problem.common.hear_gtzan_music_speech.heargtzanmusicspeech method)": [[65, "s3prl.problem.common.hear_gtzan_music_speech.HearGtzanMusicSpeech.train"]], "hearesc50 (class in s3prl.problem.common.hear_gunshot)": [[66, "s3prl.problem.common.hear_gunshot.HearESC50"]], "heargunshot (class in s3prl.problem.common.hear_gunshot)": [[66, "s3prl.problem.common.hear_gunshot.HearGunshot"]], "build_batch_sampler() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[66, "s3prl.problem.common.hear_gunshot.HearESC50.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[66, "s3prl.problem.common.hear_gunshot.HearGunshot.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[66, "s3prl.problem.common.hear_gunshot.HearESC50.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[66, "s3prl.problem.common.hear_gunshot.HearGunshot.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[66, "s3prl.problem.common.hear_gunshot.HearESC50.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[66, "s3prl.problem.common.hear_gunshot.HearGunshot.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[66, "s3prl.problem.common.hear_gunshot.HearESC50.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[66, "s3prl.problem.common.hear_gunshot.HearGunshot.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[66, "s3prl.problem.common.hear_gunshot.HearESC50.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[66, "s3prl.problem.common.hear_gunshot.HearGunshot.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[66, "s3prl.problem.common.hear_gunshot.HearESC50.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[66, "s3prl.problem.common.hear_gunshot.HearGunshot.build_featurizer"]], "build_model() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[66, "s3prl.problem.common.hear_gunshot.HearESC50.build_model"]], "build_model() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[66, "s3prl.problem.common.hear_gunshot.HearGunshot.build_model"]], "build_optimizer() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[66, "s3prl.problem.common.hear_gunshot.HearESC50.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[66, "s3prl.problem.common.hear_gunshot.HearGunshot.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[66, "s3prl.problem.common.hear_gunshot.HearESC50.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[66, "s3prl.problem.common.hear_gunshot.HearGunshot.build_scheduler"]], "build_task() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[66, "s3prl.problem.common.hear_gunshot.HearESC50.build_task"]], "build_task() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[66, "s3prl.problem.common.hear_gunshot.HearGunshot.build_task"]], "build_upstream() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[66, "s3prl.problem.common.hear_gunshot.HearESC50.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[66, "s3prl.problem.common.hear_gunshot.HearGunshot.build_upstream"]], "default_config() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[66, "s3prl.problem.common.hear_gunshot.HearESC50.default_config"]], "default_config() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[66, "s3prl.problem.common.hear_gunshot.HearGunshot.default_config"]], "evaluate() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[66, "s3prl.problem.common.hear_gunshot.HearESC50.evaluate"]], "evaluate() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[66, "s3prl.problem.common.hear_gunshot.HearGunshot.evaluate"]], "get_class_from_name() (s3prl.problem.common.hear_gunshot.hearesc50 class method)": [[66, "s3prl.problem.common.hear_gunshot.HearESC50.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_gunshot.heargunshot class method)": [[66, "s3prl.problem.common.hear_gunshot.HearGunshot.get_class_from_name"]], "load_model() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[66, "s3prl.problem.common.hear_gunshot.HearESC50.load_model"]], "load_model() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[66, "s3prl.problem.common.hear_gunshot.HearGunshot.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[66, "s3prl.problem.common.hear_gunshot.HearESC50.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[66, "s3prl.problem.common.hear_gunshot.HearGunshot.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[66, "s3prl.problem.common.hear_gunshot.HearESC50.load_task"]], "load_task() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[66, "s3prl.problem.common.hear_gunshot.HearGunshot.load_task"]], "main() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[66, "s3prl.problem.common.hear_gunshot.HearESC50.main"]], "main() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[66, "s3prl.problem.common.hear_gunshot.HearGunshot.main"]], "prepare_data() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[66, "s3prl.problem.common.hear_gunshot.HearESC50.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[66, "s3prl.problem.common.hear_gunshot.HearGunshot.prepare_data"]], "run() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[66, "s3prl.problem.common.hear_gunshot.HearESC50.run"]], "run() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[66, "s3prl.problem.common.hear_gunshot.HearGunshot.run"]], "s3prl.problem.common.hear_gunshot": [[66, "module-s3prl.problem.common.hear_gunshot"]], "save_model() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[66, "s3prl.problem.common.hear_gunshot.HearESC50.save_model"]], "save_model() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[66, "s3prl.problem.common.hear_gunshot.HearGunshot.save_model"]], "save_task() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[66, "s3prl.problem.common.hear_gunshot.HearESC50.save_task"]], "save_task() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[66, "s3prl.problem.common.hear_gunshot.HearGunshot.save_task"]], "train() (s3prl.problem.common.hear_gunshot.hearesc50 method)": [[66, "s3prl.problem.common.hear_gunshot.HearESC50.train"]], "train() (s3prl.problem.common.hear_gunshot.heargunshot method)": [[66, "s3prl.problem.common.hear_gunshot.HearGunshot.train"]], "hearesc50 (class in s3prl.problem.common.hear_libricount)": [[67, "s3prl.problem.common.hear_libricount.HearESC50"]], "hearlibricount (class in s3prl.problem.common.hear_libricount)": [[67, "s3prl.problem.common.hear_libricount.HearLibriCount"]], "build_batch_sampler() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[67, "s3prl.problem.common.hear_libricount.HearESC50.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[67, "s3prl.problem.common.hear_libricount.HearLibriCount.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[67, "s3prl.problem.common.hear_libricount.HearESC50.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[67, "s3prl.problem.common.hear_libricount.HearLibriCount.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[67, "s3prl.problem.common.hear_libricount.HearESC50.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[67, "s3prl.problem.common.hear_libricount.HearLibriCount.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[67, "s3prl.problem.common.hear_libricount.HearESC50.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[67, "s3prl.problem.common.hear_libricount.HearLibriCount.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[67, "s3prl.problem.common.hear_libricount.HearESC50.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[67, "s3prl.problem.common.hear_libricount.HearLibriCount.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[67, "s3prl.problem.common.hear_libricount.HearESC50.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[67, "s3prl.problem.common.hear_libricount.HearLibriCount.build_featurizer"]], "build_model() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[67, "s3prl.problem.common.hear_libricount.HearESC50.build_model"]], "build_model() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[67, "s3prl.problem.common.hear_libricount.HearLibriCount.build_model"]], "build_optimizer() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[67, "s3prl.problem.common.hear_libricount.HearESC50.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[67, "s3prl.problem.common.hear_libricount.HearLibriCount.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[67, "s3prl.problem.common.hear_libricount.HearESC50.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[67, "s3prl.problem.common.hear_libricount.HearLibriCount.build_scheduler"]], "build_task() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[67, "s3prl.problem.common.hear_libricount.HearESC50.build_task"]], "build_task() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[67, "s3prl.problem.common.hear_libricount.HearLibriCount.build_task"]], "build_upstream() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[67, "s3prl.problem.common.hear_libricount.HearESC50.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[67, "s3prl.problem.common.hear_libricount.HearLibriCount.build_upstream"]], "default_config() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[67, "s3prl.problem.common.hear_libricount.HearESC50.default_config"]], "default_config() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[67, "s3prl.problem.common.hear_libricount.HearLibriCount.default_config"]], "evaluate() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[67, "s3prl.problem.common.hear_libricount.HearESC50.evaluate"]], "evaluate() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[67, "s3prl.problem.common.hear_libricount.HearLibriCount.evaluate"]], "get_class_from_name() (s3prl.problem.common.hear_libricount.hearesc50 class method)": [[67, "s3prl.problem.common.hear_libricount.HearESC50.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_libricount.hearlibricount class method)": [[67, "s3prl.problem.common.hear_libricount.HearLibriCount.get_class_from_name"]], "load_model() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[67, "s3prl.problem.common.hear_libricount.HearESC50.load_model"]], "load_model() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[67, "s3prl.problem.common.hear_libricount.HearLibriCount.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[67, "s3prl.problem.common.hear_libricount.HearESC50.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[67, "s3prl.problem.common.hear_libricount.HearLibriCount.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[67, "s3prl.problem.common.hear_libricount.HearESC50.load_task"]], "load_task() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[67, "s3prl.problem.common.hear_libricount.HearLibriCount.load_task"]], "main() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[67, "s3prl.problem.common.hear_libricount.HearESC50.main"]], "main() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[67, "s3prl.problem.common.hear_libricount.HearLibriCount.main"]], "prepare_data() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[67, "s3prl.problem.common.hear_libricount.HearESC50.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[67, "s3prl.problem.common.hear_libricount.HearLibriCount.prepare_data"]], "run() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[67, "s3prl.problem.common.hear_libricount.HearESC50.run"]], "run() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[67, "s3prl.problem.common.hear_libricount.HearLibriCount.run"]], "s3prl.problem.common.hear_libricount": [[67, "module-s3prl.problem.common.hear_libricount"]], "save_model() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[67, "s3prl.problem.common.hear_libricount.HearESC50.save_model"]], "save_model() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[67, "s3prl.problem.common.hear_libricount.HearLibriCount.save_model"]], "save_task() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[67, "s3prl.problem.common.hear_libricount.HearESC50.save_task"]], "save_task() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[67, "s3prl.problem.common.hear_libricount.HearLibriCount.save_task"]], "train() (s3prl.problem.common.hear_libricount.hearesc50 method)": [[67, "s3prl.problem.common.hear_libricount.HearESC50.train"]], "train() (s3prl.problem.common.hear_libricount.hearlibricount method)": [[67, "s3prl.problem.common.hear_libricount.HearLibriCount.train"]], "heardcase2016task2 (class in s3prl.problem.common.hear_maestro)": [[68, "s3prl.problem.common.hear_maestro.HearDcase2016Task2"]], "hearmaestro (class in s3prl.problem.common.hear_maestro)": [[68, "s3prl.problem.common.hear_maestro.HearMaestro"]], "path (class in s3prl.problem.common.hear_maestro)": [[68, "s3prl.problem.common.hear_maestro.Path"]], "absolute() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.absolute"]], "anchor (s3prl.problem.common.hear_maestro.path property)": [[68, "s3prl.problem.common.hear_maestro.Path.anchor"]], "as_posix() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.as_posix"]], "as_uri() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.as_uri"]], "build_batch_sampler() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[68, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[68, "s3prl.problem.common.hear_maestro.HearMaestro.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[68, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[68, "s3prl.problem.common.hear_maestro.HearMaestro.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[68, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[68, "s3prl.problem.common.hear_maestro.HearMaestro.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[68, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[68, "s3prl.problem.common.hear_maestro.HearMaestro.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[68, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[68, "s3prl.problem.common.hear_maestro.HearMaestro.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[68, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[68, "s3prl.problem.common.hear_maestro.HearMaestro.build_featurizer"]], "build_model() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[68, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.build_model"]], "build_model() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[68, "s3prl.problem.common.hear_maestro.HearMaestro.build_model"]], "build_optimizer() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[68, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[68, "s3prl.problem.common.hear_maestro.HearMaestro.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[68, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[68, "s3prl.problem.common.hear_maestro.HearMaestro.build_scheduler"]], "build_task() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[68, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.build_task"]], "build_task() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[68, "s3prl.problem.common.hear_maestro.HearMaestro.build_task"]], "build_upstream() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[68, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[68, "s3prl.problem.common.hear_maestro.HearMaestro.build_upstream"]], "chmod() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.chmod"]], "clear() (s3prl.problem.common.hear_maestro.defaultdict method)": [[68, "s3prl.problem.common.hear_maestro.defaultdict.clear"]], "copy() (s3prl.problem.common.hear_maestro.defaultdict method)": [[68, "s3prl.problem.common.hear_maestro.defaultdict.copy"]], "cwd() (s3prl.problem.common.hear_maestro.path class method)": [[68, "s3prl.problem.common.hear_maestro.Path.cwd"]], "deepcopy() (in module s3prl.problem.common.hear_maestro)": [[68, "s3prl.problem.common.hear_maestro.deepcopy"]], "default_config() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[68, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.default_config"]], "default_config() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[68, "s3prl.problem.common.hear_maestro.HearMaestro.default_config"]], "default_factory (s3prl.problem.common.hear_maestro.defaultdict attribute)": [[68, "s3prl.problem.common.hear_maestro.defaultdict.default_factory"]], "defaultdict (class in s3prl.problem.common.hear_maestro)": [[68, "s3prl.problem.common.hear_maestro.defaultdict"]], "drive (s3prl.problem.common.hear_maestro.path property)": [[68, "s3prl.problem.common.hear_maestro.Path.drive"]], "evaluate() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[68, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.evaluate"]], "evaluate() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[68, "s3prl.problem.common.hear_maestro.HearMaestro.evaluate"]], "exists() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.exists"]], "expanduser() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.expanduser"]], "fromkeys() (s3prl.problem.common.hear_maestro.defaultdict method)": [[68, "s3prl.problem.common.hear_maestro.defaultdict.fromkeys"]], "get() (s3prl.problem.common.hear_maestro.defaultdict method)": [[68, "s3prl.problem.common.hear_maestro.defaultdict.get"]], "get_class_from_name() (s3prl.problem.common.hear_maestro.heardcase2016task2 class method)": [[68, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_maestro.hearmaestro class method)": [[68, "s3prl.problem.common.hear_maestro.HearMaestro.get_class_from_name"]], "glob() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.glob"]], "group() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.group"]], "home() (s3prl.problem.common.hear_maestro.path class method)": [[68, "s3prl.problem.common.hear_maestro.Path.home"]], "is_absolute() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.is_absolute"]], "is_block_device() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.is_block_device"]], "is_char_device() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.is_char_device"]], "is_dir() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.is_dir"]], "is_fifo() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.is_fifo"]], "is_file() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.is_file"]], "is_mount() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.is_mount"]], "is_reserved() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.is_reserved"]], "is_socket() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.is_socket"]], "is_symlink() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.is_symlink"]], "items() (s3prl.problem.common.hear_maestro.defaultdict method)": [[68, "s3prl.problem.common.hear_maestro.defaultdict.items"]], "iterdir() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.iterdir"]], "joinpath() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.joinpath"]], "keys() (s3prl.problem.common.hear_maestro.defaultdict method)": [[68, "s3prl.problem.common.hear_maestro.defaultdict.keys"]], "lchmod() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.lchmod"]], "link_to() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.link_to"]], "load_model() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[68, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.load_model"]], "load_model() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[68, "s3prl.problem.common.hear_maestro.HearMaestro.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[68, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[68, "s3prl.problem.common.hear_maestro.HearMaestro.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[68, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.load_task"]], "load_task() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[68, "s3prl.problem.common.hear_maestro.HearMaestro.load_task"]], "lstat() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.lstat"]], "main() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[68, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.main"]], "main() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[68, "s3prl.problem.common.hear_maestro.HearMaestro.main"]], "match() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.match"]], "mkdir() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.mkdir"]], "name (s3prl.problem.common.hear_maestro.path property)": [[68, "s3prl.problem.common.hear_maestro.Path.name"]], "open() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.open"]], "owner() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.owner"]], "parent (s3prl.problem.common.hear_maestro.path property)": [[68, "s3prl.problem.common.hear_maestro.Path.parent"]], "parents (s3prl.problem.common.hear_maestro.path property)": [[68, "s3prl.problem.common.hear_maestro.Path.parents"]], "parts (s3prl.problem.common.hear_maestro.path property)": [[68, "s3prl.problem.common.hear_maestro.Path.parts"]], "pop() (s3prl.problem.common.hear_maestro.defaultdict method)": [[68, "s3prl.problem.common.hear_maestro.defaultdict.pop"]], "popitem() (s3prl.problem.common.hear_maestro.defaultdict method)": [[68, "s3prl.problem.common.hear_maestro.defaultdict.popitem"]], "prepare_data() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[68, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[68, "s3prl.problem.common.hear_maestro.HearMaestro.prepare_data"]], "prepare_maestro() (in module s3prl.problem.common.hear_maestro)": [[68, "s3prl.problem.common.hear_maestro.prepare_maestro"]], "read_bytes() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.read_bytes"]], "read_text() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.read_text"]], "relative_to() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.relative_to"]], "rename() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.rename"]], "replace() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.replace"]], "resolve() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.resolve"]], "rglob() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.rglob"]], "rmdir() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.rmdir"]], "root (s3prl.problem.common.hear_maestro.path property)": [[68, "s3prl.problem.common.hear_maestro.Path.root"]], "run() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[68, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.run"]], "run() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[68, "s3prl.problem.common.hear_maestro.HearMaestro.run"]], "s3prl.problem.common.hear_maestro": [[68, "module-s3prl.problem.common.hear_maestro"]], "samefile() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.samefile"]], "save_model() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[68, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.save_model"]], "save_model() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[68, "s3prl.problem.common.hear_maestro.HearMaestro.save_model"]], "save_task() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[68, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.save_task"]], "save_task() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[68, "s3prl.problem.common.hear_maestro.HearMaestro.save_task"]], "setdefault() (s3prl.problem.common.hear_maestro.defaultdict method)": [[68, "s3prl.problem.common.hear_maestro.defaultdict.setdefault"]], "stat() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.stat"]], "stem (s3prl.problem.common.hear_maestro.path property)": [[68, "s3prl.problem.common.hear_maestro.Path.stem"]], "suffix (s3prl.problem.common.hear_maestro.path property)": [[68, "s3prl.problem.common.hear_maestro.Path.suffix"]], "suffixes (s3prl.problem.common.hear_maestro.path property)": [[68, "s3prl.problem.common.hear_maestro.Path.suffixes"]], "symlink_to() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.symlink_to"]], "touch() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.touch"]], "train() (s3prl.problem.common.hear_maestro.heardcase2016task2 method)": [[68, "s3prl.problem.common.hear_maestro.HearDcase2016Task2.train"]], "train() (s3prl.problem.common.hear_maestro.hearmaestro method)": [[68, "s3prl.problem.common.hear_maestro.HearMaestro.train"]], "unlink() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.unlink"]], "update() (s3prl.problem.common.hear_maestro.defaultdict method)": [[68, "s3prl.problem.common.hear_maestro.defaultdict.update"]], "values() (s3prl.problem.common.hear_maestro.defaultdict method)": [[68, "s3prl.problem.common.hear_maestro.defaultdict.values"]], "with_name() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.with_name"]], "with_suffix() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.with_suffix"]], "write_bytes() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.write_bytes"]], "write_text() (s3prl.problem.common.hear_maestro.path method)": [[68, "s3prl.problem.common.hear_maestro.Path.write_text"]], "hearfsd (class in s3prl.problem.common.hear_nsynth5hr)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearFSD"]], "hearnsynth5hr (class in s3prl.problem.common.hear_nsynth5hr)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr"]], "build_batch_sampler() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearFSD.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearFSD.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearFSD.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearFSD.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearFSD.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearFSD.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.build_featurizer"]], "build_model() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearFSD.build_model"]], "build_model() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.build_model"]], "build_optimizer() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearFSD.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearFSD.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.build_scheduler"]], "build_task() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearFSD.build_task"]], "build_task() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.build_task"]], "build_upstream() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearFSD.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.build_upstream"]], "default_config() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearFSD.default_config"]], "default_config() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.default_config"]], "evaluate() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearFSD.evaluate"]], "evaluate() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.evaluate"]], "get_class_from_name() (s3prl.problem.common.hear_nsynth5hr.hearfsd class method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearFSD.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr class method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.get_class_from_name"]], "load_model() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearFSD.load_model"]], "load_model() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearFSD.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearFSD.load_task"]], "load_task() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.load_task"]], "main() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearFSD.main"]], "main() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.main"]], "prepare_data() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearFSD.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.prepare_data"]], "run() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearFSD.run"]], "run() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.run"]], "s3prl.problem.common.hear_nsynth5hr": [[69, "module-s3prl.problem.common.hear_nsynth5hr"]], "save_model() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearFSD.save_model"]], "save_model() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.save_model"]], "save_task() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearFSD.save_task"]], "save_task() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.save_task"]], "train() (s3prl.problem.common.hear_nsynth5hr.hearfsd method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearFSD.train"]], "train() (s3prl.problem.common.hear_nsynth5hr.hearnsynth5hr method)": [[69, "s3prl.problem.common.hear_nsynth5hr.HearNsynth5hr.train"]], "hearesc50 (class in s3prl.problem.common.hear_stroke)": [[70, "s3prl.problem.common.hear_stroke.HearESC50"]], "hearstroke (class in s3prl.problem.common.hear_stroke)": [[70, "s3prl.problem.common.hear_stroke.HearStroke"]], "build_batch_sampler() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[70, "s3prl.problem.common.hear_stroke.HearESC50.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_stroke.hearstroke method)": [[70, "s3prl.problem.common.hear_stroke.HearStroke.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[70, "s3prl.problem.common.hear_stroke.HearESC50.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_stroke.hearstroke method)": [[70, "s3prl.problem.common.hear_stroke.HearStroke.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[70, "s3prl.problem.common.hear_stroke.HearESC50.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_stroke.hearstroke method)": [[70, "s3prl.problem.common.hear_stroke.HearStroke.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[70, "s3prl.problem.common.hear_stroke.HearESC50.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_stroke.hearstroke method)": [[70, "s3prl.problem.common.hear_stroke.HearStroke.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[70, "s3prl.problem.common.hear_stroke.HearESC50.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_stroke.hearstroke method)": [[70, "s3prl.problem.common.hear_stroke.HearStroke.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[70, "s3prl.problem.common.hear_stroke.HearESC50.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_stroke.hearstroke method)": [[70, "s3prl.problem.common.hear_stroke.HearStroke.build_featurizer"]], "build_model() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[70, "s3prl.problem.common.hear_stroke.HearESC50.build_model"]], "build_model() (s3prl.problem.common.hear_stroke.hearstroke method)": [[70, "s3prl.problem.common.hear_stroke.HearStroke.build_model"]], "build_optimizer() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[70, "s3prl.problem.common.hear_stroke.HearESC50.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_stroke.hearstroke method)": [[70, "s3prl.problem.common.hear_stroke.HearStroke.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[70, "s3prl.problem.common.hear_stroke.HearESC50.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_stroke.hearstroke method)": [[70, "s3prl.problem.common.hear_stroke.HearStroke.build_scheduler"]], "build_task() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[70, "s3prl.problem.common.hear_stroke.HearESC50.build_task"]], "build_task() (s3prl.problem.common.hear_stroke.hearstroke method)": [[70, "s3prl.problem.common.hear_stroke.HearStroke.build_task"]], "build_upstream() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[70, "s3prl.problem.common.hear_stroke.HearESC50.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_stroke.hearstroke method)": [[70, "s3prl.problem.common.hear_stroke.HearStroke.build_upstream"]], "default_config() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[70, "s3prl.problem.common.hear_stroke.HearESC50.default_config"]], "default_config() (s3prl.problem.common.hear_stroke.hearstroke method)": [[70, "s3prl.problem.common.hear_stroke.HearStroke.default_config"]], "evaluate() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[70, "s3prl.problem.common.hear_stroke.HearESC50.evaluate"]], "evaluate() (s3prl.problem.common.hear_stroke.hearstroke method)": [[70, "s3prl.problem.common.hear_stroke.HearStroke.evaluate"]], "get_class_from_name() (s3prl.problem.common.hear_stroke.hearesc50 class method)": [[70, "s3prl.problem.common.hear_stroke.HearESC50.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_stroke.hearstroke class method)": [[70, "s3prl.problem.common.hear_stroke.HearStroke.get_class_from_name"]], "load_model() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[70, "s3prl.problem.common.hear_stroke.HearESC50.load_model"]], "load_model() (s3prl.problem.common.hear_stroke.hearstroke method)": [[70, "s3prl.problem.common.hear_stroke.HearStroke.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[70, "s3prl.problem.common.hear_stroke.HearESC50.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_stroke.hearstroke method)": [[70, "s3prl.problem.common.hear_stroke.HearStroke.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[70, "s3prl.problem.common.hear_stroke.HearESC50.load_task"]], "load_task() (s3prl.problem.common.hear_stroke.hearstroke method)": [[70, "s3prl.problem.common.hear_stroke.HearStroke.load_task"]], "main() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[70, "s3prl.problem.common.hear_stroke.HearESC50.main"]], "main() (s3prl.problem.common.hear_stroke.hearstroke method)": [[70, "s3prl.problem.common.hear_stroke.HearStroke.main"]], "prepare_data() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[70, "s3prl.problem.common.hear_stroke.HearESC50.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_stroke.hearstroke method)": [[70, "s3prl.problem.common.hear_stroke.HearStroke.prepare_data"]], "run() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[70, "s3prl.problem.common.hear_stroke.HearESC50.run"]], "run() (s3prl.problem.common.hear_stroke.hearstroke method)": [[70, "s3prl.problem.common.hear_stroke.HearStroke.run"]], "s3prl.problem.common.hear_stroke": [[70, "module-s3prl.problem.common.hear_stroke"]], "save_model() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[70, "s3prl.problem.common.hear_stroke.HearESC50.save_model"]], "save_model() (s3prl.problem.common.hear_stroke.hearstroke method)": [[70, "s3prl.problem.common.hear_stroke.HearStroke.save_model"]], "save_task() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[70, "s3prl.problem.common.hear_stroke.HearESC50.save_task"]], "save_task() (s3prl.problem.common.hear_stroke.hearstroke method)": [[70, "s3prl.problem.common.hear_stroke.HearStroke.save_task"]], "train() (s3prl.problem.common.hear_stroke.hearesc50 method)": [[70, "s3prl.problem.common.hear_stroke.HearESC50.train"]], "train() (s3prl.problem.common.hear_stroke.hearstroke method)": [[70, "s3prl.problem.common.hear_stroke.HearStroke.train"]], "hearesc50 (class in s3prl.problem.common.hear_tonic)": [[71, "s3prl.problem.common.hear_tonic.HearESC50"]], "heartonic (class in s3prl.problem.common.hear_tonic)": [[71, "s3prl.problem.common.hear_tonic.HearTonic"]], "build_batch_sampler() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[71, "s3prl.problem.common.hear_tonic.HearESC50.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_tonic.heartonic method)": [[71, "s3prl.problem.common.hear_tonic.HearTonic.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[71, "s3prl.problem.common.hear_tonic.HearESC50.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_tonic.heartonic method)": [[71, "s3prl.problem.common.hear_tonic.HearTonic.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[71, "s3prl.problem.common.hear_tonic.HearESC50.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_tonic.heartonic method)": [[71, "s3prl.problem.common.hear_tonic.HearTonic.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[71, "s3prl.problem.common.hear_tonic.HearESC50.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_tonic.heartonic method)": [[71, "s3prl.problem.common.hear_tonic.HearTonic.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[71, "s3prl.problem.common.hear_tonic.HearESC50.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_tonic.heartonic method)": [[71, "s3prl.problem.common.hear_tonic.HearTonic.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[71, "s3prl.problem.common.hear_tonic.HearESC50.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_tonic.heartonic method)": [[71, "s3prl.problem.common.hear_tonic.HearTonic.build_featurizer"]], "build_model() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[71, "s3prl.problem.common.hear_tonic.HearESC50.build_model"]], "build_model() (s3prl.problem.common.hear_tonic.heartonic method)": [[71, "s3prl.problem.common.hear_tonic.HearTonic.build_model"]], "build_optimizer() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[71, "s3prl.problem.common.hear_tonic.HearESC50.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_tonic.heartonic method)": [[71, "s3prl.problem.common.hear_tonic.HearTonic.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[71, "s3prl.problem.common.hear_tonic.HearESC50.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_tonic.heartonic method)": [[71, "s3prl.problem.common.hear_tonic.HearTonic.build_scheduler"]], "build_task() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[71, "s3prl.problem.common.hear_tonic.HearESC50.build_task"]], "build_task() (s3prl.problem.common.hear_tonic.heartonic method)": [[71, "s3prl.problem.common.hear_tonic.HearTonic.build_task"]], "build_upstream() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[71, "s3prl.problem.common.hear_tonic.HearESC50.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_tonic.heartonic method)": [[71, "s3prl.problem.common.hear_tonic.HearTonic.build_upstream"]], "default_config() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[71, "s3prl.problem.common.hear_tonic.HearESC50.default_config"]], "default_config() (s3prl.problem.common.hear_tonic.heartonic method)": [[71, "s3prl.problem.common.hear_tonic.HearTonic.default_config"]], "evaluate() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[71, "s3prl.problem.common.hear_tonic.HearESC50.evaluate"]], "evaluate() (s3prl.problem.common.hear_tonic.heartonic method)": [[71, "s3prl.problem.common.hear_tonic.HearTonic.evaluate"]], "get_class_from_name() (s3prl.problem.common.hear_tonic.hearesc50 class method)": [[71, "s3prl.problem.common.hear_tonic.HearESC50.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_tonic.heartonic class method)": [[71, "s3prl.problem.common.hear_tonic.HearTonic.get_class_from_name"]], "load_model() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[71, "s3prl.problem.common.hear_tonic.HearESC50.load_model"]], "load_model() (s3prl.problem.common.hear_tonic.heartonic method)": [[71, "s3prl.problem.common.hear_tonic.HearTonic.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[71, "s3prl.problem.common.hear_tonic.HearESC50.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_tonic.heartonic method)": [[71, "s3prl.problem.common.hear_tonic.HearTonic.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[71, "s3prl.problem.common.hear_tonic.HearESC50.load_task"]], "load_task() (s3prl.problem.common.hear_tonic.heartonic method)": [[71, "s3prl.problem.common.hear_tonic.HearTonic.load_task"]], "main() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[71, "s3prl.problem.common.hear_tonic.HearESC50.main"]], "main() (s3prl.problem.common.hear_tonic.heartonic method)": [[71, "s3prl.problem.common.hear_tonic.HearTonic.main"]], "prepare_data() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[71, "s3prl.problem.common.hear_tonic.HearESC50.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_tonic.heartonic method)": [[71, "s3prl.problem.common.hear_tonic.HearTonic.prepare_data"]], "run() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[71, "s3prl.problem.common.hear_tonic.HearESC50.run"]], "run() (s3prl.problem.common.hear_tonic.heartonic method)": [[71, "s3prl.problem.common.hear_tonic.HearTonic.run"]], "s3prl.problem.common.hear_tonic": [[71, "module-s3prl.problem.common.hear_tonic"]], "save_model() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[71, "s3prl.problem.common.hear_tonic.HearESC50.save_model"]], "save_model() (s3prl.problem.common.hear_tonic.heartonic method)": [[71, "s3prl.problem.common.hear_tonic.HearTonic.save_model"]], "save_task() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[71, "s3prl.problem.common.hear_tonic.HearESC50.save_task"]], "save_task() (s3prl.problem.common.hear_tonic.heartonic method)": [[71, "s3prl.problem.common.hear_tonic.HearTonic.save_task"]], "train() (s3prl.problem.common.hear_tonic.hearesc50 method)": [[71, "s3prl.problem.common.hear_tonic.HearESC50.train"]], "train() (s3prl.problem.common.hear_tonic.heartonic method)": [[71, "s3prl.problem.common.hear_tonic.HearTonic.train"]], "hearesc50 (class in s3prl.problem.common.hear_vocal)": [[72, "s3prl.problem.common.hear_vocal.HearESC50"]], "hearvocal (class in s3prl.problem.common.hear_vocal)": [[72, "s3prl.problem.common.hear_vocal.HearVocal"]], "build_batch_sampler() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[72, "s3prl.problem.common.hear_vocal.HearESC50.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_vocal.hearvocal method)": [[72, "s3prl.problem.common.hear_vocal.HearVocal.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[72, "s3prl.problem.common.hear_vocal.HearESC50.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_vocal.hearvocal method)": [[72, "s3prl.problem.common.hear_vocal.HearVocal.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[72, "s3prl.problem.common.hear_vocal.HearESC50.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_vocal.hearvocal method)": [[72, "s3prl.problem.common.hear_vocal.HearVocal.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[72, "s3prl.problem.common.hear_vocal.HearESC50.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_vocal.hearvocal method)": [[72, "s3prl.problem.common.hear_vocal.HearVocal.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[72, "s3prl.problem.common.hear_vocal.HearESC50.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_vocal.hearvocal method)": [[72, "s3prl.problem.common.hear_vocal.HearVocal.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[72, "s3prl.problem.common.hear_vocal.HearESC50.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_vocal.hearvocal method)": [[72, "s3prl.problem.common.hear_vocal.HearVocal.build_featurizer"]], "build_model() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[72, "s3prl.problem.common.hear_vocal.HearESC50.build_model"]], "build_model() (s3prl.problem.common.hear_vocal.hearvocal method)": [[72, "s3prl.problem.common.hear_vocal.HearVocal.build_model"]], "build_optimizer() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[72, "s3prl.problem.common.hear_vocal.HearESC50.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_vocal.hearvocal method)": [[72, "s3prl.problem.common.hear_vocal.HearVocal.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[72, "s3prl.problem.common.hear_vocal.HearESC50.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_vocal.hearvocal method)": [[72, "s3prl.problem.common.hear_vocal.HearVocal.build_scheduler"]], "build_task() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[72, "s3prl.problem.common.hear_vocal.HearESC50.build_task"]], "build_task() (s3prl.problem.common.hear_vocal.hearvocal method)": [[72, "s3prl.problem.common.hear_vocal.HearVocal.build_task"]], "build_upstream() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[72, "s3prl.problem.common.hear_vocal.HearESC50.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_vocal.hearvocal method)": [[72, "s3prl.problem.common.hear_vocal.HearVocal.build_upstream"]], "default_config() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[72, "s3prl.problem.common.hear_vocal.HearESC50.default_config"]], "default_config() (s3prl.problem.common.hear_vocal.hearvocal method)": [[72, "s3prl.problem.common.hear_vocal.HearVocal.default_config"]], "evaluate() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[72, "s3prl.problem.common.hear_vocal.HearESC50.evaluate"]], "evaluate() (s3prl.problem.common.hear_vocal.hearvocal method)": [[72, "s3prl.problem.common.hear_vocal.HearVocal.evaluate"]], "get_class_from_name() (s3prl.problem.common.hear_vocal.hearesc50 class method)": [[72, "s3prl.problem.common.hear_vocal.HearESC50.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_vocal.hearvocal class method)": [[72, "s3prl.problem.common.hear_vocal.HearVocal.get_class_from_name"]], "load_model() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[72, "s3prl.problem.common.hear_vocal.HearESC50.load_model"]], "load_model() (s3prl.problem.common.hear_vocal.hearvocal method)": [[72, "s3prl.problem.common.hear_vocal.HearVocal.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[72, "s3prl.problem.common.hear_vocal.HearESC50.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_vocal.hearvocal method)": [[72, "s3prl.problem.common.hear_vocal.HearVocal.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[72, "s3prl.problem.common.hear_vocal.HearESC50.load_task"]], "load_task() (s3prl.problem.common.hear_vocal.hearvocal method)": [[72, "s3prl.problem.common.hear_vocal.HearVocal.load_task"]], "main() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[72, "s3prl.problem.common.hear_vocal.HearESC50.main"]], "main() (s3prl.problem.common.hear_vocal.hearvocal method)": [[72, "s3prl.problem.common.hear_vocal.HearVocal.main"]], "prepare_data() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[72, "s3prl.problem.common.hear_vocal.HearESC50.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_vocal.hearvocal method)": [[72, "s3prl.problem.common.hear_vocal.HearVocal.prepare_data"]], "run() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[72, "s3prl.problem.common.hear_vocal.HearESC50.run"]], "run() (s3prl.problem.common.hear_vocal.hearvocal method)": [[72, "s3prl.problem.common.hear_vocal.HearVocal.run"]], "s3prl.problem.common.hear_vocal": [[72, "module-s3prl.problem.common.hear_vocal"]], "save_model() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[72, "s3prl.problem.common.hear_vocal.HearESC50.save_model"]], "save_model() (s3prl.problem.common.hear_vocal.hearvocal method)": [[72, "s3prl.problem.common.hear_vocal.HearVocal.save_model"]], "save_task() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[72, "s3prl.problem.common.hear_vocal.HearESC50.save_task"]], "save_task() (s3prl.problem.common.hear_vocal.hearvocal method)": [[72, "s3prl.problem.common.hear_vocal.HearVocal.save_task"]], "train() (s3prl.problem.common.hear_vocal.hearesc50 method)": [[72, "s3prl.problem.common.hear_vocal.HearESC50.train"]], "train() (s3prl.problem.common.hear_vocal.hearvocal method)": [[72, "s3prl.problem.common.hear_vocal.HearVocal.train"]], "hearesc50 (class in s3prl.problem.common.hear_vox_lingual)": [[73, "s3prl.problem.common.hear_vox_lingual.HearESC50"]], "hearvoxlingual (class in s3prl.problem.common.hear_vox_lingual)": [[73, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual"]], "build_batch_sampler() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearESC50.build_batch_sampler"]], "build_batch_sampler() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearESC50.build_collate_fn"]], "build_collate_fn() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.build_collate_fn"]], "build_dataset() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearESC50.build_dataset"]], "build_dataset() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.build_dataset"]], "build_downstream() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearESC50.build_downstream"]], "build_downstream() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.build_downstream"]], "build_encoder() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearESC50.build_encoder"]], "build_encoder() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.build_encoder"]], "build_featurizer() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearESC50.build_featurizer"]], "build_featurizer() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.build_featurizer"]], "build_model() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearESC50.build_model"]], "build_model() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.build_model"]], "build_optimizer() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearESC50.build_optimizer"]], "build_optimizer() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.build_optimizer"]], "build_scheduler() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearESC50.build_scheduler"]], "build_scheduler() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.build_scheduler"]], "build_task() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearESC50.build_task"]], "build_task() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.build_task"]], "build_upstream() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearESC50.build_upstream"]], "build_upstream() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.build_upstream"]], "default_config() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearESC50.default_config"]], "default_config() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.default_config"]], "evaluate() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearESC50.evaluate"]], "evaluate() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.evaluate"]], "get_class_from_name() (s3prl.problem.common.hear_vox_lingual.hearesc50 class method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearESC50.get_class_from_name"]], "get_class_from_name() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual class method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.get_class_from_name"]], "load_model() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearESC50.load_model"]], "load_model() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.load_model"]], "load_model_and_task() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearESC50.load_model_and_task"]], "load_model_and_task() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.load_model_and_task"]], "load_task() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearESC50.load_task"]], "load_task() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.load_task"]], "main() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearESC50.main"]], "main() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.main"]], "prepare_data() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearESC50.prepare_data"]], "prepare_data() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.prepare_data"]], "run() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearESC50.run"]], "run() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.run"]], "s3prl.problem.common.hear_vox_lingual": [[73, "module-s3prl.problem.common.hear_vox_lingual"]], "save_model() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearESC50.save_model"]], "save_model() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.save_model"]], "save_task() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearESC50.save_task"]], "save_task() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.save_task"]], "train() (s3prl.problem.common.hear_vox_lingual.hearesc50 method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearESC50.train"]], "train() (s3prl.problem.common.hear_vox_lingual.hearvoxlingual method)": [[73, "s3prl.problem.common.hear_vox_lingual.HearVoxLingual.train"]], "common (class in s3prl.problem.common.run)": [[74, "s3prl.problem.common.run.Common"]], "build_collate_fn() (s3prl.problem.common.run.common method)": [[74, "s3prl.problem.common.run.Common.build_collate_fn"]], "build_featurizer() (s3prl.problem.common.run.common method)": [[74, "s3prl.problem.common.run.Common.build_featurizer"]], "build_model() (s3prl.problem.common.run.common method)": [[74, "s3prl.problem.common.run.Common.build_model"]], "build_optimizer() (s3prl.problem.common.run.common method)": [[74, "s3prl.problem.common.run.Common.build_optimizer"]], "build_scheduler() (s3prl.problem.common.run.common method)": [[74, "s3prl.problem.common.run.Common.build_scheduler"]], "build_task() (s3prl.problem.common.run.common method)": [[74, "s3prl.problem.common.run.Common.build_task"]], "build_upstream() (s3prl.problem.common.run.common method)": [[74, "s3prl.problem.common.run.Common.build_upstream"]], "evaluate() (s3prl.problem.common.run.common method)": [[74, "s3prl.problem.common.run.Common.evaluate"]], "get_class_from_name() (s3prl.problem.common.run.common class method)": [[74, "s3prl.problem.common.run.Common.get_class_from_name"]], "load_model() (s3prl.problem.common.run.common method)": [[74, "s3prl.problem.common.run.Common.load_model"]], "load_model_and_task() (s3prl.problem.common.run.common method)": [[74, "s3prl.problem.common.run.Common.load_model_and_task"]], "load_task() (s3prl.problem.common.run.common method)": [[74, "s3prl.problem.common.run.Common.load_task"]], "main() (s3prl.problem.common.run.common method)": [[74, "s3prl.problem.common.run.Common.main"]], "run() (s3prl.problem.common.run.common method)": [[74, "s3prl.problem.common.run.Common.run"]], "s3prl.problem.common.run": [[74, "module-s3prl.problem.common.run"]], "save_model() (s3prl.problem.common.run.common method)": [[74, "s3prl.problem.common.run.Common.save_model"]], "save_task() (s3prl.problem.common.run.common method)": [[74, "s3prl.problem.common.run.Common.save_task"]], "train() (s3prl.problem.common.run.common method)": [[74, "s3prl.problem.common.run.Common.train"]], "superber (class in s3prl.problem.common.superb_er)": [[75, "s3prl.problem.common.superb_er.SuperbER"]], "build_batch_sampler() (s3prl.problem.common.superb_er.superber method)": [[75, "s3prl.problem.common.superb_er.SuperbER.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.superb_er.superber method)": [[75, "s3prl.problem.common.superb_er.SuperbER.build_collate_fn"]], "build_dataset() (s3prl.problem.common.superb_er.superber method)": [[75, "s3prl.problem.common.superb_er.SuperbER.build_dataset"]], "build_downstream() (s3prl.problem.common.superb_er.superber method)": [[75, "s3prl.problem.common.superb_er.SuperbER.build_downstream"]], "build_encoder() (s3prl.problem.common.superb_er.superber method)": [[75, "s3prl.problem.common.superb_er.SuperbER.build_encoder"]], "build_featurizer() (s3prl.problem.common.superb_er.superber method)": [[75, "s3prl.problem.common.superb_er.SuperbER.build_featurizer"]], "build_model() (s3prl.problem.common.superb_er.superber method)": [[75, "s3prl.problem.common.superb_er.SuperbER.build_model"]], "build_optimizer() (s3prl.problem.common.superb_er.superber method)": [[75, "s3prl.problem.common.superb_er.SuperbER.build_optimizer"]], "build_scheduler() (s3prl.problem.common.superb_er.superber method)": [[75, "s3prl.problem.common.superb_er.SuperbER.build_scheduler"]], "build_task() (s3prl.problem.common.superb_er.superber method)": [[75, "s3prl.problem.common.superb_er.SuperbER.build_task"]], "build_upstream() (s3prl.problem.common.superb_er.superber method)": [[75, "s3prl.problem.common.superb_er.SuperbER.build_upstream"]], "default_config() (s3prl.problem.common.superb_er.superber method)": [[75, "s3prl.problem.common.superb_er.SuperbER.default_config"]], "evaluate() (s3prl.problem.common.superb_er.superber method)": [[75, "s3prl.problem.common.superb_er.SuperbER.evaluate"]], "get_class_from_name() (s3prl.problem.common.superb_er.superber class method)": [[75, "s3prl.problem.common.superb_er.SuperbER.get_class_from_name"]], "iemocap_for_superb() (in module s3prl.problem.common.superb_er)": [[75, "s3prl.problem.common.superb_er.iemocap_for_superb"]], "load_model() (s3prl.problem.common.superb_er.superber method)": [[75, "s3prl.problem.common.superb_er.SuperbER.load_model"]], "load_model_and_task() (s3prl.problem.common.superb_er.superber method)": [[75, "s3prl.problem.common.superb_er.SuperbER.load_model_and_task"]], "load_task() (s3prl.problem.common.superb_er.superber method)": [[75, "s3prl.problem.common.superb_er.SuperbER.load_task"]], "main() (s3prl.problem.common.superb_er.superber method)": [[75, "s3prl.problem.common.superb_er.SuperbER.main"]], "prepare_data() (s3prl.problem.common.superb_er.superber method)": [[75, "s3prl.problem.common.superb_er.SuperbER.prepare_data"]], "run() (s3prl.problem.common.superb_er.superber method)": [[75, "s3prl.problem.common.superb_er.SuperbER.run"]], "s3prl.problem.common.superb_er": [[75, "module-s3prl.problem.common.superb_er"]], "save_model() (s3prl.problem.common.superb_er.superber method)": [[75, "s3prl.problem.common.superb_er.SuperbER.save_model"]], "save_task() (s3prl.problem.common.superb_er.superber method)": [[75, "s3prl.problem.common.superb_er.SuperbER.save_task"]], "train() (s3prl.problem.common.superb_er.superber method)": [[75, "s3prl.problem.common.superb_er.SuperbER.train"]], "superbic (class in s3prl.problem.common.superb_ic)": [[76, "s3prl.problem.common.superb_ic.SuperbIC"]], "build_batch_sampler() (s3prl.problem.common.superb_ic.superbic method)": [[76, "s3prl.problem.common.superb_ic.SuperbIC.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.superb_ic.superbic method)": [[76, "s3prl.problem.common.superb_ic.SuperbIC.build_collate_fn"]], "build_dataset() (s3prl.problem.common.superb_ic.superbic method)": [[76, "s3prl.problem.common.superb_ic.SuperbIC.build_dataset"]], "build_downstream() (s3prl.problem.common.superb_ic.superbic method)": [[76, "s3prl.problem.common.superb_ic.SuperbIC.build_downstream"]], "build_encoder() (s3prl.problem.common.superb_ic.superbic method)": [[76, "s3prl.problem.common.superb_ic.SuperbIC.build_encoder"]], "build_featurizer() (s3prl.problem.common.superb_ic.superbic method)": [[76, "s3prl.problem.common.superb_ic.SuperbIC.build_featurizer"]], "build_model() (s3prl.problem.common.superb_ic.superbic method)": [[76, "s3prl.problem.common.superb_ic.SuperbIC.build_model"]], "build_optimizer() (s3prl.problem.common.superb_ic.superbic method)": [[76, "s3prl.problem.common.superb_ic.SuperbIC.build_optimizer"]], "build_scheduler() (s3prl.problem.common.superb_ic.superbic method)": [[76, "s3prl.problem.common.superb_ic.SuperbIC.build_scheduler"]], "build_task() (s3prl.problem.common.superb_ic.superbic method)": [[76, "s3prl.problem.common.superb_ic.SuperbIC.build_task"]], "build_upstream() (s3prl.problem.common.superb_ic.superbic method)": [[76, "s3prl.problem.common.superb_ic.SuperbIC.build_upstream"]], "default_config() (s3prl.problem.common.superb_ic.superbic method)": [[76, "s3prl.problem.common.superb_ic.SuperbIC.default_config"]], "evaluate() (s3prl.problem.common.superb_ic.superbic method)": [[76, "s3prl.problem.common.superb_ic.SuperbIC.evaluate"]], "fsc_for_multi_classification() (in module s3prl.problem.common.superb_ic)": [[76, "s3prl.problem.common.superb_ic.fsc_for_multi_classification"]], "get_class_from_name() (s3prl.problem.common.superb_ic.superbic class method)": [[76, "s3prl.problem.common.superb_ic.SuperbIC.get_class_from_name"]], "load_model() (s3prl.problem.common.superb_ic.superbic method)": [[76, "s3prl.problem.common.superb_ic.SuperbIC.load_model"]], "load_model_and_task() (s3prl.problem.common.superb_ic.superbic method)": [[76, "s3prl.problem.common.superb_ic.SuperbIC.load_model_and_task"]], "load_task() (s3prl.problem.common.superb_ic.superbic method)": [[76, "s3prl.problem.common.superb_ic.SuperbIC.load_task"]], "main() (s3prl.problem.common.superb_ic.superbic method)": [[76, "s3prl.problem.common.superb_ic.SuperbIC.main"]], "prepare_data() (s3prl.problem.common.superb_ic.superbic method)": [[76, "s3prl.problem.common.superb_ic.SuperbIC.prepare_data"]], "run() (s3prl.problem.common.superb_ic.superbic method)": [[76, "s3prl.problem.common.superb_ic.SuperbIC.run"]], "s3prl.problem.common.superb_ic": [[76, "module-s3prl.problem.common.superb_ic"]], "save_model() (s3prl.problem.common.superb_ic.superbic method)": [[76, "s3prl.problem.common.superb_ic.SuperbIC.save_model"]], "save_task() (s3prl.problem.common.superb_ic.superbic method)": [[76, "s3prl.problem.common.superb_ic.SuperbIC.save_task"]], "train() (s3prl.problem.common.superb_ic.superbic method)": [[76, "s3prl.problem.common.superb_ic.SuperbIC.train"]], "superbks (class in s3prl.problem.common.superb_ks)": [[77, "s3prl.problem.common.superb_ks.SuperbKS"]], "build_batch_sampler() (s3prl.problem.common.superb_ks.superbks method)": [[77, "s3prl.problem.common.superb_ks.SuperbKS.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.superb_ks.superbks method)": [[77, "s3prl.problem.common.superb_ks.SuperbKS.build_collate_fn"]], "build_dataset() (s3prl.problem.common.superb_ks.superbks method)": [[77, "s3prl.problem.common.superb_ks.SuperbKS.build_dataset"]], "build_downstream() (s3prl.problem.common.superb_ks.superbks method)": [[77, "s3prl.problem.common.superb_ks.SuperbKS.build_downstream"]], "build_encoder() (s3prl.problem.common.superb_ks.superbks method)": [[77, "s3prl.problem.common.superb_ks.SuperbKS.build_encoder"]], "build_featurizer() (s3prl.problem.common.superb_ks.superbks method)": [[77, "s3prl.problem.common.superb_ks.SuperbKS.build_featurizer"]], "build_model() (s3prl.problem.common.superb_ks.superbks method)": [[77, "s3prl.problem.common.superb_ks.SuperbKS.build_model"]], "build_optimizer() (s3prl.problem.common.superb_ks.superbks method)": [[77, "s3prl.problem.common.superb_ks.SuperbKS.build_optimizer"]], "build_scheduler() (s3prl.problem.common.superb_ks.superbks method)": [[77, "s3prl.problem.common.superb_ks.SuperbKS.build_scheduler"]], "build_task() (s3prl.problem.common.superb_ks.superbks method)": [[77, "s3prl.problem.common.superb_ks.SuperbKS.build_task"]], "build_upstream() (s3prl.problem.common.superb_ks.superbks method)": [[77, "s3prl.problem.common.superb_ks.SuperbKS.build_upstream"]], "default_config() (s3prl.problem.common.superb_ks.superbks method)": [[77, "s3prl.problem.common.superb_ks.SuperbKS.default_config"]], "evaluate() (s3prl.problem.common.superb_ks.superbks method)": [[77, "s3prl.problem.common.superb_ks.SuperbKS.evaluate"]], "get_class_from_name() (s3prl.problem.common.superb_ks.superbks class method)": [[77, "s3prl.problem.common.superb_ks.SuperbKS.get_class_from_name"]], "gsc1_for_classification() (in module s3prl.problem.common.superb_ks)": [[77, "s3prl.problem.common.superb_ks.gsc1_for_classification"]], "load_model() (s3prl.problem.common.superb_ks.superbks method)": [[77, "s3prl.problem.common.superb_ks.SuperbKS.load_model"]], "load_model_and_task() (s3prl.problem.common.superb_ks.superbks method)": [[77, "s3prl.problem.common.superb_ks.SuperbKS.load_model_and_task"]], "load_task() (s3prl.problem.common.superb_ks.superbks method)": [[77, "s3prl.problem.common.superb_ks.SuperbKS.load_task"]], "main() (s3prl.problem.common.superb_ks.superbks method)": [[77, "s3prl.problem.common.superb_ks.SuperbKS.main"]], "prepare_data() (s3prl.problem.common.superb_ks.superbks method)": [[77, "s3prl.problem.common.superb_ks.SuperbKS.prepare_data"]], "run() (s3prl.problem.common.superb_ks.superbks method)": [[77, "s3prl.problem.common.superb_ks.SuperbKS.run"]], "s3prl.problem.common.superb_ks": [[77, "module-s3prl.problem.common.superb_ks"]], "save_model() (s3prl.problem.common.superb_ks.superbks method)": [[77, "s3prl.problem.common.superb_ks.SuperbKS.save_model"]], "save_task() (s3prl.problem.common.superb_ks.superbks method)": [[77, "s3prl.problem.common.superb_ks.SuperbKS.save_task"]], "train() (s3prl.problem.common.superb_ks.superbks method)": [[77, "s3prl.problem.common.superb_ks.SuperbKS.train"]], "superbsid (class in s3prl.problem.common.superb_sid)": [[78, "s3prl.problem.common.superb_sid.SuperbSID"]], "build_batch_sampler() (s3prl.problem.common.superb_sid.superbsid method)": [[78, "s3prl.problem.common.superb_sid.SuperbSID.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.common.superb_sid.superbsid method)": [[78, "s3prl.problem.common.superb_sid.SuperbSID.build_collate_fn"]], "build_dataset() (s3prl.problem.common.superb_sid.superbsid method)": [[78, "s3prl.problem.common.superb_sid.SuperbSID.build_dataset"]], "build_downstream() (s3prl.problem.common.superb_sid.superbsid method)": [[78, "s3prl.problem.common.superb_sid.SuperbSID.build_downstream"]], "build_encoder() (s3prl.problem.common.superb_sid.superbsid method)": [[78, "s3prl.problem.common.superb_sid.SuperbSID.build_encoder"]], "build_featurizer() (s3prl.problem.common.superb_sid.superbsid method)": [[78, "s3prl.problem.common.superb_sid.SuperbSID.build_featurizer"]], "build_model() (s3prl.problem.common.superb_sid.superbsid method)": [[78, "s3prl.problem.common.superb_sid.SuperbSID.build_model"]], "build_optimizer() (s3prl.problem.common.superb_sid.superbsid method)": [[78, "s3prl.problem.common.superb_sid.SuperbSID.build_optimizer"]], "build_scheduler() (s3prl.problem.common.superb_sid.superbsid method)": [[78, "s3prl.problem.common.superb_sid.SuperbSID.build_scheduler"]], "build_task() (s3prl.problem.common.superb_sid.superbsid method)": [[78, "s3prl.problem.common.superb_sid.SuperbSID.build_task"]], "build_upstream() (s3prl.problem.common.superb_sid.superbsid method)": [[78, "s3prl.problem.common.superb_sid.SuperbSID.build_upstream"]], "default_config() (s3prl.problem.common.superb_sid.superbsid method)": [[78, "s3prl.problem.common.superb_sid.SuperbSID.default_config"]], "evaluate() (s3prl.problem.common.superb_sid.superbsid method)": [[78, "s3prl.problem.common.superb_sid.SuperbSID.evaluate"]], "get_class_from_name() (s3prl.problem.common.superb_sid.superbsid class method)": [[78, "s3prl.problem.common.superb_sid.SuperbSID.get_class_from_name"]], "load_model() (s3prl.problem.common.superb_sid.superbsid method)": [[78, "s3prl.problem.common.superb_sid.SuperbSID.load_model"]], "load_model_and_task() (s3prl.problem.common.superb_sid.superbsid method)": [[78, "s3prl.problem.common.superb_sid.SuperbSID.load_model_and_task"]], "load_task() (s3prl.problem.common.superb_sid.superbsid method)": [[78, "s3prl.problem.common.superb_sid.SuperbSID.load_task"]], "main() (s3prl.problem.common.superb_sid.superbsid method)": [[78, "s3prl.problem.common.superb_sid.SuperbSID.main"]], "prepare_data() (s3prl.problem.common.superb_sid.superbsid method)": [[78, "s3prl.problem.common.superb_sid.SuperbSID.prepare_data"]], "run() (s3prl.problem.common.superb_sid.superbsid method)": [[78, "s3prl.problem.common.superb_sid.SuperbSID.run"]], "s3prl.problem.common.superb_sid": [[78, "module-s3prl.problem.common.superb_sid"]], "save_model() (s3prl.problem.common.superb_sid.superbsid method)": [[78, "s3prl.problem.common.superb_sid.SuperbSID.save_model"]], "save_task() (s3prl.problem.common.superb_sid.superbsid method)": [[78, "s3prl.problem.common.superb_sid.SuperbSID.save_task"]], "train() (s3prl.problem.common.superb_sid.superbsid method)": [[78, "s3prl.problem.common.superb_sid.SuperbSID.train"]], "voxceleb1_for_sid() (in module s3prl.problem.common.superb_sid)": [[78, "s3prl.problem.common.superb_sid.voxceleb1_for_sid"]], "superbsd (class in s3prl.problem.diarization)": [[79, "s3prl.problem.diarization.SuperbSD"]], "build_batch_sampler() (s3prl.problem.diarization.superbsd method)": [[79, "s3prl.problem.diarization.SuperbSD.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.diarization.superbsd method)": [[79, "s3prl.problem.diarization.SuperbSD.build_collate_fn"]], "build_dataset() (s3prl.problem.diarization.superbsd method)": [[79, "s3prl.problem.diarization.SuperbSD.build_dataset"]], "build_downstream() (s3prl.problem.diarization.superbsd method)": [[79, "s3prl.problem.diarization.SuperbSD.build_downstream"]], "build_featurizer() (s3prl.problem.diarization.superbsd method)": [[79, "s3prl.problem.diarization.SuperbSD.build_featurizer"]], "build_model() (s3prl.problem.diarization.superbsd method)": [[79, "s3prl.problem.diarization.SuperbSD.build_model"]], "build_optimizer() (s3prl.problem.diarization.superbsd method)": [[79, "s3prl.problem.diarization.SuperbSD.build_optimizer"]], "build_scheduler() (s3prl.problem.diarization.superbsd method)": [[79, "s3prl.problem.diarization.SuperbSD.build_scheduler"]], "build_task() (s3prl.problem.diarization.superbsd method)": [[79, "s3prl.problem.diarization.SuperbSD.build_task"]], "build_upstream() (s3prl.problem.diarization.superbsd method)": [[79, "s3prl.problem.diarization.SuperbSD.build_upstream"]], "default_config() (s3prl.problem.diarization.superbsd method)": [[79, "s3prl.problem.diarization.SuperbSD.default_config"]], "evaluate() (s3prl.problem.diarization.superbsd method)": [[79, "s3prl.problem.diarization.SuperbSD.evaluate"]], "get_class_from_name() (s3prl.problem.diarization.superbsd class method)": [[79, "s3prl.problem.diarization.SuperbSD.get_class_from_name"]], "load_model() (s3prl.problem.diarization.superbsd method)": [[79, "s3prl.problem.diarization.SuperbSD.load_model"]], "load_model_and_task() (s3prl.problem.diarization.superbsd method)": [[79, "s3prl.problem.diarization.SuperbSD.load_model_and_task"]], "load_task() (s3prl.problem.diarization.superbsd method)": [[79, "s3prl.problem.diarization.SuperbSD.load_task"]], "main() (s3prl.problem.diarization.superbsd method)": [[79, "s3prl.problem.diarization.SuperbSD.main"]], "prepare_data() (s3prl.problem.diarization.superbsd method)": [[79, "s3prl.problem.diarization.SuperbSD.prepare_data"]], "run() (s3prl.problem.diarization.superbsd method)": [[79, "s3prl.problem.diarization.SuperbSD.run"]], "s3prl.problem.diarization": [[79, "module-s3prl.problem.diarization"]], "save_model() (s3prl.problem.diarization.superbsd method)": [[79, "s3prl.problem.diarization.SuperbSD.save_model"]], "save_task() (s3prl.problem.diarization.superbsd method)": [[79, "s3prl.problem.diarization.SuperbSD.save_task"]], "scoring() (s3prl.problem.diarization.superbsd method)": [[79, "s3prl.problem.diarization.SuperbSD.scoring"]], "train() (s3prl.problem.diarization.superbsd method)": [[79, "s3prl.problem.diarization.SuperbSD.train"]], "diarization (class in s3prl.problem.diarization.run)": [[80, "s3prl.problem.diarization.run.Diarization"]], "build_collate_fn() (s3prl.problem.diarization.run.diarization method)": [[80, "s3prl.problem.diarization.run.Diarization.build_collate_fn"]], "build_featurizer() (s3prl.problem.diarization.run.diarization method)": [[80, "s3prl.problem.diarization.run.Diarization.build_featurizer"]], "build_model() (s3prl.problem.diarization.run.diarization method)": [[80, "s3prl.problem.diarization.run.Diarization.build_model"]], "build_optimizer() (s3prl.problem.diarization.run.diarization method)": [[80, "s3prl.problem.diarization.run.Diarization.build_optimizer"]], "build_scheduler() (s3prl.problem.diarization.run.diarization method)": [[80, "s3prl.problem.diarization.run.Diarization.build_scheduler"]], "build_task() (s3prl.problem.diarization.run.diarization method)": [[80, "s3prl.problem.diarization.run.Diarization.build_task"]], "build_upstream() (s3prl.problem.diarization.run.diarization method)": [[80, "s3prl.problem.diarization.run.Diarization.build_upstream"]], "evaluate() (s3prl.problem.diarization.run.diarization method)": [[80, "s3prl.problem.diarization.run.Diarization.evaluate"]], "get_class_from_name() (s3prl.problem.diarization.run.diarization class method)": [[80, "s3prl.problem.diarization.run.Diarization.get_class_from_name"]], "load_model() (s3prl.problem.diarization.run.diarization method)": [[80, "s3prl.problem.diarization.run.Diarization.load_model"]], "load_model_and_task() (s3prl.problem.diarization.run.diarization method)": [[80, "s3prl.problem.diarization.run.Diarization.load_model_and_task"]], "load_task() (s3prl.problem.diarization.run.diarization method)": [[80, "s3prl.problem.diarization.run.Diarization.load_task"]], "main() (s3prl.problem.diarization.run.diarization method)": [[80, "s3prl.problem.diarization.run.Diarization.main"]], "run() (s3prl.problem.diarization.run.diarization method)": [[80, "s3prl.problem.diarization.run.Diarization.run"]], "s3prl.problem.diarization.run": [[80, "module-s3prl.problem.diarization.run"]], "save_model() (s3prl.problem.diarization.run.diarization method)": [[80, "s3prl.problem.diarization.run.Diarization.save_model"]], "save_task() (s3prl.problem.diarization.run.diarization method)": [[80, "s3prl.problem.diarization.run.Diarization.save_task"]], "scoring() (s3prl.problem.diarization.run.diarization method)": [[80, "s3prl.problem.diarization.run.Diarization.scoring"]], "train() (s3prl.problem.diarization.run.diarization method)": [[80, "s3prl.problem.diarization.run.Diarization.train"]], "superbsd (class in s3prl.problem.diarization.superb_sd)": [[81, "s3prl.problem.diarization.superb_sd.SuperbSD"]], "build_batch_sampler() (s3prl.problem.diarization.superb_sd.superbsd method)": [[81, "s3prl.problem.diarization.superb_sd.SuperbSD.build_batch_sampler"]], "build_collate_fn() (s3prl.problem.diarization.superb_sd.superbsd method)": [[81, "s3prl.problem.diarization.superb_sd.SuperbSD.build_collate_fn"]], "build_dataset() (s3prl.problem.diarization.superb_sd.superbsd method)": [[81, "s3prl.problem.diarization.superb_sd.SuperbSD.build_dataset"]], "build_downstream() (s3prl.problem.diarization.superb_sd.superbsd method)": [[81, "s3prl.problem.diarization.superb_sd.SuperbSD.build_downstream"]], "build_featurizer() (s3prl.problem.diarization.superb_sd.superbsd method)": [[81, "s3prl.problem.diarization.superb_sd.SuperbSD.build_featurizer"]], "build_model() (s3prl.problem.diarization.superb_sd.superbsd method)": [[81, "s3prl.problem.diarization.superb_sd.SuperbSD.build_model"]], "build_optimizer() (s3prl.problem.diarization.superb_sd.superbsd method)": [[81, "s3prl.problem.diarization.superb_sd.SuperbSD.build_optimizer"]], "build_scheduler() (s3prl.problem.diarization.superb_sd.superbsd method)": [[81, "s3prl.problem.diarization.superb_sd.SuperbSD.build_scheduler"]], "build_task() (s3prl.problem.diarization.superb_sd.superbsd method)": [[81, "s3prl.problem.diarization.superb_sd.SuperbSD.build_task"]], "build_upstream() (s3prl.problem.diarization.superb_sd.superbsd method)": [[81, "s3prl.problem.diarization.superb_sd.SuperbSD.build_upstream"]], "default_config() (s3prl.problem.diarization.superb_sd.superbsd method)": [[81, "s3prl.problem.diarization.superb_sd.SuperbSD.default_config"]], "evaluate() (s3prl.problem.diarization.superb_sd.superbsd method)": [[81, "s3prl.problem.diarization.superb_sd.SuperbSD.evaluate"]], "get_class_from_name() (s3prl.problem.diarization.superb_sd.superbsd class method)": [[81, "s3prl.problem.diarization.superb_sd.SuperbSD.get_class_from_name"]], "load_model() (s3prl.problem.diarization.superb_sd.superbsd method)": [[81, "s3prl.problem.diarization.superb_sd.SuperbSD.load_model"]], "load_model_and_task() (s3prl.problem.diarization.superb_sd.superbsd method)": [[81, "s3prl.problem.diarization.superb_sd.SuperbSD.load_model_and_task"]], "load_task() (s3prl.problem.diarization.superb_sd.superbsd method)": [[81, "s3prl.problem.diarization.superb_sd.SuperbSD.load_task"]], "main() (s3prl.problem.diarization.superb_sd.superbsd method)": [[81, "s3prl.problem.diarization.superb_sd.SuperbSD.main"]], "prepare_data() (s3prl.problem.diarization.superb_sd.superbsd method)": [[81, "s3prl.problem.diarization.superb_sd.SuperbSD.prepare_data"]], "run() (s3prl.problem.diarization.superb_sd.superbsd method)": [[81, "s3prl.problem.diarization.superb_sd.SuperbSD.run"]], "s3prl.problem.diarization.superb_sd": [[81, "module-s3prl.problem.diarization.superb_sd"]], "save_model() (s3prl.problem.diarization.superb_sd.superbsd method)": [[81, "s3prl.problem.diarization.superb_sd.SuperbSD.save_model"]], "save_task() (s3prl.problem.diarization.superb_sd.superbsd method)": [[81, "s3prl.problem.diarization.superb_sd.SuperbSD.save_task"]], "scoring() (s3prl.problem.diarization.superb_sd.superbsd method)": [[81, "s3prl.problem.diarization.superb_sd.SuperbSD.scoring"]], "train() (s3prl.problem.diarization.superb_sd.superbsd method)": [[81, "s3prl.problem.diarization.superb_sd.SuperbSD.train"]], "csv_to_kaldi_dir() (in module s3prl.problem.diarization.util)": [[82, "s3prl.problem.diarization.util.csv_to_kaldi_dir"]], "kaldi_dir_to_csv() (in module s3prl.problem.diarization.util)": [[82, "s3prl.problem.diarization.util.kaldi_dir_to_csv"]], "kaldi_dir_to_rttm() (in module s3prl.problem.diarization.util)": [[82, "s3prl.problem.diarization.util.kaldi_dir_to_rttm"]], "s3prl.problem.diarization.util": [[82, "module-s3prl.problem.diarization.util"]], "diarizationpit (class in s3prl.task)": [[83, "s3prl.task.DiarizationPIT"]], "dumpfeature (class in s3prl.task)": [[83, "s3prl.task.DumpFeature"]], "speakerverification (class in s3prl.task)": [[83, "s3prl.task.SpeakerVerification"]], "speech2textctctask (class in s3prl.task)": [[83, "s3prl.task.Speech2TextCTCTask"]], "task (class in s3prl.task)": [[83, "s3prl.task.Task"]], "utteranceclassificationtask (class in s3prl.task)": [[83, "s3prl.task.UtteranceClassificationTask"]], "utterancemulticlassclassificationtask (class in s3prl.task)": [[83, "s3prl.task.UtteranceMultiClassClassificationTask"]], "dump_patches (s3prl.task.diarizationpit attribute)": [[83, "s3prl.task.DiarizationPIT.dump_patches"]], "dump_patches (s3prl.task.dumpfeature attribute)": [[83, "s3prl.task.DumpFeature.dump_patches"]], "dump_patches (s3prl.task.speakerverification attribute)": [[83, "s3prl.task.SpeakerVerification.dump_patches"]], "dump_patches (s3prl.task.speech2textctctask attribute)": [[83, "s3prl.task.Speech2TextCTCTask.dump_patches"]], "dump_patches (s3prl.task.task attribute)": [[83, "s3prl.task.Task.dump_patches"]], "dump_patches (s3prl.task.utteranceclassificationtask attribute)": [[83, "s3prl.task.UtteranceClassificationTask.dump_patches"]], "dump_patches (s3prl.task.utterancemulticlassclassificationtask attribute)": [[83, "s3prl.task.UtteranceMultiClassClassificationTask.dump_patches"]], "forward() (s3prl.task.diarizationpit method)": [[83, "s3prl.task.DiarizationPIT.forward"]], "forward() (s3prl.task.dumpfeature method)": [[83, "s3prl.task.DumpFeature.forward"]], "forward() (s3prl.task.speakerverification method)": [[83, "s3prl.task.SpeakerVerification.forward"]], "forward() (s3prl.task.speech2textctctask method)": [[83, "s3prl.task.Speech2TextCTCTask.forward"]], "forward() (s3prl.task.task method)": [[83, "s3prl.task.Task.forward"]], "forward() (s3prl.task.utteranceclassificationtask method)": [[83, "s3prl.task.UtteranceClassificationTask.forward"]], "forward() (s3prl.task.utterancemulticlassclassificationtask method)": [[83, "s3prl.task.UtteranceMultiClassClassificationTask.forward"]], "get_state() (s3prl.task.diarizationpit method)": [[83, "s3prl.task.DiarizationPIT.get_state"]], "get_state() (s3prl.task.dumpfeature method)": [[83, "s3prl.task.DumpFeature.get_state"]], "get_state() (s3prl.task.speakerverification method)": [[83, "s3prl.task.SpeakerVerification.get_state"]], "get_state() (s3prl.task.speech2textctctask method)": [[83, "s3prl.task.Speech2TextCTCTask.get_state"]], "get_state() (s3prl.task.task method)": [[83, "s3prl.task.Task.get_state"]], "get_state() (s3prl.task.utteranceclassificationtask method)": [[83, "s3prl.task.UtteranceClassificationTask.get_state"]], "get_state() (s3prl.task.utterancemulticlassclassificationtask method)": [[83, "s3prl.task.UtteranceMultiClassClassificationTask.get_state"]], "input_size (s3prl.task.utteranceclassificationtask attribute)": [[83, "s3prl.task.UtteranceClassificationTask.input_size"]], "numpy_object_array_all_close() (s3prl.task.utterancemulticlassclassificationtask static method)": [[83, "s3prl.task.UtteranceMultiClassClassificationTask.numpy_object_array_all_close"]], "output_size (s3prl.task.utteranceclassificationtask attribute)": [[83, "s3prl.task.UtteranceClassificationTask.output_size"]], "parse_cached_results() (s3prl.task.diarizationpit method)": [[83, "s3prl.task.DiarizationPIT.parse_cached_results"]], "parse_cached_results() (s3prl.task.dumpfeature method)": [[83, "s3prl.task.DumpFeature.parse_cached_results"]], "parse_cached_results() (s3prl.task.speakerverification method)": [[83, "s3prl.task.SpeakerVerification.parse_cached_results"]], "parse_cached_results() (s3prl.task.speech2textctctask method)": [[83, "s3prl.task.Speech2TextCTCTask.parse_cached_results"]], "parse_cached_results() (s3prl.task.task method)": [[83, "s3prl.task.Task.parse_cached_results"]], "parse_cached_results() (s3prl.task.utteranceclassificationtask method)": [[83, "s3prl.task.UtteranceClassificationTask.parse_cached_results"]], "parse_cached_results() (s3prl.task.utterancemulticlassclassificationtask method)": [[83, "s3prl.task.UtteranceMultiClassClassificationTask.parse_cached_results"]], "predict() (s3prl.task.diarizationpit method)": [[83, "s3prl.task.DiarizationPIT.predict"]], "predict() (s3prl.task.dumpfeature method)": [[83, "s3prl.task.DumpFeature.predict"]], "predict() (s3prl.task.speakerverification method)": [[83, "s3prl.task.SpeakerVerification.predict"]], "predict() (s3prl.task.speech2textctctask method)": [[83, "s3prl.task.Speech2TextCTCTask.predict"]], "predict() (s3prl.task.task method)": [[83, "s3prl.task.Task.predict"]], "predict() (s3prl.task.utteranceclassificationtask method)": [[83, "s3prl.task.UtteranceClassificationTask.predict"]], "predict() (s3prl.task.utterancemulticlassclassificationtask method)": [[83, "s3prl.task.UtteranceMultiClassClassificationTask.predict"]], "reduction() (s3prl.task.diarizationpit method)": [[83, "s3prl.task.DiarizationPIT.reduction"]], "reduction() (s3prl.task.dumpfeature method)": [[83, "s3prl.task.DumpFeature.reduction"]], "reduction() (s3prl.task.speakerverification method)": [[83, "s3prl.task.SpeakerVerification.reduction"]], "reduction() (s3prl.task.speech2textctctask method)": [[83, "s3prl.task.Speech2TextCTCTask.reduction"]], "reduction() (s3prl.task.task method)": [[83, "s3prl.task.Task.reduction"]], "reduction() (s3prl.task.utteranceclassificationtask method)": [[83, "s3prl.task.UtteranceClassificationTask.reduction"]], "reduction() (s3prl.task.utterancemulticlassclassificationtask method)": [[83, "s3prl.task.UtteranceMultiClassClassificationTask.reduction"]], "s3prl.task": [[83, "module-s3prl.task"]], "set_state() (s3prl.task.diarizationpit method)": [[83, "s3prl.task.DiarizationPIT.set_state"]], "set_state() (s3prl.task.dumpfeature method)": [[83, "s3prl.task.DumpFeature.set_state"]], "set_state() (s3prl.task.speakerverification method)": [[83, "s3prl.task.SpeakerVerification.set_state"]], "set_state() (s3prl.task.speech2textctctask method)": [[83, "s3prl.task.Speech2TextCTCTask.set_state"]], "set_state() (s3prl.task.task method)": [[83, "s3prl.task.Task.set_state"]], "set_state() (s3prl.task.utteranceclassificationtask method)": [[83, "s3prl.task.UtteranceClassificationTask.set_state"]], "set_state() (s3prl.task.utterancemulticlassclassificationtask method)": [[83, "s3prl.task.UtteranceMultiClassClassificationTask.set_state"]], "test_reduction() (s3prl.task.diarizationpit method)": [[83, "s3prl.task.DiarizationPIT.test_reduction"]], "test_reduction() (s3prl.task.dumpfeature method)": [[83, "s3prl.task.DumpFeature.test_reduction"]], "test_reduction() (s3prl.task.speakerverification method)": [[83, "s3prl.task.SpeakerVerification.test_reduction"]], "test_reduction() (s3prl.task.speech2textctctask method)": [[83, "s3prl.task.Speech2TextCTCTask.test_reduction"]], "test_reduction() (s3prl.task.task method)": [[83, "s3prl.task.Task.test_reduction"]], "test_reduction() (s3prl.task.utteranceclassificationtask method)": [[83, "s3prl.task.UtteranceClassificationTask.test_reduction"]], "test_reduction() (s3prl.task.utterancemulticlassclassificationtask method)": [[83, "s3prl.task.UtteranceMultiClassClassificationTask.test_reduction"]], "test_step() (s3prl.task.diarizationpit method)": [[83, "s3prl.task.DiarizationPIT.test_step"]], "test_step() (s3prl.task.dumpfeature method)": [[83, "s3prl.task.DumpFeature.test_step"]], "test_step() (s3prl.task.speakerverification method)": [[83, "s3prl.task.SpeakerVerification.test_step"]], "test_step() (s3prl.task.speech2textctctask method)": [[83, "s3prl.task.Speech2TextCTCTask.test_step"]], "test_step() (s3prl.task.task method)": [[83, "s3prl.task.Task.test_step"]], "test_step() (s3prl.task.utteranceclassificationtask method)": [[83, "s3prl.task.UtteranceClassificationTask.test_step"]], "test_step() (s3prl.task.utterancemulticlassclassificationtask method)": [[83, "s3prl.task.UtteranceMultiClassClassificationTask.test_step"]], "train_reduction() (s3prl.task.diarizationpit method)": [[83, "s3prl.task.DiarizationPIT.train_reduction"]], "train_reduction() (s3prl.task.dumpfeature method)": [[83, "s3prl.task.DumpFeature.train_reduction"]], "train_reduction() (s3prl.task.speakerverification method)": [[83, "s3prl.task.SpeakerVerification.train_reduction"]], "train_reduction() (s3prl.task.speech2textctctask method)": [[83, "s3prl.task.Speech2TextCTCTask.train_reduction"]], "train_reduction() (s3prl.task.task method)": [[83, "s3prl.task.Task.train_reduction"]], "train_reduction() (s3prl.task.utteranceclassificationtask method)": [[83, "s3prl.task.UtteranceClassificationTask.train_reduction"]], "train_reduction() (s3prl.task.utterancemulticlassclassificationtask method)": [[83, "s3prl.task.UtteranceMultiClassClassificationTask.train_reduction"]], "train_step() (s3prl.task.diarizationpit method)": [[83, "s3prl.task.DiarizationPIT.train_step"]], "train_step() (s3prl.task.dumpfeature method)": [[83, "s3prl.task.DumpFeature.train_step"]], "train_step() (s3prl.task.speakerverification method)": [[83, "s3prl.task.SpeakerVerification.train_step"]], "train_step() (s3prl.task.speech2textctctask method)": [[83, "s3prl.task.Speech2TextCTCTask.train_step"]], "train_step() (s3prl.task.task method)": [[83, "s3prl.task.Task.train_step"]], "train_step() (s3prl.task.utteranceclassificationtask method)": [[83, "s3prl.task.UtteranceClassificationTask.train_step"]], "train_step() (s3prl.task.utterancemulticlassclassificationtask method)": [[83, "s3prl.task.UtteranceMultiClassClassificationTask.train_step"]], "training (s3prl.task.diarizationpit attribute)": [[83, "s3prl.task.DiarizationPIT.training"]], "training (s3prl.task.dumpfeature attribute)": [[83, "s3prl.task.DumpFeature.training"]], "training (s3prl.task.speakerverification attribute)": [[83, "s3prl.task.SpeakerVerification.training"]], "training (s3prl.task.speech2textctctask attribute)": [[83, "s3prl.task.Speech2TextCTCTask.training"]], "training (s3prl.task.task attribute)": [[83, "s3prl.task.Task.training"]], "training (s3prl.task.utteranceclassificationtask attribute)": [[83, "s3prl.task.UtteranceClassificationTask.training"]], "training (s3prl.task.utterancemulticlassclassificationtask attribute)": [[83, "s3prl.task.UtteranceMultiClassClassificationTask.training"]], "valid_reduction() (s3prl.task.diarizationpit method)": [[83, "s3prl.task.DiarizationPIT.valid_reduction"]], "valid_reduction() (s3prl.task.dumpfeature method)": [[83, "s3prl.task.DumpFeature.valid_reduction"]], "valid_reduction() (s3prl.task.speakerverification method)": [[83, "s3prl.task.SpeakerVerification.valid_reduction"]], "valid_reduction() (s3prl.task.speech2textctctask method)": [[83, "s3prl.task.Speech2TextCTCTask.valid_reduction"]], "valid_reduction() (s3prl.task.task method)": [[83, "s3prl.task.Task.valid_reduction"]], "valid_reduction() (s3prl.task.utteranceclassificationtask method)": [[83, "s3prl.task.UtteranceClassificationTask.valid_reduction"]], "valid_reduction() (s3prl.task.utterancemulticlassclassificationtask method)": [[83, "s3prl.task.UtteranceMultiClassClassificationTask.valid_reduction"]], "valid_step() (s3prl.task.diarizationpit method)": [[83, "s3prl.task.DiarizationPIT.valid_step"]], "valid_step() (s3prl.task.dumpfeature method)": [[83, "s3prl.task.DumpFeature.valid_step"]], "valid_step() (s3prl.task.speakerverification method)": [[83, "s3prl.task.SpeakerVerification.valid_step"]], "valid_step() (s3prl.task.speech2textctctask method)": [[83, "s3prl.task.Speech2TextCTCTask.valid_step"]], "valid_step() (s3prl.task.task method)": [[83, "s3prl.task.Task.valid_step"]], "valid_step() (s3prl.task.utteranceclassificationtask method)": [[83, "s3prl.task.UtteranceClassificationTask.valid_step"]], "valid_step() (s3prl.task.utterancemulticlassclassificationtask method)": [[83, "s3prl.task.UtteranceMultiClassClassificationTask.valid_step"]], "task (class in s3prl.task.base)": [[84, "s3prl.task.base.Task"]], "dump_patches (s3prl.task.base.task attribute)": [[84, "s3prl.task.base.Task.dump_patches"]], "forward() (s3prl.task.base.task method)": [[84, "s3prl.task.base.Task.forward"]], "get_state() (s3prl.task.base.task method)": [[84, "s3prl.task.base.Task.get_state"]], "parse_cached_results() (s3prl.task.base.task method)": [[84, "s3prl.task.base.Task.parse_cached_results"]], "predict() (s3prl.task.base.task method)": [[84, "s3prl.task.base.Task.predict"]], "reduction() (s3prl.task.base.task method)": [[84, "s3prl.task.base.Task.reduction"]], "s3prl.task.base": [[84, "module-s3prl.task.base"]], "set_state() (s3prl.task.base.task method)": [[84, "s3prl.task.base.Task.set_state"]], "test_reduction() (s3prl.task.base.task method)": [[84, "s3prl.task.base.Task.test_reduction"]], "test_step() (s3prl.task.base.task method)": [[84, "s3prl.task.base.Task.test_step"]], "train_reduction() (s3prl.task.base.task method)": [[84, "s3prl.task.base.Task.train_reduction"]], "train_step() (s3prl.task.base.task method)": [[84, "s3prl.task.base.Task.train_step"]], "training (s3prl.task.base.task attribute)": [[84, "s3prl.task.base.Task.training"]], "valid_reduction() (s3prl.task.base.task method)": [[84, "s3prl.task.base.Task.valid_reduction"]], "valid_step() (s3prl.task.base.task method)": [[84, "s3prl.task.base.Task.valid_step"]], "diarizationpit (class in s3prl.task.diarization)": [[85, "s3prl.task.diarization.DiarizationPIT"]], "dump_patches (s3prl.task.diarization.diarizationpit attribute)": [[85, "s3prl.task.diarization.DiarizationPIT.dump_patches"]], "forward() (s3prl.task.diarization.diarizationpit method)": [[85, "s3prl.task.diarization.DiarizationPIT.forward"]], "get_state() (s3prl.task.diarization.diarizationpit method)": [[85, "s3prl.task.diarization.DiarizationPIT.get_state"]], "parse_cached_results() (s3prl.task.diarization.diarizationpit method)": [[85, "s3prl.task.diarization.DiarizationPIT.parse_cached_results"]], "predict() (s3prl.task.diarization.diarizationpit method)": [[85, "s3prl.task.diarization.DiarizationPIT.predict"]], "reduction() (s3prl.task.diarization.diarizationpit method)": [[85, "s3prl.task.diarization.DiarizationPIT.reduction"]], "s3prl.task.diarization": [[85, "module-s3prl.task.diarization"]], "set_state() (s3prl.task.diarization.diarizationpit method)": [[85, "s3prl.task.diarization.DiarizationPIT.set_state"]], "test_reduction() (s3prl.task.diarization.diarizationpit method)": [[85, "s3prl.task.diarization.DiarizationPIT.test_reduction"]], "test_step() (s3prl.task.diarization.diarizationpit method)": [[85, "s3prl.task.diarization.DiarizationPIT.test_step"]], "train_reduction() (s3prl.task.diarization.diarizationpit method)": [[85, "s3prl.task.diarization.DiarizationPIT.train_reduction"]], "train_step() (s3prl.task.diarization.diarizationpit method)": [[85, "s3prl.task.diarization.DiarizationPIT.train_step"]], "training (s3prl.task.diarization.diarizationpit attribute)": [[85, "s3prl.task.diarization.DiarizationPIT.training"]], "valid_reduction() (s3prl.task.diarization.diarizationpit method)": [[85, "s3prl.task.diarization.DiarizationPIT.valid_reduction"]], "valid_step() (s3prl.task.diarization.diarizationpit method)": [[85, "s3prl.task.diarization.DiarizationPIT.valid_step"]], "dumpfeature (class in s3prl.task.dump_feature)": [[86, "s3prl.task.dump_feature.DumpFeature"]], "dump_patches (s3prl.task.dump_feature.dumpfeature attribute)": [[86, "s3prl.task.dump_feature.DumpFeature.dump_patches"]], "forward() (s3prl.task.dump_feature.dumpfeature method)": [[86, "s3prl.task.dump_feature.DumpFeature.forward"]], "get_state() (s3prl.task.dump_feature.dumpfeature method)": [[86, "s3prl.task.dump_feature.DumpFeature.get_state"]], "parse_cached_results() (s3prl.task.dump_feature.dumpfeature method)": [[86, "s3prl.task.dump_feature.DumpFeature.parse_cached_results"]], "predict() (s3prl.task.dump_feature.dumpfeature method)": [[86, "s3prl.task.dump_feature.DumpFeature.predict"]], "reduction() (s3prl.task.dump_feature.dumpfeature method)": [[86, "s3prl.task.dump_feature.DumpFeature.reduction"]], "s3prl.task.dump_feature": [[86, "module-s3prl.task.dump_feature"]], "set_state() (s3prl.task.dump_feature.dumpfeature method)": [[86, "s3prl.task.dump_feature.DumpFeature.set_state"]], "test_reduction() (s3prl.task.dump_feature.dumpfeature method)": [[86, "s3prl.task.dump_feature.DumpFeature.test_reduction"]], "test_step() (s3prl.task.dump_feature.dumpfeature method)": [[86, "s3prl.task.dump_feature.DumpFeature.test_step"]], "train_reduction() (s3prl.task.dump_feature.dumpfeature method)": [[86, "s3prl.task.dump_feature.DumpFeature.train_reduction"]], "train_step() (s3prl.task.dump_feature.dumpfeature method)": [[86, "s3prl.task.dump_feature.DumpFeature.train_step"]], "training (s3prl.task.dump_feature.dumpfeature attribute)": [[86, "s3prl.task.dump_feature.DumpFeature.training"]], "valid_reduction() (s3prl.task.dump_feature.dumpfeature method)": [[86, "s3prl.task.dump_feature.DumpFeature.valid_reduction"]], "valid_step() (s3prl.task.dump_feature.dumpfeature method)": [[86, "s3prl.task.dump_feature.DumpFeature.valid_step"]], "eventpredictiontask (class in s3prl.task.event_prediction)": [[87, "s3prl.task.event_prediction.EventPredictionTask"]], "activation (s3prl.task.event_prediction.eventpredictiontask attribute)": [[87, "s3prl.task.event_prediction.EventPredictionTask.activation"]], "dump_patches (s3prl.task.event_prediction.eventpredictiontask attribute)": [[87, "s3prl.task.event_prediction.EventPredictionTask.dump_patches"]], "eval_reduction() (s3prl.task.event_prediction.eventpredictiontask method)": [[87, "s3prl.task.event_prediction.EventPredictionTask.eval_reduction"]], "forward() (s3prl.task.event_prediction.eventpredictiontask method)": [[87, "s3prl.task.event_prediction.EventPredictionTask.forward"]], "get_state() (s3prl.task.event_prediction.eventpredictiontask method)": [[87, "s3prl.task.event_prediction.EventPredictionTask.get_state"]], "log_scores() (s3prl.task.event_prediction.eventpredictiontask method)": [[87, "s3prl.task.event_prediction.EventPredictionTask.log_scores"]], "parse_cached_results() (s3prl.task.event_prediction.eventpredictiontask method)": [[87, "s3prl.task.event_prediction.EventPredictionTask.parse_cached_results"]], "predict() (s3prl.task.event_prediction.eventpredictiontask method)": [[87, "s3prl.task.event_prediction.EventPredictionTask.predict"]], "reduction() (s3prl.task.event_prediction.eventpredictiontask method)": [[87, "s3prl.task.event_prediction.EventPredictionTask.reduction"]], "s3prl.task.event_prediction": [[87, "module-s3prl.task.event_prediction"]], "set_state() (s3prl.task.event_prediction.eventpredictiontask method)": [[87, "s3prl.task.event_prediction.EventPredictionTask.set_state"]], "test_reduction() (s3prl.task.event_prediction.eventpredictiontask method)": [[87, "s3prl.task.event_prediction.EventPredictionTask.test_reduction"]], "test_step() (s3prl.task.event_prediction.eventpredictiontask method)": [[87, "s3prl.task.event_prediction.EventPredictionTask.test_step"]], "train_reduction() (s3prl.task.event_prediction.eventpredictiontask method)": [[87, "s3prl.task.event_prediction.EventPredictionTask.train_reduction"]], "train_step() (s3prl.task.event_prediction.eventpredictiontask method)": [[87, "s3prl.task.event_prediction.EventPredictionTask.train_step"]], "training (s3prl.task.event_prediction.eventpredictiontask attribute)": [[87, "s3prl.task.event_prediction.EventPredictionTask.training"]], "valid_reduction() (s3prl.task.event_prediction.eventpredictiontask method)": [[87, "s3prl.task.event_prediction.EventPredictionTask.valid_reduction"]], "valid_step() (s3prl.task.event_prediction.eventpredictiontask method)": [[87, "s3prl.task.event_prediction.EventPredictionTask.valid_step"]], "scenepredictiontask (class in s3prl.task.scene_prediction)": [[88, "s3prl.task.scene_prediction.ScenePredictionTask"]], "activation (s3prl.task.scene_prediction.scenepredictiontask attribute)": [[88, "s3prl.task.scene_prediction.ScenePredictionTask.activation"]], "dump_patches (s3prl.task.scene_prediction.scenepredictiontask attribute)": [[88, "s3prl.task.scene_prediction.ScenePredictionTask.dump_patches"]], "forward() (s3prl.task.scene_prediction.scenepredictiontask method)": [[88, "s3prl.task.scene_prediction.ScenePredictionTask.forward"]], "get_state() (s3prl.task.scene_prediction.scenepredictiontask method)": [[88, "s3prl.task.scene_prediction.ScenePredictionTask.get_state"]], "log_scores() (s3prl.task.scene_prediction.scenepredictiontask method)": [[88, "s3prl.task.scene_prediction.ScenePredictionTask.log_scores"]], "parse_cached_results() (s3prl.task.scene_prediction.scenepredictiontask method)": [[88, "s3prl.task.scene_prediction.ScenePredictionTask.parse_cached_results"]], "predict() (s3prl.task.scene_prediction.scenepredictiontask method)": [[88, "s3prl.task.scene_prediction.ScenePredictionTask.predict"]], "reduction() (s3prl.task.scene_prediction.scenepredictiontask method)": [[88, "s3prl.task.scene_prediction.ScenePredictionTask.reduction"]], "s3prl.task.scene_prediction": [[88, "module-s3prl.task.scene_prediction"]], "set_state() (s3prl.task.scene_prediction.scenepredictiontask method)": [[88, "s3prl.task.scene_prediction.ScenePredictionTask.set_state"]], "test_reduction() (s3prl.task.scene_prediction.scenepredictiontask method)": [[88, "s3prl.task.scene_prediction.ScenePredictionTask.test_reduction"]], "test_step() (s3prl.task.scene_prediction.scenepredictiontask method)": [[88, "s3prl.task.scene_prediction.ScenePredictionTask.test_step"]], "train_reduction() (s3prl.task.scene_prediction.scenepredictiontask method)": [[88, "s3prl.task.scene_prediction.ScenePredictionTask.train_reduction"]], "train_step() (s3prl.task.scene_prediction.scenepredictiontask method)": [[88, "s3prl.task.scene_prediction.ScenePredictionTask.train_step"]], "training (s3prl.task.scene_prediction.scenepredictiontask attribute)": [[88, "s3prl.task.scene_prediction.ScenePredictionTask.training"]], "valid_reduction() (s3prl.task.scene_prediction.scenepredictiontask method)": [[88, "s3prl.task.scene_prediction.ScenePredictionTask.valid_reduction"]], "valid_step() (s3prl.task.scene_prediction.scenepredictiontask method)": [[88, "s3prl.task.scene_prediction.ScenePredictionTask.valid_step"]], "speakerclassifier (class in s3prl.task.speaker_verification_task)": [[89, "s3prl.task.speaker_verification_task.SpeakerClassifier"]], "speakerverification (class in s3prl.task.speaker_verification_task)": [[89, "s3prl.task.speaker_verification_task.SpeakerVerification"]], "dump_patches (s3prl.task.speaker_verification_task.speakerclassifier attribute)": [[89, "s3prl.task.speaker_verification_task.SpeakerClassifier.dump_patches"]], "dump_patches (s3prl.task.speaker_verification_task.speakerverification attribute)": [[89, "s3prl.task.speaker_verification_task.SpeakerVerification.dump_patches"]], "forward() (s3prl.task.speaker_verification_task.speakerclassifier method)": [[89, "s3prl.task.speaker_verification_task.SpeakerClassifier.forward"]], "forward() (s3prl.task.speaker_verification_task.speakerverification method)": [[89, "s3prl.task.speaker_verification_task.SpeakerVerification.forward"]], "get_state() (s3prl.task.speaker_verification_task.speakerverification method)": [[89, "s3prl.task.speaker_verification_task.SpeakerVerification.get_state"]], "input_size (s3prl.task.speaker_verification_task.speakerclassifier attribute)": [[89, "s3prl.task.speaker_verification_task.SpeakerClassifier.input_size"]], "input_size (s3prl.task.speaker_verification_task.speakerclassifier property)": [[89, "id0"]], "loss (s3prl.task.speaker_verification_task.speakerverification attribute)": [[89, "s3prl.task.speaker_verification_task.SpeakerVerification.loss"]], "output_size (s3prl.task.speaker_verification_task.speakerclassifier attribute)": [[89, "s3prl.task.speaker_verification_task.SpeakerClassifier.output_size"]], "output_size (s3prl.task.speaker_verification_task.speakerclassifier property)": [[89, "id1"]], "parse_cached_results() (s3prl.task.speaker_verification_task.speakerverification method)": [[89, "s3prl.task.speaker_verification_task.SpeakerVerification.parse_cached_results"]], "predict() (s3prl.task.speaker_verification_task.speakerverification method)": [[89, "s3prl.task.speaker_verification_task.SpeakerVerification.predict"]], "reduction() (s3prl.task.speaker_verification_task.speakerverification method)": [[89, "s3prl.task.speaker_verification_task.SpeakerVerification.reduction"]], "s3prl.task.speaker_verification_task": [[89, "module-s3prl.task.speaker_verification_task"]], "set_state() (s3prl.task.speaker_verification_task.speakerverification method)": [[89, "s3prl.task.speaker_verification_task.SpeakerVerification.set_state"]], "test_reduction() (s3prl.task.speaker_verification_task.speakerverification method)": [[89, "s3prl.task.speaker_verification_task.SpeakerVerification.test_reduction"]], "test_step() (s3prl.task.speaker_verification_task.speakerverification method)": [[89, "s3prl.task.speaker_verification_task.SpeakerVerification.test_step"]], "train_reduction() (s3prl.task.speaker_verification_task.speakerverification method)": [[89, "s3prl.task.speaker_verification_task.SpeakerVerification.train_reduction"]], "train_step() (s3prl.task.speaker_verification_task.speakerverification method)": [[89, "s3prl.task.speaker_verification_task.SpeakerVerification.train_step"]], "training (s3prl.task.speaker_verification_task.speakerclassifier attribute)": [[89, "s3prl.task.speaker_verification_task.SpeakerClassifier.training"]], "training (s3prl.task.speaker_verification_task.speakerverification attribute)": [[89, "s3prl.task.speaker_verification_task.SpeakerVerification.training"]], "valid_reduction() (s3prl.task.speaker_verification_task.speakerverification method)": [[89, "s3prl.task.speaker_verification_task.SpeakerVerification.valid_reduction"]], "valid_step() (s3prl.task.speaker_verification_task.speakerverification method)": [[89, "s3prl.task.speaker_verification_task.SpeakerVerification.valid_step"]], "speech2textctcexample (class in s3prl.task.speech2text_ctc_task)": [[90, "s3prl.task.speech2text_ctc_task.Speech2TextCTCExample"]], "speech2textctctask (class in s3prl.task.speech2text_ctc_task)": [[90, "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask"]], "dump_patches (s3prl.task.speech2text_ctc_task.speech2textctcexample attribute)": [[90, "s3prl.task.speech2text_ctc_task.Speech2TextCTCExample.dump_patches"]], "dump_patches (s3prl.task.speech2text_ctc_task.speech2textctctask attribute)": [[90, "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask.dump_patches"]], "forward() (s3prl.task.speech2text_ctc_task.speech2textctcexample method)": [[90, "s3prl.task.speech2text_ctc_task.Speech2TextCTCExample.forward"]], "forward() (s3prl.task.speech2text_ctc_task.speech2textctctask method)": [[90, "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask.forward"]], "get_state() (s3prl.task.speech2text_ctc_task.speech2textctctask method)": [[90, "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask.get_state"]], "input_size (s3prl.task.speech2text_ctc_task.speech2textctcexample property)": [[90, "s3prl.task.speech2text_ctc_task.Speech2TextCTCExample.input_size"]], "output_size (s3prl.task.speech2text_ctc_task.speech2textctcexample property)": [[90, "s3prl.task.speech2text_ctc_task.Speech2TextCTCExample.output_size"]], "parse_cached_results() (s3prl.task.speech2text_ctc_task.speech2textctctask method)": [[90, "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask.parse_cached_results"]], "predict() (s3prl.task.speech2text_ctc_task.speech2textctctask method)": [[90, "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask.predict"]], "reduction() (s3prl.task.speech2text_ctc_task.speech2textctctask method)": [[90, "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask.reduction"]], "s3prl.task.speech2text_ctc_task": [[90, "module-s3prl.task.speech2text_ctc_task"]], "set_state() (s3prl.task.speech2text_ctc_task.speech2textctctask method)": [[90, "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask.set_state"]], "test_reduction() (s3prl.task.speech2text_ctc_task.speech2textctctask method)": [[90, "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask.test_reduction"]], "test_step() (s3prl.task.speech2text_ctc_task.speech2textctctask method)": [[90, "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask.test_step"]], "train_reduction() (s3prl.task.speech2text_ctc_task.speech2textctctask method)": [[90, "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask.train_reduction"]], "train_step() (s3prl.task.speech2text_ctc_task.speech2textctctask method)": [[90, "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask.train_step"]], "training (s3prl.task.speech2text_ctc_task.speech2textctcexample attribute)": [[90, "s3prl.task.speech2text_ctc_task.Speech2TextCTCExample.training"]], "training (s3prl.task.speech2text_ctc_task.speech2textctctask attribute)": [[90, "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask.training"]], "valid_reduction() (s3prl.task.speech2text_ctc_task.speech2textctctask method)": [[90, "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask.valid_reduction"]], "valid_step() (s3prl.task.speech2text_ctc_task.speech2textctctask method)": [[90, "s3prl.task.speech2text_ctc_task.Speech2TextCTCTask.valid_step"]], "utteranceclassificationtask (class in s3prl.task.utterance_classification_task)": [[91, "s3prl.task.utterance_classification_task.UtteranceClassificationTask"]], "utteranceclassifierexample (class in s3prl.task.utterance_classification_task)": [[91, "s3prl.task.utterance_classification_task.UtteranceClassifierExample"]], "dump_patches (s3prl.task.utterance_classification_task.utteranceclassificationtask attribute)": [[91, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.dump_patches"]], "dump_patches (s3prl.task.utterance_classification_task.utteranceclassifierexample attribute)": [[91, "s3prl.task.utterance_classification_task.UtteranceClassifierExample.dump_patches"]], "forward() (s3prl.task.utterance_classification_task.utteranceclassificationtask method)": [[91, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.forward"]], "forward() (s3prl.task.utterance_classification_task.utteranceclassifierexample method)": [[91, "s3prl.task.utterance_classification_task.UtteranceClassifierExample.forward"]], "get_state() (s3prl.task.utterance_classification_task.utteranceclassificationtask method)": [[91, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.get_state"]], "input_size (s3prl.task.utterance_classification_task.utteranceclassificationtask attribute)": [[91, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.input_size"]], "input_size (s3prl.task.utterance_classification_task.utteranceclassifierexample attribute)": [[91, "s3prl.task.utterance_classification_task.UtteranceClassifierExample.input_size"]], "input_size (s3prl.task.utterance_classification_task.utteranceclassifierexample property)": [[91, "id0"]], "output_size (s3prl.task.utterance_classification_task.utteranceclassificationtask attribute)": [[91, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.output_size"]], "output_size (s3prl.task.utterance_classification_task.utteranceclassifierexample attribute)": [[91, "s3prl.task.utterance_classification_task.UtteranceClassifierExample.output_size"]], "output_size (s3prl.task.utterance_classification_task.utteranceclassifierexample property)": [[91, "id1"]], "parse_cached_results() (s3prl.task.utterance_classification_task.utteranceclassificationtask method)": [[91, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.parse_cached_results"]], "predict() (s3prl.task.utterance_classification_task.utteranceclassificationtask method)": [[91, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.predict"]], "reduction() (s3prl.task.utterance_classification_task.utteranceclassificationtask method)": [[91, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.reduction"]], "s3prl.task.utterance_classification_task": [[91, "module-s3prl.task.utterance_classification_task"]], "set_state() (s3prl.task.utterance_classification_task.utteranceclassificationtask method)": [[91, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.set_state"]], "test_reduction() (s3prl.task.utterance_classification_task.utteranceclassificationtask method)": [[91, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.test_reduction"]], "test_step() (s3prl.task.utterance_classification_task.utteranceclassificationtask method)": [[91, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.test_step"]], "train_reduction() (s3prl.task.utterance_classification_task.utteranceclassificationtask method)": [[91, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.train_reduction"]], "train_step() (s3prl.task.utterance_classification_task.utteranceclassificationtask method)": [[91, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.train_step"]], "training (s3prl.task.utterance_classification_task.utteranceclassificationtask attribute)": [[91, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.training"]], "training (s3prl.task.utterance_classification_task.utteranceclassifierexample attribute)": [[91, "s3prl.task.utterance_classification_task.UtteranceClassifierExample.training"]], "valid_reduction() (s3prl.task.utterance_classification_task.utteranceclassificationtask method)": [[91, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.valid_reduction"]], "valid_step() (s3prl.task.utterance_classification_task.utteranceclassificationtask method)": [[91, "s3prl.task.utterance_classification_task.UtteranceClassificationTask.valid_step"]], "s3prl.util": [[92, "module-s3prl.util"]], "benchmark (class in s3prl.util.benchmark)": [[93, "s3prl.util.benchmark.benchmark"]], "s3prl.util.benchmark": [[93, "module-s3prl.util.benchmark"]], "download() (in module s3prl.util.download)": [[94, "s3prl.util.download.download"]], "get_dir() (in module s3prl.util.download)": [[94, "s3prl.util.download.get_dir"]], "s3prl.util.download": [[94, "module-s3prl.util.download"]], "set_dir() (in module s3prl.util.download)": [[94, "s3prl.util.download.set_dir"]], "urls_to_filepaths() (in module s3prl.util.download)": [[94, "s3prl.util.download.urls_to_filepaths"]], "parse_overrides() (in module s3prl.util.override)": [[95, "s3prl.util.override.parse_overrides"]], "s3prl.util.override": [[95, "module-s3prl.util.override"]], "get_pseudo_wavs() (in module s3prl.util.pseudo_data)": [[96, "s3prl.util.pseudo_data.get_pseudo_wavs"]], "pseudo_audio (class in s3prl.util.pseudo_data)": [[96, "s3prl.util.pseudo_data.pseudo_audio"]], "s3prl.util.pseudo_data": [[96, "module-s3prl.util.pseudo_data"]], "fix_random_seeds() (in module s3prl.util.seed)": [[97, "s3prl.util.seed.fix_random_seeds"]], "s3prl.util.seed": [[97, "module-s3prl.util.seed"]]}})